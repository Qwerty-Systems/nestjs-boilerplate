var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.256,1,3.17]],["body/classes/Account.html",[0,0.275,1,3.416,2,0.571,3,0.03,4,0.027,5,0.024,6,3.763,7,0.191,8,0.905,9,4.353,10,4.853,11,1.019,12,4.853,13,2.861,14,3.549,15,1.26,16,0.834,17,5.394,18,5.394,19,2.899,20,4.665,21,4.853,22,2.499,23,0.567,24,2.861,25,0.004,26,4.737,27,1.856,28,5.043,29,5.118,30,4.117,31,0.596,32,3.763,33,3.763,34,1.667,35,2.383,36,2.288,37,3.763,38,3.577,39,3.275,40,3.763,41,3.763,42,3.763,43,3.763,44,6.043,45,4.353,46,4.64,47,6.347,48,3.39,49,3.763,50,6.043,51,3.39,52,3.763,53,3.763,54,2.203,55,3.763,56,3.763,57,3.763,58,6.043,59,3.39,60,3.763,61,3.763,62,0.11,63,2.954,64,2.961,65,1.125,66,2.158,67,1.928,68,0.827,69,2.961,70,2.496,71,0.033,72,3.476,73,3.39,74,3.39,75,3.39,76,3.39,77,0.002,78,0.002]],["title/classes/AccountDto.html",[0,0.256,79,4.723]],["body/classes/AccountDto.html",[0,0.444,2,1.156,3,0.061,4,0.055,5,0.049,7,0.386,8,1.459,15,1.81,23,0.408,25,0.004,27,1.414,31,0.454,34,1.475,39,2.927,62,0.124,65,2.278,68,1.674,71,0.067,77,0.003,78,0.003,79,8.207,80,7.617,81,5.052,82,7.617,83,4.574,84,4.032]],["title/entities/AccountEntity.html",[85,1.864,86,3.605]],["body/entities/AccountEntity.html",[0,0.189,1,2.347,3,0.031,4,0.028,5,0.025,7,0.197,8,0.926,9,4.435,10,4.944,11,1.027,12,4.944,13,2.915,14,3.615,15,1.283,16,0.941,17,4.944,18,4.944,19,2.928,20,4.752,21,4.944,22,1.907,23,0.576,24,2.915,25,0.004,26,4.781,27,1.866,29,5.113,30,4.076,31,0.599,34,1.658,35,2.402,36,2.494,38,3.632,44,6.124,46,5.341,50,6.124,58,6.124,62,0.111,69,3.054,70,2.575,71,0.034,77,0.002,78,0.002,85,2.457,86,3.976,87,1.777,88,3.882,89,6.115,90,3.882,91,3.882,92,3.882,93,4.435,94,3.882,95,3.882,96,3.836,97,3.882,98,3.882,99,4.752,100,3.882,101,3.882,102,3.882,103,3.632,104,3.054,105,4.765,106,3.243,107,3.882,108,3.882,109,3.334,110,2.491,111,3.882,112,3.882,113,4.435,114,3.882,115,2.075,116,2.226,117,2.416,118,4.845,119,4.832,120,4.55,121,3.711,122,1.262,123,3.236,124,2.284,125,2.075,126,1.663]],["title/classes/AccountMapper.html",[0,0.256,127,4.381]],["body/classes/AccountMapper.html",[0,0.249,1,5.835,2,0.775,3,0.041,4,0.037,5,0.033,7,0.259,11,0.76,16,0.865,23,0.377,25,0.004,31,0.42,35,2.194,62,0.118,71,0.045,77,0.003,78,0.003,86,6.636,127,5.882,128,5.106,129,1.24,130,5.271,131,3.939,132,3.939,133,3.939,134,5.106,135,1.28,136,2.857,137,1.254,138,3.939,139,5.106,140,4.509,141,3.818,142,3.276,143,3.652,144,2.928,145,3.652,146,4.266,147,1.563,148,2.105,149,3.652,150,5.764,151,3.652,152,7.04,153,8.685,154,5.106,155,4.266,156,5.882,157,4.266,158,7.04,159,5.106,160,7.04,161,5.106,162,7.04,163,5.106,164,7.04,165,5.106,166,7.04,167,5.106,168,7.04,169,5.106,170,7.04,171,5.106,172,6.342,173,4.599,174,5.264,175,3.818,176,4.509,177,3.177,178,4.142,179,3.004,180,4.142,181,3.004,182,1.392,183,4.381,184,3.652,185,3.511,186,7.04,187,5.106,188,4.266,189,4.266,190,5.106,191,5.106,192,5.106,193,5.106,194,5.106,195,5.106,196,5.106,197,4.599,198,3.818,199,3.177,200,3.276,201,3.276]],["title/injectables/AccountRelationalRepository.html",[202,0.934,203,4.381]],["body/injectables/AccountRelationalRepository.html",[0,0.209,1,5.885,3,0.034,4,0.031,5,0.028,7,0.217,11,0.991,15,1.652,16,1.128,23,0.514,25,0.004,31,0.547,35,1.083,62,0.13,71,0.038,77,0.002,78,0.002,85,2.855,86,2.948,87,2.848,122,1.394,127,3.582,129,1.096,135,1.669,137,1.584,141,3.206,146,3.582,147,2.038,148,1.282,182,1.687,202,1.108,203,5.198,204,1.328,205,4.287,206,2.623,207,1.717,208,3.473,209,2.211,210,2.583,211,2.4,212,1.974,213,1.882,214,3.862,215,3.955,216,4.287,217,5.523,218,2.799,219,4.287,220,1.608,221,2.782,222,2.033,223,2.302,224,4.287,225,2.211,226,4.287,227,2.583,228,4.287,229,1.78,230,2.434,231,4.287,232,2.302,233,3.555,234,3.914,235,4.287,236,0.665,237,2.111,238,1.485,239,1.753,240,1.78,241,3.862,242,4.287,243,2.623,244,1.897,245,1.837,246,1.808,247,3.862,248,1.504,249,1.361,250,2.458,251,4.287,252,2.843,253,2.449,254,5.604,255,4.287,256,4.287,257,2.434,258,6.221,259,2.843,260,2.344,261,1.429,262,3.254,263,2.751,264,4.126,265,8.033,266,6.711,267,6.221,268,2.751,269,1.962,270,2.843,271,2.523,272,2.751,273,3.862,274,4.287,275,4.287,276,4.287]],["title/classes/AccountRepository.html",[0,0.256,217,3.605]],["body/classes/AccountRepository.html",[0,0.268,1,5.948,2,0.834,3,0.044,4,0.04,5,0.036,7,0.278,11,1.039,15,1.663,16,1.183,23,0.536,25,0.004,31,0.574,62,0.122,71,0.048,77,0.003,78,0.003,129,1.304,135,1.751,137,1.714,141,4.106,207,2.309,208,3.968,209,2.63,210,3.072,211,2.854,212,2.655,217,5.087,218,2.471,220,2.775,221,2.906,222,2.605,223,2.738,225,2.63,227,3.072,229,2.28,230,2.895,232,2.032,233,3.702,239,2.246,240,2.28,243,3.12,244,2.43,245,2.353,257,2.895,266,7.48,277,5.491,278,6.489,279,4.923,280,5.491,281,5.491,282,5.491,283,5.491,284,5.491,285,5.745,286,5.491,287,3.642,288,3.642]],["title/modules/AccountSeedModule.html",[289,1.037,290,4.125]],["body/modules/AccountSeedModule.html",[0,0.325,1,4.031,3,0.054,4,0.048,5,0.043,25,0.004,62,0.14,71,0.059,77,0.003,78,0.003,86,5.772,103,3.982,109,3.655,115,3.564,116,3.823,236,1.034,238,2.309,289,1.818,290,8.106,291,2.142,292,1.948,293,2.195,294,2.195,295,2.168,296,3.026,297,3.026,298,6.006,299,6.006,300,6.006,301,8.425,302,2.764,303,2.116,304,2.168,305,6.006,306,4.149,307,3.283,308,4.149,309,6.006,310,4.94,311,4.278,312,2.251,313,6.006]],["title/injectables/AccountSeedService.html",[202,0.934,301,4.125]],["body/injectables/AccountSeedService.html",[0,0.096,1,2.028,3,0.016,4,0.014,5,0.013,7,0.1,8,0.537,9,6.247,10,6.964,11,0.213,14,5.093,15,0.961,16,1.208,17,6.964,18,6.964,19,3.205,20,6.694,21,6.964,22,2.753,23,0.524,25,0.004,31,0.261,36,2.646,44,1.472,50,1.472,58,1.472,62,0.101,69,2.638,70,2.224,71,0.017,77,0.001,78,0.001,86,1.353,103,0.933,109,0.857,115,1.052,116,1.129,122,0.64,129,0.591,135,0.358,137,0.35,147,1.29,148,1.003,202,0.597,204,0.61,206,1.107,213,1.015,214,1.773,215,4.085,217,2.306,234,1.052,236,0.305,237,0.969,238,0.682,247,1.773,248,2.367,249,2.141,253,1.55,254,1.773,301,2.638,305,4.663,309,1.773,310,1.158,311,1.263,314,1.19,315,4.324,316,2.968,317,2.452,318,2.513,319,3.448,320,2.638,321,1.773,322,0.781,323,1.372,324,3.354,325,1.263,326,1.408,327,1.548,328,2.224,329,1.305,330,3.354,331,1.968,332,3.135,333,7.695,334,1.968,335,1.773,336,1.968,337,2.802,338,1.773,339,3.354,340,1.644,341,1.644,342,9.825,343,1.548,344,0.917,345,1.968,346,1.968,347,6.678,348,6.402,349,4.886,350,3.993,351,3.354,352,3.354,353,1.968,354,7.106,355,9.736,356,9.736,357,9.736,358,5.807,359,3.703,360,5.176,361,1.773,362,1.968,363,1.968,364,3.135,365,1.968,366,5.807,367,1.968,368,2.638,369,4.382,370,3.021,371,3.948,372,5.176,373,3.354,374,3.354,375,1.968,376,1.968,377,1.968,378,5.176,379,3.354,380,1.773,381,3.354,382,5.176,383,1.968,384,3.354,385,1.968,386,1.968,387,1.968,388,3.354,389,1.968,390,1.968,391,3.354,392,1.968,393,3.354,394,5.176,395,1.968,396,3.354,397,1.548,398,1.968,399,1.968,400,1.968,401,5.807,402,5.807,403,3.354,404,3.354,405,4.382,406,3.354,407,1.968,408,1.968,409,3.354,410,1.968,411,1.968,412,1.773,413,1.968,414,1.968,415,1.472,416,1.968,417,1.773,418,4.324,419,1.472,420,4.382,421,1.968,422,5.807,423,5.807,424,1.408,425,1.968,426,1.968,427,1.968,428,1.968,429,5.176,430,1.968,431,1.968,432,1.968,433,3.354,434,1.968,435,1.408,436,1.968,437,1.644,438,1.472,439,2.508,440,1.968,441,1.968,442,7.413,443,7.413,444,5.807,445,1.773,446,3.021,447,3.021,448,2.508,449,1.968,450,1.968,451,1.968,452,1.968,453,1.968,454,1.968,455,3.354,456,3.354,457,1.968,458,1.968,459,1.968,460,1.968,461,1.968,462,1.968,463,1.968,464,0.988,465,1.968,466,3.354,467,1.968,468,1.968,469,1.968,470,3.354,471,1.773,472,1.968,473,1.968,474,1.968,475,1.968,476,1.968,477,1.968,478,1.968,479,1.968,480,3.661,481,1.968,482,1.968,483,1.968,484,1.968,485,1.968,486,3.354,487,1.968,488,1.968,489,1.968,490,1.968,491,1.968,492,1.644,493,1.644,494,1.968]],["title/controllers/AccountsController.html",[495,2.112,496,4.381]],["body/controllers/AccountsController.html",[0,0.209,1,5.546,3,0.034,4,0.031,5,0.028,7,0.217,11,0.92,15,1.851,16,1.155,23,0.547,25,0.004,27,1.583,31,0.508,34,1.653,36,2.028,62,0.132,68,0.941,71,0.038,72,4.555,77,0.002,78,0.002,129,1.095,135,1.55,137,1.518,141,3.201,147,0.951,182,1.686,206,1.848,207,1.715,209,2.209,211,2.397,212,1.972,221,1.734,225,1.522,230,1.675,232,1.584,236,0.664,249,1.359,253,1.142,257,1.675,261,2.072,348,3.856,495,2.504,496,5.192,497,1.7,498,4.281,499,4.852,500,3.856,501,6.649,502,2.943,503,4.281,504,2.839,505,6.707,506,2.943,507,1.606,508,4.281,509,5.324,510,2.943,511,4.273,512,4.281,513,2.839,514,4.281,515,7.393,516,2.943,517,4.281,518,3.397,519,3.564,520,2.747,521,2.747,522,2.03,523,2.519,524,5.47,525,3.856,526,2.288,527,5.192,528,2.288,529,3.656,530,3.757,531,4.723,532,5.324,533,2.288,534,2.519,535,2.193,536,2.747,537,2.588,538,2.839,539,3.867,540,2.288,541,3.987,542,2.839,543,2.943,544,4.281,545,4.281,546,2.519,547,1.894,548,2.193,549,1.96,550,2.839,551,4.281,552,4.281,553,3.185,554,2.839,555,3.772,556,2.839,557,2.03,558,4.122,559,4.281,560,2.839,561,2.943,562,4.281,563,2.839,564,3.577,565,4.281,566,2.839,567,2.839,568,4.281]],["title/modules/AccountsModule.html",[289,1.037,569,3.921]],["body/modules/AccountsModule.html",[0,0.302,3,0.05,4,0.045,5,0.04,25,0.004,62,0.138,71,0.055,77,0.003,78,0.003,236,0.962,289,1.757,291,2.575,292,1.812,293,2.041,294,2.041,295,2.016,296,2.924,297,2.924,302,2.639,303,1.968,304,2.016,312,2.706,496,7.421,497,3.182,524,7.928,525,5.585,569,8.001,570,5.585,571,5.585,572,5.585,573,5.585,574,7.928,575,6.021,576,6.021,577,6.2,578,4.263,579,4.263,580,3.243,581,6.2,582,3.858,583,3.556,584,3.979]],["title/injectables/AccountsService.html",[202,0.934,524,3.921]],["body/injectables/AccountsService.html",[0,0.169,1,5.178,3,0.028,4,0.025,5,0.022,7,0.176,9,3.412,10,3.803,11,0.925,12,3.803,14,2.781,15,1.344,16,1.113,17,3.803,18,3.803,19,1.75,20,6.354,21,3.803,22,2.499,23,0.504,25,0.004,31,0.511,35,2.079,54,1.887,62,0.126,66,1.992,67,1.779,71,0.031,77,0.002,78,0.002,129,0.937,135,1.557,137,1.465,141,2.597,147,1.733,148,2.164,182,1.628,202,0.947,204,1.076,206,2.079,207,1.467,208,3.064,209,1.89,210,2.208,211,3.175,212,2.05,213,1.609,217,5.888,222,1.647,223,1.967,225,1.89,227,2.208,229,1.442,230,2.08,232,1.285,236,0.539,243,2.242,244,1.537,245,1.488,248,2.266,249,2.05,253,1.932,257,2.528,260,1.898,262,1.817,266,6.047,269,3.313,273,3.128,292,1.015,464,3.634,500,4.789,501,5.834,507,3.087,515,6.738,524,3.976,526,1.856,527,4.442,528,1.856,553,1.512,555,1.537,580,1.817,585,3.473,586,2.732,587,4.376,588,4.83,589,4.376,590,3.473,591,3.803,592,3.473,593,3.214,594,3.473,595,3.473,596,3.473,597,3.473,598,3.473,599,2.484,600,2.484,601,1.71,602,4.17,603,3.473,604,1.817,605,4.801,606,4.801,607,5.887,608,3.803,609,3.473,610,2.715,611,3.869,612,4.976,613,5.317,614,7.238,615,4.442,616,3.473,617,4.183,618,5.317,619,3.473,620,3.473,621,3.473,622,3.473,623,3.473,624,3.473,625,3.473,626,3.473,627,3.473,628,3.473,629,3.473,630,3.473,631,3.473,632,3.473,633,3.473,634,3.473,635,5.317,636,3.473,637,3.473,638,3.473,639,3.473,640,3.473,641,3.473,642,3.473,643,3.473,644,3.473,645,3.473,646,3.473,647,3.473,648,3.473,649,3.473]],["title/classes/AddKycDetails1745134929693.html",[0,0.256,650,4.723]],["body/classes/AddKycDetails1745134929693.html",[0,0.164,2,0.51,3,0.027,4,0.024,5,0.022,7,0.17,8,0.83,16,0.778,22,2.242,23,0.18,25,0.004,31,0.377,34,0.544,35,1.599,54,2.373,62,0.046,71,0.03,77,0.002,78,0.002,118,4.681,122,1.093,129,0.914,137,0.923,206,2.052,212,2.258,221,1.986,246,2.187,253,2.827,322,1.335,323,1.375,522,3.375,610,1.945,650,6.409,651,7.115,652,3.362,653,3.827,654,4.161,655,3.827,656,3.724,657,3.362,658,3.362,659,3.362,660,3.827,661,3.028,662,6.299,663,6.483,664,6.234,665,6.189,666,5.888,667,5.185,668,5.185,669,5.185,670,6.33,671,8.742,672,8.049,673,3.565,674,3.565,675,3.565,676,3.565,677,3.565,678,2.902,679,5.185,680,6.013,681,4.352,682,3.939,683,3.63,684,2.23,685,4.671,686,4.566,687,3.722,688,4.566,689,2.311,690,5.44,691,4.671,692,2.311,693,3.028,694,3.709,695,5.099,696,5.099,697,3.227,698,5.185]],["title/classes/AddKycDetailsFields1745138722127.html",[0,0.256,699,4.723]],["body/classes/AddKycDetailsFields1745138722127.html",[0,0.214,2,0.666,3,0.035,4,0.032,5,0.028,7,0.222,8,1.013,16,0.912,22,1.211,23,0.461,25,0.004,31,0.442,34,0.71,35,1.598,62,0.06,71,0.039,77,0.002,78,0.002,118,4.75,122,1.427,129,1.114,137,1.126,206,2.265,207,1.746,221,2.266,246,2.667,253,2.803,322,2.511,323,1.794,610,2.373,653,4.485,654,4.594,655,4.485,656,4.365,660,4.485,661,3.952,662,6.298,663,6.379,664,6.068,665,5.997,670,3.28,672,8.113,673,4.349,674,4.349,675,4.349,676,4.349,677,4.349,678,3.539,680,5.72,684,2.91,693,3.952,695,4.195,696,4.195,697,3.936,699,7.314,700,8.119,701,4.387,702,4.387,703,4.387,704,4.387,705,4.525,706,6.682,707,3.952,708,3.451,709,3.451,710,3.451,711,3.138,712,6.682,713,3.952,714,2.815]],["title/classes/AddRegions1745152940566.html",[0,0.256,715,4.723]],["body/classes/AddRegions1745152940566.html",[0,0.225,2,0.699,3,0.037,4,0.033,5,0.03,7,0.444,8,1.049,11,0.707,13,1.943,15,1.217,16,1.12,23,0.409,24,1.943,25,0.004,31,0.455,34,0.746,35,2.303,62,0.063,71,0.041,77,0.002,78,0.002,122,1.498,129,1.154,135,1.191,137,1.167,206,2.303,207,2.291,212,2.42,221,2.317,246,2.763,253,2.739,322,3.297,323,1.884,522,3.616,653,4.609,654,4.67,655,3.961,656,3.855,660,5.896,662,6.109,663,5.672,664,5.819,665,5.459,666,5.964,680,4.609,681,4.505,682,4.744,683,4.762,684,4.346,686,4.892,687,4.589,688,4.892,689,3.168,690,4.077,692,3.168,695,6.046,696,6.046,697,4.077,714,4.204,715,7.48,716,8.303,717,4.608,718,4.608,719,4.204,720,4.608,721,4.204,722,4.608,723,3.674,724,3.168,725,3.168,726,3.168,727,3.168,728,3.168,729,3.168,730,3.056,731,3.961,732,4.608,733,4.346,734,9.584,735,7.48,736,4.608,737,4.608,738,4.608,739,6.552,740,6.552,741,6.937,742,6.552,743,4.151,744,4.608,745,4.608]],["title/classes/AddSettingsTableAndFileds1745147786203.html",[0,0.256,746,4.723]],["body/classes/AddSettingsTableAndFileds1745147786203.html",[0,0.232,2,0.722,3,0.038,4,0.034,5,0.031,7,0.241,8,1.073,11,0.723,13,2.005,15,1.244,16,1.091,23,0.507,24,2.005,25,0.004,31,0.462,34,0.77,35,2.441,54,1.389,62,0.065,71,0.042,77,0.003,78,0.003,122,1.546,129,1.18,135,1.218,137,1.193,206,2.326,207,2.14,212,2.126,221,2.35,246,2.825,253,2.657,322,3.343,323,1.945,349,3.269,350,3.269,359,3.401,364,3.401,415,3.555,438,3.555,439,3.555,448,3.555,522,3.177,653,4.689,654,4.718,655,4.05,656,3.942,660,5.939,662,5.721,663,5.24,664,5.419,665,4.168,666,5.524,678,2.661,680,4.05,681,4.606,682,4.168,683,3.842,684,3.154,686,4.298,687,4.057,688,4.298,689,3.269,690,5.24,692,3.269,697,4.168,711,3.401,714,4.977,719,4.298,721,4.298,730,3.154,731,4.05,733,3.154,746,7.585,747,8.42,748,4.755,749,4.755,750,4.755,751,4.755,752,6.987,753,4.283,754,3.741,755,3.741,756,3.741,757,3.741,758,3.555,759,3.741,760,3.741,761,3.741,762,3.741,763,3.741,764,3.741,765,3.741,766,3.741,767,3.741,768,3.741,769,3.741,770,3.741,771,3.401,772,3.555,773,3.555,774,3.741,775,3.741,776,3.741,777,3.401,778,3.555,779,3.555,780,3.741,781,3.741,782,3.741,783,3.741,784,3.741,785,3.741,786,3.741,787,3.401,788,7.756,789,4.755,790,3.741,791,3.972,792,3.972,793,4.624,794,2.487,795,3.051,796,4.755,797,6.699,798,6.699]],["title/classes/AddTenantFieldsAndTenantTypeTable1745143148021.html",[0,0.256,799,4.723]],["body/classes/AddTenantFieldsAndTenantTypeTable1745143148021.html",[0,0.201,2,0.625,3,0.033,4,0.03,5,0.027,7,0.209,8,0.968,11,0.652,13,1.737,14,2.155,15,1.122,16,1.143,22,2.876,23,0.45,24,1.737,25,0.004,31,0.427,34,0.667,35,1.991,62,0.056,71,0.036,77,0.002,78,0.002,118,4.551,122,1.339,129,1.065,135,1.099,137,1.076,206,2.216,207,1.667,212,1.917,221,2.2,246,2.548,253,2.819,322,3.129,323,1.685,522,2.866,653,4.326,654,4.494,655,3.653,656,3.555,660,5.736,662,6.038,663,6.083,664,6.177,665,6.001,666,5.785,670,7.094,680,5.831,682,4.452,686,3.877,687,3.743,688,3.877,690,4.904,694,4.322,695,6.012,696,6.012,697,3.76,714,3.877,719,3.877,721,3.877,730,2.732,731,3.653,733,2.732,799,7.1,800,7.882,801,4.119,802,4.119,803,4.119,804,4.119,805,6.446,806,3.71,807,3.24,808,3.24,809,3.08,810,3.24,811,3.24,812,3.24,813,3.24,814,3.24,815,3.24,816,3.24,817,3.24,818,3.24,819,3.24,820,3.24,821,3.24,822,3.24,823,3.24,824,3.24,825,5.048,826,3.76,827,4.119,828,4.119,829,4.322,830,4.322,831,4.322,832,4.322,833,7.882,834,6.042,835,7.155,836,6.042,837,3.71,838,6.042,839,4.119]],["title/injectables/AnonymousStrategy.html",[202,0.934,840,4.125]],["body/injectables/AnonymousStrategy.html",[0,0.347,3,0.057,4,0.052,5,0.046,7,0.361,11,0.769,16,0.875,25,0.004,31,0.521,62,0.129,71,0.063,77,0.003,78,0.003,126,3.746,129,1.541,135,1.295,182,1.408,202,1.557,204,2.206,213,2.864,233,3.151,236,1.104,535,3.647,593,5.723,654,4.849,840,6.88,841,7.119,842,7.878,843,7.307,844,7.119,845,7.307,846,6.335,847,7.119,848,5.601,849,5.324,850,6.413,851,5.948,852,5.601]],["title/modules/AppModule.html",[289,1.037,853,4.125]],["body/modules/AppModule.html",[0,0.177,3,0.029,4,0.026,5,0.024,22,1.001,25,0.004,36,1.87,62,0.145,71,0.032,77,0.002,78,0.002,122,1.18,147,0.806,148,1.085,182,1.087,206,0.917,236,0.563,238,1.257,245,1.554,289,1.313,291,1.166,292,1.06,293,1.195,294,1.195,295,1.18,296,1.195,297,1.195,302,1.81,303,1.152,304,1.18,307,1.787,312,2.24,547,2.937,569,6.259,575,5.061,576,5.061,578,2.495,579,2.495,853,8.467,854,3.269,855,3.269,856,6.259,857,6.259,858,6.259,859,5.552,860,5.755,861,6.259,862,5.755,863,5.988,864,5.988,865,5.552,866,6.857,867,5.988,868,5.755,869,5.988,870,3.269,871,3.032,872,2.855,873,4.348,874,2.194,875,4.593,876,3.628,877,4.111,878,3.032,879,4.593,880,3.628,881,3.932,882,3.628,883,4.593,884,4.576,885,3.628,886,4.593,887,3.628,888,4.593,889,3.628,890,3.42,891,4.548,892,1.42,893,2.855,894,3.628,895,2.855,896,3.628,897,2.855,898,3.628,899,5.497,900,3.628,901,2.713,902,4.111,903,4.325,904,3.628,905,4.952,906,3.269,907,3.628,908,3.269,909,4.952,910,1.859,911,1.898,912,3.269,913,3.269,914,2.495,915,1.822,916,4.111,917,3.628,918,2.194,919,1.787,920,4.952,921,2.258,922,3.032,923,2.875,924,3.269,925,3.269,926,3.269,927,1.633,928,2.328,929,3.032,930,2.407,931,3.269,932,3.032,933,2.855,934,3.628,935,3.628,936,3.269,937,3.269,938,3.269,939,3.269,940,3.032,941,3.628,942,4.325,943,3.269,944,3.628,945,2.875,946,3.628,947,3.628,948,3.628,949,3.628,950,2.194,951,3.628,952,3.527]],["title/controllers/AuthAppleController.html",[495,2.112,953,4.381]],["body/controllers/AuthAppleController.html",[0,0.304,3,0.05,4,0.045,5,0.04,7,0.316,11,0.674,16,0.767,23,0.432,25,0.004,27,1.159,31,0.372,62,0.135,68,1.371,71,0.055,77,0.003,78,0.003,129,1.418,135,1.135,137,1.111,147,1.386,182,1.234,206,2.251,213,1.888,221,2.247,236,0.968,248,2.824,249,2.555,253,1.666,261,2.081,495,3.243,497,2.478,518,3.412,519,3.579,531,4.736,533,3.336,540,3.336,547,2.762,548,3.197,601,3.073,884,3.412,893,6.333,953,6.726,954,4.211,955,6.241,956,6.019,957,4.91,958,7.406,959,4.91,960,5.215,961,5.215,962,6.241,963,5.339,964,4.667,965,6.019,966,5.91,967,5.215,968,6.663,969,5.622,970,4.14,971,4.14,972,4.14,973,5.535,974,5.215,975,4.91,976,6.241,977,4.465,978,5.215,979,4.667,980,5.215,981,6.333,982,6.241,983,6.241]],["title/classes/AuthAppleLoginDto.html",[0,0.256,958,4.125]],["body/classes/AuthAppleLoginDto.html",[0,0.412,2,1.024,3,0.054,4,0.049,5,0.044,7,0.342,8,1.355,11,1.046,23,0.495,25,0.004,27,1.716,31,0.551,34,1.648,39,2.717,62,0.115,65,2.017,68,1.482,71,0.059,77,0.003,78,0.003,83,4.247,954,5.067,958,6.654,971,6.425,984,9.687,985,5.045,986,4.833,987,7.72,988,4.833,989,8.458,990,6.077,991,4.475,992,5.637,993,5.637,994,6.077,995,5.17,996,6.909,997,3.322,998,5.637]],["title/modules/AuthAppleModule.html",[289,1.037,856,3.921]],["body/modules/AuthAppleModule.html",[0,0.326,3,0.054,4,0.048,5,0.043,25,0.004,62,0.135,71,0.059,77,0.003,78,0.003,236,1.036,289,1.819,291,2.147,292,1.952,293,2.2,294,2.2,295,2.173,296,3.029,297,3.029,302,2.768,303,2.121,304,2.173,312,2.838,497,3.338,856,7.866,859,6.736,872,5.258,884,4.596,890,5.232,892,2.615,893,5.258,953,7.686,954,3.496,968,8.01,969,6.02,999,6.02,1000,6.683,1001,6.02,1002,6.02,1003,6.683,1004,6.683]],["title/injectables/AuthAppleService.html",[202,0.934,968,3.921]],["body/injectables/AuthAppleService.html",[0,0.307,3,0.051,4,0.046,5,0.041,7,0.319,11,0.874,15,1.169,16,0.995,23,0.434,25,0.004,31,0.483,36,1.591,62,0.136,71,0.056,77,0.003,78,0.003,129,1.426,135,1.472,137,1.121,147,1.398,182,1.245,202,1.441,204,1.951,206,2.26,213,1.905,220,2.362,221,2.26,236,0.977,253,1.68,549,2.882,884,3.442,891,5.231,892,2.464,893,7.039,910,3.226,911,3.294,945,3.294,954,4.68,958,7.43,963,5.37,968,6.054,970,4.176,971,5.37,972,4.176,986,3.294,988,3.294,1005,6.297,1006,7.476,1007,3.918,1008,6.297,1009,5.261,1010,6.297,1011,6.297,1012,5.261,1013,4.504,1014,4.954,1015,6.297,1016,5.261,1017,6.297,1018,5.672,1019,2.615,1020,5.261,1021,6.297,1022,6.297]],["title/classes/AuthConfirmEmailDto.html",[0,0.256,1023,4.381]],["body/classes/AuthConfirmEmailDto.html",[0,0.443,2,1.15,3,0.061,4,0.055,5,0.049,7,0.384,8,1.454,23,0.406,25,0.004,27,1.407,31,0.452,34,1.47,39,2.917,62,0.123,65,2.265,68,1.665,71,0.067,77,0.003,78,0.003,83,4.56,1023,7.587,1024,6.496,1025,7.587,1026,7.576,1027,6.451,1028,5.96,1029,7.576]],["title/controllers/AuthController.html",[495,2.112,1030,4.381]],["body/controllers/AuthController.html",[0,0.161,3,0.027,4,0.024,5,0.021,7,0.167,11,1.002,16,1.141,23,0.497,25,0.004,27,1.723,31,0.553,54,2.058,62,0.131,67,1.69,68,0.725,71,0.029,77,0.002,78,0.002,129,0.9,135,1.687,137,1.652,182,1.803,206,2.522,212,1.985,221,2.848,236,0.512,239,1.349,240,1.37,249,1.047,253,0.88,261,1.1,303,1.047,435,2.36,495,2.059,497,1.31,518,1.803,519,4.37,520,2.117,522,2.967,523,1.941,529,4.743,531,4.484,533,1.763,534,1.941,535,1.69,540,2.732,546,4.484,547,1.46,548,1.69,549,1.51,601,1.624,654,5.114,846,6.045,884,1.803,956,3.821,957,2.595,963,3.39,964,2.467,965,5.699,966,3.39,970,5.347,972,3.39,973,3.514,975,2.595,977,5.039,979,5.268,980,2.756,1019,1.37,1023,7.025,1025,2.756,1027,2.188,1030,4.27,1031,3.299,1032,5.635,1033,5.226,1034,5.226,1035,4.604,1036,4.678,1037,5.226,1038,4.604,1039,3.299,1040,3.299,1041,3.299,1042,7.044,1043,3.299,1044,3.299,1045,3.299,1046,3.299,1047,3.299,1048,3.299,1049,3.299,1050,5.886,1051,3.299,1052,3.299,1053,5.11,1054,5.542,1055,3.299,1056,3.299,1057,3.299,1058,3.299,1059,3.299,1060,3.299,1061,3.299,1062,3.299,1063,5.11,1064,3.299,1065,3.299,1066,3.299,1067,3.299,1068,3.299,1069,3.299,1070,3.299,1071,3.299,1072,3.299,1073,5.542,1074,3.299,1075,3.299,1076,3.656,1077,3.299,1078,5.886,1079,3.299,1080,3.299,1081,5.11,1082,3.299,1083,4.52,1084,5.542,1085,3.299,1086,3.299,1087,2.972,1088,2.972,1089,5.11,1090,3.299,1091,2.972,1092,2.972,1093,4.27,1094,3.299,1095,3.299,1096,3.299,1097,3.299,1098,7.574,1099,3.299,1100,3.299,1101,3.299,1102,3.299,1103,3.299,1104,3.299,1105,3.299,1106,3.299,1107,3.299,1108,3.299,1109,3.299,1110,3.299,1111,3.299,1112,3.299,1113,3.299,1114,3.299,1115,3.299,1116,3.299,1117,3.299,1118,4.604,1119,5.11,1120,3.299,1121,3.299,1122,3.299,1123,3.299,1124,3.299,1125,3.299,1126,3.299,1127,3.299,1128,3.299]],["title/classes/AuthEmailLoginDto.html",[0,0.256,1054,4.125]],["body/classes/AuthEmailLoginDto.html",[0,0.454,2,1.041,3,0.055,4,0.05,5,0.044,7,0.348,8,1.369,23,0.522,25,0.004,27,1.587,31,0.51,34,1.623,39,2.991,62,0.132,65,2.052,68,1.508,71,0.06,77,0.003,78,0.003,83,4.674,985,5.13,990,6.18,991,4.551,994,6.18,997,3.378,1019,4.245,1024,6.66,1028,5.398,1054,6.724,1129,4.498,1130,6.391,1131,6.861,1132,5.877,1133,3.378,1134,2.987,1135,4.717,1136,4.908,1137,4.908,1138,4.908]],["title/controllers/AuthFacebookController.html",[495,2.112,1139,4.381]],["body/controllers/AuthFacebookController.html",[0,0.303,3,0.05,4,0.045,5,0.04,7,0.315,11,0.671,16,0.764,23,0.43,25,0.004,27,1.154,31,0.371,62,0.135,68,1.365,71,0.055,77,0.003,78,0.003,129,1.414,135,1.13,137,1.106,147,1.38,182,1.229,206,2.246,213,1.88,221,2.24,236,0.964,248,2.816,249,2.547,253,1.658,261,2.072,495,3.234,497,2.467,518,3.397,519,4.603,531,4.723,533,3.321,540,3.321,547,2.75,548,3.183,601,3.06,884,3.397,895,6.315,954,4.199,956,6.649,957,4.889,959,4.889,960,5.192,961,5.192,963,5.324,964,4.647,965,6.002,966,5.897,967,5.192,970,4.122,972,4.122,973,5.519,974,5.192,975,4.889,977,4.445,978,5.192,979,4.647,981,6.315,1139,6.706,1140,6.214,1141,7.393,1142,6.214,1143,6.649,1144,5.598,1145,4.445,1146,6.214,1147,6.214,1148,6.214]],["title/classes/AuthFacebookLoginDto.html",[0,0.256,1141,4.125]],["body/classes/AuthFacebookLoginDto.html",[0,0.439,2,1.132,3,0.06,4,0.054,5,0.048,7,0.378,8,1.441,23,0.4,25,0.004,27,1.385,31,0.445,34,1.456,39,2.89,62,0.122,65,2.23,68,1.638,71,0.066,77,0.003,78,0.003,83,4.516,954,4.705,985,5.576,991,4.946,992,6.23,993,6.23,997,3.671,998,6.23,1141,7.076,1145,6.434,1149,8.995,1150,9.659]],["title/modules/AuthFacebookModule.html",[289,1.037,857,3.921]],["body/modules/AuthFacebookModule.html",[0,0.326,3,0.054,4,0.048,5,0.043,25,0.004,62,0.135,71,0.059,77,0.003,78,0.003,236,1.036,289,1.819,291,2.147,292,1.952,293,2.2,294,2.2,295,2.173,296,3.029,297,3.029,302,2.768,303,2.121,304,2.173,312,2.838,497,3.338,857,7.866,859,6.736,872,5.258,884,4.596,890,5.232,892,2.615,895,5.258,954,3.496,1139,7.686,1143,8.01,1144,6.02,1151,6.02,1152,6.683,1153,6.02,1154,6.02,1155,6.683,1156,6.683]],["title/injectables/AuthFacebookService.html",[202,0.934,1143,3.921]],["body/injectables/AuthFacebookService.html",[0,0.285,3,0.047,4,0.042,5,0.038,7,0.296,11,0.833,15,1.085,16,0.948,23,0.413,25,0.004,31,0.46,36,1.948,62,0.136,71,0.052,77,0.003,78,0.003,129,1.358,135,1.402,137,1.04,147,1.712,148,2.306,182,1.156,202,1.373,204,1.81,206,2.18,213,1.768,220,2.192,221,2.152,236,0.906,253,1.559,548,2.993,549,2.675,891,5.125,892,2.286,895,6.789,910,2.993,911,3.056,945,4.033,954,4.514,963,5.114,970,3.875,972,3.875,986,3.056,988,3.056,1006,7.21,1007,3.635,1009,4.881,1013,4.179,1014,4.596,1019,2.426,1020,4.881,1141,7.22,1143,5.765,1145,6.565,1157,5.842,1158,5.842,1159,5.842,1160,6.442,1161,6.442,1162,5.842,1163,5.263,1164,5.842,1165,5.263,1166,5.842,1167,5.842,1168,5.842,1169,5.842,1170,5.842,1171,5.842,1172,5.842,1173,4.881,1174,5.842,1175,5.263,1176,5.842,1177,5.842]],["title/classes/AuthForgotPasswordDto.html",[0,0.256,1050,4.381]],["body/classes/AuthForgotPasswordDto.html",[0,0.463,2,1.089,3,0.058,4,0.052,5,0.046,7,0.363,8,1.407,23,0.509,25,0.004,27,1.332,31,0.428,34,1.537,39,2.822,62,0.134,65,2.145,68,1.576,71,0.063,77,0.003,78,0.003,991,4.758,997,3.532,1019,3.944,1024,6.285,1050,7.341,1088,7.914,1130,6.57,1132,6.041,1133,3.532,1134,3.123,1135,4.932,1136,5.131,1137,5.131,1138,5.131,1178,6.462,1179,6.462,1180,7.173]],["title/controllers/AuthGoogleController.html",[495,2.112,1181,4.381]],["body/controllers/AuthGoogleController.html",[0,0.304,3,0.05,4,0.045,5,0.04,7,0.316,11,0.674,16,0.767,23,0.432,25,0.004,27,1.159,31,0.372,62,0.135,68,1.371,71,0.055,77,0.003,78,0.003,129,1.418,135,1.135,137,1.111,147,1.386,182,1.234,206,2.251,213,1.888,221,2.247,236,0.968,248,2.824,249,2.555,253,1.666,261,2.081,495,3.243,497,2.478,518,3.412,519,3.579,531,4.736,533,3.336,540,3.336,547,2.762,548,3.197,601,3.073,884,3.412,897,6.333,954,4.211,956,6.019,957,4.91,959,4.91,960,5.215,961,5.215,963,5.339,964,4.667,965,6.019,966,5.91,967,5.215,970,4.14,972,4.14,973,5.535,974,5.215,975,4.91,977,4.465,978,5.215,979,4.667,980,5.215,981,6.333,1181,6.726,1182,6.241,1183,7.406,1184,6.241,1185,6.663,1186,5.622,1187,4.14,1188,6.241,1189,6.241,1190,6.241]],["title/classes/AuthGoogleLoginDto.html",[0,0.256,1183,4.125]],["body/classes/AuthGoogleLoginDto.html",[0,0.439,2,1.132,3,0.06,4,0.054,5,0.048,7,0.378,8,1.441,23,0.4,25,0.004,27,1.385,31,0.445,34,1.456,39,2.89,62,0.122,65,2.23,68,1.638,71,0.066,77,0.003,78,0.003,83,4.516,954,4.705,985,5.576,987,8.07,991,4.946,992,6.23,993,6.23,997,3.671,998,6.23,1183,7.076,1187,5.966,1191,8.995]],["title/modules/AuthGoogleModule.html",[289,1.037,858,3.921]],["body/modules/AuthGoogleModule.html",[0,0.326,3,0.054,4,0.048,5,0.043,25,0.004,62,0.135,71,0.059,77,0.003,78,0.003,236,1.036,289,1.819,291,2.147,292,1.952,293,2.2,294,2.2,295,2.173,296,3.029,297,3.029,302,2.768,303,2.121,304,2.173,312,2.838,497,3.338,858,7.866,859,6.736,872,5.258,884,4.596,890,5.232,892,2.615,897,5.258,954,3.496,1181,7.686,1185,8.01,1186,6.02,1192,6.02,1193,6.02,1194,6.683,1195,6.02,1196,6.683,1197,6.683]],["title/injectables/AuthGoogleService.html",[202,0.934,1185,3.921]],["body/injectables/AuthGoogleService.html",[0,0.272,3,0.045,4,0.041,5,0.036,7,0.283,8,1.199,11,0.808,15,1.038,16,0.92,23,0.453,25,0.004,31,0.503,36,2.132,54,1.633,62,0.131,71,0.049,77,0.003,78,0.003,129,1.319,135,1.361,137,0.995,147,1.663,148,2.239,182,1.105,202,1.333,204,1.732,206,2.132,213,1.691,220,2.808,221,2.089,236,0.867,248,2.962,253,1.492,269,2.558,464,2.806,549,2.558,601,2.752,602,4.001,610,2.097,611,2.987,884,3.055,891,5.061,892,2.187,897,7.093,910,2.863,911,2.924,945,4.416,954,4.716,963,4.965,970,3.707,972,3.707,986,2.924,987,4.67,988,2.924,1006,7.053,1007,3.478,1009,4.67,1013,3.998,1014,4.397,1016,4.67,1018,5.035,1019,2.321,1020,4.67,1183,7.093,1185,5.598,1187,6.235,1198,5.589,1199,7.486,1200,5.589,1201,9.016,1202,4.67,1203,5.589,1204,5.589,1205,5.589,1206,5.589,1207,5.589,1208,5.589,1209,5.589,1210,5.589,1211,5.589,1212,5.589,1213,5.589]],["title/modules/AuthModule.html",[289,1.037,859,3.477]],["body/modules/AuthModule.html",[0,0.28,3,0.046,4,0.042,5,0.037,25,0.004,62,0.141,71,0.051,77,0.003,78,0.003,236,0.89,289,1.691,291,1.843,292,1.676,293,1.889,294,1.889,295,1.865,296,2.816,297,2.816,302,2.508,303,1.82,304,1.865,312,2.571,497,3.024,535,2.939,576,5.893,579,3.944,840,7.669,859,7.15,863,6.973,867,6.973,906,5.167,912,5.167,966,6.952,1030,7.145,1087,5.167,1214,5.167,1215,5.736,1216,5.167,1217,5.167,1218,7.669,1219,7.669,1220,5.736,1221,5.736,1222,7.617,1223,5.736,1224,4.513,1225,5.736,1226,5.736,1227,5.736,1228,5.736,1229,5.736]],["title/classes/AuthRegisterLoginDto.html",[0,0.256,1073,4.125]],["body/classes/AuthRegisterLoginDto.html",[0,0.435,2,0.949,3,0.05,4,0.045,5,0.041,7,0.317,8,1.291,23,0.535,25,0.004,27,1.75,31,0.562,34,1.683,39,3.132,62,0.128,65,1.87,68,1.375,71,0.055,77,0.003,78,0.003,83,4.478,985,4.677,986,4.666,988,4.666,991,5.916,997,4.392,1019,3.704,1024,6.975,1037,8.146,1073,6.342,1129,4.309,1130,6.028,1132,5.542,1133,3.08,1134,2.723,1135,4.301,1136,4.475,1137,4.475,1138,4.475,1179,5.635,1230,6.255,1231,6.255,1232,6.255,1233,6.255,1234,6.255,1235,5.635,1236,6.255,1237,4.921,1238,4.921,1239,4.475,1240,4.475]],["title/classes/AuthResetPasswordDto.html",[0,0.256,1078,4.381]],["body/classes/AuthResetPasswordDto.html",[0,0.432,2,1.103,3,0.058,4,0.053,5,0.047,7,0.368,8,1.418,23,0.475,25,0.004,27,1.644,31,0.528,34,1.609,39,3.068,62,0.12,65,2.173,68,1.596,71,0.064,77,0.003,78,0.003,83,4.795,303,3.031,1024,6.832,1027,6.335,1028,6.966,1078,7.398,1129,4.614,1178,6.545,1241,7.265,1242,7.265]],["title/injectables/AuthService.html",[202,0.934,966,3.477]],["body/injectables/AuthService.html",[0,0.079,3,0.013,4,0.012,5,0.01,7,0.082,11,0.857,15,1.403,16,0.975,22,0.782,23,0.442,25,0.004,31,0.473,34,1.394,35,1.301,36,1.959,54,2.815,62,0.124,67,0.83,71,0.014,77,0.001,78,0.001,129,0.499,135,1.443,137,1.381,147,2.139,148,2.663,182,1.207,202,0.505,204,0.502,206,2.481,212,1.199,213,0.857,220,2.29,221,2.485,223,1.049,236,0.251,239,1.545,240,0.672,248,2.272,253,2.647,269,3.991,344,3.017,464,4.065,522,1.344,540,0.866,589,3.69,593,1.713,600,1.158,601,0.797,602,4.406,610,3.271,611,4.327,683,3.714,884,0.885,891,3.193,892,0.634,910,0.83,911,0.847,945,4.057,963,1.074,966,1.88,970,2.506,972,1.88,973,1.113,981,2.973,986,0.847,988,0.847,1013,3.243,1014,1.274,1019,2.824,1027,6.014,1032,2.553,1033,2.368,1034,2.368,1035,2.553,1036,1.211,1037,3.157,1038,2.553,1054,3.567,1073,3.567,1083,2.909,1084,3.567,1091,1.459,1092,1.459,1118,5.105,1129,2.738,1175,1.459,1224,1.274,1243,1.619,1244,2.834,1245,6.128,1246,2.834,1247,2.834,1248,3.404,1249,1.619,1250,5.667,1251,4.564,1252,4.564,1253,1.619,1254,2.834,1255,1.619,1256,2.834,1257,1.619,1258,2.834,1259,1.619,1260,2.834,1261,1.619,1262,2.834,1263,5.667,1264,1.619,1265,2.834,1266,5.099,1267,1.619,1268,3.778,1269,1.619,1270,1.619,1271,2.834,1272,1.619,1273,1.949,1274,2.834,1275,1.619,1276,2.834,1277,1.619,1278,1.619,1279,1.619,1280,2.834,1281,1.619,1282,1.619,1283,1.619,1284,4.534,1285,3.778,1286,3.788,1287,2.368,1288,5.152,1289,1.211,1290,1.211,1291,1.211,1292,1.274,1293,1.211,1294,1.211,1295,1.274,1296,1.353,1297,2.834,1298,2.368,1299,1.619,1300,1.074,1301,1.113,1302,3.115,1303,1.619,1304,1.619,1305,1.158,1306,1.211,1307,2.425,1308,1.619,1309,1.619,1310,4.534,1311,1.619,1312,1.274,1313,1.619,1314,3.778,1315,2.834,1316,2.834,1317,2.834,1318,1.619,1319,3.778,1320,3.778,1321,3.778,1322,2.834,1323,4.843,1324,5.919,1325,3.778,1326,4.053,1327,2.834,1328,3.778,1329,5.152,1330,1.619,1331,6.103,1332,1.619,1333,4.534,1334,1.619,1335,1.713,1336,1.668,1337,2.834,1338,4.534,1339,2.553,1340,3.157,1341,2.834,1342,1.619,1343,1.619,1344,1.619,1345,2.834,1346,2.834,1347,2.834,1348,1.459,1349,5.152,1350,2.834,1351,5.096,1352,4.534,1353,4.305,1354,2.834,1355,1.619,1356,2.821,1357,3.404,1358,3.778,1359,3.778,1360,2.834,1361,3.404,1362,3.778,1363,3.778,1364,1.619,1365,1.619,1366,2.834,1367,2.23,1368,2.834,1369,4.534,1370,1.211,1371,1.619,1372,1.619,1373,1.619,1374,4.534,1375,1.619,1376,2.834,1377,2.834,1378,1.619,1379,2.834,1380,1.619,1381,1.619,1382,1.619,1383,3.778,1384,2.834,1385,1.619,1386,3.778,1387,3.404,1388,1.619,1389,2.834,1390,2.834,1391,2.834,1392,1.619,1393,3.778,1394,1.211,1395,1.619,1396,5.152,1397,1.619,1398,1.619,1399,1.619,1400,1.619,1401,1.619,1402,1.619,1403,1.619,1404,1.619,1405,2.834,1406,1.619,1407,1.619,1408,1.619,1409,1.619,1410,1.619,1411,1.619,1412,1.619,1413,1.619,1414,1.211,1415,1.619,1416,1.619,1417,1.459,1418,1.619,1419,2.834,1420,1.619,1421,1.619,1422,1.619]],["title/classes/AuthUpdateDto.html",[0,0.256,1084,4.125]],["body/classes/AuthUpdateDto.html",[0,0.405,2,0.822,3,0.044,4,0.039,5,0.035,7,0.275,8,1.174,11,1.122,23,0.526,25,0.004,27,1.781,31,0.572,34,1.654,35,1.852,62,0.126,63,4.268,65,1.62,68,1.191,71,0.048,77,0.003,78,0.003,83,4.814,986,4.346,988,4.346,995,5.486,997,4.091,1019,3.45,1024,7.013,1084,5.768,1129,4.014,1132,5.041,1133,2.668,1134,2.359,1135,3.725,1136,3.876,1137,3.876,1138,3.876,1237,4.263,1238,4.263,1239,3.876,1240,3.876,1387,7.485,1423,5.418,1424,5.332,1425,7.485,1426,5.418,1427,5.418,1428,5.418,1429,9.588,1430,5.418,1431,5.418,1432,5.418,1433,5.418,1434,5.418,1435,5.418,1436,5.418,1437,6.369,1438,4.051,1439,4.527,1440,5.418,1441,4.263,1442,7.485,1443,5.418]],["title/classes/CreateAccountDto.html",[0,0.256,501,3.921]],["body/classes/CreateAccountDto.html",[0,0.363,2,0.556,3,0.029,4,0.027,5,0.024,7,0.186,8,1.069,9,4.285,10,4.777,11,1.012,12,4.777,14,3.493,16,0.821,17,5.324,18,5.324,19,2.767,20,4.591,21,4.777,22,1.843,23,0.574,25,0.004,26,4.396,27,1.861,30,3.833,31,0.575,34,1.562,35,2.368,36,2.491,39,3.136,44,5.975,45,6.193,46,4.594,47,6.284,48,3.302,50,5.975,51,3.302,58,5.975,59,3.302,62,0.114,63,3.659,64,2.884,65,1.657,68,0.806,69,2.884,70,2.432,71,0.032,72,4.944,73,3.302,74,3.302,75,3.302,76,3.302,77,0.002,78,0.002,84,3.536,501,4.143,604,3.493,950,2.216,1083,5.127,1134,1.596,1273,2.521,1307,5.127,1444,9.762,1445,3.302,1446,4.991,1447,3.666,1448,3.302,1449,3.666,1450,3.963,1451,3.666,1452,4.991,1453,3.666,1454,3.666,1455,3.666,1456,3.666,1457,3.666,1458,2.884,1459,3.666,1460,3.666,1461,2.622,1462,3.666,1463,3.666,1464,2.622,1465,2.741,1466,2.898,1467,4.993,1468,4.143,1469,4.155,1470,3.809,1471,2.521,1472,2.622]],["title/classes/CreateAccountsTable1747393574185.html",[0,0.256,1473,4.723]],["body/classes/CreateAccountsTable1747393574185.html",[0,0.206,1,4.826,2,0.642,3,0.034,4,0.031,5,0.027,7,0.43,8,0.987,9,2.714,10,3.026,11,0.665,12,3.026,13,1.784,14,2.212,15,1.144,16,1.088,17,3.026,18,3.026,19,1.393,21,3.026,23,0.52,24,1.784,25,0.004,26,3.222,31,0.433,34,0.685,35,2.511,62,0.057,71,0.037,77,0.002,78,0.002,122,1.375,129,1.085,135,1.12,137,1.097,206,2.237,207,2.522,212,2.306,221,2.228,246,2.598,253,2.79,322,3.169,323,1.73,397,3.327,418,3.534,437,3.534,480,3.534,522,3.446,653,4.393,654,4.536,655,3.724,656,3.625,660,5.774,662,6.236,663,5.51,664,5.709,665,5.687,666,5.828,680,4.393,681,4.235,682,4.521,683,4.577,684,4.086,686,4.662,687,4.438,688,4.662,689,2.908,690,3.833,692,2.908,695,5.294,696,5.294,697,3.833,714,4.662,719,3.953,721,3.953,730,2.805,731,3.724,733,4.086,741,6.669,758,3.163,1473,7.19,1474,7.982,1475,4.229,1476,4.229,1477,4.229,1478,4.229,1479,7.265,1480,4.229,1481,7.265,1482,4.229,1483,3.163,1484,3.81,1485,7.265,1486,4.229,1487,3.81,1488,4.229,1489,9.367,1490,7.982,1491,4.229,1492,4.229,1493,4.229,1494,6.16,1495,6.16,1496,4.229,1497,6.16,1498,4.229,1499,4.229]],["title/classes/CreateKycDetailsDto.html",[0,0.256,1500,3.921]],["body/classes/CreateKycDetailsDto.html",[0,0.328,2,0.564,3,0.03,4,0.027,5,0.024,7,0.188,8,0.896,11,1.067,19,2.216,22,1.857,23,0.569,25,0.004,27,1.818,30,4.043,31,0.561,34,1.46,35,2.375,36,2.133,38,4.157,39,3.068,45,6.034,46,4.095,54,1.966,62,0.115,63,3.927,65,1.111,68,0.816,71,0.033,72,4.818,77,0.002,78,0.002,84,3.556,148,1.673,223,1.374,322,2.221,323,3.454,604,3.521,610,2.525,673,4.628,674,4.628,675,4.628,676,4.628,677,4.628,678,3.766,705,4.815,927,4.298,1083,5.157,1133,3.314,1134,1.617,1307,5.157,1450,4.002,1461,2.657,1464,2.657,1465,2.777,1466,2.926,1469,4.188,1470,4.628,1500,4.184,1501,4.53,1502,9.552,1503,2.922,1504,3.714,1505,3.714,1506,3.714,1507,3.714,1508,5.525,1509,3.714,1510,3.714,1511,5.359,1512,3.714,1513,3.714,1514,5.595,1515,8.036,1516,3.714,1517,3.714,1518,3.346,1519,3.714,1520,3.714,1521,3.714,1522,3.714,1523,3.103,1524,2.311,1525,5.595,1526,2.657,1527,2.554,1528,2.922,1529,2.922,1530,2.922]],["title/classes/CreateRegionDto.html",[0,0.256,1531,3.921]],["body/classes/CreateRegionDto.html",[0,0.371,2,0.583,3,0.031,4,0.028,5,0.025,7,0.195,8,1.1,11,1.053,14,5.099,16,0.844,19,3,22,1.895,23,0.558,25,0.004,27,1.81,28,4.571,30,3.625,31,0.543,34,1.578,35,1.449,36,2.16,39,2.992,45,3.681,62,0.111,63,3.858,65,1.715,68,0.844,71,0.034,72,4.994,77,0.002,78,0.002,84,3.371,223,1.421,419,2.871,424,2.747,435,4.103,507,3.325,604,3.592,723,4.032,724,4.721,725,4.721,726,4.721,727,4.721,728,4.721,729,5.237,950,2.322,997,4.8,1134,1.672,1273,2.64,1307,5.231,1450,2.747,1461,2.747,1464,2.747,1466,3.592,1468,5.135,1469,3.569,1470,3.944,1471,2.64,1472,2.747,1527,5.237,1531,4.289,1532,9.314,1533,3.459,1534,6.728,1535,5.402,1536,3.84,1537,3.84,1538,5.736,1539,7.617,1540,3.84,1541,3.84,1542,6.811,1543,5.736,1544,3.84,1545,3.84,1546,3.84,1547,5.167,1548,5.167,1549,5.167,1550,3.84,1551,3.84,1552,4.103,1553,5.736,1554,5.736,1555,3.84,1556,3.84,1557,5.167,1558,5.167,1559,5.167,1560,3.84,1561,6.866,1562,5.736,1563,5.736,1564,3.208,1565,3.208,1566,4.513,1567,4.289,1568,3.208,1569,3.459,1570,3.208,1571,4.513,1572,3.208,1573,4.513,1574,3.208,1575,6.364,1576,3.208,1577,4.793,1578,4.793]],["title/classes/CreateResidence1747295167463.html",[0,0.256,1579,4.723]],["body/classes/CreateResidence1747295167463.html",[0,0.172,2,0.534,3,0.028,4,0.026,5,0.023,7,0.398,8,0.86,11,0.58,13,1.485,15,0.998,16,1.017,23,0.524,24,1.485,25,0.004,26,1.841,31,0.388,34,0.57,35,2.382,62,0.048,71,0.031,77,0.002,78,0.002,118,2.697,122,1.145,129,0.947,135,0.977,137,0.957,206,2.09,207,2.375,212,2.313,221,2.034,246,2.265,253,2.787,322,3.116,323,1.44,349,3.694,350,3.694,359,3.843,364,3.843,415,4.017,438,4.017,439,4.017,448,4.017,522,3.457,653,3.938,654,4.238,655,3.248,656,3.161,660,5.496,662,6.224,663,6.087,664,5.756,665,5.354,666,5.771,680,4.407,681,3.694,682,4.536,683,4.18,684,3.563,686,4.677,687,4.327,688,4.677,689,2.42,690,4.536,692,2.42,695,2.335,696,2.335,697,3.343,714,4.677,719,3.447,721,3.447,730,2.335,731,3.248,733,3.563,735,4.839,741,6.09,743,3.171,752,6.566,753,4.839,754,4.226,755,4.226,756,4.226,757,4.226,758,4.017,759,4.226,760,4.226,761,4.226,762,4.226,763,4.226,764,4.226,765,4.226,766,4.226,767,4.226,768,4.226,769,4.226,770,4.226,771,3.843,772,4.017,773,4.017,774,4.226,775,4.226,776,4.226,777,3.843,778,4.017,779,4.017,780,4.226,781,4.226,782,4.226,783,4.226,784,4.226,785,4.226,786,4.226,787,3.843,790,2.77,793,2.697,795,3.447,1579,6.566,1580,7.289,1581,3.52,1582,3.52,1583,3.52,1584,3.52,1585,6.514,1586,3.52,1587,3.171,1588,3.171,1589,3.171,1590,3.171,1591,5.002,1592,2.071,1593,2.42,1594,3.52,1595,8.872,1596,7.289,1597,3.52,1598,3.52,1599,3.52,1600,4.839,1601,3.52,1602,4.839,1603,3.52,1604,7.289,1605,5.372,1606,5.372,1607,5.372,1608,3.52,1609,5.372,1610,3.52,1611,3.52,1612,3.52,1613,3.52]],["title/classes/CreateResidenceDto.html",[0,0.256,1614,3.921]],["body/classes/CreateResidenceDto.html",[0,0.405,2,0.699,3,0.037,4,0.033,5,0.03,7,0.233,8,1.221,11,0.707,16,0.937,19,2.51,22,2.104,23,0.575,25,0.004,26,3.988,27,1.858,29,3.289,30,3.396,31,0.559,34,1.234,35,1.655,36,2.498,39,3.079,45,5.849,46,2.519,47,4.899,62,0.127,63,2.852,65,1.959,68,1.013,70,3.056,71,0.041,72,4.67,77,0.002,78,0.002,84,2.899,604,3.988,723,3.374,950,2.786,1083,5.629,1134,2.006,1273,3.168,1307,5.629,1446,4.151,1448,4.151,1452,4.151,1458,3.625,1461,3.296,1464,3.296,1465,3.446,1466,3.427,1467,4.899,1468,4.899,1469,5.167,1470,5.242,1471,3.168,1472,3.296,1592,4.486,1593,5.242,1614,4.899,1615,9.584,1616,4.151,1617,5.701,1618,4.608,1619,4.608,1620,4.608,1621,4.608,1622,6.56,1623,4.608,1624,4.608,1625,4.608,1626,6.56,1627,3.446,1628,5.902,1629,4.608,1630,3.85,1631,3.625]],["title/classes/CreateSettingsDto.html",[0,0.256,1632,3.921]],["body/classes/CreateSettingsDto.html",[0,0.422,2,0.771,3,0.041,4,0.037,5,0.033,7,0.257,8,1.287,11,1.015,22,2.217,23,0.569,25,0.004,27,1.851,30,3.846,31,0.542,34,1.614,35,2.375,36,2.189,39,3.021,45,5.835,54,2.347,62,0.123,63,3.772,65,2.097,68,1.116,71,0.045,72,4.658,77,0.003,78,0.003,84,3.835,604,4.203,678,4.496,794,4.203,795,5.156,950,3.07,1083,5.835,1134,2.211,1273,3.492,1307,5.835,1450,5.747,1461,3.633,1464,3.633,1465,3.797,1469,4.999,1470,5.524,1471,3.492,1472,3.633,1518,4.575,1632,5.245,1633,9.403,1634,4.243,1635,5.078,1636,5.078,1637,5.078,1638,5.078,1639,5.078]],["title/classes/CreateTenantDto.html",[0,0.256,1640,3.921]],["body/classes/CreateTenantDto.html",[0,0.339,2,0.488,3,0.026,4,0.023,5,0.021,7,0.163,8,0.985,11,1.115,16,0.756,22,0.887,23,0.578,25,0.004,26,3.218,27,1.832,30,4.224,31,0.566,34,1.609,35,2.59,39,3.084,45,6.089,62,0.12,63,4.179,65,1.497,68,0.706,71,0.028,72,4.861,77,0.002,78,0.002,84,3.685,604,3.218,793,3.088,829,4.4,830,4.4,831,4.4,832,4.4,927,1.446,950,1.943,1083,4.831,1134,1.399,1273,2.209,1437,5.385,1441,2.528,1450,5.704,1458,5.464,1465,2.403,1467,3.744,1468,5.629,1469,5.181,1470,4.229,1471,2.209,1472,2.298,1592,3.619,1622,5.629,1630,2.685,1640,3.744,1641,9.6,1642,2.894,1643,4.229,1644,4.08,1645,4.839,1646,3.619,1647,3.947,1648,3.213,1649,3.213,1650,3.213,1651,3.213,1652,5.923,1653,3.213,1654,3.213,1655,3.213,1656,3.213,1657,3.213,1658,3.213,1659,3.213,1660,3.213,1661,5.923,1662,3.213,1663,6.29,1664,3.213,1665,3.213,1666,3.213,1667,2.894,1668,2.894,1669,2.528,1670,2.685,1671,2.403]],["title/classes/CreateTenantTable1745086820741.html",[0,0.256,1672,4.723]],["body/classes/CreateTenantTable1745086820741.html",[0,0.299,2,0.931,3,0.049,4,0.044,5,0.04,7,0.311,8,1.275,11,0.859,13,2.586,15,1.478,16,1.191,22,2.197,23,0.474,24,2.586,25,0.004,26,3.208,31,0.527,34,0.993,35,2.362,62,0.083,71,0.054,77,0.003,78,0.003,122,1.995,129,1.402,135,1.447,137,1.417,206,2.508,207,1.693,221,2.61,246,3.357,253,2.124,322,3.713,323,2.508,653,5.342,654,5.087,655,4.812,656,4.683,660,6.262,662,3.708,664,4.683,666,3.816,682,3.816,687,3.208,697,4.953,714,3.936,719,5.107,721,5.107,730,4.068,731,4.812,733,4.068,1592,3.609,1672,8.424,1673,9.351,1674,6.133,1675,6.133,1676,6.133,1677,6.133,1678,6.133]],["title/classes/CreateTenantTypeDto.html",[0,0.256,1679,3.921]],["body/classes/CreateTenantTypeDto.html",[0,0.421,2,0.889,3,0.047,4,0.042,5,0.038,7,0.297,8,1.384,11,1.059,14,4.519,16,1.062,22,2.535,23,0.536,25,0.004,27,1.821,30,4.01,31,0.515,34,1.587,35,2.476,39,2.95,45,5.543,46,4.22,62,0.117,63,3.998,65,2.309,68,1.286,71,0.052,72,4.425,77,0.003,78,0.003,84,3.823,604,4.039,826,5.375,950,3.54,1273,4.025,1450,5.523,1471,4.025,1472,4.188,1679,5.773,1680,4.705,1681,9.184,1682,4.892,1683,6.315,1684,5.854,1685,5.854,1686,5.854,1687,5.854,1688,4.892,1689,3.54]],["title/classes/CreateUser1715028537217.html",[0,0.256,1690,4.723]],["body/classes/CreateUser1715028537217.html",[0,0.18,2,0.562,3,0.03,4,0.027,5,0.043,7,0.467,8,0.893,11,0.602,13,2.352,15,1.745,16,1.076,23,0.36,24,2.352,25,0.004,31,0.4,34,0.599,35,2.495,54,2.788,62,0.05,71,0.033,77,0.002,78,0.002,122,1.203,129,0.983,135,1.014,137,0.993,206,2.13,207,2.544,212,2.373,221,2.087,246,2.352,253,2.802,322,3.475,323,1.513,344,2.599,522,3.546,547,1.637,610,2.093,653,4.06,654,4.32,655,3.372,656,3.282,660,5.574,662,6.239,663,5.606,664,5.983,665,5.606,666,6.199,680,4.52,682,3.471,683,3.851,684,5.321,686,4.797,687,4.823,688,4.797,690,5.606,692,2.544,694,3.99,695,6.231,696,6.231,697,5.247,714,5.148,719,3.579,721,3.579,730,2.454,731,4.52,733,5.321,837,3.333,986,2.918,988,2.918,1019,2.788,1027,2.454,1129,1.787,1302,4.85,1335,3.372,1336,2.177,1690,6.735,1691,7.476,1692,3.699,1693,3.699,1694,3.699,1695,3.699,1696,3.699,1697,3.699,1698,3.699,1699,5.578,1700,3.835,1701,6.715,1702,5.578,1703,5.578,1704,3.699,1705,3.699,1706,3.699,1707,3.699,1708,3.699,1709,3.699,1710,3.699,1711,3.699,1712,5.578,1713,5.578,1714,3.699,1715,5.578,1716,3.699,1717,5.578,1718,3.699,1719,3.699,1720,3.699,1721,3.699]],["title/classes/CreateUserDto.html",[0,0.256,1076,3.75]],["body/classes/CreateUserDto.html",[0,0.325,2,0.556,3,0.029,4,0.027,5,0.024,7,0.186,8,0.886,11,1.096,22,1.841,23,0.575,25,0.004,27,1.813,30,3.435,31,0.582,34,1.61,35,2.564,36,1.398,39,2.953,45,4.772,62,0.129,63,3.797,65,1.095,68,0.805,71,0.032,72,3.81,77,0.002,78,0.002,83,3.734,344,3.108,604,2.895,610,2.503,793,3.35,927,1.648,986,3.49,988,3.49,991,4.426,995,4.162,997,3.285,1019,2.771,1076,3.959,1129,3.224,1130,4.139,1132,3.805,1133,1.803,1134,1.594,1135,2.517,1136,2.619,1137,2.619,1138,2.619,1235,3.298,1237,2.88,1238,2.88,1239,3.959,1240,3.959,1307,5.125,1335,4.034,1336,3.926,1424,4.282,1437,5.32,1438,4.99,1439,3.059,1441,2.88,1458,5.249,1461,2.619,1464,2.619,1468,5.561,1469,4.969,1470,3.805,1622,5.972,1630,3.059,1644,4.426,1646,3.926,1652,6.283,1661,6.283,1667,3.298,1670,3.059,1671,2.738,1722,9.858,1723,2.738,1724,3.661,1725,3.661,1726,5.535,1727,3.661,1728,3.661,1729,3.661,1730,3.661,1731,3.661,1732,3.661,1733,3.661,1734,5.491,1735,3.298,1736,3.661,1737,3.661,1738,3.661,1739,6.283,1740,3.298,1741,3.661,1742,3.661,1743,2.738,1744,3.298]],["title/classes/CreateUserTenantRelationship1745132189825.html",[0,0.256,1745,4.723]],["body/classes/CreateUserTenantRelationship1745132189825.html",[0,0.293,2,0.913,3,0.048,4,0.044,5,0.039,7,0.305,8,1.259,11,0.849,16,1.184,23,0.469,25,0.004,31,0.522,34,0.974,35,1.52,54,2.712,62,0.082,71,0.053,77,0.003,78,0.003,118,3.021,122,1.956,129,1.385,135,1.429,137,1.4,206,2.495,212,1.909,221,2.591,246,3.315,253,2.477,322,2.389,323,2.46,522,2.853,653,5.293,654,5.061,655,4.752,656,4.625,660,6.239,662,4.752,663,4.891,664,5.462,665,4.891,666,4.891,670,5.877,680,4.752,681,6.019,682,3.743,686,3.86,687,3.147,688,3.86,689,4.136,690,4.891,719,5.043,721,5.043,1745,8.362,1746,9.282,1747,6.016,1748,6.016,1749,6.016,1750,6.016,1751,7.86]],["title/modules/DocumentFilePersistenceModule.html",[289,1.037,1752,3.364]],["body/modules/DocumentFilePersistenceModule.html",[0,0.333,3,0.055,4,0.05,5,0.044,16,0.839,25,0.004,62,0.136,71,0.06,77,0.003,78,0.003,236,1.059,289,1.837,291,2.193,292,1.995,293,2.248,294,2.248,295,2.22,296,2.806,297,3.059,302,2.806,303,2.167,304,2.22,312,2.305,914,4.694,915,3.428,923,3.571,1752,6.424,1753,6.151,1754,6.151,1755,6.33,1756,6.828,1757,3.821,1758,7.12,1759,4.694,1760,5.705,1761,5.372,1762,7.12,1763,6.151,1764,5.106,1765,6.828,1766,4.128,1767,3.821]],["title/modules/DocumentKycDetailsPersistenceModule.html",[289,1.037,1768,3.75]],["body/modules/DocumentKycDetailsPersistenceModule.html",[0,0.33,3,0.054,4,0.049,5,0.044,16,0.831,25,0.004,62,0.136,71,0.06,77,0.003,78,0.003,236,1.049,289,1.829,291,2.172,292,1.976,293,2.227,294,2.227,295,2.199,296,2.789,297,3.045,302,2.789,303,2.146,304,2.199,312,2.283,914,4.65,915,3.395,923,3.537,927,3.043,1501,3.207,1757,3.784,1764,5.057,1766,4.089,1767,3.784,1768,7.142,1769,6.092,1770,6.092,1771,6.931,1772,6.762,1773,7.077,1774,4.838,1775,4.838,1776,5.65,1777,6.334,1778,7.077,1779,6.092,1780,6.762]],["title/modules/DocumentSessionPersistenceModule.html",[289,1.037,1781,3.75]],["body/modules/DocumentSessionPersistenceModule.html",[0,0.333,3,0.055,4,0.05,5,0.044,16,0.839,25,0.004,62,0.136,71,0.06,77,0.003,78,0.003,236,1.059,289,1.837,291,2.193,292,1.995,293,2.248,294,2.248,295,2.22,296,2.806,297,3.059,302,2.806,303,2.167,304,2.22,312,2.305,914,4.694,915,3.428,923,3.571,1757,3.821,1764,5.106,1766,4.128,1767,3.821,1781,7.162,1782,6.151,1783,6.151,1784,6.944,1785,6.828,1786,7.12,1787,5.106,1788,5.705,1789,5.372,1790,7.12,1791,6.151,1792,6.828]],["title/modules/DocumentUserPersistenceModule.html",[289,1.037,1793,3.75]],["body/modules/DocumentUserPersistenceModule.html",[0,0.333,3,0.055,4,0.05,5,0.044,16,0.839,25,0.004,62,0.136,71,0.06,77,0.003,78,0.003,236,1.059,289,1.837,291,2.193,292,1.995,293,2.248,294,2.248,295,2.22,296,2.806,297,3.059,302,2.806,303,2.167,304,2.22,312,2.305,318,6.004,914,4.694,915,3.428,923,3.571,1757,3.821,1764,5.106,1766,4.128,1767,3.821,1793,7.162,1794,6.151,1795,6.151,1796,6.828,1797,6.704,1798,4.381,1799,5.705,1800,5.372,1801,7.12,1802,6.151,1803,6.151]],["title/classes/EntityDocumentHelper.html",[0,0.256,1804,3.75]],["body/classes/EntityDocumentHelper.html",[0,0.428,2,1.086,3,0.057,4,0.052,5,0.046,7,0.363,8,1.405,23,0.384,25,0.004,27,1.329,31,0.427,34,1.42,36,2.216,62,0.097,71,0.063,77,0.003,78,0.003,85,3.118,182,1.735,323,4.045,593,4.326,654,4.86,1133,4.319,1134,3.115,1804,6.275,1805,8.772,1806,6.446,1807,6.292,1808,7.155,1809,7.329,1810,7.155,1811,7.155,1812,7.155,1813,7.155]],["title/classes/EntityRelationalHelper.html",[0,0.256,123,2.934]],["body/classes/EntityRelationalHelper.html",[0,0.417,2,1.044,3,0.055,4,0.05,5,0.045,7,0.348,8,1.371,11,0.924,23,0.369,25,0.004,27,1.277,31,0.556,34,1.386,62,0.116,71,0.061,77,0.003,78,0.003,85,3.467,122,2.237,123,4.79,126,3.667,129,1.508,137,1.524,182,1.36,1134,2.994,1806,6.195,1814,9.753,1815,9.32,1816,9.32,1817,9.753,1818,7.293,1819,6.877,1820,9.32,1821,6.877,1822,6.877,1823,6.877,1824,6.877,1825,6.877,1826,6.877,1827,6.877]],["title/classes/EnvironmentVariablesValidator.html",[0,0.256,1828,2.802]],["body/classes/EnvironmentVariablesValidator.html",[0,0.346,2,0.785,3,0.042,4,0.038,5,0.033,7,0.262,8,1.137,16,0.636,19,2.338,23,0.519,25,0.004,27,1.798,30,2.904,31,0.577,34,1.639,46,2.827,62,0.119,63,4.294,64,4.068,65,1.546,71,0.046,77,0.003,78,0.003,84,3.864,182,1.023,322,2.053,557,3.368,771,3.699,794,2.705,877,3.867,892,2.024,919,2.546,943,4.658,1828,4.335,1829,4.658,1830,8.111,1831,8.111,1832,8.111,1833,8.111,1834,8.111,1835,8.111,1836,8.111,1837,6.065,1838,5.171,1839,5.171,1840,5.171,1841,4.658,1842,5.171,1843,7.102,1844,7.102,1845,5.171,1846,5.171,1847,7.307,1848,5.171,1849,5.171,1850,3.43,1851,5.933,1852,3.318,1853,3.43,1854,5.933,1855,8.111,1856,3.867,1857,4.32,1858,7.307,1859,5.587,1860,5.933,1861,5.171,1862,4.32,1863,4.32,1864,7.102,1865,5.171,1866,3.43,1867,5.171,1868,4.658,1869,5.171,1870,5.171,1871,5.171,1872,5.171,1873,5.171,1874,5.171,1875,5.171,1876,5.171,1877,5.171,1878,3.699,1879,5.171,1880,5.171,1881,5.171,1882,5.171,1883,5.171,1884,5.171,1885,5.171,1886,5.171,1887,4.658,1888,5.171,1889,5.171,1890,5.171,1891,5.171,1892,5.171]],["title/classes/EnvironmentVariablesValidator-1.html",[0,0.213,261,1.457,1828,2.337]],["body/classes/EnvironmentVariablesValidator-1.html",[0,0.366,2,0.852,3,0.045,4,0.041,5,0.036,7,0.284,8,1.202,23,0.539,25,0.004,27,1.867,31,0.599,34,1.725,62,0.128,65,1.678,71,0.049,77,0.003,78,0.003,84,4.731,182,1.11,322,2.228,794,2.935,875,4.688,884,3.067,892,2.196,919,2.763,1287,6.271,1351,4.414,1828,4.521,1850,3.722,1852,3.601,1853,3.722,1866,3.722,1893,5.611,1894,8.458,1895,9.031,1896,8.458,1897,8.458,1898,8.458,1899,8.458,1900,8.458,1901,8.458,1902,5.611,1903,5.611,1904,5.611,1905,5.611,1906,5.611,1907,5.611,1908,5.611,1909,5.611,1910,5.611,1911,5.611,1912,5.055,1913,5.611,1914,9.031,1915,5.611,1916,5.611,1917,5.611,1918,5.611,1919,5.611,1920,5.611,1921,5.611,1922,5.611,1923,5.611,1924,5.611,1925,5.611,1926,5.611]],["title/classes/EnvironmentVariablesValidator-2.html",[0,0.213,1828,2.337,1927,3.439]],["body/classes/EnvironmentVariablesValidator-2.html",[0,0.426,2,1.081,3,0.057,4,0.052,5,0.046,7,0.361,8,1.401,23,0.382,25,0.004,27,1.322,31,0.425,34,1.416,62,0.134,63,3.807,65,2.129,71,0.063,77,0.003,78,0.003,182,1.408,322,2.827,794,3.724,888,5.948,892,2.786,919,3.505,954,4.574,971,4.722,1828,5.059,1850,4.722,1852,4.568,1853,4.722,1866,4.722,1928,7.119,1929,9.465,1930,7.119,1931,7.119,1932,8.745,1933,7.119,1934,7.119,1935,7.119]],["title/classes/EnvironmentVariablesValidator-3.html",[0,0.213,1828,2.337,1936,3.938]],["body/classes/EnvironmentVariablesValidator-3.html",[0,0.417,2,1.041,3,0.055,4,0.05,5,0.044,7,0.348,8,1.369,23,0.458,25,0.004,27,1.587,31,0.51,34,1.577,62,0.132,63,4.053,65,2.052,71,0.06,77,0.003,78,0.003,84,4.12,182,1.357,322,2.724,794,3.589,883,5.732,892,2.685,919,3.378,954,4.87,1145,4.908,1163,6.18,1165,6.18,1828,4.976,1837,6.391,1850,4.551,1852,4.402,1853,4.551,1866,4.551,1937,6.861,1938,9.31,1939,9.31,1940,6.861,1941,6.861,1942,6.861,1943,6.861,1944,6.861]],["title/classes/EnvironmentVariablesValidator-4.html",[0,0.213,1828,2.337,1945,3.938]],["body/classes/EnvironmentVariablesValidator-4.html",[0,0.417,2,1.041,3,0.055,4,0.05,5,0.044,7,0.348,8,1.369,23,0.458,25,0.004,27,1.587,31,0.51,34,1.577,62,0.132,63,4.053,65,2.052,71,0.06,77,0.003,78,0.003,84,4.12,182,1.357,322,2.724,794,3.589,886,5.732,892,2.685,919,3.378,954,4.87,1187,4.551,1828,4.976,1837,6.391,1850,4.551,1852,4.402,1853,4.551,1866,4.551,1946,6.861,1947,9.31,1948,9.31,1949,6.861,1950,6.861,1951,6.861,1952,6.18,1953,6.861,1954,6.861,1955,6.861]],["title/classes/EnvironmentVariablesValidator-5.html",[0,0.213,1828,2.337,1956,3.653]],["body/classes/EnvironmentVariablesValidator-5.html",[0,0.305,2,0.655,3,0.035,4,0.031,5,0.028,7,0.219,8,1.001,16,0.53,19,2.652,23,0.548,25,0.004,26,4.663,27,1.885,31,0.605,34,1.682,36,1.856,62,0.109,63,4.1,65,1.29,71,0.038,77,0.002,78,0.002,84,4.524,182,0.853,322,1.712,557,2.964,687,2.256,794,2.256,873,2.358,892,1.688,919,2.124,921,2.684,1129,2.084,1467,6.024,1828,3.927,1837,5.494,1850,2.861,1852,2.768,1853,2.861,1854,6.139,1856,3.225,1857,3.604,1862,3.604,1863,3.604,1866,2.861,1878,3.085,1957,4.313,1958,7.347,1959,7.347,1960,7.347,1961,7.347,1962,7.347,1963,7.347,1964,7.347,1965,7.347,1966,7.347,1967,7.347,1968,7.347,1969,7.347,1970,7.347,1971,7.347,1972,4.313,1973,4.313,1974,8.283,1975,4.313,1976,4.313,1977,4.313,1978,4.313,1979,4.313,1980,4.313,1981,4.313,1982,4.313,1983,7.347,1984,4.313,1985,4.313,1986,4.313,1987,4.313,1988,4.313,1989,4.313,1990,4.313,1991,3.885,1992,2.966,1993,8.283,1994,9.195,1995,4.313,1996,4.313,1997,3.225,1998,3.885,1999,3.885,2000,3.225,2001,3.885,2002,3.885,2003,3.885,2004,3.885,2005,3.885,2006,3.885,2007,3.393,2008,3.885,2009,3.604,2010,3.885,2011,4.313,2012,3.885,2013,3.885,2014,3.885,2015,4.313,2016,3.885,2017,3.604,2018,3.885,2019,3.604,2020,3.885,2021,3.885,2022,3.604,2023,3.885]],["title/classes/EnvironmentVariablesValidator-6.html",[0,0.213,1828,2.337,2024,3.653]],["body/classes/EnvironmentVariablesValidator-6.html",[0,0.372,2,0.874,3,0.046,4,0.042,5,0.049,7,0.292,8,1.223,23,0.509,25,0.004,27,1.763,31,0.566,34,1.637,62,0.124,64,4.531,65,1.722,71,0.051,77,0.003,78,0.003,84,4.528,182,1.139,322,2.287,507,2.161,787,4.12,794,3.013,881,4.12,892,2.254,919,2.836,1828,4.58,1850,3.82,1852,3.696,1853,3.82,1866,3.82,1974,8.22,1991,5.188,1993,8.22,2025,5.759,2026,8.569,2027,8.569,2028,8.569,2029,8.569,2030,8.569,2031,5.759,2032,5.759,2033,5.759,2034,7.179,2035,7.637,2036,5.759,2037,5.759,2038,7.624,2039,9.125,2040,5.759,2041,5.759,2042,4.531,2043,4.307,2044,5.759,2045,4.307,2046,5.759,2047,5.759,2048,5.759,2049,5.759,2050,5.759,2051,5.759,2052,5.759,2053,5.759]],["title/classes/EnvironmentVariablesValidator-7.html",[0,0.213,1828,2.337,2054,3.938]],["body/classes/EnvironmentVariablesValidator-7.html",[0,0.352,2,0.805,3,0.043,4,0.038,5,0.034,7,0.269,8,1.158,19,2.38,23,0.539,25,0.004,26,4.985,27,1.869,31,0.6,34,1.647,36,2.077,54,1.55,62,0.12,63,3.843,65,1.587,71,0.047,77,0.003,78,0.003,84,4.315,182,1.05,322,2.107,557,2.517,794,2.776,879,4.434,892,2.077,919,2.613,1129,2.564,1132,5.652,1467,7.292,1828,4.394,1837,5.405,1841,4.78,1850,3.52,1852,3.405,1853,3.52,1854,6.039,1856,3.968,1857,4.434,1862,4.434,1863,4.434,1866,3.52,1878,3.796,2000,3.968,2055,5.306,2056,8.221,2057,8.221,2058,7.406,2059,8.221,2060,8.221,2061,7.406,2062,8.221,2063,8.221,2064,8.221,2065,5.306,2066,5.306,2067,5.306,2068,5.306,2069,5.306,2070,5.306,2071,5.306,2072,5.306,2073,5.306,2074,4.78,2075,5.306,2076,5.306,2077,5.306,2078,5.306,2079,4.78,2080,5.306,2081,5.306,2082,5.306,2083,5.306,2084,5.306,2085,5.306,2086,4.78,2087,5.306,2088,4.434,2089,5.306,2090,4.78,2091,5.306]],["title/interfaces/FacebookInterface.html",[1161,4.381,2092,3.364]],["body/interfaces/FacebookInterface.html",[3,0.059,4,0.053,5,0.047,7,0.37,8,1.423,11,1.121,15,1.849,23,0.534,25,0.004,34,1.754,71,0.064,77,0.003,78,0.003,954,3.82,1019,4.135,1161,7.421,2092,4.686,2093,5.461,2094,7.303,2095,9.959,2096,9.959]],["title/injectables/FileDocumentRepository.html",[202,0.934,1762,4.381]],["body/injectables/FileDocumentRepository.html",[0,0.268,3,0.044,4,0.04,5,0.036,7,0.278,11,0.967,15,1.02,16,1.1,23,0.48,25,0.004,31,0.534,35,1.387,62,0.136,71,0.048,77,0.003,78,0.003,129,1.304,135,1.628,137,1.49,147,1.988,148,1.642,182,1.655,202,1.317,204,1.701,206,2.56,207,2.042,209,2.63,210,3.072,213,2.238,218,3.329,220,2.06,221,2.687,225,2.63,227,3.072,229,3.072,236,0.852,239,2.246,240,2.28,246,2.316,248,1.927,253,2.233,279,4.923,915,2.757,1755,4.473,1759,3.776,1760,4.588,1761,4.32,1762,6.181,1807,3.642,2097,5.491,2098,5.491,2099,6.694,2100,5.491,2101,7.398,2102,5.491,2103,4.286,2104,5.491,2105,5.491,2106,4.106,2107,3.073,2108,3.231,2109,3.524,2110,4.947,2111,5.491,2112,5.491,2113,5.491,2114,7.537,2115,5.491,2116,8.366,2117,5.82,2118,5.491,2119,5.491,2120,5.491,2121,5.491]],["title/classes/FileDto.html",[0,0.256,1437,3.75]],["body/classes/FileDto.html",[0,0.438,2,1.129,3,0.06,4,0.054,5,0.048,7,0.377,8,1.438,15,1.792,23,0.481,25,0.004,27,1.381,31,0.536,34,1.622,39,2.885,62,0.122,65,2.224,68,1.634,71,0.066,77,0.003,78,0.003,81,4.933,83,4.509,84,3.974,547,4.27,1437,6.424,2122,7.437,2123,7.437,2124,7.437]],["title/entities/FileEntity.html",[85,1.864,2125,3.477]],["body/entities/FileEntity.html",[0,0.35,3,0.058,4,0.052,5,0.057,7,0.363,8,1.407,15,1.764,16,0.882,23,0.471,25,0.004,27,1.764,31,0.524,34,1.602,62,0.119,71,0.063,77,0.003,78,0.003,85,3.376,87,3.284,96,5.827,117,4.464,118,4.768,122,2.857,123,4.916,124,4.221,125,3.834,126,3.073,547,4.203,604,3.752,2125,5.827,2126,7.173,2127,7.173,2128,7.173]],["title/classes/FileMapper.html",[0,0.256,2109,3.364]],["body/classes/FileMapper.html",[0,0.32,2,0.996,3,0.053,4,0.048,5,0.042,7,0.332,11,0.897,16,1.021,23,0.445,25,0.004,31,0.495,62,0.113,71,0.058,77,0.003,78,0.003,129,1.464,130,5.656,131,4.65,132,4.65,133,4.65,135,1.511,136,3.67,137,1.48,138,4.65,140,5.104,147,1.845,148,2.485,176,5.104,182,1.643,1759,7.058,1760,5.48,2103,5.259,2108,3.859,2109,5.332,2129,6.559,2130,6.559,2131,6.559,2132,5.16,2133,7.485,2134,5.909,2135,6.537,2136,5.16,2137,6.559]],["title/classes/FileMapper-1.html",[0,0.213,261,1.457,2109,2.805]],["body/classes/FileMapper-1.html",[0,0.322,2,1.003,3,0.053,4,0.048,5,0.043,7,0.335,11,0.901,16,1.026,23,0.447,25,0.004,31,0.498,62,0.113,71,0.058,77,0.003,78,0.003,129,1.47,130,5.666,131,4.67,132,4.67,133,4.67,135,1.518,136,3.696,137,1.486,138,4.67,140,5.12,147,1.853,148,2.496,176,4.67,177,4.11,182,1.651,183,5.193,199,4.11,2103,5.267,2108,3.886,2109,5.355,2125,6.819,2133,7.518,2134,5.95,2138,6.605,2139,6.605,2140,6.605,2141,5.518,2142,6.605]],["title/injectables/FileRelationalRepository.html",[202,0.934,2143,4.381]],["body/injectables/FileRelationalRepository.html",[0,0.267,3,0.044,4,0.04,5,0.035,7,0.277,11,0.965,15,1.66,16,1.099,23,0.479,25,0.004,31,0.533,35,1.382,62,0.136,71,0.048,77,0.003,78,0.003,85,2.623,87,2.504,122,1.779,129,1.3,135,1.625,137,1.487,147,1.854,182,1.652,202,1.314,204,1.695,206,2.558,207,2.036,209,2.623,210,3.064,213,2.233,215,4.401,218,3.321,220,2.052,221,2.684,225,2.623,227,3.064,229,2.272,236,0.848,237,2.693,238,1.895,239,2.237,240,2.272,246,2.307,248,1.919,249,1.736,250,3.137,253,1.969,264,3.628,268,3.51,1755,5.404,1761,4.304,2103,4.926,2108,3.219,2109,3.51,2110,4.928,2117,5.805,2125,3.628,2141,4.571,2143,6.165,2144,5.47,2145,4.304,2146,5.47,2147,5.47,2148,5.47,2149,5.47,2150,5.47,2151,5.47,2152,5.47,2153,5.47,2154,5.47,2155,7.379,2156,5.47]],["title/classes/FileRepository.html",[0,0.256,1755,3.17]],["body/classes/FileRepository.html",[0,0.327,2,1.019,3,0.054,4,0.049,5,0.043,7,0.34,11,0.995,15,1.247,16,1.133,23,0.494,25,0.004,31,0.55,62,0.115,71,0.059,77,0.003,78,0.003,129,1.486,135,1.676,137,1.642,207,2.327,209,2.998,210,3.502,218,3.795,220,2.519,221,2.838,225,2.998,227,3.502,229,2.788,239,2.746,240,2.788,278,6.411,279,5.425,1755,5.098,2103,4.723,2108,3.951,2117,6.634,2157,6.714,2158,6.714,2159,6.714,2160,6.714]],["title/classes/FileResponseDto.html",[0,0.256,2161,3.364]],["body/classes/FileResponseDto.html",[0,0.365,2,1.138,3,0.06,4,0.054,5,0.065,7,0.38,8,1.445,23,0.484,25,0.004,27,1.392,28,4.007,31,0.447,39,2.899,62,0.123,68,1.647,71,0.066,77,0.003,78,0.003,2103,5.267,2108,4.411,2161,5.79,2162,9.023,2163,5.154,2164,5.897]],["title/classes/FileResponseDto-1.html",[0,0.213,261,1.457,2161,2.805]],["body/classes/FileResponseDto-1.html",[0,0.365,2,1.138,3,0.06,4,0.054,5,0.065,7,0.38,8,1.445,23,0.484,25,0.004,27,1.392,28,4.007,31,0.447,39,2.899,62,0.123,68,1.647,71,0.066,77,0.003,78,0.003,2103,5.267,2108,4.411,2161,5.79,2163,5.154,2164,5.897,2165,9.023]],["title/classes/FileResponseDto-2.html",[0,0.213,1927,3.439,2161,2.805]],["body/classes/FileResponseDto-2.html",[0,0.346,2,1.078,3,0.057,4,0.052,5,0.064,7,0.36,8,1.398,23,0.529,25,0.004,27,1.622,28,4.667,31,0.521,34,1.597,39,3.037,62,0.119,68,1.56,71,0.063,77,0.003,78,0.003,2103,5.188,2108,4.178,2161,5.603,2163,4.883,2164,5.587,2166,6.764,2167,9.455,2168,8.517,2169,7.101]],["title/classes/FileSchemaClass.html",[0,0.256,1759,3.605]],["body/classes/FileSchemaClass.html",[0,0.347,2,1.081,3,0.057,4,0.052,5,0.046,7,0.361,8,1.401,23,0.469,25,0.004,27,1.322,31,0.425,34,1.416,36,2.209,62,0.129,71,0.083,77,0.003,78,0.003,85,2.531,125,3.805,126,3.05,147,1.581,547,4.189,915,3.574,1758,5.948,1759,6.013,1766,5.287,1804,6.256,1818,5.324,2107,3.984,2170,5.948,2171,7.447,2172,7.119,2173,5.601,2174,6.539,2175,5.601,2176,6.413,2177,5.601,2178,5.601,2179,6.413]],["title/classes/FileType.html",[0,0.256,2103,2.686]],["body/classes/FileType.html",[0,0.402,2,0.812,3,0.043,4,0.039,5,0.035,7,0.271,8,1.164,15,1.533,23,0.475,25,0.004,27,1.349,28,3.883,31,0.433,34,1.609,36,1.835,39,2.651,62,0.137,65,1.599,68,1.175,71,0.047,77,0.003,78,0.003,147,1.614,148,2.173,182,1.632,323,3.621,547,3.652,687,2.797,723,2.366,846,3.431,877,6.171,878,4.467,881,7.112,919,3.577,996,5.433,997,4.36,1133,3.577,1134,2.328,1353,4.467,1809,6.07,2034,4.206,2042,4.206,2043,3.998,2045,3.998,2103,3.722,2180,5.346,2181,7.265,2182,7.265,2183,7.265,2184,7.265,2185,5.346,2186,5.346,2187,5.346,2188,5.346,2189,4.816,2190,4.816,2191,7.265,2192,5.716,2193,5.197,2194,3.825,2195,4.819,2196,4.816,2197,4.467,2198,4.467,2199,5.346,2200,5.346,2201,5.346,2202,6.07,2203,5.346,2204,5.346,2205,5.346,2206,5.346,2207,4.206,2208,5.346,2209,5.346,2210,6.07,2211,4.206,2212,5.346,2213,5.346,2214,4.816]],["title/classes/FileUploadDto.html",[0,0.256,2215,4.125]],["body/classes/FileUploadDto.html",[0,0.428,2,1.086,3,0.057,4,0.052,5,0.046,7,0.363,8,1.405,19,2.888,23,0.47,25,0.004,27,1.629,31,0.523,34,1.42,39,3.048,62,0.119,65,2.14,68,1.572,71,0.063,77,0.003,78,0.003,84,3.882,991,5.818,997,4.319,1466,4.589,2166,6.786,2215,6.901,2216,7.155,2217,7.926,2218,7.463,2219,7.155,2220,7.155,2221,7.155,2222,7.155,2223,7.155,2224,7.155]],["title/controllers/FilesLocalController.html",[495,2.112,2225,4.381]],["body/controllers/FilesLocalController.html",[0,0.28,3,0.046,4,0.042,5,0.059,7,0.291,8,0.921,11,0.824,16,0.938,23,0.489,25,0.004,27,1.416,31,0.455,34,0.93,62,0.132,68,1.263,71,0.051,77,0.003,78,0.003,129,1.344,135,1.387,137,1.358,182,1.509,206,2.162,220,2.156,221,2.129,236,0.891,249,1.824,261,1.916,495,3.073,497,2.282,518,3.142,521,3.688,523,3.382,529,4.488,530,4.611,533,3.072,534,3.382,535,2.945,540,3.072,546,3.382,547,3.788,548,2.945,549,2.631,1173,7.928,1527,3.952,1766,3.475,2161,4.894,2225,6.373,2226,5.748,2227,6.871,2228,7.152,2229,5.748,2230,5.748,2231,5.748,2232,4.802,2233,7.711,2234,4.522,2235,5.178,2236,5.178,2237,5.178,2238,5.748,2239,6.871,2240,5.178,2241,5.178,2242,4.112,2243,3.812,2244,6.871,2245,5.178,2246,7.627,2247,5.703,2248,3.952,2249,4.802,2250,4.802,2251,5.456,2252,3.688,2253,4.802,2254,5.178,2255,5.178,2256,5.178,2257,5.178,2258,4.802,2259,5.748,2260,5.748,2261,5.748,2262,5.748]],["title/modules/FilesLocalModule.html",[289,1.037,2263,3.75]],["body/modules/FilesLocalModule.html",[0,0.257,3,0.042,4,0.038,5,0.057,25,0.004,30,2.158,34,0.854,35,1.333,36,1.819,62,0.14,71,0.047,77,0.003,78,0.003,147,1.172,148,1.578,182,1.424,236,0.818,289,1.621,291,1.695,292,1.542,293,1.737,294,1.737,295,1.716,296,2.699,297,2.699,302,2.371,303,1.675,304,1.716,312,2.431,464,2.649,497,2.859,583,4.129,601,2.598,602,3.849,610,1.98,611,2.821,846,4.621,873,4.814,874,3.19,890,5.101,891,4.821,892,2.065,910,2.703,911,2.76,918,3.19,919,2.598,921,3.283,942,4.151,945,2.76,952,3.386,1289,3.946,1290,3.946,1291,3.946,1752,4.621,2217,4.409,2218,4.151,2225,6.849,2242,3.775,2243,3.5,2247,7.735,2248,3.628,2251,3.775,2263,6.965,2264,4.754,2265,4.754,2266,4.754,2267,4.754,2268,4.409,2269,4.409,2270,7.201,2271,3.946,2272,4.409,2273,4.621,2274,4.409,2275,4.776,2276,4.409,2277,4.409,2278,7.358,2279,4.409,2280,4.151,2281,4.409,2282,4.409,2283,5.277,2284,4.409,2285,4.151,2286,4.151,2287,4.151,2288,4.151,2289,4.409]],["title/injectables/FilesLocalService.html",[202,0.934,2247,3.921]],["body/injectables/FilesLocalService.html",[0,0.306,3,0.05,4,0.046,5,0.063,7,0.318,11,0.873,16,0.994,23,0.433,25,0.004,31,0.482,36,1.587,62,0.133,71,0.055,77,0.003,78,0.003,129,1.424,135,1.47,137,1.119,148,1.879,182,1.243,202,1.439,204,1.947,206,2.258,207,2.231,213,2.446,221,2.256,236,0.974,248,2.836,249,2.566,253,1.677,269,2.876,464,3.154,547,2.78,601,3.093,602,4.321,610,2.357,611,3.358,891,5.228,892,2.459,910,3.219,911,3.286,945,3.286,1007,3.909,1755,6.146,2103,3.219,2108,3.697,2233,8.052,2247,6.045,2290,6.283,2291,6.283,2292,6.754,2293,6.283,2294,5.249,2295,5.249,2296,5.249,2297,6.283,2298,6.283]],["title/modules/FilesModule.html",[289,1.037,860,3.605]],["body/modules/FilesModule.html",[0,0.289,3,0.048,4,0.043,5,0.038,25,0.004,62,0.143,71,0.052,77,0.003,78,0.003,147,1.729,236,0.919,289,1.719,291,2.501,292,1.732,293,1.952,294,1.952,295,1.928,296,2.862,297,2.862,302,2.563,303,1.881,304,1.928,312,2.001,580,3.101,582,3.689,583,4.464,584,3.804,860,6.894,873,5.045,874,3.584,881,6.602,918,3.584,919,3.833,921,3.689,1752,4.995,2034,4.664,2038,4.953,2042,4.664,2189,5.34,2190,5.34,2202,6.504,2248,4.076,2252,6.759,2263,5.568,2273,4.995,2275,5.765,2299,5.34,2300,5.34,2301,5.34,2302,5.34,2303,4.664,2304,5.928,2305,5.568,2306,5.928,2307,5.568,2308,5.928,2309,5.928,2310,7.012]],["title/controllers/FilesS3Controller.html",[495,2.112,2311,4.381]],["body/controllers/FilesS3Controller.html",[0,0.301,3,0.05,4,0.045,5,0.061,7,0.313,8,0.989,11,0.667,16,0.759,23,0.503,25,0.004,27,1.146,31,0.368,34,0.999,62,0.135,68,1.357,71,0.054,77,0.003,78,0.003,129,1.408,135,1.123,137,1.099,182,1.221,206,2.239,220,2.316,221,2.231,236,0.957,249,1.959,261,2.058,495,3.22,497,2.451,518,3.375,523,3.632,529,4.703,530,4.832,533,3.3,534,3.632,535,3.163,540,3.3,546,3.632,547,2.732,548,3.163,549,2.826,1527,4.245,1766,3.732,2161,5.129,2228,7.406,2232,5.158,2234,4.857,2235,5.561,2236,5.561,2237,5.561,2239,7.2,2240,5.561,2241,5.561,2242,4.416,2243,4.095,2244,7.2,2245,5.561,2248,4.245,2249,5.158,2250,5.158,2251,4.416,2252,3.961,2253,5.158,2254,5.561,2255,5.561,2256,5.561,2257,5.561,2258,5.158,2311,6.678,2312,6.173,2313,7.985,2314,6.173,2315,5.977]],["title/modules/FilesS3Module.html",[289,1.037,2305,3.75]],["body/modules/FilesS3Module.html",[0,0.24,3,0.04,4,0.036,5,0.055,25,0.004,30,2.012,34,0.796,35,1.243,36,2.352,62,0.14,71,0.043,77,0.003,78,0.003,147,1.524,148,2.052,182,1.357,236,0.763,289,1.563,291,1.58,292,1.437,293,1.62,294,1.62,295,1.6,296,2.601,297,2.601,302,2.259,303,1.561,304,1.6,312,2.316,464,2.47,497,2.724,583,3.934,601,2.422,602,3.667,610,1.846,611,2.63,687,2.573,723,2.177,846,4.403,873,4.672,874,2.974,890,4.269,891,4.471,892,1.925,910,2.52,911,2.573,918,2.974,919,2.422,921,3.061,942,3.87,945,4.702,952,3.157,1289,3.679,1290,3.679,1291,3.679,1752,4.403,2043,3.679,2045,3.679,2192,5.398,2193,3.519,2194,3.519,2195,5.962,2207,3.87,2211,3.87,2218,3.87,2242,3.519,2243,3.263,2248,3.383,2268,4.11,2269,4.11,2271,3.679,2272,4.11,2273,4.403,2274,4.11,2275,4.551,2276,4.11,2277,4.11,2278,7.141,2279,4.11,2280,3.87,2281,4.11,2282,4.11,2284,4.11,2285,3.87,2286,3.87,2287,3.87,2288,3.87,2289,4.11,2305,6.834,2311,6.601,2315,7.644,2316,4.432,2317,4.432,2318,4.432,2319,4.432,2320,6.181,2321,4.11,2322,4.11,2323,4.11,2324,4.92,2325,4.432,2326,4.432]],["title/controllers/FilesS3PresignedController.html",[495,2.112,2327,4.381]],["body/controllers/FilesS3PresignedController.html",[0,0.32,3,0.053,4,0.048,5,0.059,7,0.332,11,0.708,16,0.806,23,0.445,25,0.004,27,1.218,31,0.391,62,0.137,68,1.441,71,0.058,77,0.003,78,0.003,129,1.464,135,1.193,137,1.168,182,1.297,206,2.304,236,1.017,249,2.082,261,2.187,495,3.348,497,2.604,518,3.585,519,3.761,523,3.859,529,4.889,530,5.024,533,3.506,534,3.859,535,3.36,540,3.506,546,3.859,547,2.903,548,3.36,549,3.003,593,3.966,2161,5.332,2166,5.944,2215,7.543,2228,6.942,2232,5.48,2234,5.16,2248,4.51,2249,5.48,2250,5.48,2251,4.692,2252,4.209,2253,5.48,2258,5.48,2327,6.942,2328,6.559,2329,6.559,2330,6.559,2331,6.213,2332,5.909,2333,6.559]],["title/modules/FilesS3PresignedModule.html",[289,1.037,2307,3.75]],["body/modules/FilesS3PresignedModule.html",[0,0.239,3,0.039,4,0.036,5,0.055,25,0.004,30,2.005,34,0.794,35,1.238,36,2.268,62,0.14,71,0.043,77,0.003,78,0.003,147,1.52,148,2.047,182,1.354,236,0.76,289,1.56,291,1.575,292,1.432,293,1.614,294,1.614,295,1.594,296,2.596,297,2.596,302,2.254,303,1.556,304,1.594,312,2.311,464,2.461,497,2.717,583,3.925,601,2.414,602,3.658,610,1.839,611,2.62,654,2.512,687,2.564,723,2.17,846,4.392,873,4.665,874,2.964,890,4.907,891,4.696,892,1.919,910,2.512,911,2.564,918,2.964,919,2.414,921,3.051,942,3.857,945,4.464,952,3.146,1289,3.666,1290,3.666,1291,3.666,1752,4.392,2043,3.666,2045,3.666,2166,3.507,2192,5.385,2193,3.507,2194,3.507,2195,5.955,2207,3.857,2211,3.857,2218,3.857,2242,3.507,2243,3.252,2248,3.371,2268,4.096,2269,4.096,2271,3.666,2272,4.096,2273,4.392,2274,4.096,2275,4.54,2276,4.096,2277,4.096,2278,7.131,2279,4.096,2280,3.857,2281,4.096,2282,4.096,2284,4.096,2285,3.857,2286,3.857,2287,3.857,2288,3.857,2289,4.096,2307,6.828,2320,6.166,2321,4.096,2322,4.096,2323,4.096,2325,4.416,2326,4.416,2327,6.588,2331,7.64,2334,4.416,2335,4.416,2336,4.416,2337,4.416,2338,4.903,2339,4.903]],["title/injectables/FilesS3PresignedService.html",[202,0.934,2331,3.921]],["body/injectables/FilesS3PresignedService.html",[0,0.23,3,0.038,4,0.034,5,0.062,7,0.239,8,1.067,11,0.719,16,0.819,23,0.414,25,0.004,31,0.46,34,0.763,36,2.235,62,0.133,71,0.042,77,0.002,78,0.002,129,1.173,135,1.211,137,0.84,147,1.863,148,2.646,182,0.933,202,1.186,204,1.461,206,1.95,207,2.131,213,2.015,220,2.498,221,1.859,233,2.087,236,0.731,248,3.105,249,2.113,253,1.777,269,3.534,333,3.709,464,3.344,547,2.087,601,2.322,602,4.127,610,2.498,611,3.56,687,4.388,723,2.087,846,3.026,891,4.938,892,1.845,910,2.415,911,2.466,945,4.629,1289,3.526,1290,3.526,1291,3.526,1353,3.939,1367,3.709,1442,4.247,1755,5.553,2043,3.526,2045,3.526,2103,2.415,2108,2.774,2145,3.709,2166,6.001,2168,4.247,2192,6.6,2193,4.764,2194,3.373,2195,5.564,2196,4.247,2197,3.939,2198,3.939,2207,3.709,2210,5.564,2211,3.709,2214,4.247,2215,6.6,2280,3.709,2285,3.709,2286,3.709,2287,3.709,2292,3.939,2294,3.939,2295,3.939,2296,3.939,2321,3.939,2322,3.939,2323,3.939,2331,4.98,2332,4.247,2340,4.715,2341,6.659,2342,4.715,2343,6.659,2344,6.659,2345,4.715,2346,4.715,2347,6.659,2348,4.715,2349,4.715,2350,4.715,2351,6.659,2352,4.715,2353,4.715,2354,4.715,2355,6.659,2356,4.715]],["title/injectables/FilesS3Service.html",[202,0.934,2315,3.921]],["body/injectables/FilesS3Service.html",[0,0.324,3,0.053,4,0.048,5,0.064,7,0.336,11,0.904,16,1.029,23,0.449,25,0.004,31,0.499,62,0.125,71,0.059,77,0.003,78,0.003,129,1.475,135,1.522,137,1.182,148,1.984,182,1.312,202,1.49,204,2.056,206,2.316,207,2.31,213,2.008,221,2.336,236,1.029,249,2.106,253,1.771,269,3.038,464,3.332,547,2.937,549,3.038,601,3.267,602,4.474,610,2.489,611,3.547,1755,6.129,2103,3.4,2108,3.905,2145,5.221,2292,6.994,2294,5.544,2295,5.544,2296,5.544,2313,8.26,2315,6.259,2357,6.636,2358,6.636,2359,6.636,2360,6.636]],["title/injectables/FilesService.html",[202,0.934,2252,3.364]],["body/injectables/FilesService.html",[0,0.322,3,0.053,4,0.048,5,0.043,7,0.335,11,0.988,15,1.227,16,1.125,23,0.491,25,0.004,31,0.546,62,0.131,71,0.058,77,0.003,78,0.003,129,1.47,135,1.664,137,1.486,182,1.651,202,1.486,204,2.046,209,2.967,210,3.466,213,1.998,221,2.683,225,2.967,227,3.466,229,2.743,236,1.024,239,2.701,240,2.743,249,2.096,549,3.024,1755,6.122,2103,4.687,2108,3.886,2117,6.566,2145,5.196,2252,5.355,2361,6.605,2362,6.605,2363,6.605,2364,6.605,2365,6.605,2366,6.605,2367,6.605]],["title/classes/FilterUserDto.html",[0,0.256,2368,3.477]],["body/classes/FilterUserDto.html",[0,0.456,2,0.835,3,0.044,4,0.04,5,0.036,7,0.279,8,1.186,11,0.8,19,2.439,23,0.544,25,0.004,27,1.022,31,0.328,34,1.45,35,2.263,36,1.871,39,2.69,54,2.164,62,0.127,63,4.193,65,1.645,68,1.209,71,0.074,77,0.003,78,0.003,84,3.706,182,1.088,261,1.834,323,4.093,507,2.779,553,2.395,555,2.435,557,2.61,995,5.39,1133,4.604,1134,2.395,1438,4.114,1466,4.381,1469,5.575,1566,5.828,1723,4.114,1734,6.43,1743,4.114,2368,5.943,2369,6.189,2370,5.211,2371,5.502,2372,4.957,2373,5.502,2374,4.597,2375,3.424,2376,5.555,2377,4.597,2378,4.597,2379,4.329,2380,4.114,2381,4.61,2382,4.597,2383,6.189,2384,4.597,2385,4.597,2386,4.114]],["title/classes/FindAllAccountsDto.html",[0,0.256,505,4.381]],["body/classes/FindAllAccountsDto.html",[0,0.449,2,1.019,3,0.054,4,0.049,5,0.043,7,0.34,8,1.351,11,1.044,19,3.184,23,0.452,25,0.004,27,1.566,31,0.503,62,0.125,63,4.014,65,2.008,68,1.475,71,0.059,77,0.003,78,0.003,261,2.238,323,3.955,505,7.046,553,4.014,555,4.08,557,3.185,995,5.159,1133,4.539,1134,2.923,1466,4.822,2381,5.247,2387,9.219,2388,6.714,2389,5.593,2390,5.593,2391,6.714,2392,6.714]],["title/classes/FindAllKycDetailsDto.html",[0,0.256,2393,4.381]],["body/classes/FindAllKycDetailsDto.html",[0,0.447,2,1.005,3,0.053,4,0.048,5,0.043,7,0.335,8,1.339,11,1.039,19,3.168,23,0.448,25,0.004,27,1.552,31,0.498,62,0.124,63,3.988,65,1.98,68,1.455,71,0.058,77,0.003,78,0.003,261,2.207,323,3.935,553,3.988,555,4.053,557,3.14,927,4.122,995,5.126,1133,4.51,1134,2.882,1466,4.791,1501,4.344,1503,5.208,2381,5.201,2389,5.544,2390,5.544,2393,6.983,2394,9.16,2395,6.62,2396,6.62]],["title/classes/FindAllRegionsDto.html",[0,0.256,2397,4.381]],["body/classes/FindAllRegionsDto.html",[0,0.449,2,1.019,3,0.054,4,0.049,5,0.043,7,0.34,8,1.351,11,1.044,19,3.184,23,0.452,25,0.004,27,1.566,31,0.503,62,0.125,63,4.014,65,2.008,68,1.475,71,0.059,77,0.003,78,0.003,261,2.238,323,3.955,553,4.014,555,4.08,557,3.185,995,5.159,1133,4.539,1134,2.923,1466,4.822,2381,5.247,2389,5.593,2390,5.593,2397,7.046,2398,9.219,2399,6.714,2400,6.714,2401,6.714]],["title/classes/FindAllResidencesDto.html",[0,0.256,2402,4.381]],["body/classes/FindAllResidencesDto.html",[0,0.449,2,1.019,3,0.054,4,0.049,5,0.043,7,0.34,8,1.351,11,1.044,19,3.184,23,0.452,25,0.004,27,1.566,31,0.503,62,0.125,63,4.014,65,2.008,68,1.475,71,0.059,77,0.003,78,0.003,261,2.238,323,3.955,553,4.014,555,4.08,557,3.185,995,5.159,1133,4.539,1134,2.923,1466,4.822,2381,5.247,2389,5.593,2390,5.593,2402,7.046,2403,9.219,2404,6.714,2405,6.714,2406,6.714]],["title/classes/FindAllSettingsDto.html",[0,0.256,2407,4.381]],["body/classes/FindAllSettingsDto.html",[0,0.449,2,1.019,3,0.054,4,0.049,5,0.043,7,0.34,8,1.351,11,1.044,19,3.184,23,0.452,25,0.004,27,1.566,31,0.503,62,0.125,63,4.014,65,2.008,68,1.475,71,0.059,77,0.003,78,0.003,261,2.238,323,3.955,553,4.014,555,4.08,557,3.185,995,5.159,1133,4.539,1134,2.923,1466,4.822,1634,5.61,2381,5.247,2389,5.593,2390,5.593,2407,7.046,2408,9.219,2409,6.714,2410,6.714]],["title/classes/FindAllTenantTypesDto.html",[0,0.256,2411,4.381]],["body/classes/FindAllTenantTypesDto.html",[0,0.447,2,1.005,3,0.053,4,0.048,5,0.043,7,0.335,8,1.339,11,1.039,19,3.168,22,2.528,23,0.448,25,0.004,27,1.552,31,0.498,62,0.124,63,3.988,65,1.98,68,1.455,71,0.058,77,0.003,78,0.003,261,2.207,323,3.935,553,3.988,555,4.053,557,3.14,995,5.126,1133,4.51,1134,2.882,1466,4.791,1680,4.692,2381,5.201,2389,5.544,2390,5.544,2411,6.983,2412,9.16,2413,6.62,2414,6.62,2415,6.62]],["title/classes/FindAllTenantsDto.html",[0,0.256,2416,4.381]],["body/classes/FindAllTenantsDto.html",[0,0.449,2,1.019,3,0.054,4,0.049,5,0.043,7,0.34,8,1.351,11,1.044,19,3.184,23,0.452,25,0.004,27,1.566,31,0.503,62,0.125,63,4.014,65,2.008,68,1.475,71,0.059,77,0.003,78,0.003,261,2.238,323,3.955,553,4.014,555,4.08,557,3.185,995,5.159,1133,4.539,1134,2.923,1466,4.822,2381,5.247,2389,5.593,2390,5.593,2416,7.046,2417,9.219,2418,6.714,2419,6.714,2420,6.714]],["title/controllers/HomeController.html",[495,2.112,2421,4.381]],["body/controllers/HomeController.html",[0,0.364,3,0.06,4,0.054,5,0.048,7,0.378,25,0.004,27,1.385,31,0.445,62,0.131,68,1.638,71,0.066,77,0.003,78,0.003,129,1.585,137,1.328,182,1.475,236,1.156,435,5.334,495,3.624,497,2.96,533,3.985,549,3.413,2421,7.515,2422,7.456,2423,9.035,2424,7.456,2425,6.726,2426,6.717,2427,7.456,2428,7.456]],["title/modules/HomeModule.html",[289,1.037,861,3.921]],["body/modules/HomeModule.html",[0,0.351,3,0.058,4,0.052,5,0.047,25,0.004,62,0.135,71,0.063,77,0.003,78,0.003,236,1.115,289,1.881,291,2.31,292,2.101,293,2.368,294,2.368,295,2.339,296,3.13,297,2.368,302,2.897,303,2.282,304,2.339,312,2.428,497,3.494,861,7.732,890,5.475,892,2.814,2421,7.944,2425,7.732,2426,6.478,2429,6.478,2430,6.478,2431,7.191,2432,7.191]],["title/injectables/HomeService.html",[202,0.934,2425,3.921]],["body/injectables/HomeService.html",[0,0.346,3,0.057,4,0.052,5,0.046,7,0.36,11,0.767,16,1.162,23,0.381,25,0.004,31,0.521,36,1.794,62,0.128,71,0.063,77,0.003,78,0.003,129,1.538,135,1.291,137,1.264,182,1.405,202,1.555,204,2.2,213,2.149,236,1.101,549,3.251,891,5.393,892,2.779,910,3.638,911,3.715,945,3.715,1007,4.419,2423,8.885,2425,6.529,2433,7.101,2434,7.101,2435,7.101,2436,6.397]],["title/interfaces/IPaginationOptions.html",[243,2.211,2092,3.364]],["body/interfaces/IPaginationOptions.html",[3,0.063,4,0.056,5,0.05,7,0.394,8,1.478,19,3.468,23,0.495,25,0.004,71,0.069,77,0.003,78,0.003,243,3.892,553,4.429,555,4.502,2092,4.995,2093,5.821,2437,7.784,2438,6.504]],["title/classes/InfinityPaginationResponseDto.html",[0,0.256,537,3.17]],["body/classes/InfinityPaginationResponseDto.html",[0,0.416,2,1.039,3,0.055,4,0.05,5,0.044,7,0.347,8,1.367,16,0.841,23,0.548,25,0.004,26,5.093,30,2.799,31,0.509,36,1.729,39,2.988,62,0.116,68,1.504,71,0.075,77,0.003,78,0.003,182,1.354,220,3.653,236,1.061,278,4.138,323,2.799,537,5.16,539,6.234,997,3.37,2163,4.706,2439,8.378,2440,8.771,2441,7.316,2442,6.165,2443,6.165,2444,6.165,2445,6.165,2446,6.165,2447,6.844,2448,6.844,2449,6.844]],["title/injectables/JwtRefreshStrategy.html",[202,0.934,1218,4.125]],["body/injectables/JwtRefreshStrategy.html",[0,0.299,3,0.049,4,0.044,5,0.04,7,0.311,11,0.859,16,0.978,23,0.427,25,0.004,31,0.475,36,1.549,62,0.137,71,0.054,77,0.003,78,0.003,126,3.41,129,1.402,135,1.447,137,1.092,148,1.834,182,1.213,202,1.417,204,1.9,213,1.856,233,3.91,236,0.951,269,2.808,535,3.142,654,4.527,843,7.383,845,5.124,848,6.952,849,4.586,851,7.383,852,4.825,891,5.069,892,2.4,910,3.142,911,3.208,945,3.208,1007,4.953,1036,6.607,1218,6.262,1286,6.65,1296,7.813,1298,5.124,2450,8.836,2451,6.133,2452,6.952,2453,6.133,2454,6.133,2455,7.383,2456,5.525,2457,5.525,2458,5.525,2459,5.525,2460,5.525,2461,5.525,2462,5.525,2463,6.133,2464,6.133]],["title/injectables/JwtStrategy.html",[202,0.934,1219,4.125]],["body/injectables/JwtStrategy.html",[0,0.3,3,0.049,4,0.045,5,0.04,7,0.311,11,0.861,16,0.98,23,0.427,25,0.004,31,0.475,36,1.553,54,1.796,62,0.137,71,0.054,77,0.003,78,0.003,126,3.415,129,1.404,135,1.449,137,1.094,148,1.838,182,1.216,202,1.419,204,1.904,213,1.86,233,3.527,236,0.953,269,2.814,535,3.149,654,4.531,842,7.18,843,6.659,845,6.659,848,6.27,849,4.596,851,5.136,852,4.836,891,5.072,892,2.405,910,3.149,911,3.215,945,3.215,1007,4.96,1219,6.27,1266,7.819,1286,6.659,1298,5.136,1471,4.226,1992,4.226,2452,7.363,2455,7.39,2456,5.537,2457,5.537,2458,5.537,2459,5.537,2460,5.537,2461,5.537,2462,5.537,2465,6.147,2466,6.147,2467,6.147,2468,6.147,2469,5.136,2470,5.136,2471,6.147,2472,6.147,2473,6.147]],["title/modules/KycDetailSeedModule.html",[289,1.037,2474,4.125]],["body/modules/KycDetailSeedModule.html",[0,0.327,3,0.054,4,0.049,5,0.043,25,0.004,62,0.138,71,0.059,77,0.003,78,0.003,103,4,109,3.671,236,1.041,238,2.325,289,1.823,291,2.157,292,1.962,293,2.211,294,2.211,295,2.184,296,3.035,297,3.035,302,2.776,303,2.131,304,2.184,306,4.178,307,3.306,308,4.178,312,2.267,927,3.022,1501,3.185,1524,4.178,2474,8.118,2475,6.049,2476,6.049,2477,6.049,2478,8.433,2479,6.049,2480,6.049,2481,7.596,2482,4.309,2483,4.803,2484,5.282,2485,4.803,2486,6.049]],["title/injectables/KycDetailSeedService.html",[202,0.934,2478,4.125]],["body/injectables/KycDetailSeedService.html",[0,0.248,3,0.041,4,0.037,5,0.033,7,0.258,11,0.55,15,1.306,16,0.626,22,2.662,23,0.273,25,0.004,31,0.419,54,2.818,62,0.128,71,0.045,77,0.003,78,0.003,103,2.417,109,2.219,122,1.657,129,1.239,135,0.927,137,0.907,147,2.142,202,1.252,204,1.579,206,2.033,207,1.94,213,2.127,215,4.972,236,0.79,237,2.509,238,1.765,248,2.824,249,2.555,253,2.512,314,3.081,316,4.977,317,4.505,318,4.616,325,3.27,326,3.646,328,5.339,329,3.38,332,3.646,343,4.01,610,2.638,678,4.856,927,3.164,950,3.081,1326,4.01,1501,2.417,1508,3.504,1511,3.646,1524,3.171,1526,5.03,1647,5.569,2478,5.532,2479,7.251,2480,7.251,2481,7.251,2482,3.27,2483,3.646,2484,4.01,2485,3.646,2487,5.097,2488,4.258,2489,7.031,2490,4.591,2491,4.591,2492,7.031,2493,5.097,2494,7.031,2495,5.875,2496,8.678,2497,7.031,2498,6.334,2499,7.031,2500,7.031,2501,4.591,2502,5.097,2503,4.258,2504,5.097,2505,8.05,2506,5.097,2507,7.031]],["title/classes/KycDetails.html",[0,0.256,2508,3.007]],["body/classes/KycDetails.html",[0,0.19,2,0.59,3,0.031,4,0.028,5,0.025,7,0.197,8,0.927,11,1.055,13,2.917,15,1.285,19,2.523,22,2.523,23,0.561,24,2.917,25,0.004,27,1.834,28,4.995,29,5.082,30,3.134,31,0.589,34,1.614,35,2.402,36,2.469,38,4.685,39,3.251,46,3.164,54,2.671,62,0.104,66,2.229,67,1.991,68,0.854,71,0.034,77,0.002,78,0.002,223,1.438,322,2.298,507,2.172,610,2.595,673,4.756,674,4.756,675,4.756,676,4.756,677,4.756,678,3.871,705,4.948,997,2.85,1501,4.728,1508,5.634,1511,5.862,1523,3.248,1524,2.419,1526,2.781,1527,3.98,1528,4.554,1529,4.554,1530,4.554,1627,4.329,2508,3.32,2509,7.455,2510,3.887,2511,3.887,2512,3.887,2513,3.887,2514,3.887,2515,3.887,2516,3.887,2517,3.887,2518,3.887,2519,3.887,2520,3.887,2521,3.887,2522,3.887,2523,3.887,2524,3.887,2525,3.887,2526,3.502,2527,3.502,2528,3.887]],["title/controllers/KycDetailsController.html",[495,2.112,2529,4.381]],["body/controllers/KycDetailsController.html",[0,0.203,3,0.033,4,0.03,5,0.027,7,0.211,11,0.91,15,1.84,16,1.146,23,0.545,25,0.004,27,1.564,31,0.502,34,1.645,36,1.999,62,0.131,68,0.913,71,0.037,72,4.508,77,0.002,78,0.002,129,1.071,135,1.532,137,1.5,147,0.923,182,1.666,206,1.817,207,1.678,209,2.161,211,2.346,212,2.282,221,1.697,225,1.477,230,1.626,232,1.538,236,0.644,249,1.319,253,1.109,257,1.626,261,2.027,495,2.45,497,1.65,499,4.77,502,2.857,504,2.756,506,2.857,507,1.559,509,5.25,510,2.857,511,4.181,513,2.756,516,2.857,518,3.324,519,3.487,520,2.666,521,2.666,522,1.971,523,2.445,526,2.221,528,2.221,529,3.578,530,3.676,531,4.657,532,5.25,533,2.221,534,2.445,535,2.129,536,2.666,537,2.512,538,2.756,539,3.784,540,2.221,541,3.902,542,2.756,543,2.857,546,2.445,547,1.839,548,2.129,549,1.902,550,2.756,553,3.131,554,2.756,555,3.727,556,2.756,557,1.971,558,4.033,560,2.756,561,2.857,563,2.756,566,2.756,567,2.756,927,3.79,928,5.646,1500,6.58,1501,4.174,1671,5.378,2393,6.613,2508,5.213,2529,5.081,2530,4.155,2531,3.743,2532,4.155,2533,4.155,2534,4.155,2535,4.155,2536,7.333,2537,4.155,2538,4.945,2539,3.269,2540,2.857,2541,3.676,2542,4.155,2543,4.155,2544,4.155,2545,4.155,2546,4.155,2547,3.107,2548,4.155,2549,4.155]],["title/injectables/KycDetailsDocumentRepository.html",[202,0.934,1778,4.381]],["body/injectables/KycDetailsDocumentRepository.html",[0,0.197,3,0.032,4,0.029,5,0.026,7,0.204,11,0.972,15,1.545,16,1.107,23,0.506,25,0.004,31,0.537,35,1.502,36,1.018,62,0.128,71,0.036,77,0.002,78,0.002,85,2.114,129,1.048,135,1.637,137,1.55,147,2.131,148,2.113,182,1.645,202,1.059,204,1.249,206,2.601,207,1.641,208,3.352,209,2.114,210,2.469,211,2.294,212,2.243,213,1.799,218,2.676,220,1.512,221,2.748,222,1.912,223,2.2,225,2.114,227,2.469,229,2.469,230,2.327,232,1.492,233,3.452,234,3.777,236,0.625,239,1.649,240,1.674,243,2.508,244,1.784,245,1.727,246,1.7,248,1.414,249,1.279,250,2.312,253,2.403,257,2.327,261,1.344,262,2.109,269,1.845,270,2.674,271,2.372,522,1.912,915,2.024,927,1.814,1501,4.383,1771,3.944,1774,2.884,1775,2.884,1776,3.368,1777,3.014,1778,4.969,1807,4.687,2099,5.833,2106,3.014,2107,2.256,2508,5.502,2540,2.772,2541,2.437,2550,9.241,2551,3.368,2552,4.031,2553,3.631,2554,5.947,2555,3.631,2556,4.031,2557,4.031,2558,4.031,2559,4.031,2560,4.031,2561,2.674,2562,3.631,2563,3.171,2564,4.031,2565,3.631,2566,4.031,2567,4.031,2568,8.319,2569,4.031,2570,8.319,2571,5.947,2572,4.031,2573,3.631,2574,3.631,2575,3.631,2576,5.947,2577,6.137,2578,4.031,2579,4.031,2580,4.969,2581,3.368,2582,4.969,2583,3.368,2584,4.031,2585,4.031,2586,3.631,2587,3.631,2588,4.031]],["title/classes/KycDetailsDto.html",[0,0.256,1652,4.125]],["body/classes/KycDetailsDto.html",[0,0.441,2,1.144,3,0.061,4,0.055,5,0.049,7,0.382,8,1.45,15,1.802,23,0.404,25,0.004,27,1.399,31,0.449,34,1.465,39,2.908,62,0.123,65,2.253,68,1.656,71,0.066,77,0.003,78,0.003,81,4.998,83,4.545,84,4.006,1501,4.293,1503,5.929,1652,7.122,1670,7.563,2589,7.536]],["title/entities/KycDetailsEntity.html",[85,1.864,2482,3.364]],["body/entities/KycDetailsEntity.html",[0,0.186,3,0.031,4,0.028,5,0.025,7,0.193,8,0.913,11,1.022,13,2.882,15,1.269,16,0.468,19,2.498,22,2.242,23,0.566,24,2.882,25,0.004,27,1.827,29,4.824,30,3.717,31,0.587,34,1.575,35,2.39,36,2.458,38,4.666,46,5.173,54,2.373,62,0.103,71,0.06,77,0.002,78,0.002,85,2.429,87,1.744,89,5.585,93,4.385,96,3.782,99,4.698,103,3.598,105,4.721,109,3.303,110,3.659,113,4.385,115,2.036,116,2.184,117,2.37,118,4.666,121,4.385,122,1.239,123,3.191,124,2.241,125,2.036,126,1.632,223,1.409,322,2.264,507,1.429,610,2.563,672,2.997,673,4.698,674,4.698,675,4.698,676,4.698,677,4.698,678,3.824,705,4.888,708,4.486,709,4.486,710,4.486,711,4.079,1501,4.711,1508,5.585,1511,5.811,1526,2.725,1528,2.997,1529,2.997,1530,2.997,2482,3.659,2483,7.105,2590,3.431,2591,3.809,2592,3.809,2593,3.809,2594,3.809,2595,3.809,2596,3.809,2597,3.809,2598,3.809,2599,5.673,2600,7.586,2601,3.809,2602,3.809,2603,3.809,2604,3.809,2605,3.809]],["title/classes/KycDetailsMapper.html",[0,0.256,2561,3.477]],["body/classes/KycDetailsMapper.html",[0,0.308,2,0.96,3,0.051,4,0.046,5,0.041,7,0.32,11,0.877,16,0.998,23,0.435,25,0.004,31,0.484,62,0.11,71,0.056,77,0.003,78,0.003,129,1.43,130,5.603,131,4.543,132,4.543,133,4.543,135,1.476,136,3.539,137,1.446,138,4.543,140,5.018,147,1.803,148,2.428,176,5.018,178,4.777,179,3.722,180,4.777,181,3.722,182,1.606,654,4.159,1501,4.253,1774,7.283,1775,4.524,1776,5.285,2132,4.976,2135,6.387,2136,4.976,2508,5.839,2540,4.349,2541,3.824,2561,5.385,2606,8.966,2607,5.698,2608,6.325,2609,5.698,2610,5.698,2611,5.698]],["title/classes/KycDetailsMapper-1.html",[0,0.213,261,1.457,2561,2.9]],["body/classes/KycDetailsMapper-1.html",[0,0.243,2,0.756,3,0.04,4,0.036,5,0.032,7,0.252,11,0.747,16,0.851,23,0.371,25,0.004,31,0.413,34,1.12,62,0.117,71,0.044,77,0.003,78,0.003,129,1.219,130,5.23,131,3.872,132,3.872,133,3.872,135,1.258,136,2.787,137,1.232,138,3.872,140,4.45,142,3.196,143,3.563,144,2.856,145,3.563,147,1.537,148,2.069,149,3.563,150,5.688,151,3.563,176,4.45,177,3.099,178,4.071,179,2.93,180,4.071,181,2.93,182,1.369,183,4.306,184,3.563,185,3.424,199,3.099,200,3.196,201,3.196,507,3.223,1501,3.772,1508,4.758,1511,4.95,1524,3.099,1526,3.563,1528,3.918,1529,3.918,1530,3.918,1775,3.563,2482,6.151,2498,4.486,2508,5.497,2540,3.424,2541,3.011,2561,4.59,2607,4.486,2609,4.486,2612,6.644,2613,4.98,2614,6.92,2615,4.98,2616,6.92,2617,4.98,2618,6.92,2619,4.98,2620,5.781,2621,4.161,2622,8.593,2623,7.952,2624,5.174,2625,4.98,2626,6.92,2627,4.98,2628,6.92,2629,4.98,2630,6.233,2631,4.486,2632,3.918,2633,5.444,2634,3.918,2635,4.98,2636,4.98,2637,4.98,2638,4.486,2639,4.98,2640,4.98,2641,4.98,2642,4.98,2643,4.486,2644,4.161,2645,4.486]],["title/modules/KycDetailsModule.html",[289,1.037,862,3.605]],["body/modules/KycDetailsModule.html",[0,0.3,3,0.049,4,0.045,5,0.04,25,0.004,62,0.142,71,0.054,77,0.003,78,0.003,147,1.365,236,0.953,289,1.749,291,2.56,292,1.796,293,2.024,294,2.024,295,1.999,296,2.912,297,2.912,302,2.624,303,1.951,304,1.999,312,2.075,497,3.164,575,4.819,576,4.819,578,4.226,579,4.226,580,3.215,582,3.825,583,4.571,584,3.944,862,6.954,873,5.116,874,3.716,918,3.716,919,3.026,921,3.825,927,3.587,928,3.944,1501,2.915,1768,5.702,2275,5.867,2303,4.836,2529,7.39,2538,7.28,2539,4.836,2646,5.537,2647,5.537,2648,5.537,2649,5.537,2650,5.504,2651,6.147,2652,5.702]],["title/injectables/KycDetailsRelationalRepository.html",[202,0.934,2653,4.381]],["body/injectables/KycDetailsRelationalRepository.html",[0,0.202,3,0.033,4,0.03,5,0.027,7,0.21,11,0.981,15,1.687,16,1.117,23,0.51,25,0.004,31,0.542,35,1.048,62,0.129,71,0.037,77,0.002,78,0.002,85,2.811,87,2.781,122,1.349,129,1.07,135,1.652,137,1.566,147,2.018,148,1.241,182,1.665,202,1.082,204,1.285,206,2.611,207,1.676,208,3.408,209,2.159,210,2.522,211,2.343,212,2.28,213,1.838,215,3.894,218,2.733,220,1.556,221,2.764,222,1.968,223,2.248,225,2.159,227,2.522,229,1.723,230,2.377,232,1.535,233,3.5,234,3.841,236,0.643,237,2.043,238,1.437,239,1.697,240,1.723,243,2.562,244,1.836,245,1.777,246,1.75,248,1.456,249,1.317,250,2.379,252,2.752,253,2.425,257,2.377,259,2.752,260,2.268,261,1.383,262,3.177,263,2.662,264,4.029,268,2.662,269,1.899,270,2.752,271,2.441,272,2.662,927,1.867,1501,4.419,1524,2.582,1771,5.246,1775,2.968,1777,3.103,2482,2.662,2491,3.738,2508,5.54,2540,2.853,2541,2.508,2551,3.467,2553,3.738,2555,3.738,2561,2.752,2562,3.738,2563,3.264,2565,3.738,2577,6.222,2586,3.738,2587,7.125,2653,5.075,2654,9.317,2655,4.149,2656,3.738,2657,4.149,2658,4.149,2659,4.149,2660,4.149,2661,6.074,2662,4.149,2663,4.149,2664,6.074,2665,6.074,2666,3.738,2667,4.149,2668,4.149]],["title/classes/KycDetailsRepository.html",[0,0.256,1771,3.477]],["body/classes/KycDetailsRepository.html",[0,0.26,2,0.81,3,0.043,4,0.039,5,0.035,7,0.27,11,1.031,15,1.643,16,1.173,23,0.533,25,0.004,31,0.569,62,0.12,71,0.047,77,0.003,78,0.003,129,1.278,135,1.736,137,1.7,207,2.275,208,3.911,209,2.579,210,3.013,211,2.799,212,2.617,218,2.401,220,2.722,221,2.892,222,2.531,223,2.685,225,2.579,227,3.013,229,2.216,230,2.84,232,1.975,233,3.649,239,2.183,240,2.216,243,3.06,244,2.362,245,2.286,257,2.84,278,6.469,279,4.851,285,5.677,287,3.539,288,3.539,1501,4.632,1771,4.813,2508,5.6,2540,3.669,2541,3.226,2551,4.459,2577,6.961,2656,4.807,2669,9.765,2670,5.336,2671,5.336,2672,5.336,2673,5.336,2674,5.336]],["title/classes/KycDetailsSchemaClass.html",[0,0.256,1774,3.75]],["body/classes/KycDetailsSchemaClass.html",[0,0.321,2,1,3,0.053,4,0.048,5,0.043,7,0.334,8,1.335,13,3.854,23,0.49,24,3.854,25,0.004,27,1.548,31,0.497,36,2.309,38,4.555,62,0.124,71,0.081,77,0.003,78,0.003,85,2.342,125,3.522,126,2.823,147,1.463,322,3.309,731,5.99,915,3.308,1501,4.335,1766,5.038,1773,5.506,1774,6.538,1804,5.961,1818,4.927,2107,3.687,2171,7.191,2173,5.184,2174,6.232,2175,5.184,2177,5.184,2178,5.184,2675,7.637,2676,5.506,2677,6.963,2678,6.59,2679,6.59,2680,5.936,2681,5.506,2682,5.936]],["title/injectables/KycDetailsService.html",[202,0.934,2538,3.605]],["body/injectables/KycDetailsService.html",[0,0.171,3,0.028,4,0.025,5,0.023,7,0.178,11,0.928,15,1.351,16,1.056,22,2.506,23,0.487,25,0.004,31,0.512,54,2.653,62,0.128,66,2.011,67,1.797,71,0.031,77,0.002,78,0.002,129,0.944,135,1.563,137,1.471,147,1.835,148,2.175,182,1.634,202,0.954,204,1.087,206,2.087,207,1.478,208,3.083,209,1.904,210,2.224,211,3.187,212,2.063,213,1.621,222,1.663,223,1.982,225,1.904,227,2.224,229,1.456,230,2.096,232,1.298,236,0.544,243,2.259,244,1.552,245,1.503,248,2.28,249,2.063,253,1.941,257,2.543,260,1.917,262,1.835,269,3.33,292,1.025,464,3.653,507,2.729,526,1.875,528,1.875,553,1.527,555,1.552,580,1.835,586,2.759,587,4.738,588,4.86,589,4.738,591,3.832,593,3.239,599,2.509,600,2.509,601,1.727,602,4.188,604,1.835,605,4.825,606,4.825,607,5.909,608,3.832,610,3.099,611,3.888,612,5.002,673,3.683,674,3.683,675,3.683,676,3.683,677,3.683,678,2.998,705,3.832,927,2.411,928,5.686,952,2.251,1500,5.86,1501,4.203,1508,2.411,1523,2.93,1524,2.182,1526,2.509,1671,4.006,1771,5.7,1777,2.623,2508,4.928,2531,4.826,2536,6.761,2538,3.683,2540,2.411,2541,2.12,2577,5.723,2650,2.182,2666,3.159,2683,3.507,2684,3.507,2685,3.507,2686,3.507,2687,3.507,2688,3.507,2689,3.507,2690,3.507,2691,3.507,2692,4.006,2693,3.507,2694,6.499,2695,4.826,2696,3.507,2697,3.507,2698,3.507,2699,3.507,2700,3.507,2701,3.507,2702,3.507,2703,3.507,2704,3.507,2705,3.507,2706,3.507,2707,3.507,2708,3.507,2709,3.507,2710,3.507,2711,3.507,2712,3.507,2713,3.507,2714,3.507,2715,3.507,2716,3.507,2717,3.507,2718,3.507,2719,3.507,2720,3.507,2721,3.507]],["title/classes/LatestChanges1745163536016.html",[0,0.256,2722,4.723]],["body/classes/LatestChanges1745163536016.html",[0,0.144,2,0.448,3,0.024,4,0.021,5,0.019,7,0.15,8,0.75,11,0.506,13,1.245,15,0.87,16,0.889,22,1.829,23,0.521,24,1.245,25,0.004,31,0.347,34,0.478,35,2.113,62,0.04,71,0.026,77,0.002,78,0.002,118,4.833,122,0.96,129,0.825,135,0.852,137,0.834,206,1.943,207,2.225,212,1.848,221,1.85,246,1.975,253,2.865,322,2.87,323,1.207,344,3.088,522,2.762,610,1.107,653,3.52,654,3.941,655,2.832,656,2.756,660,5.209,662,6.241,663,6.277,664,6.205,665,6.091,666,5.017,670,7.262,672,6.052,673,2.03,674,2.03,675,2.03,676,2.03,677,2.03,678,1.652,680,5.871,681,4.97,682,3.623,683,2.686,684,3.862,685,4.219,686,3.736,687,3.467,688,3.736,689,3.221,690,4.787,691,4.219,692,2.03,695,5.548,696,5.548,697,4.125,705,2.112,706,5.971,707,4.219,708,3.685,709,3.685,710,2.322,711,4.165,712,5.971,713,4.219,714,4.253,719,3.006,721,3.006,723,4.485,724,4.557,725,4.557,726,4.557,727,4.557,728,4.557,729,4.557,730,1.958,731,2.832,733,1.958,805,5.971,806,2.659,807,3.685,808,3.685,809,3.503,810,3.685,811,3.685,812,3.685,813,3.685,814,3.685,815,3.685,816,3.685,817,3.685,818,3.685,819,3.685,820,3.685,821,3.685,822,3.685,823,3.685,824,3.685,825,3.913,826,2.915,1600,4.219,1602,4.219,1643,3.221,2470,2.466,2503,2.466,2722,5.971,2723,6.628,2724,2.952,2725,2.952,2726,2.952,2727,2.952,2728,2.659,2729,4.684,2730,4.684,2731,4.684,2732,2.952,2733,2.952,2734,2.952,2735,2.952,2736,2.952,2737,2.952,2738,2.466,2739,2.952,2740,6.628,2741,2.466,2742,2.466,2743,4.684,2744,2.952,2745,4.684,2746,2.952,2747,2.952]],["title/classes/LoginResponseDto.html",[0,0.256,973,3.605]],["body/classes/LoginResponseDto.html",[0,0.329,2,1.024,3,0.054,4,0.049,5,0.044,7,0.342,8,1.355,19,2.785,23,0.535,25,0.004,27,1.799,28,3.606,31,0.578,34,1.568,39,3.356,54,3.052,62,0.115,67,3.456,68,1.482,71,0.059,77,0.003,78,0.003,973,5.815,1245,7.72,1323,6.909,1324,7.72,2163,4.639,2443,6.077,2748,9.976,2749,6.746,2750,6.746,2751,6.746]],["title/interfaces/MailData.html",[2092,3.364,2752,4.381]],["body/interfaces/MailData.html",[3,0.063,4,0.057,5,0.051,7,0.399,8,1.488,23,0.498,25,0.004,34,1.6,71,0.069,77,0.003,78,0.003,220,3.83,2092,5.05,2093,5.885,2441,7.776,2752,7.762,2753,7.87,2754,7.87]],["title/modules/MailModule.html",[289,1.037,863,3.75]],["body/modules/MailModule.html",[0,0.336,3,0.055,4,0.05,5,0.045,25,0.004,62,0.133,71,0.061,77,0.003,78,0.003,236,1.069,289,1.845,291,2.215,292,2.014,293,2.27,294,2.27,295,2.242,296,3.072,297,3.072,302,2.823,303,2.188,304,2.242,312,2.894,863,7.566,864,7.321,890,5.335,892,2.698,913,6.21,1252,8.043,2755,6.21,2756,6.21,2757,6.894,2758,6.21,2759,6.894,2760,6.894]],["title/injectables/MailService.html",[202,0.934,1252,3.921]],["body/injectables/MailService.html",[0,0.182,3,0.03,4,0.027,5,0.024,7,0.189,11,0.811,16,0.923,23,0.402,25,0.004,31,0.448,36,2.334,62,0.123,71,0.033,77,0.002,78,0.002,129,0.989,135,1.365,137,1.201,147,1.878,148,2.701,202,0.999,204,1.155,206,2.334,213,1.698,221,2.361,236,0.578,248,1.969,249,1.781,253,2.257,303,1.183,547,2.483,891,4.591,892,1.459,901,2.788,902,6.563,910,1.91,911,1.95,945,4.833,1019,2.33,1025,5.637,1033,4.688,1034,5.637,1129,1.801,1252,4.196,1417,6.078,1997,6.909,2074,7.619,2436,6.078,2741,5.637,2752,8.265,2761,3.729,2762,5.611,2763,3.729,2764,6.325,2765,3.729,2766,5.611,2767,3.729,2768,3.729,2769,3.729,2770,5.611,2771,3.729,2772,3.729,2773,3.729,2774,3.729,2775,8.265,2776,3.729,2777,3.729,2778,6.747,2779,9.687,2780,9.239,2781,9.239,2782,9.239,2783,5.611,2784,8.458,2785,5.611,2786,5.611,2787,5.611,2788,6.747,2789,6.747,2790,6.747,2791,6.747,2792,6.747,2793,5.637,2794,8.458,2795,6.078,2796,6.747,2797,6.747,2798,5.637,2799,6.078,2800,3.729,2801,5.308,2802,6.747,2803,6.747,2804,6.747,2805,8.458,2806,6.747,2807,3.729,2808,7.506,2809,3.729,2810,3.729,2811,3.729,2812,3.729,2813,3.359,2814,3.729,2815,3.729,2816,3.729,2817,3.729]],["title/modules/MailerModule.html",[289,1.037,864,3.75]],["body/modules/MailerModule.html",[0,0.355,3,0.059,4,0.053,5,0.047,25,0.004,62,0.12,71,0.064,77,0.003,78,0.003,236,1.13,289,1.891,291,2.34,292,2.128,293,2.398,294,2.398,295,2.369,296,3.148,297,3.148,302,2.92,303,2.312,304,2.369,864,7.511,2764,8.099,2818,6.562,2819,6.562,2820,6.562,2821,7.284,2822,7.284]],["title/injectables/MailerService.html",[202,0.934,2764,3.921]],["body/injectables/MailerService.html",[0,0.263,3,0.043,4,0.039,5,0.035,7,0.273,8,1.17,11,0.789,16,0.898,23,0.392,25,0.004,31,0.494,34,1.182,36,2.55,54,1.574,62,0.13,71,0.047,77,0.003,78,0.003,129,1.287,135,1.328,137,0.959,147,1.196,202,1.3,204,1.669,206,2.093,213,1.63,221,2.038,236,0.836,248,2.907,249,2.819,253,1.949,507,2.021,549,2.466,884,2.945,891,5.007,892,2.108,910,2.76,911,2.818,945,5.209,1007,3.352,1878,3.854,2000,4.028,2086,4.853,2088,4.501,2090,4.853,2764,5.461,2795,7.463,2801,6.518,2823,5.387,2824,8.285,2825,8.285,2826,7.303,2827,5.387,2828,5.387,2829,7.303,2830,5.387,2831,5.387,2832,5.745,2833,6.102,2834,5.387,2835,5.387,2836,5.387,2837,5.387,2838,5.387,2839,5.387,2840,5.387,2841,5.387,2842,4.853,2843,5.387,2844,7.303,2845,5.387,2846,4.853,2847,8.882,2848,5.387,2849,5.387,2850,5.387,2851,4.853,2852,5.387,2853,5.387,2854,5.387,2855,7.303,2856,5.387,2857,7.303]],["title/injectables/MongooseConfigService.html",[202,0.934,916,3.921]],["body/injectables/MongooseConfigService.html",[0,0.316,3,0.052,4,0.047,5,0.042,7,0.329,11,0.7,16,0.797,23,0.348,25,0.004,31,0.492,36,2.412,54,1.894,62,0.134,71,0.057,77,0.003,78,0.003,129,1.453,135,1.179,137,1.155,182,1.631,202,1.469,204,2.009,213,1.962,236,1.006,246,2.734,549,2.968,891,5.271,892,2.537,910,3.322,911,3.392,915,3.255,916,6.168,945,4.994,1007,4.035,2107,3.628,2842,5.841,2858,9.072,2859,5.841,2860,9.548,2861,6.484,2862,6.484,2863,9.072,2864,8.249,2865,6.484,2866,5.841,2867,6.484,2868,5.841,2869,6.484,2870,5.841,2871,5.841,2872,5.841,2873,6.484,2874,6.484,2875,4.849]],["title/classes/QueryUserDto.html",[0,0.256,2380,3.921]],["body/classes/QueryUserDto.html",[0,0.441,2,0.761,3,0.04,4,0.036,5,0.032,7,0.254,8,1.114,11,1.057,19,2.838,23,0.55,25,0.004,27,1.601,31,0.514,34,1.395,35,2.287,36,1.756,39,2.564,54,2.032,62,0.123,63,4.078,65,1.5,68,1.102,71,0.07,77,0.003,78,0.003,84,3.532,182,0.992,261,1.672,323,4.005,507,2.609,553,3.475,555,3.532,557,2.379,995,5.241,1133,4.457,1134,2.183,1438,5.2,1466,4.175,1469,5.363,1566,5.471,1723,3.75,1734,5.926,1743,3.75,2368,5.717,2369,7.563,2370,3.121,2372,4.518,2374,4.19,2375,3.121,2376,5.717,2377,4.19,2378,4.19,2379,3.946,2380,5.2,2381,4.327,2382,4.19,2383,5.81,2384,6.669,2385,4.19,2386,5.968,2389,4.612,2390,4.612,2876,6.953,2877,5.015,2878,5.015,2879,4.518,2880,5.015,2881,5.015,2882,5.015]],["title/classes/RefreshResponseDto.html",[0,0.256,1093,4.381]],["body/classes/RefreshResponseDto.html",[0,0.352,2,1.094,3,0.058,4,0.052,5,0.047,7,0.365,8,1.411,19,2.902,23,0.51,25,0.004,27,1.768,31,0.568,34,1.605,39,3.366,62,0.098,68,1.584,71,0.064,77,0.003,78,0.003,1093,7.363,1245,7.953,1323,7.118,1324,7.953,2163,4.957,2164,5.672,2442,6.495,2883,9.915,2884,7.21]],["title/classes/Region.html",[0,0.256,723,2.32]],["body/classes/Region.html",[0,0.2,2,0.622,3,0.033,4,0.03,5,0.027,7,0.207,8,0.964,11,1.087,13,3.007,14,4.855,15,1.324,16,0.877,19,3.056,22,2.562,23,0.562,24,3.007,25,0.004,27,1.813,28,5.063,29,4.66,30,2.461,31,0.582,34,1.662,35,2.211,36,2.211,38,3.728,39,3.233,62,0.097,66,2.348,68,0.9,71,0.036,77,0.002,78,0.002,223,1.515,349,4.137,350,4.137,419,3.062,424,2.929,435,4.304,507,3.284,723,4.108,724,4.903,725,4.903,726,4.903,727,4.903,728,4.903,729,4.903,997,4.57,1527,5.404,1534,6.887,1535,5.611,1542,5.958,1547,5.42,1548,5.42,1552,4.304,1557,5.42,1558,5.42,1559,5.42,1564,3.421,1565,3.421,1567,4.499,1568,3.421,1569,3.689,1570,3.421,1571,4.733,1572,3.421,1573,4.733,1574,3.421,1575,5.958,1576,3.421,1577,5.027,1578,5.027,2885,4.095,2886,6.016,2887,6.016,2888,4.095,2889,4.095,2890,4.095,2891,4.095,2892,4.095,2893,4.095,2894,4.095,2895,6.016,2896,4.095,2897,4.095,2898,4.095,2899,4.095]],["title/classes/RegionDto.html",[0,0.256,1622,3.921]],["body/classes/RegionDto.html",[0,0.444,2,1.156,3,0.061,4,0.055,5,0.049,7,0.386,8,1.459,15,1.81,23,0.408,25,0.004,27,1.414,31,0.454,34,1.475,39,2.927,62,0.124,65,2.278,68,1.674,71,0.067,77,0.003,78,0.003,81,5.052,83,4.574,84,4.032,1622,6.813,2900,7.617,2901,7.617]],["title/entities/RegionEntity.html",[85,1.864,2902,3.007]],["body/entities/RegionEntity.html",[0,0.203,3,0.033,4,0.03,5,0.027,7,0.211,8,0.976,11,1.09,13,3.038,15,1.338,16,0.974,19,2.61,22,1.988,23,0.562,24,3.038,25,0.004,27,1.841,29,5.105,30,3.242,31,0.591,34,1.62,35,1.539,36,2.585,38,3.759,54,1.78,62,0.115,71,0.037,77,0.002,78,0.002,85,2.561,87,1.908,89,2.865,93,4.623,96,4.042,99,6.057,103,3.759,104,3.279,105,3.792,109,3.451,110,2.674,113,4.623,115,2.227,117,2.593,118,4.683,120,4.794,121,3.91,122,1.355,123,3.41,124,2.452,125,2.227,126,1.785,223,1.542,419,3.116,424,2.981,711,5.67,723,1.844,724,4.953,725,4.953,726,4.953,727,4.953,728,4.953,729,4.953,1534,6.634,1535,3.279,1567,3.116,1571,3.279,1573,3.279,1647,4.623,2024,6.622,2484,3.279,2599,4.557,2741,5.091,2742,5.091,2902,3.495,2903,4.167,2904,6.094,2905,6.094,2906,6.094,2907,6.094,2908,4.167,2909,7.926,2910,7.926,2911,7.14,2912,7.926,2913,4.167,2914,4.167,2915,4.167,2916,4.167,2917,4.167,2918,4.167,2919,4.167,2920,6.094,2921,4.167,2922,4.167,2923,6.094,2924,4.167,2925,4.167,2926,4.167]],["title/classes/RegionMapper.html",[0,0.256,2927,3.75]],["body/classes/RegionMapper.html",[0,0.275,2,0.855,3,0.045,4,0.041,5,0.036,7,0.285,11,0.813,16,0.925,23,0.403,25,0.004,31,0.449,62,0.115,71,0.05,77,0.003,78,0.003,129,1.326,130,5.427,131,4.211,132,4.211,133,4.211,135,1.369,136,3.152,137,1.34,138,4.211,140,4.742,142,3.615,143,4.03,147,1.671,148,2.251,149,4.03,150,6.062,151,4.03,174,5.628,175,4.213,176,4.742,177,3.505,178,4.428,179,3.315,180,4.428,181,3.315,182,1.489,183,4.683,184,4.03,185,3.873,198,4.213,199,3.505,200,3.615,201,3.615,723,4.382,2902,5.678,2927,5.384,2928,5.633,2929,5.633,2930,5.633,2931,4.213,2932,4.707,2933,7.526,2934,5.633,2935,7.526,2936,5.633,2937,7.526,2938,5.633,2939,7.526,2940,5.633,2941,7.526,2942,5.633,2943,7.526,2944,5.633,2945,5.633,2946,5.633,2947,5.633,2948,5.633,2949,7.526,2950,5.633,2951,5.633]],["title/injectables/RegionRelationalRepository.html",[202,0.934,2952,4.381]],["body/injectables/RegionRelationalRepository.html",[0,0.209,3,0.034,4,0.031,5,0.028,7,0.217,11,0.991,15,1.652,16,1.128,23,0.514,25,0.004,31,0.547,35,1.083,62,0.13,71,0.038,77,0.002,78,0.002,85,2.855,87,2.848,122,1.394,129,1.096,135,1.669,137,1.584,147,2.038,148,1.282,182,1.687,202,1.108,204,1.328,206,2.623,207,1.717,208,3.473,209,2.211,210,2.583,211,2.4,212,1.974,213,1.882,215,3.955,218,2.799,220,1.608,221,2.782,222,2.033,223,2.302,225,2.211,227,2.583,229,1.78,230,2.434,232,2.302,233,3.555,234,3.914,236,0.665,237,2.111,238,1.485,239,1.753,240,1.78,243,2.623,244,1.897,245,1.837,246,1.808,248,1.504,249,1.361,250,2.458,252,2.843,253,2.449,257,2.434,259,2.843,260,2.344,261,1.429,262,3.254,263,2.751,264,4.126,268,2.751,269,1.962,270,2.843,271,2.523,272,2.751,723,4.307,2902,2.458,2927,3.067,2931,3.206,2932,3.582,2952,5.198,2953,4.287,2954,3.862,2955,4.287,2956,5.154,2957,4.287,2958,4.287,2959,4.287,2960,4.287,2961,4.287,2962,4.287,2963,3.862,2964,4.287,2965,3.373,2966,4.287,2967,6.221,2968,4.287,2969,4.287,2970,5.198,2971,8.033,2972,6.711,2973,6.221,2974,3.582,2975,3.862,2976,4.287,2977,4.287]],["title/classes/RegionRepository.html",[0,0.256,2956,3.364]],["body/classes/RegionRepository.html",[0,0.268,2,0.834,3,0.044,4,0.04,5,0.036,7,0.278,11,1.039,15,1.663,16,1.183,23,0.536,25,0.004,31,0.574,62,0.122,71,0.048,77,0.003,78,0.003,129,1.304,135,1.751,137,1.714,207,2.309,208,3.968,209,2.63,210,3.072,211,2.854,212,2.655,218,2.471,220,2.775,221,2.906,222,2.605,223,2.738,225,2.63,227,3.072,229,2.28,230,2.895,232,2.032,233,3.702,239,2.246,240,2.28,243,3.12,244,2.43,245,2.353,257,2.895,278,6.489,279,4.923,285,5.745,287,3.642,288,3.642,723,4.354,2931,4.106,2956,4.747,2972,7.48,2978,5.491,2979,5.491,2980,5.491,2981,5.491,2982,5.491,2983,5.491,2984,5.491]],["title/modules/RegionSeedModule.html",[289,1.037,2985,4.125]],["body/modules/RegionSeedModule.html",[0,0.338,3,0.056,4,0.05,5,0.045,25,0.004,62,0.137,71,0.061,77,0.003,78,0.003,109,3.744,236,1.074,238,2.399,289,1.849,291,2.226,292,2.024,293,2.281,294,2.281,295,2.253,296,3.079,297,3.079,302,2.831,303,2.199,304,2.253,306,4.311,307,3.411,308,4.311,312,2.339,723,3.066,2485,4.956,2902,3.973,2985,8.174,2986,6.241,2987,6.241,2988,6.241,2989,8.467,2990,6.241,2991,4.595,2992,6.241]],["title/injectables/RegionSeedService.html",[202,0.934,2989,4.125]],["body/injectables/RegionSeedService.html",[0,0.248,3,0.041,4,0.037,5,0.033,7,0.258,8,1.126,11,0.759,16,0.989,22,2.222,23,0.432,25,0.004,31,0.517,62,0.124,71,0.045,77,0.003,78,0.003,109,3.778,115,2.724,122,1.657,129,1.239,135,1.279,137,1.252,147,1.561,148,2.103,182,1.391,202,1.252,204,1.579,206,2.033,213,2.127,215,4.75,236,0.79,237,2.509,238,1.765,248,3.449,249,2.89,253,1.876,271,2.999,314,3.081,315,7.251,316,4.977,317,4.505,322,2.024,323,2.084,325,3.27,328,5.339,329,3.38,333,4.01,337,4.258,419,3.811,424,3.646,492,4.258,493,4.258,723,3.112,724,3.504,725,3.504,726,3.504,727,3.504,728,3.504,729,3.504,1357,4.591,1361,4.591,1367,4.01,1534,4.01,1542,6.726,1564,4.258,1565,4.258,1567,3.811,1568,4.258,1570,4.258,1571,4.01,1572,4.258,1573,4.01,1574,4.258,1575,6.726,1576,4.258,1577,5.875,1578,5.875,1646,4.137,2902,4.616,2954,4.591,2956,4.512,2965,4.01,2974,4.258,2989,5.532,2990,8.202,2991,3.38,2993,7.031,2994,6.334,2995,7.031,2996,5.097,2997,5.097,2998,7.031,2999,6.334,3000,4.591,3001,4.591,3002,4.258,3003,5.097,3004,5.097,3005,5.097,3006,5.097,3007,5.097,3008,5.097,3009,4.591,3010,5.097,3011,5.097,3012,5.097]],["title/controllers/RegionsController.html",[495,2.112,3013,4.381]],["body/controllers/RegionsController.html",[0,0.209,3,0.034,4,0.031,5,0.028,7,0.217,11,0.92,15,1.851,16,1.155,23,0.547,25,0.004,27,1.583,31,0.508,34,1.653,36,2.028,62,0.132,68,0.941,71,0.038,72,4.555,77,0.002,78,0.002,129,1.095,135,1.55,137,1.518,147,0.951,182,1.686,206,1.848,207,1.715,209,2.209,211,2.397,212,1.972,221,1.734,225,1.522,230,1.675,232,1.584,236,0.664,249,1.359,253,1.142,257,1.675,261,2.072,495,2.504,497,1.7,499,4.852,502,2.943,504,2.839,506,2.943,507,1.606,509,5.324,510,2.943,511,4.273,513,2.839,516,2.943,518,3.397,519,3.564,520,2.747,521,2.747,522,2.03,523,2.519,526,2.288,528,2.288,529,3.656,530,3.757,531,4.723,532,5.324,533,2.288,534,2.519,535,2.193,536,2.747,537,2.588,538,2.839,539,3.867,540,2.288,541,3.987,542,2.839,543,2.943,546,2.519,547,1.894,548,2.193,549,1.96,550,2.839,553,3.185,554,2.839,555,3.772,556,2.839,557,2.03,558,4.122,560,2.839,561,2.943,563,2.839,564,3.577,566,2.839,567,2.839,723,4.06,1531,6.649,1646,2.519,2397,6.707,2931,3.201,3013,5.192,3014,4.281,3015,3.856,3016,4.281,3017,4.281,3018,4.281,3019,4.281,3020,7.393,3021,4.281,3022,4.852,3023,3.856,3024,5.192,3025,4.281,3026,4.281,3027,4.281,3028,4.281,3029,4.281,3030,4.281,3031,4.281,3032,4.281]],["title/modules/RegionsModule.html",[289,1.037,865,3.477]],["body/modules/RegionsModule.html",[0,0.314,3,0.052,4,0.047,5,0.042,25,0.004,62,0.137,71,0.057,77,0.003,78,0.003,236,0.999,289,1.789,291,2.638,292,1.881,293,2.12,294,2.12,295,2.094,296,2.977,297,2.977,302,2.704,303,2.044,304,2.094,312,2.773,497,3.261,575,4.965,578,4.428,580,3.369,582,4.007,583,3.693,584,4.132,865,6.986,2650,5.11,3013,7.555,3022,7.069,3023,5.801,3033,5.801,3034,5.801,3035,5.801,3036,5.801,3037,7.97,3038,6.44,3039,6.44]],["title/injectables/RegionsService.html",[202,0.934,3022,3.477]],["body/injectables/RegionsService.html",[0,0.199,3,0.033,4,0.03,5,0.026,7,0.207,11,0.976,15,1.457,16,1.163,22,2.611,23,0.507,25,0.004,31,0.539,62,0.126,66,2.338,71,0.036,77,0.002,78,0.002,129,1.057,135,1.643,137,1.556,147,1.58,148,1.793,182,1.729,202,1.068,204,1.263,206,2.208,207,1.655,208,3.374,209,2.132,210,2.49,211,3.372,212,2.258,213,1.815,222,1.934,223,2.219,225,2.132,227,2.49,229,1.693,230,2.347,232,1.509,236,0.632,243,2.529,244,1.804,245,1.747,248,2.104,249,1.903,253,1.6,257,2.784,260,2.229,262,2.133,269,2.745,292,1.191,464,3.011,507,2.25,526,2.179,528,2.179,553,1.775,555,1.804,580,2.133,586,3.208,587,5.053,591,4.29,593,3.626,599,2.917,601,2.008,602,3.802,604,2.133,605,5.202,606,5.202,607,6.253,608,4.29,610,2.25,611,3.206,612,4.123,723,3.999,724,4.123,725,4.123,726,4.123,727,4.123,728,4.123,729,4.123,952,2.616,1531,6.25,2650,2.537,2692,3.049,2931,3.049,2956,5.798,2972,6.553,2974,3.407,3015,5.402,3020,7.109,3022,3.978,3024,5.011,3040,4.077,3041,4.077,3042,4.077,3043,4.077,3044,4.077,3045,4.077,3046,4.077,3047,4.077,3048,4.077,3049,4.077,3050,4.077,3051,4.077,3052,4.077,3053,4.077,3054,4.077,3055,4.077,3056,4.077,3057,4.077,3058,4.077,3059,4.077,3060,4.077,3061,4.077,3062,4.077,3063,4.077,3064,4.077,3065,4.077,3066,4.077,3067,4.077,3068,4.077,3069,4.077,3070,4.077]],["title/modules/RelationalAccountPersistenceModule.html",[289,1.037,574,3.921]],["body/modules/RelationalAccountPersistenceModule.html",[0,0.341,3,0.056,4,0.051,5,0.045,25,0.004,62,0.137,71,0.062,77,0.003,78,0.003,86,4.81,146,5.845,203,7.229,217,7.232,236,1.085,238,2.423,241,6.302,289,1.858,291,2.247,292,2.044,293,2.304,294,2.304,295,2.275,296,2.849,297,3.092,302,2.849,303,2.22,304,2.275,307,3.445,312,2.362,574,7.54,923,3.66,1757,3.915,1767,3.915,3071,6.302,3072,6.302,3073,6.996,3074,6.996,3075,6.996]],["title/modules/RelationalFilePersistenceModule.html",[289,1.037,2273,3.364]],["body/modules/RelationalFilePersistenceModule.html",[0,0.341,3,0.056,4,0.051,5,0.045,25,0.004,62,0.137,71,0.062,77,0.003,78,0.003,236,1.085,238,2.423,289,1.858,291,2.247,292,2.044,293,2.304,294,2.304,295,2.275,296,2.849,297,3.092,302,2.849,303,2.22,304,2.275,307,3.445,312,2.362,923,3.66,1755,6.359,1757,3.915,1761,5.504,1763,6.302,1767,3.915,2125,4.64,2141,5.845,2143,7.229,2273,6.47,3076,6.302,3077,6.996,3078,6.996,3079,6.996]],["title/modules/RelationalKycDetailsPersistenceModule.html",[289,1.037,2652,3.75]],["body/modules/RelationalKycDetailsPersistenceModule.html",[0,0.338,3,0.056,4,0.05,5,0.045,25,0.004,62,0.137,71,0.061,77,0.003,78,0.003,236,1.074,238,2.399,289,1.849,291,2.226,292,2.024,293,2.281,294,2.281,295,2.253,296,2.831,297,3.079,302,2.831,303,2.199,304,2.253,307,3.411,312,2.339,923,3.624,927,3.118,1501,3.286,1524,4.311,1757,3.877,1767,3.877,1771,6.963,1775,4.956,1777,6.43,1779,6.241,2482,4.445,2486,6.241,2652,7.192,2653,7.185,3080,6.241,3081,6.928,3082,6.928]],["title/modules/RelationalRegionPersistenceModule.html",[289,1.037,3037,3.921]],["body/modules/RelationalRegionPersistenceModule.html",[0,0.341,3,0.056,4,0.051,5,0.045,25,0.004,62,0.137,71,0.062,77,0.003,78,0.003,236,1.085,238,2.423,289,1.858,291,2.247,292,2.044,293,2.304,294,2.304,295,2.275,296,2.849,297,3.092,302,2.849,303,2.22,304,2.275,307,3.445,312,2.362,923,3.66,1757,3.915,1767,3.915,2902,4.012,2932,5.845,2952,7.229,2956,6.749,2963,6.302,2992,6.302,3037,7.54,3083,6.302,3084,6.302,3085,6.996,3086,6.996]],["title/modules/RelationalResidencePersistenceModule.html",[289,1.037,3087,3.921]],["body/modules/RelationalResidencePersistenceModule.html",[0,0.341,3,0.056,4,0.051,5,0.045,25,0.004,62,0.137,71,0.062,77,0.003,78,0.003,236,1.085,238,2.423,289,1.858,291,2.247,292,2.044,293,2.304,294,2.304,295,2.275,296,2.849,297,3.092,302,2.849,303,2.22,304,2.275,307,3.445,312,2.362,923,3.66,1757,3.915,1767,3.915,3087,7.54,3088,6.302,3089,6.302,3090,7.232,3091,6.996,3092,6.302,3093,7.229,3094,6.996,3095,4.81,3096,5.845,3097,6.996]],["title/modules/RelationalSessionPersistenceModule.html",[289,1.037,3098,3.75]],["body/modules/RelationalSessionPersistenceModule.html",[0,0.341,3,0.056,4,0.051,5,0.045,25,0.004,62,0.137,71,0.062,77,0.003,78,0.003,236,1.085,238,2.423,289,1.858,291,2.247,292,2.044,293,2.304,294,2.304,295,2.275,296,2.849,297,3.092,302,2.849,303,2.22,304,2.275,307,3.445,312,2.362,923,3.66,1757,3.915,1767,3.915,1784,6.976,1789,5.504,1791,6.302,3098,7.213,3099,6.302,3100,6.996,3101,6.996,3102,7.229,3103,5.005,3104,5.845,3105,6.996]],["title/modules/RelationalSettingsPersistenceModule.html",[289,1.037,3106,3.921]],["body/modules/RelationalSettingsPersistenceModule.html",[0,0.341,3,0.056,4,0.051,5,0.045,25,0.004,62,0.137,71,0.062,77,0.003,78,0.003,236,1.085,238,2.423,289,1.858,291,2.247,292,2.044,293,2.304,294,2.304,295,2.275,296,2.849,297,3.092,302,2.849,303,2.22,304,2.275,307,3.445,312,2.362,923,3.66,1757,3.915,1767,3.915,3106,7.54,3107,6.302,3108,6.302,3109,7.524,3110,6.996,3111,6.302,3112,7.229,3113,6.996,3114,4.489,3115,5.845,3116,6.302]],["title/modules/RelationalTenantPersistenceModule.html",[289,1.037,3117,3.921]],["body/modules/RelationalTenantPersistenceModule.html",[0,0.341,3,0.056,4,0.051,5,0.045,25,0.004,62,0.137,71,0.062,77,0.003,78,0.003,109,3.046,236,1.085,238,2.423,289,1.858,291,2.247,292,2.044,293,2.304,294,2.304,295,2.275,296,2.849,297,3.092,302,2.849,303,2.22,304,2.275,307,3.445,312,2.362,317,5.886,923,3.66,1757,3.915,1767,3.915,3117,7.54,3118,6.302,3119,6.302,3120,6.996,3121,6.302,3122,7.229,3123,6.996,3124,5.845,3125,6.302]],["title/modules/RelationalTenantTypePersistenceModule.html",[289,1.037,3126,3.921]],["body/modules/RelationalTenantTypePersistenceModule.html",[0,0.338,3,0.056,4,0.05,5,0.045,22,1.912,25,0.004,62,0.137,71,0.061,77,0.003,78,0.003,236,1.074,238,2.399,289,1.849,291,2.226,292,2.024,293,2.281,294,2.281,295,2.253,296,2.831,297,3.079,302,2.831,303,2.199,304,2.253,307,3.411,312,2.339,923,3.624,1680,3.549,1689,4.188,1757,3.877,1767,3.877,3126,7.518,3127,6.241,3128,6.241,3129,7.218,3130,6.928,3131,7.185,3132,7.185,3133,6.928,3134,4.311,3135,5.788,3136,6.241]],["title/modules/RelationalUserPersistenceModule.html",[289,1.037,3137,3.75]],["body/modules/RelationalUserPersistenceModule.html",[0,0.341,3,0.056,4,0.051,5,0.045,25,0.004,62,0.137,71,0.062,77,0.003,78,0.003,103,3.318,236,1.085,238,2.423,289,1.858,291,2.247,292,2.044,293,2.304,294,2.304,295,2.275,296,2.849,297,3.092,302,2.849,303,2.22,304,2.275,307,3.445,312,2.362,318,6.032,923,3.66,1757,3.915,1767,3.915,1800,5.504,1802,6.302,3137,7.213,3138,6.302,3139,6.996,3140,6.996,3141,7.229,3142,5.845,3143,6.996]],["title/classes/Residence.html",[0,0.256,1591,3.17]],["body/classes/Residence.html",[0,0.232,2,0.723,3,0.038,4,0.035,5,0.031,7,0.241,8,1.074,11,0.724,13,3.274,15,1.442,16,0.954,19,2.774,22,2.668,23,0.568,24,3.274,25,0.004,26,4.408,27,1.85,28,5.06,29,5.18,30,4.157,31,0.594,34,1.565,35,1.694,36,1.694,38,3.997,39,3.291,46,2.603,47,5.015,54,2.462,62,0.121,66,2.731,67,2.44,68,1.047,70,3.159,71,0.042,77,0.003,78,0.003,723,4.278,1591,4.055,1592,4.568,1593,5.338,1617,5.805,1626,6.642,1627,3.561,1628,6.042,1631,3.747,3144,4.763,3145,4.763,3146,4.763,3147,4.763,3148,4.763,3149,4.763,3150,4.763,3151,4.763,3152,4.763,3153,4.763,3154,4.763,3155,3.407]],["title/classes/ResidenceDto.html",[0,0.256,3156,4.723]],["body/classes/ResidenceDto.html",[0,0.444,2,1.156,3,0.061,4,0.055,5,0.049,7,0.386,8,1.459,15,1.81,23,0.408,25,0.004,27,1.414,31,0.454,34,1.475,39,2.927,62,0.124,65,2.278,68,1.674,71,0.067,77,0.003,78,0.003,81,5.052,83,4.574,84,4.032,3156,8.207,3157,7.617,3158,7.617]],["title/entities/ResidenceEntity.html",[85,1.864,3095,3.605]],["body/entities/ResidenceEntity.html",[0,0.23,3,0.038,4,0.034,5,0.031,7,0.239,8,1.068,11,0.72,13,3.259,15,1.435,16,1.032,19,2.764,22,2.133,23,0.568,24,3.259,25,0.004,26,4.392,27,1.846,29,4.924,30,4.066,31,0.593,34,1.488,35,1.684,36,2.386,38,3.982,46,4.589,62,0.125,70,3.133,71,0.042,77,0.003,78,0.003,85,2.747,87,2.162,89,5.313,93,4.959,96,4.422,99,3.247,103,3.982,104,3.716,105,5.718,106,3.946,109,3.655,110,4.278,113,4.959,115,2.524,116,2.708,117,2.939,118,4.446,119,5.571,120,5.245,121,4.959,122,1.536,123,3.731,124,2.779,125,2.524,126,2.023,322,2.647,507,1.772,723,3.42,1591,2.855,1592,4.547,1593,5.313,1617,5.779,1626,6.621,1631,3.716,2902,4.814,2991,3.133,3095,4.584,3159,4.723,3160,4.723,3161,4.723,3162,4.723,3163,4.723,3164,4.723,3165,4.723,3166,4.723,3167,4.723,3168,4.723,3169,4.723,3170,4.254]],["title/classes/ResidenceMapper.html",[0,0.256,3171,4.381]],["body/classes/ResidenceMapper.html",[0,0.256,2,0.798,3,0.042,4,0.038,5,0.034,7,0.266,11,0.776,16,0.883,23,0.385,25,0.004,31,0.428,35,2.221,62,0.125,71,0.046,77,0.003,78,0.003,129,1.266,130,5.318,131,4.019,132,4.019,133,4.019,135,1.306,136,2.942,137,1.279,138,4.019,140,4.578,142,3.373,143,3.761,144,3.015,145,3.761,147,1.595,148,2.148,149,3.761,150,5.852,151,3.761,155,4.393,156,6.001,157,4.393,174,5.371,175,3.931,176,4.578,177,3.271,178,4.226,179,3.093,180,4.226,181,3.093,182,1.421,183,4.469,184,3.761,185,3.615,188,4.393,189,4.393,198,3.931,199,3.271,200,3.373,201,3.373,1591,5.881,2927,3.761,2975,4.736,3095,6.688,3096,4.393,3171,6.001,3172,5.257,3173,5.257,3174,5.257,3175,3.931,3176,4.393,3177,7.183,3178,8.793,3179,5.257,3180,5.257,3181,8.181,3182,5.257,3183,6.47,3184,4.736,3185,7.183,3186,5.257,3187,7.183,3188,5.257,3189,5.257,3190,4.736,3191,5.257]],["title/injectables/ResidenceRelationalRepository.html",[202,0.934,3093,4.381]],["body/injectables/ResidenceRelationalRepository.html",[0,0.208,3,0.034,4,0.031,5,0.028,7,0.217,11,0.99,15,1.703,16,1.127,23,0.513,25,0.004,31,0.547,35,1.08,62,0.13,71,0.038,77,0.002,78,0.002,85,2.851,87,2.842,122,1.39,129,1.094,135,1.667,137,1.582,147,2.036,148,1.278,182,1.685,202,1.105,204,1.324,206,2.622,207,1.713,208,3.467,209,2.206,210,2.578,211,2.395,212,2.32,213,1.878,215,3.949,218,2.793,220,1.603,221,2.78,222,2.027,223,2.297,225,2.206,227,2.578,229,1.775,230,2.429,232,1.582,233,3.55,234,3.907,236,0.663,237,2.104,238,1.48,239,1.748,240,1.775,243,2.618,244,1.891,245,1.831,246,1.802,248,1.5,249,1.356,250,2.451,252,2.835,253,2.447,257,2.429,259,2.835,260,2.336,261,1.425,262,3.247,263,2.743,264,4.117,268,2.743,269,1.957,270,2.835,271,2.515,272,2.743,1591,5.881,3090,5.515,3092,3.85,3093,5.186,3095,2.939,3096,3.571,3171,3.571,3175,3.196,3192,4.274,3193,3.85,3194,4.274,3195,4.274,3196,4.274,3197,4.274,3198,4.274,3199,4.274,3200,4.274,3201,4.274,3202,3.85,3203,4.274,3204,6.207,3205,4.274,3206,4.274,3207,5.592,3208,8.021,3209,6.702,3210,6.207,3211,3.571,3212,4.274,3213,4.274,3214,4.274]],["title/classes/ResidenceRepository.html",[0,0.256,3090,3.605]],["body/classes/ResidenceRepository.html",[0,0.268,2,0.834,3,0.044,4,0.04,5,0.036,7,0.278,11,1.039,15,1.663,16,1.183,23,0.536,25,0.004,31,0.574,62,0.122,71,0.048,77,0.003,78,0.003,129,1.304,135,1.751,137,1.714,207,2.309,208,3.968,209,2.63,210,3.072,211,2.854,212,2.655,218,2.471,220,2.775,221,2.906,222,2.605,223,2.738,225,2.63,227,3.072,229,2.28,230,2.895,232,2.032,233,3.702,239,2.246,240,2.28,243,3.12,244,2.43,245,2.353,257,2.895,278,6.489,279,4.923,285,5.745,287,3.642,288,3.642,1591,5.948,3090,5.087,3175,4.106,3209,7.48,3215,5.491,3216,5.491,3217,5.491,3218,5.491,3219,5.491,3220,5.491,3221,5.491]],["title/modules/ResidenceSeedModule.html",[289,1.037,3222,4.125]],["body/modules/ResidenceSeedModule.html",[0,0.321,3,0.053,4,0.048,5,0.043,25,0.004,62,0.141,71,0.058,77,0.003,78,0.003,103,3.947,109,3.623,115,3.514,116,3.77,236,1.02,238,2.277,289,1.806,291,2.112,292,1.921,293,2.165,294,2.165,295,2.138,296,3.006,297,3.006,302,2.74,303,2.086,304,2.138,306,4.091,307,3.237,308,4.091,310,4.896,311,4.219,312,2.219,313,5.922,1591,3.975,2902,4.772,2991,4.361,3095,5.721,3222,8.08,3223,5.922,3224,5.922,3225,5.922,3226,8.409,3227,5.922,3228,5.922]],["title/injectables/ResidenceSeedService.html",[202,0.934,3226,4.125]],["body/injectables/ResidenceSeedService.html",[0,0.213,3,0.035,4,0.032,5,0.028,7,0.222,8,1.011,11,0.472,15,1.663,16,0.91,22,2.698,23,0.338,25,0.004,31,0.442,36,1.105,62,0.131,70,2.901,71,0.039,72,2.24,77,0.002,78,0.002,103,2.074,105,2.721,109,1.904,115,2.337,116,2.508,122,1.422,129,1.112,135,0.795,137,0.779,147,2.099,148,1.887,182,0.865,202,1.124,204,1.355,206,1.87,213,1.909,215,5.075,236,0.678,237,2.153,238,1.515,248,3.316,249,3,253,2.39,271,4.77,310,2.573,311,2.806,314,2.644,315,6.774,316,4.649,317,4.144,318,4.246,319,5.826,321,3.939,322,1.736,323,1.789,325,2.806,326,3.128,327,3.44,328,4.911,329,2.901,332,5.8,333,3.44,337,6.774,338,5.685,340,3.654,343,3.44,344,3.777,368,4.965,380,3.939,412,6.67,492,3.654,493,3.654,723,3.588,1591,4.902,1592,2.573,1593,3.007,1617,4.719,1626,3.27,1631,3.44,1646,4.357,2495,3.654,2902,2.508,2956,4.751,2965,3.44,2970,3.654,2991,2.901,2999,3.939,3000,3.939,3001,3.939,3002,3.654,3090,4.339,3095,3.007,3170,3.939,3193,3.939,3202,3.939,3207,3.939,3211,3.654,3226,4.965,3227,7.303,3228,3.939,3229,5.685,3230,6.311,3231,4.373,3232,7.405,3233,6.311,3234,4.373,3235,4.373,3236,4.373,3237,6.311,3238,4.373,3239,4.373,3240,4.373,3241,6.311,3242,4.373,3243,4.373,3244,4.373]],["title/controllers/ResidencesController.html",[495,2.112,3245,4.381]],["body/controllers/ResidencesController.html",[0,0.208,3,0.034,4,0.031,5,0.028,7,0.216,11,0.919,15,1.85,16,1.154,23,0.547,25,0.004,27,1.581,31,0.508,34,1.652,36,2.025,62,0.132,68,0.938,71,0.038,72,4.55,77,0.002,78,0.002,129,1.092,135,1.548,137,1.516,147,0.948,182,1.684,206,1.845,207,1.711,209,2.204,211,2.392,212,2.318,221,1.731,225,1.517,230,1.67,232,1.579,236,0.662,249,1.354,253,1.139,257,1.67,261,2.067,495,2.498,497,1.694,499,4.844,502,2.934,504,2.831,506,2.934,507,1.601,509,5.316,510,2.934,511,4.263,513,2.831,516,2.934,518,3.389,519,3.556,520,2.739,521,2.739,522,2.024,523,2.511,526,2.281,528,2.281,529,3.648,530,3.749,531,4.716,532,5.316,533,2.281,534,2.511,535,2.186,536,2.739,537,2.58,538,2.831,539,3.858,540,2.281,541,3.979,542,2.831,543,2.934,546,2.511,547,1.889,548,2.186,549,1.954,550,2.831,553,3.179,554,2.831,555,3.768,556,2.831,557,2.024,558,4.113,560,2.831,561,2.934,563,2.831,566,2.831,567,2.831,1591,5.541,1614,6.642,2402,6.697,2547,3.191,3175,3.191,3245,5.181,3246,4.268,3247,3.844,3248,4.268,3249,4.268,3250,4.268,3251,4.268,3252,7.387,3253,4.268,3254,5.461,3255,3.844,3256,5.181,3257,4.268,3258,4.268,3259,4.268,3260,4.268,3261,4.268,3262,4.268,3263,4.268,3264,4.268,3265,4.268]],["title/modules/ResidencesModule.html",[289,1.037,866,3.921]],["body/modules/ResidencesModule.html",[0,0.294,3,0.048,4,0.044,5,0.039,25,0.004,62,0.139,71,0.053,77,0.003,78,0.003,236,0.935,289,1.733,291,2.528,292,1.761,293,1.985,294,1.985,295,1.961,296,2.885,297,2.885,302,2.591,303,1.913,304,1.961,312,2.657,497,3.125,575,5.976,576,5.976,578,4.145,579,4.145,580,3.154,582,3.751,583,3.457,584,3.869,865,6.556,866,8.033,933,4.743,3087,7.896,3245,7.322,3254,7.896,3255,5.431,3266,5.431,3267,5.431,3268,5.431,3269,6.029,3270,6.029,3271,6.029]],["title/injectables/ResidencesService.html",[202,0.934,3254,3.921]],["body/injectables/ResidencesService.html",[0,0.159,3,0.026,4,0.024,5,0.021,7,0.165,11,0.904,15,1.299,16,1.092,22,2.452,23,0.496,25,0.004,31,0.499,35,2.026,54,1.813,62,0.128,66,1.868,67,1.669,71,0.029,77,0.002,78,0.002,129,0.892,135,1.522,137,1.428,147,1.921,148,2.398,182,1.586,202,0.901,204,1.009,206,2.026,207,1.397,208,2.943,209,1.799,210,2.101,211,3.094,212,1.969,213,1.531,222,1.545,223,1.872,225,1.799,227,2.101,229,1.353,230,1.98,232,1.205,236,0.505,243,2.134,244,1.441,245,1.395,248,2.455,249,2.22,253,2.14,257,2.428,260,1.781,262,1.704,269,3.671,292,0.952,464,4.026,507,3.246,526,1.741,528,1.741,553,1.418,555,1.441,580,1.704,587,4.23,588,3.784,589,4.23,591,4.439,593,3.059,599,2.33,600,2.33,601,1.604,602,4.473,604,1.704,605,4.641,606,4.641,607,5.737,608,3.62,610,3.008,611,4.286,612,5.514,615,4.228,617,3.981,723,3.932,1591,5.06,1592,2.977,1593,3.479,1614,5.665,1617,6.791,3022,4.641,3090,5.754,3155,2.33,3175,2.436,3209,5.846,3211,2.722,3247,4.558,3252,6.584,3254,3.784,3256,4.228,3272,3.257,3273,3.257,3274,5.184,3275,3.257,3276,3.257,3277,3.257,3278,3.257,3279,3.257,3280,3.257,3281,3.257,3282,2.722,3283,3.257,3284,5.06,3285,6.996,3286,3.257,3287,5.06,3288,3.257,3289,8.019,3290,5.06,3291,3.257,3292,3.257,3293,3.257,3294,3.257,3295,3.257,3296,3.257,3297,3.257,3298,3.257,3299,3.257,3300,5.06,3301,3.257,3302,3.257,3303,3.257,3304,3.257,3305,3.257,3306,3.257,3307,3.257,3308,3.257,3309,3.257,3310,3.257,3311,3.257,3312,3.257]],["title/injectables/ResolvePromisesInterceptor.html",[202,0.934,3313,4.723]],["body/injectables/ResolvePromisesInterceptor.html",[0,0.345,3,0.057,4,0.051,5,0.046,7,0.358,11,0.763,16,0.869,23,0.379,25,0.004,31,0.421,62,0.134,71,0.062,77,0.003,78,0.003,129,1.534,135,1.285,137,1.258,182,1.398,202,1.55,204,2.189,236,1.096,246,2.98,2801,5.559,3313,7.841,3314,7.066,3315,8.705,3316,8.705,3317,8.87,3318,9.434,3319,9.846,3320,7.066,3321,9.434,3322,8.705,3323,5.904,3324,5.904,3325,7.066,3326,6.365,3327,7.066,3328,6.365,3329,7.066,3330,7.066]],["title/classes/Role.html",[0,0.256,344,2.442]],["body/classes/Role.html",[0,0.392,2,0.947,3,0.05,4,0.045,5,0.04,7,0.316,8,1.289,11,1.016,15,1.655,16,1.095,19,2.934,22,2.838,23,0.535,25,0.004,27,1.655,28,3.336,29,4.042,31,0.531,34,1.643,36,2.033,39,3.024,62,0.132,65,1.866,66,3.579,68,1.371,71,0.055,77,0.003,78,0.003,147,1.386,344,3.75,873,4.871,874,3.773,918,3.773,919,3.073,996,6.663,997,3.963,3331,5.622,3332,7.251,3333,7.01,3334,6.241,3335,5.339,3336,6.241,3337,6.241,3338,4.91]],["title/classes/RoleDto.html",[0,0.256,1734,3.605]],["body/classes/RoleDto.html",[0,0.443,2,1.15,3,0.061,4,0.055,5,0.049,7,0.384,8,1.454,15,1.806,19,2.99,23,0.406,25,0.004,27,1.407,31,0.452,34,1.47,39,2.917,62,0.123,65,2.265,68,1.665,71,0.067,77,0.003,78,0.003,1466,4.75,1734,6.244,3339,7.576,3340,6.825,3341,7.576]],["title/entities/RoleEntity.html",[85,1.864,310,3.085]],["body/entities/RoleEntity.html",[0,0.321,3,0.053,4,0.048,5,0.043,7,0.334,8,1.335,11,0.9,15,1.697,16,1.181,19,2.744,22,2.522,23,0.49,25,0.004,27,1.697,29,4.184,30,3.928,31,0.545,34,1.349,62,0.124,71,0.058,77,0.003,78,0.003,85,3.249,87,3.016,105,5.186,109,4.181,110,4.228,115,3.522,118,4.589,121,5.347,122,2.143,123,4.663,124,3.877,125,3.522,126,2.823,310,4.904,344,3.07,2599,6.232,3342,6.59,3343,8.234,3344,6.59,3345,6.59,3346,8.334,3347,6.59]],["title/classes/RoleSchema.html",[0,0.256,3348,4.125]],["body/classes/RoleSchema.html",[0,0.378,2,1.178,3,0.062,4,0.056,5,0.05,7,0.393,8,1.476,11,0.995,16,1.208,23,0.494,25,0.004,31,0.549,34,1.645,71,0.068,77,0.003,78,0.003,1807,6.518,3348,7.249,3349,7.763,3350,7.763,3351,7.763]],["title/modules/RoleSeedModule.html",[289,1.037,3352,4.125]],["body/modules/RoleSeedModule.html",[0,0.338,3,0.056,4,0.05,5,0.045,25,0.004,62,0.137,71,0.061,77,0.003,78,0.003,109,3.744,236,1.074,238,2.399,289,1.849,291,2.226,292,2.024,293,2.281,294,2.281,295,2.253,296,3.079,297,3.079,302,2.831,303,2.199,304,2.253,306,4.311,307,3.411,308,4.311,310,4.076,311,4.445,312,2.339,344,3.227,2485,4.956,3352,8.174,3353,6.241,3354,6.241,3355,6.241,3356,8.467,3357,6.241,3358,6.928]],["title/injectables/RoleSeedService.html",[202,0.934,3356,4.125]],["body/injectables/RoleSeedService.html",[0,0.267,3,0.044,4,0.04,5,0.035,7,0.277,11,0.591,15,1.551,16,1.258,20,3.761,22,2.304,23,0.293,25,0.004,31,0.44,54,1.598,62,0.131,71,0.048,77,0.003,78,0.003,109,2.381,122,1.779,129,1.3,135,0.995,137,0.974,147,2.073,202,1.314,204,1.695,206,2.109,213,2.233,215,4.839,236,0.848,237,2.693,238,1.895,248,2.589,249,2.342,253,2.228,310,3.219,311,3.51,314,3.307,316,5.126,317,4.673,319,5.805,325,3.51,327,4.304,328,4.894,329,3.628,332,3.913,340,4.571,341,4.571,368,4.304,826,6.219,1300,3.628,1301,3.761,1339,4.928,2485,3.913,2994,4.928,3335,3.628,3356,5.805,3357,7.522,3359,5.47,3360,5.47,3361,7.379,3362,5.47,3363,4.571,3364,4.928,3365,4.928,3366,4.928,3367,5.47,3368,5.47,3369,4.928,3370,5.47,3371,5.47,3372,4.928,3373,5.47,3374,7.379,3375,7.379,3376,5.47,3377,5.47,3378,5.47]],["title/guards/RolesGuard.html",[3379,4.723,3380,4.381]],["body/guards/RolesGuard.html",[0,0.332,3,0.055,4,0.049,5,0.044,7,0.345,11,0.919,16,1.046,23,0.456,25,0.004,26,4.451,31,0.507,36,1.72,62,0.116,71,0.06,77,0.003,78,0.003,129,1.499,135,1.547,137,1.213,147,1.89,182,1.683,202,1.515,213,2.061,236,1.056,246,2.872,549,3.118,846,4.371,2370,5.295,2801,5.359,3317,8.756,3380,7.109,3381,6.811,3382,6.811,3383,9.72,3384,6.811,3385,10.204,3386,6.811,3387,8.509,3388,6.811,3389,6.136,3390,6.811,3391,6.811,3392,6.811,3393,6.811,3394,6.811,3395,6.811]],["title/modules/SeedModule.html",[289,1.037,3396,4.125]],["body/modules/SeedModule.html",[0,0.332,3,0.055,4,0.049,5,0.044,25,0.004,36,1.72,62,0.141,71,0.06,77,0.003,78,0.003,236,1.056,289,1.835,291,2.188,292,1.99,293,2.243,294,2.243,295,2.215,296,2.243,297,2.243,302,2.801,303,2.162,304,2.215,312,2.873,873,4.651,877,6.363,878,5.691,890,4.238,892,2.665,905,6.136,914,4.683,915,3.42,916,6.363,922,5.691,923,3.563,936,6.136,937,6.136,938,6.136,939,6.136,940,5.691,2107,3.812,3396,8.028,3397,6.136,3398,6.136,3399,7.63,3400,6.811,3401,6.811,3402,6.811,3403,6.811]],["title/classes/Session.html",[0,0.256,1302,3.17]],["body/classes/Session.html",[0,0.339,2,1.054,3,0.056,4,0.05,5,0.045,7,0.352,8,1.379,13,3.948,15,1.738,19,2.836,23,0.55,24,3.948,25,0.004,31,0.611,34,1.584,38,4.863,54,2.996,62,0.094,67,3.558,71,0.061,77,0.003,78,0.003,1027,6.209,1302,5.207,1700,6.437,3404,6.945,3405,6.945,3406,6.945,3407,6.945,3408,6.945,3409,6.945,3410,6.945]],["title/injectables/SessionDocumentRepository.html",[202,0.934,1790,4.381]],["body/injectables/SessionDocumentRepository.html",[0,0.202,3,0.033,4,0.03,5,0.027,7,0.21,11,0.981,15,1.468,16,1.116,23,0.525,25,0.004,31,0.542,35,1.814,36,1.046,54,2.098,62,0.129,67,2.122,71,0.037,77,0.002,78,0.002,129,1.069,135,1.651,137,1.565,147,2.11,148,1.814,182,1.563,202,1.08,204,1.284,206,2.611,207,1.675,209,2.157,212,2.279,213,1.836,218,2.731,220,1.554,221,2.763,223,2.925,225,2.157,232,1.533,233,3.498,234,3.838,236,0.643,239,1.694,240,1.72,246,1.747,248,1.454,250,2.376,253,2.424,522,3.749,683,4.533,915,2.08,1302,5.986,1356,3.776,1394,4.537,1414,5.91,1784,4.025,1787,3.098,1788,3.461,1789,3.259,1790,5.07,1807,4.762,2099,5.91,2106,3.098,2107,2.318,2580,5.07,2581,3.461,2582,5.07,2583,5.07,3411,4.143,3412,4.774,3413,5.648,3414,5.648,3415,4.143,3416,4.143,3417,6.068,3418,4.143,3419,4.774,3420,4.143,3421,4.143,3422,4.143,3423,4.143,3424,4.143,3425,4.143,3426,4.143,3427,2.964,3428,2.964,3429,3.732,3430,4.143,3431,8.413,3432,4.143,3433,7.18,3434,3.732,3435,4.143,3436,4.143,3437,4.143,3438,4.143,3439,4.143,3440,4.143,3441,4.143,3442,4.143,3443,3.732,3444,4.143,3445,4.143,3446,4.143,3447,6.068,3448,4.143,3449,4.143,3450,4.143,3451,4.143]],["title/entities/SessionEntity.html",[85,1.864,3103,3.75]],["body/entities/SessionEntity.html",[0,0.299,3,0.049,4,0.044,5,0.04,7,0.448,8,1.275,13,3.726,15,1.641,16,0.754,19,2.621,23,0.532,24,3.726,25,0.004,27,1.844,31,0.592,34,1.288,36,1.549,38,4.71,54,2.582,62,0.12,71,0.054,77,0.003,78,0.003,85,3.141,87,2.808,93,5.67,103,4.435,105,4.953,110,3.936,113,5.67,116,3.517,117,5.498,118,4.436,121,5.107,122,1.995,123,4.454,124,3.609,125,3.278,126,2.628,1027,5.861,1302,3.708,1700,6.075,3103,5.694,3452,6.133,3453,6.133,3454,7.96,3455,6.133,3456,6.133,3457,6.133,3458,6.133,3459,6.133,3460,6.133]],["title/classes/SessionMapper.html",[0,0.256,3428,3.75]],["body/classes/SessionMapper.html",[0,0.287,2,0.892,3,0.047,4,0.043,5,0.038,7,0.298,11,0.836,16,0.952,23,0.415,25,0.004,31,0.462,34,0.952,62,0.125,71,0.052,77,0.003,78,0.003,129,1.364,130,5.493,131,4.332,132,4.332,133,4.332,135,1.408,136,3.29,137,1.378,138,4.332,140,4.844,144,3.371,147,1.922,148,2.588,176,5.148,178,4.555,179,3.459,180,4.555,181,3.459,182,1.531,1302,6.05,1787,7.483,1788,4.912,1798,4.968,2132,4.625,2135,6.091,2136,4.625,2624,4.396,2632,4.625,2633,4.625,2634,4.625,3103,5.538,3427,4.205,3428,5.538,3461,5.879,3462,5.879,3463,5.879,3464,4.625,3465,5.879,3466,6.974,3467,5.296,3468,6.091,3469,4.625,3470,5.879,3471,5.879,3472,5.879,3473,5.879,3474,5.879,3475,5.879,3476,5.879]],["title/classes/SessionMapper-1.html",[0,0.213,261,1.457,3428,3.127]],["body/classes/SessionMapper-1.html",[0,0.287,2,0.892,3,0.047,4,0.043,5,0.038,7,0.298,11,0.836,16,0.952,19,1.936,23,0.415,25,0.004,31,0.462,54,2.262,62,0.125,71,0.052,77,0.003,78,0.003,103,3.672,116,3.371,129,1.364,130,5.493,131,4.332,132,4.332,133,4.332,135,1.408,136,3.29,137,1.378,138,4.332,140,4.844,144,3.371,145,4.205,147,1.922,148,2.588,176,5.148,177,3.658,178,4.555,179,3.459,180,4.555,181,3.459,182,1.531,183,4.817,199,3.658,200,3.772,201,3.772,1302,6.05,1326,4.625,2624,4.396,2632,4.625,2633,4.625,2634,4.625,2644,4.912,3103,7.158,3104,4.912,3427,4.205,3428,5.538,3466,6.974,3467,5.296,3468,6.091,3469,4.625,3477,5.879,3478,5.879,3479,5.879,3480,5.879,3481,5.879,3482,5.296]],["title/modules/SessionModule.html",[289,1.037,867,3.75]],["body/modules/SessionModule.html",[0,0.324,3,0.053,4,0.048,5,0.043,25,0.004,62,0.138,71,0.059,77,0.003,78,0.003,147,1.474,236,1.029,289,1.814,291,2.132,292,1.939,293,2.185,294,2.185,295,2.158,296,3.019,297,3.019,302,2.756,303,2.106,304,2.158,312,2.24,580,3.471,582,4.129,583,4.8,867,7.363,873,5.264,874,4.012,918,4.012,919,3.267,921,4.129,1251,8.003,1781,5.988,2275,6.082,2303,5.221,3098,5.988,3483,5.978,3484,5.978,3485,5.978,3486,5.978,3487,6.636]],["title/injectables/SessionRelationalRepository.html",[202,0.934,3102,4.381]],["body/injectables/SessionRelationalRepository.html",[0,0.211,3,0.035,4,0.031,5,0.028,7,0.219,11,0.993,15,1.811,16,1.131,23,0.529,25,0.004,31,0.549,35,1.091,54,2.148,62,0.13,67,2.213,71,0.038,77,0.002,78,0.002,85,2.865,122,1.405,129,1.102,135,1.673,137,1.588,147,1.79,148,1.292,182,1.454,202,1.114,204,1.338,206,2.626,207,1.726,209,2.224,212,2.334,213,1.893,215,3.969,218,2.815,220,1.621,221,2.786,223,2.983,225,2.224,232,1.598,233,3.567,234,3.931,236,0.67,237,2.127,238,1.496,239,1.767,240,1.794,246,1.822,248,1.516,249,1.371,250,2.477,253,2.38,269,1.977,271,2.542,272,2.772,683,3.587,1302,5.895,1356,3.892,1394,3.23,1414,6.028,1784,5.347,1789,3.398,3102,5.226,3103,3.09,3104,3.609,3412,4.921,3413,4.921,3414,4.921,3419,4.921,3427,3.09,3428,3.09,3429,3.891,3434,3.891,3443,3.891,3488,4.32,3489,3.891,3490,4.32,3491,4.32,3492,4.32,3493,5.226,3494,4.32,3495,4.921,3496,5.226,3497,4.32,3498,4.32,3499,4.32,3500,4.32,3501,6.255,3502,6.624,3503,6.255,3504,6.255,3505,4.32,3506,4.32,3507,4.32,3508,4.32,3509,7.353,3510,6.255,3511,4.32]],["title/classes/SessionRepository.html",[0,0.256,1784,3.477]],["body/classes/SessionRepository.html",[0,0.268,2,0.834,3,0.044,4,0.04,5,0.036,7,0.278,11,1.039,15,1.663,16,1.183,23,0.549,25,0.004,31,0.574,54,1.604,62,0.114,67,2.813,71,0.048,77,0.003,78,0.003,129,1.304,135,1.751,137,1.714,207,2.309,209,2.63,212,2.655,218,2.471,220,2.775,221,2.906,223,3.313,225,2.63,232,2.032,233,3.702,234,4.472,239,2.246,240,2.28,278,6.489,279,4.923,683,4.243,1302,5.948,1356,4.604,1394,4.106,1414,6.694,1784,4.907,3412,5.82,3413,5.82,3414,5.82,3419,5.82,3427,3.928,3493,6.181,3495,5.82,3496,6.181,3512,5.491,3513,5.491,3514,5.491,3515,5.491,3516,5.491,3517,5.491,3518,5.491]],["title/classes/SessionSchemaClass.html",[0,0.256,1787,3.921]],["body/classes/SessionSchemaClass.html",[0,0.288,2,0.898,3,0.048,4,0.043,5,0.038,7,0.3,8,1.245,13,3.662,23,0.537,24,3.662,25,0.004,27,1.779,31,0.571,34,1.258,36,2.193,38,4.663,54,2.694,62,0.125,71,0.077,77,0.003,78,0.003,85,2.103,125,3.162,126,2.534,147,1.314,261,1.972,322,3.086,507,2.219,731,5.791,915,2.97,1027,5.759,1700,5.97,1766,4.7,1786,4.943,1787,5.813,1798,6.146,1804,5.561,1818,4.424,2107,4.35,2171,8,2173,4.654,2174,5.813,2175,4.654,2177,4.654,2178,4.654,2677,6.495,2681,4.943,3464,4.654,3519,4.943,3520,5.916,3521,5.916,3522,5.916,3523,5.916,3524,5.329,3525,7.774,3526,5.916,3527,5.329,3528,5.916,3529,5.329,3530,5.916]],["title/injectables/SessionService.html",[202,0.934,1251,3.921]],["body/injectables/SessionService.html",[0,0.251,3,0.041,4,0.037,5,0.033,7,0.261,11,1.045,15,1.619,16,1.189,23,0.548,25,0.004,31,0.577,54,1.505,62,0.124,67,2.639,71,0.045,77,0.003,78,0.003,129,1.248,135,1.759,137,1.682,182,1.868,202,1.261,204,1.596,207,2.234,209,2.518,212,2.569,213,1.559,218,2.318,220,2.657,221,2.876,223,3.226,225,2.518,232,1.906,233,3.858,234,4.327,236,0.799,239,2.107,240,2.139,249,1.635,279,4.764,549,2.358,683,4.062,1251,5.297,1302,5.849,1356,4.408,1394,3.853,1414,6.519,1784,6.264,3412,5.573,3413,5.573,3414,5.573,3419,5.573,3427,3.686,3489,4.641,3493,5.919,3495,5.573,3496,5.919,3531,5.152,3532,5.152,3533,5.152,3534,5.152,3535,5.152,3536,5.152,3537,5.152,3538,5.152,3539,5.152,3540,5.152,3541,5.152,3542,5.152,3543,5.152,3544,5.152,3545,5.152]],["title/classes/Settings.html",[0,0.256,793,2.632]],["body/classes/Settings.html",[0,0.248,2,0.772,3,0.041,4,0.037,5,0.033,7,0.258,8,1.125,11,0.936,13,3.391,14,4.921,15,1.493,22,2.712,23,0.564,24,3.391,25,0.004,27,1.825,28,4.635,29,4.354,30,3.721,31,0.586,34,1.404,35,1.774,36,1.285,38,4.113,39,3.275,46,3.839,54,2.871,62,0.118,66,2.917,67,2.606,68,1.118,71,0.045,77,0.003,78,0.003,507,1.908,678,4.5,777,3.639,793,4.933,794,4.207,795,6.305,997,3.458,1019,2.113,1483,3.804,1527,4.828,1549,6.326,1627,5.251,2793,5.867,3546,5.087,3547,6.327,3548,5.087,3549,5.087,3550,5.087,3551,7.022,3552,5.087,3553,6.509,3554,7.022,3555,5.087,3556,5.087,3557,5.087,3558,5.087,3559,4.583,3560,5.087,3561,4.251]],["title/controllers/SettingsController.html",[495,2.112,3562,4.381]],["body/controllers/SettingsController.html",[0,0.208,3,0.034,4,0.031,5,0.028,7,0.216,11,0.919,15,1.85,16,1.154,23,0.547,25,0.004,27,1.581,31,0.508,34,1.652,36,2.025,62,0.132,68,0.938,71,0.038,72,4.55,77,0.002,78,0.002,129,1.092,135,1.548,137,1.516,147,0.948,182,1.684,206,1.845,207,1.711,209,2.204,211,2.392,212,2.318,221,1.731,225,1.517,230,1.67,232,1.579,236,0.662,249,1.354,253,1.139,257,1.67,261,2.067,495,2.498,497,1.694,499,4.844,502,2.934,504,2.831,506,2.934,507,1.601,509,5.316,510,2.934,511,4.263,513,2.831,516,2.934,518,3.389,519,3.556,520,2.739,521,2.739,522,2.024,523,2.511,526,2.281,528,2.281,529,3.648,530,3.749,531,4.716,532,5.316,533,2.281,534,2.511,535,2.186,536,2.739,537,2.58,538,2.831,539,3.858,540,2.281,541,3.979,542,2.831,543,2.934,546,2.511,547,1.889,548,2.186,549,1.954,550,2.831,553,3.179,554,2.831,555,3.768,556,2.831,557,2.024,558,4.113,560,2.831,561,2.934,563,2.831,566,2.831,567,2.831,793,4.714,1632,6.642,2407,6.697,2547,3.191,3562,5.181,3563,4.268,3564,3.844,3565,4.268,3566,4.268,3567,4.268,3568,4.268,3569,7.387,3570,4.268,3571,5.021,3572,3.844,3573,6.102,3574,3.191,3575,4.268,3576,4.268,3577,4.268,3578,4.268,3579,4.268,3580,4.268,3581,4.268]],["title/classes/SettingsDto.html",[0,0.256,1661,4.125]],["body/classes/SettingsDto.html",[0,0.444,2,1.156,3,0.061,4,0.055,5,0.049,7,0.386,8,1.459,15,1.81,23,0.408,25,0.004,27,1.414,31,0.454,34,1.475,39,2.927,62,0.124,65,2.278,68,1.674,71,0.067,77,0.003,78,0.003,81,5.052,83,4.574,84,4.032,1661,7.167,3582,7.617,3583,7.617]],["title/entities/SettingsEntity.html",[85,1.864,3114,3.364]],["body/entities/SettingsEntity.html",[0,0.136,3,0.022,4,0.02,5,0.018,7,0.141,8,0.717,12,4.011,13,2.365,15,1.041,16,0.343,19,2.784,22,1.939,23,0.475,24,2.365,25,0.004,26,5.303,27,1.522,29,3.222,30,3.352,31,0.489,34,1.749,38,3.044,46,4.743,54,2.192,62,0.087,71,0.057,77,0.002,78,0.002,85,1.993,87,1.277,93,3.598,96,2.969,99,3.856,103,3.044,105,3.994,109,2.794,110,2.873,113,3.598,115,1.491,116,1.6,117,1.736,118,3.222,121,3.598,122,0.907,123,2.505,124,1.641,125,1.491,126,1.195,344,1.299,349,4.413,350,3.078,359,3.202,364,4.011,415,3.348,438,3.348,439,3.348,446,4.033,447,2.513,448,4.193,471,2.513,678,3.138,711,3.202,754,3.522,755,3.522,756,3.522,757,3.522,758,3.348,759,3.522,760,3.522,761,4.412,762,3.522,763,3.522,764,3.522,765,4.412,766,3.522,767,3.522,768,3.522,769,3.522,770,3.522,771,3.202,772,3.348,773,3.348,774,3.522,775,4.412,776,3.522,777,4.011,778,4.193,779,4.193,780,3.522,781,3.522,782,3.522,783,3.522,784,3.522,785,3.522,786,3.522,787,3.202,790,5.529,791,3.74,792,3.74,793,2.815,794,2.933,795,5.259,1019,1.158,1129,1.348,1323,2.086,1336,2.634,1351,2.194,1483,2.086,1567,2.086,1952,2.513,2007,2.194,2088,2.331,2092,1.79,2288,2.194,2370,1.736,2599,4.799,3114,2.873,3363,2.331,3547,4.412,3553,5.027,3561,2.331,3584,2.513,3585,2.789,3586,2.789,3587,2.789,3588,2.789,3589,2.789,3590,6.418,3591,2.789,3592,2.789,3593,2.789,3594,2.789,3595,2.789,3596,2.789,3597,2.513,3598,2.789,3599,4.033,3600,2.789,3601,2.789,3602,2.789,3603,2.789,3604,2.789,3605,2.513,3606,2.789,3607,2.789,3608,2.789,3609,2.789,3610,2.789,3611,2.789,3612,2.789,3613,2.789,3614,2.789,3615,2.789,3616,2.789,3617,2.789,3618,2.513,3619,2.789,3620,2.789,3621,2.513,3622,2.789,3623,7.617,3624,2.789,3625,2.789,3626,2.789,3627,2.789,3628,2.789,3629,2.789,3630,2.789,3631,2.789,3632,2.789,3633,2.513,3634,5.052,3635,2.513,3636,2.789,3637,2.789,3638,2.789,3639,2.789,3640,2.789,3641,2.789,3642,2.789,3643,2.789,3644,2.789,3645,2.513,3646,2.513,3647,2.789,3648,2.789,3649,2.789,3650,2.789,3651,2.789,3652,2.789,3653,2.789,3654,2.789,3655,2.789,3656,2.789,3657,2.789,3658,2.789,3659,2.513,3660,2.513,3661,2.789,3662,2.789,3663,2.789,3664,2.513,3665,2.789,3666,2.789,3667,2.789,3668,2.789,3669,2.789,3670,2.789,3671,2.789,3672,2.789,3673,2.789,3674,2.789,3675,2.789,3676,2.789,3677,2.789,3678,2.789,3679,2.789,3680,2.331,3681,2.789,3682,2.789,3683,2.789,3684,2.789,3685,2.789,3686,2.789,3687,2.789,3688,2.789,3689,2.789,3690,2.789,3691,2.789,3692,2.789,3693,2.789,3694,2.789,3695,2.789,3696,2.789,3697,2.789,3698,2.789,3699,2.789,3700,2.789,3701,2.789,3702,2.789]],["title/classes/SettingsMapper.html",[0,0.256,3703,3.921]],["body/classes/SettingsMapper.html",[0,0.275,2,0.857,3,0.045,4,0.041,5,0.037,7,0.286,11,0.814,16,0.926,23,0.404,25,0.004,31,0.449,62,0.123,71,0.05,77,0.003,78,0.003,129,1.328,130,5.43,131,4.217,132,4.217,133,4.217,135,1.37,136,3.159,137,1.342,138,4.217,140,4.747,142,3.622,143,4.038,144,3.237,145,4.038,147,1.674,148,2.253,149,4.038,150,6.069,151,4.038,176,4.747,177,3.512,178,4.434,179,3.321,180,4.434,181,3.321,182,1.49,183,4.689,184,4.038,185,3.881,199,3.512,200,3.622,201,3.622,793,4.974,795,4.836,2630,7.642,2631,6.789,2632,4.441,2633,5.929,2634,4.441,2643,5.085,2644,4.716,2645,5.085,3114,6.357,3115,4.716,3553,5.391,3574,4.221,3703,5.635,3704,5.645,3705,5.645,3706,5.645,3707,8.483,3708,5.645,3709,7.536,3710,5.645,3711,5.645,3712,5.645]],["title/modules/SettingsModule.html",[289,1.037,868,3.605]],["body/modules/SettingsModule.html",[0,0.308,3,0.051,4,0.046,5,0.041,25,0.004,62,0.138,71,0.056,77,0.003,78,0.003,236,0.981,289,1.773,291,2.608,292,1.848,293,2.082,294,2.082,295,2.057,296,2.952,297,2.952,302,2.673,303,2.007,304,2.057,312,2.741,497,3.223,575,4.909,576,4.909,578,4.349,579,4.349,580,3.308,582,3.936,583,3.627,584,4.059,868,7.22,2650,5.579,3106,7.95,3562,7.492,3571,7.31,3572,5.698,3713,5.698,3714,5.698,3715,6.325,3716,5.698,3717,6.325,3718,6.325]],["title/injectables/SettingsRelationalRepository.html",[202,0.934,3112,4.381]],["body/injectables/SettingsRelationalRepository.html",[0,0.208,3,0.034,4,0.031,5,0.028,7,0.217,11,0.99,15,1.703,16,1.127,23,0.513,25,0.004,31,0.547,35,1.08,62,0.13,71,0.038,77,0.002,78,0.002,85,2.851,87,2.842,122,1.39,129,1.094,135,1.667,137,1.582,147,2.036,148,1.278,182,1.685,202,1.105,204,1.324,206,2.622,207,1.713,208,3.467,209,2.206,210,2.578,211,2.395,212,2.32,213,1.878,215,3.949,218,2.793,220,1.603,221,2.78,222,2.027,223,2.297,225,2.206,227,2.578,229,1.775,230,2.429,232,1.582,233,3.55,234,3.907,236,0.663,237,2.104,238,1.48,239,1.748,240,1.775,243,2.618,244,1.891,245,1.831,246,1.802,248,1.5,249,1.356,250,2.451,252,2.835,253,2.447,257,2.429,259,2.835,260,2.336,261,1.425,262,3.247,263,2.743,264,4.117,268,2.743,269,1.957,270,2.835,271,2.515,272,2.743,793,4.884,3109,5.738,3111,3.85,3112,5.186,3114,2.743,3115,3.571,3574,3.196,3703,3.196,3719,4.274,3720,4.274,3721,4.274,3722,4.274,3723,4.274,3724,4.274,3725,4.274,3726,4.274,3727,4.274,3728,4.274,3729,3.85,3730,4.274,3731,6.207,3732,4.274,3733,4.274,3734,6.207,3735,8.021,3736,6.702,3737,6.207,3738,3.85,3739,4.274,3740,4.274,3741,4.274]],["title/classes/SettingsRepository.html",[0,0.256,3109,3.75]],["body/classes/SettingsRepository.html",[0,0.268,2,0.834,3,0.044,4,0.04,5,0.036,7,0.278,11,1.039,15,1.663,16,1.183,23,0.536,25,0.004,31,0.574,62,0.122,71,0.048,77,0.003,78,0.003,129,1.304,135,1.751,137,1.714,207,2.309,208,3.968,209,2.63,210,3.072,211,2.854,212,2.655,218,2.471,220,2.775,221,2.906,222,2.605,223,2.738,225,2.63,227,3.072,229,2.28,230,2.895,232,2.032,233,3.702,239,2.246,240,2.28,243,3.12,244,2.43,245,2.353,257,2.895,278,6.489,279,4.923,285,5.745,287,3.642,288,3.642,793,4.939,3109,5.292,3574,4.106,3736,7.48,3742,5.491,3743,5.491,3744,5.491,3745,5.491,3746,5.491,3747,5.491,3748,5.491]],["title/modules/SettingsSeedModule.html",[289,1.037,3749,4.125]],["body/modules/SettingsSeedModule.html",[0,0.331,3,0.055,4,0.049,5,0.044,25,0.004,62,0.138,71,0.06,77,0.003,78,0.003,103,4.03,109,3.699,236,1.054,238,2.353,289,1.833,291,2.183,292,1.985,293,2.237,294,2.237,295,2.21,296,3.052,297,3.052,302,2.797,303,2.156,304,2.21,306,4.228,307,3.346,308,4.228,312,2.294,793,3.412,2484,5.346,2485,4.861,3114,4.36,3116,6.121,3749,8.139,3750,6.121,3751,6.121,3752,6.121,3753,8.446,3754,6.121,3755,5.346]],["title/injectables/SettingsSeedService.html",[202,0.934,3753,4.125]],["body/injectables/SettingsSeedService.html",[0,0.203,3,0.034,4,0.03,5,0.027,7,0.211,11,0.451,15,1.473,16,0.513,22,2.432,23,0.224,25,0.004,30,3.244,31,0.526,36,2.226,54,2.465,62,0.131,71,0.037,77,0.002,78,0.002,103,1.979,109,1.817,115,2.231,116,2.393,122,1.357,129,1.075,135,0.759,137,1.502,147,2.021,182,1.207,202,1.086,204,1.293,206,2.404,213,1.846,215,4.882,236,0.647,237,2.055,238,1.445,248,3.568,253,2.54,314,2.523,316,4.548,317,4.035,318,4.135,325,2.678,326,2.985,328,4.046,329,2.768,332,4.364,343,3.283,344,1.944,678,4.438,777,2.985,778,3.121,779,3.121,794,3.191,795,4.627,1019,2.533,1300,2.768,1301,2.87,1326,3.283,1483,4.562,1647,3.914,1887,3.76,2488,3.487,2490,3.76,2501,3.76,3114,2.678,3364,3.76,3547,6.638,3553,2.985,3561,5.097,3605,3.76,3621,3.76,3623,3.76,3633,3.76,3634,3.76,3635,3.76,3645,5.495,3646,5.495,3659,3.76,3660,3.76,3664,3.76,3729,3.76,3753,4.799,3754,8.2,3755,6.24,3756,7.931,3757,7.931,3758,7.931,3759,7.931,3760,3.487,3761,4.173,3762,4.173,3763,4.173,3764,4.173,3765,4.173,3766,4.173,3767,7.21,3768,3.76,3769,7.931,3770,6.1,3771,6.1,3772,5.097,3773,5.097,3774,4.173,3775,4.173,3776,6.1,3777,4.173,3778,4.173,3779,4.173,3780,4.173,3781,4.173,3782,4.173,3783,4.173,3784,4.173]],["title/injectables/SettingsService.html",[202,0.934,3571,3.605]],["body/injectables/SettingsService.html",[0,0.179,3,0.029,4,0.027,5,0.024,7,0.186,11,0.942,15,1.382,16,1.073,22,2.538,23,0.493,25,0.004,31,0.52,54,2.687,62,0.129,66,2.102,67,1.878,71,0.032,77,0.002,78,0.002,129,0.976,135,1.587,137,1.496,147,1.866,148,2.225,182,1.662,202,0.986,204,1.136,206,2.123,207,1.529,208,3.167,209,1.969,210,2.3,211,3.242,212,2.119,213,1.676,222,1.739,223,2.05,225,1.969,227,2.3,229,1.522,230,2.168,232,1.357,236,0.569,243,2.336,244,1.622,245,1.571,248,2.343,249,2.119,253,1.986,257,2.613,260,2.004,262,1.918,269,3.407,292,1.071,464,3.736,507,2.792,526,1.96,528,1.96,553,1.596,555,1.622,580,1.918,586,2.884,587,4.831,588,4.993,589,4.831,591,3.963,593,3.349,599,2.622,600,2.622,601,1.805,602,4.271,604,1.918,605,4.936,606,4.936,607,6.012,608,3.963,610,2.792,611,3.978,612,5.117,678,3.1,793,4.381,794,2.898,795,5.127,952,2.352,1632,5.975,2650,2.281,2692,4.143,2694,6.612,2695,4.991,3109,6.242,3547,5.254,3553,4.777,3559,3.302,3564,4.991,3569,6.865,3571,3.809,3573,4.629,3574,2.741,3736,6.218,3738,3.302,3785,3.666,3786,3.666,3787,3.666,3788,3.666,3789,3.666,3790,3.666,3791,3.666,3792,3.666,3793,3.666,3794,3.666,3795,3.666,3796,3.666,3797,3.666,3798,3.666,3799,3.666,3800,3.666,3801,3.666,3802,3.666,3803,3.666,3804,3.666,3805,3.666,3806,3.666,3807,3.666,3808,3.666,3809,3.666,3810,3.666]],["title/interfaces/SocialInterface.html",[1013,3.75,2092,3.364]],["body/interfaces/SocialInterface.html",[3,0.059,4,0.053,5,0.047,7,0.371,8,1.425,11,1.121,15,1.851,23,0.534,25,0.004,34,1.754,71,0.065,77,0.003,78,0.003,986,5.214,988,5.214,1013,6.364,1019,4.139,2092,4.698,2093,5.475,3811,7.321]],["title/classes/SortUserDto.html",[0,0.256,2376,3.477]],["body/classes/SortUserDto.html",[0,0.455,2,0.832,3,0.044,4,0.04,5,0.036,7,0.278,8,1.183,19,2.433,23,0.543,25,0.004,27,1.372,31,0.441,34,1.512,35,2.111,36,1.866,39,2.685,54,2.159,62,0.127,63,4.188,65,1.639,68,1.204,71,0.074,77,0.003,78,0.003,84,3.699,182,1.084,261,1.827,323,4.089,507,2.772,553,2.386,555,2.426,557,2.6,995,5.384,1133,4.598,1134,2.386,1466,4.372,1469,5.566,1566,5.813,1723,4.098,1734,6.15,1743,4.098,2368,5.544,2369,6.983,2370,3.41,2374,4.579,2375,3.41,2376,5.933,2377,6.983,2378,4.579,2379,6.576,2380,4.098,2381,4.598,2382,4.579,2383,6.173,2384,4.579,2385,4.579,2386,4.098,3812,5.481,3813,5.481,3814,5.481,3815,5.481]],["title/classes/Status.html",[0,0.256,610,1.967]],["body/classes/Status.html",[0,0.411,2,1.019,3,0.054,4,0.049,5,0.043,7,0.34,8,1.351,9,5.411,11,0.911,15,1.712,16,1.133,19,3.035,23,0.518,25,0.004,27,1.566,31,0.503,34,1.67,39,2.962,62,0.131,65,2.008,68,1.475,71,0.059,77,0.003,78,0.003,147,1.491,610,3.163,873,5.04,874,4.059,918,4.059,919,3.306,996,6.894,997,4.152,3332,7.596,3333,7.253,3338,5.282,3816,6.049,3817,6.714,3818,6.714]],["title/classes/StatusDto.html",[0,0.256,1739,4.125]],["body/classes/StatusDto.html",[0,0.443,2,1.15,3,0.061,4,0.055,5,0.049,7,0.384,8,1.454,15,1.806,19,2.99,23,0.406,25,0.004,27,1.407,31,0.452,34,1.47,39,2.917,62,0.123,65,2.265,68,1.665,71,0.067,77,0.003,78,0.003,1466,4.75,1739,7.144,3340,6.825,3819,7.576,3820,7.576]],["title/entities/StatusEntity.html",[85,1.864,3821,3.75]],["body/entities/StatusEntity.html",[0,0.352,3,0.058,4,0.052,5,0.047,7,0.365,8,1.411,11,0.952,15,1.768,16,1.219,19,2.902,23,0.472,25,0.004,27,1.637,31,0.526,34,1.427,62,0.12,71,0.064,77,0.003,78,0.003,85,3.383,87,3.3,118,4.779,122,2.345,123,4.932,124,4.242,125,3.854,126,3.089,610,2.705,3343,8.575,3821,6.304,3822,7.21,3823,7.21,3824,7.21]],["title/classes/StatusSchema.html",[0,0.256,3825,4.125]],["body/classes/StatusSchema.html",[0,0.378,2,1.178,3,0.062,4,0.056,5,0.05,7,0.393,8,1.476,11,0.995,16,1.208,23,0.494,25,0.004,31,0.549,34,1.645,71,0.068,77,0.003,78,0.003,1807,6.518,3825,7.249,3826,7.763,3827,7.763,3828,7.763]],["title/modules/StatusSeedModule.html",[289,1.037,3829,4.125]],["body/modules/StatusSeedModule.html",[0,0.343,3,0.056,4,0.051,5,0.046,25,0.004,62,0.133,71,0.062,77,0.003,78,0.003,236,1.09,238,2.435,289,1.862,291,2.259,292,2.054,293,2.315,294,2.315,295,2.286,296,3.099,297,3.099,302,2.857,303,2.231,304,2.286,306,4.375,307,3.462,308,4.375,312,2.374,610,2.638,3821,5.03,3829,8.199,3830,6.334,3831,6.334,3832,6.334,3833,8.483,3834,6.334,3835,5.531,3836,7.031]],["title/injectables/StatusSeedService.html",[202,0.934,3833,4.125]],["body/injectables/StatusSeedService.html",[0,0.322,3,0.053,4,0.048,5,0.043,7,0.335,9,4.238,11,0.713,15,1.55,16,1.125,23,0.354,25,0.004,31,0.498,62,0.135,71,0.058,77,0.003,78,0.003,122,2.148,129,1.47,135,1.201,137,1.176,147,1.467,202,1.486,204,2.046,206,2.311,213,2.525,215,4.985,236,1.024,237,3.252,238,2.287,248,2.317,253,2.227,314,3.993,316,5.513,1305,4.725,1306,4.939,1340,5.518,1348,5.95,3229,5.95,3760,5.518,3772,5.518,3773,6.973,3821,4.725,3833,6.566,3834,8.242,3835,5.196,3837,5.95,3838,6.605,3839,7.518,3840,5.95,3841,5.95]],["title/classes/Tenant.html",[0,0.256,22,1.447]],["body/classes/Tenant.html",[0,0.167,2,0.521,3,0.028,4,0.025,5,0.022,7,0.174,8,0.844,11,1.124,13,2.704,15,1.191,16,0.788,22,1.769,23,0.569,24,2.704,25,0.004,26,3.762,27,1.84,28,5.202,29,5.227,30,2.154,31,0.591,34,1.695,35,2.612,36,2.612,38,3.411,39,3.247,54,2.101,62,0.116,67,1.758,68,0.754,71,0.03,77,0.002,78,0.002,723,3.183,793,4.281,829,4.586,830,4.586,831,4.586,832,4.586,927,1.544,1592,3.772,1643,4.408,1644,4.252,1645,5.044,1646,3.772,1647,4.114,2103,3.975,2508,4.124,2509,2.565,2541,2.074,3155,2.454,3842,3.431,3843,3.431,3844,3.431,3845,3.431,3846,3.431,3847,3.431,3848,3.431,3849,3.431,3850,3.431,3851,3.431,3852,3.431,3853,3.431,3854,3.431,3855,3.431,3856,4.828,3857,3.431,3858,3.431,3859,3.431,3860,2.699,3861,2.699,3862,2.867]],["title/classes/TenantDto.html",[0,0.256,1307,3.364]],["body/classes/TenantDto.html",[0,0.444,2,1.156,3,0.061,4,0.055,5,0.049,7,0.386,8,1.459,15,1.81,23,0.408,25,0.004,27,1.414,31,0.454,34,1.475,39,2.927,62,0.124,65,2.278,68,1.674,71,0.067,77,0.003,78,0.003,81,5.052,83,4.574,84,4.032,1307,5.846,3863,7.617,3864,7.617]],["title/entities/TenantEntity.html",[85,1.864,109,2.282]],["body/entities/TenantEntity.html",[0,0.16,3,0.026,4,0.024,5,0.021,7,0.166,8,0.813,11,1.118,13,2.624,15,1.156,16,0.862,22,1.402,23,0.567,24,2.624,25,0.004,26,3.669,27,1.838,29,5.037,30,2.077,31,0.59,34,1.676,35,2.596,36,2.674,38,3.327,62,0.121,71,0.029,77,0.002,78,0.002,85,2.212,87,1.498,89,5.764,93,3.993,96,3.368,103,3.327,105,5.851,109,2.211,110,2.1,113,3.993,116,1.877,117,2.036,118,4.351,121,3.259,122,1.064,123,2.842,124,1.925,125,1.749,126,1.402,310,4.127,344,2.366,793,3.125,829,4.452,830,4.452,831,4.452,832,4.452,927,1.473,1524,2.036,1592,3.662,1643,4.279,1644,4.128,1645,4.896,1646,3.662,1647,3.993,1689,1.978,2125,4.652,2370,3.872,2482,4.501,2483,2.341,2902,4.022,2991,2.17,3114,4.501,3134,4.364,3755,2.574,3865,3.272,3866,3.272,3867,3.272,3868,3.272,3869,3.272,3870,3.272,3871,6.84,3872,7.806,3873,8.665,3874,3.272,3875,2.948,3876,2.948,3877,3.272,3878,3.272,3879,3.272,3880,3.272,3881,3.272,3882,5.078,3883,3.272,3884,3.272,3885,3.272,3886,3.272,3887,3.272,3888,3.272,3889,2.734,3890,2.25,3891,7.238,3892,4.575,3893,4.575,3894,3.272]],["title/classes/TenantMapper.html",[0,0.256,142,3.364]],["body/classes/TenantMapper.html",[0,0.195,2,0.608,3,0.032,4,0.029,5,0.026,7,0.203,11,0.639,16,0.727,22,2.545,23,0.317,25,0.004,31,0.353,35,2.66,62,0.125,71,0.035,77,0.002,78,0.002,109,3.911,129,1.042,130,4.859,131,3.31,132,3.31,133,3.31,135,1.076,136,2.24,137,1.053,138,3.31,140,3.938,142,3.796,144,2.295,145,2.863,147,1.314,148,1.769,155,3.344,156,6.93,157,4.943,174,4.424,175,2.993,176,3.938,177,2.491,178,3.481,179,2.355,180,3.481,181,2.355,182,1.17,183,3.681,188,3.344,189,4.943,198,2.993,199,2.491,200,2.568,201,2.568,927,1.801,2109,2.568,2561,2.655,2563,3.149,2612,3.344,2927,2.863,3124,3.344,3176,3.344,3183,5.329,3184,3.606,3190,3.606,3703,2.993,3895,4.003,3896,4.003,3897,4.003,3898,2.491,3899,3.606,3900,3.606,3901,3.149,3902,3.606,3903,3.606,3904,5.916,3905,4.003,3906,5.329,3907,7.003,3908,3.606,3909,3.606,3910,5.329,3911,7.003,3912,3.606,3913,3.606,3914,5.916,3915,4.003,3916,5.916,3917,7.774,3918,4.003,3919,5.916,3920,4.003,3921,5.916,3922,4.003,3923,5.916,3924,4.003,3925,4.003,3926,5.329,3927,7.003,3928,3.606,3929,3.606,3930,5.916,3931,7.774,3932,4.003,3933,4.003,3934,5.329,3935,3.606,3936,3.606,3937,5.329,3938,3.606,3939,3.606,3940,4.003,3941,5.916,3942,4.003,3943,4.003,3944,4.003,3945,4.003,3946,3.606,3947,5.329,3948,3.606,3949,3.606,3950,3.606,3951,5.916,3952,4.003]],["title/injectables/TenantRelationalRepository.html",[202,0.934,3122,4.381]],["body/injectables/TenantRelationalRepository.html",[0,0.209,3,0.034,4,0.031,5,0.028,7,0.217,11,0.991,15,1.652,16,1.128,22,2.686,23,0.514,25,0.004,31,0.547,35,1.083,62,0.13,71,0.038,77,0.002,78,0.002,85,2.855,87,2.848,109,1.866,122,1.394,129,1.096,135,1.669,137,1.584,142,2.751,147,2.038,148,1.282,182,1.687,185,2.948,202,1.108,204,1.328,206,2.623,207,1.717,208,3.473,209,2.211,210,2.583,211,2.4,212,1.974,213,1.882,215,3.955,218,2.799,220,1.608,221,2.782,222,2.033,223,2.302,225,2.211,227,2.583,229,1.78,230,2.434,232,2.302,233,3.555,234,3.914,236,0.665,237,2.111,238,1.485,239,1.753,240,1.78,243,2.623,244,1.897,245,1.837,246,1.808,248,1.504,249,1.361,250,2.458,252,2.843,253,2.449,257,2.434,259,2.843,260,2.344,261,1.429,262,3.254,263,2.751,264,4.126,268,2.751,269,1.962,270,2.843,271,2.523,272,2.751,317,4.495,325,2.751,329,4.126,3121,3.862,3122,5.198,3124,3.582,3898,2.668,3953,4.287,3954,3.862,3955,4.287,3956,4.287,3957,4.287,3958,4.287,3959,4.287,3960,4.287,3961,4.287,3962,4.287,3963,4.287,3964,5.604,3965,4.287,3966,4.287,3967,8.033,3968,6.711,3969,5.604,3970,3.582,3971,4.287,3972,4.287]],["title/classes/TenantRepository.html",[0,0.256,317,2.934]],["body/classes/TenantRepository.html",[0,0.268,2,0.834,3,0.044,4,0.04,5,0.036,7,0.278,11,1.039,15,1.663,16,1.183,22,2.715,23,0.536,25,0.004,31,0.574,62,0.122,71,0.048,77,0.003,78,0.003,129,1.304,135,1.751,137,1.714,207,2.309,208,3.968,209,2.63,210,3.072,211,2.854,212,2.655,218,2.471,220,2.775,221,2.906,222,2.605,223,2.738,225,2.63,227,3.072,229,2.28,230,2.895,232,2.032,233,3.702,239,2.246,240,2.28,243,3.12,244,2.43,245,2.353,257,2.895,278,6.489,279,4.923,285,5.745,287,3.642,288,3.642,317,4.14,3898,3.417,3968,7.48,3973,5.491,3974,5.491,3975,5.491,3976,5.491,3977,5.491,3978,5.491,3979,5.491]],["title/modules/TenantSeedModule.html",[289,1.037,3980,4.125]],["body/modules/TenantSeedModule.html",[0,0.336,3,0.055,4,0.05,5,0.045,22,1.903,25,0.004,62,0.136,71,0.061,77,0.003,78,0.003,109,3.001,115,3.685,236,1.069,238,2.388,289,1.845,291,2.215,292,2.014,293,2.27,294,2.27,295,2.242,296,3.072,297,3.072,302,2.823,303,2.188,304,2.242,306,4.29,307,3.394,308,4.29,312,2.327,1680,3.532,1689,4.168,3125,6.21,3134,5.335,3890,4.74,3980,8.165,3981,6.21,3982,6.21,3983,6.21,3984,8.462,3985,6.21]],["title/injectables/TenantSeedService.html",[202,0.934,3984,4.125]],["body/injectables/TenantSeedService.html",[0,0.285,3,0.047,4,0.042,5,0.038,7,0.296,11,0.631,16,1.061,22,2.382,23,0.492,25,0.004,31,0.46,36,1.476,62,0.13,71,0.052,77,0.003,78,0.003,109,2.543,115,3.123,122,1.9,129,1.358,135,1.062,137,1.04,147,2.038,202,1.373,204,1.81,206,2.18,213,2.333,215,4.92,236,0.906,237,2.877,238,2.023,248,2.705,249,2.447,253,2.303,314,3.532,316,5.263,317,4.315,320,4.596,325,3.749,335,5.263,829,4.179,830,5.515,831,4.179,832,4.179,1552,4.179,1592,3.438,1643,4.017,1680,2.993,1689,3.532,1992,4.017,2469,4.881,2470,4.881,3129,5.934,3134,3.635,3837,5.263,3856,4.798,3890,4.017,3954,5.263,3964,5.263,3969,5.263,3970,4.881,3984,6.066,3985,7.774,3986,4.881,3987,7.71,3988,5.263,3989,7.71,3990,5.842,3991,8.63,3992,5.842,3993,5.842,3994,5.842,3995,5.842,3996,5.263,3997,5.842]],["title/classes/TenantType.html",[0,0.256,3856,3.262]],["body/classes/TenantType.html",[0,0.279,2,0.867,3,0.046,4,0.041,5,0.037,7,0.289,8,1.217,11,0.982,13,3.599,14,4.464,15,1.585,16,1.049,23,0.548,24,3.599,25,0.004,27,1.808,28,4.562,29,4.567,31,0.581,34,1.696,35,2.298,36,2.298,38,4.314,39,3.282,46,3.123,47,5.68,62,0.103,68,1.255,71,0.05,77,0.003,78,0.003,826,5.311,1627,4.272,1680,5.091,1683,6.832,1688,4.773,1689,3.454,3856,4.727,3862,8.302,3998,5.713,3999,5.713,4000,5.713,4001,5.713,4002,5.713,4003,5.713,4004,5.713]],["title/classes/TenantTypeDto.html",[0,0.256,1663,4.381]],["body/classes/TenantTypeDto.html",[0,0.441,2,1.144,3,0.061,4,0.055,5,0.049,7,0.382,8,1.45,15,1.802,23,0.404,25,0.004,27,1.399,31,0.449,34,1.465,39,2.908,62,0.123,65,2.253,68,1.656,71,0.066,77,0.003,78,0.003,81,4.998,83,4.545,84,4.006,1663,7.563,1668,8.155,1680,4.637,1682,6.296,4005,7.536]],["title/entities/TenantTypeEntity.html",[85,1.864,3134,3.262]],["body/entities/TenantTypeEntity.html",[0,0.244,3,0.04,4,0.036,5,0.032,7,0.253,8,1.111,11,0.929,13,3.36,14,4.167,15,1.48,16,1.058,23,0.545,24,3.36,25,0.004,27,1.738,29,3.483,31,0.558,34,1.628,35,2.174,36,2.363,38,4.082,46,4.942,62,0.094,71,0.061,77,0.003,78,0.003,85,2.832,87,2.288,89,4.769,93,5.112,96,4.601,99,3.436,113,5.112,117,3.11,118,4.321,122,1.625,123,3.882,124,2.941,125,2.671,126,2.141,322,1.984,694,4.962,807,5.457,808,5.457,809,5.187,810,5.457,811,5.457,812,5.457,813,5.457,814,5.457,815,5.457,816,5.457,817,5.457,818,5.457,819,5.457,820,5.457,821,5.457,822,5.457,823,5.457,824,5.457,825,4.176,826,4.957,1680,4.916,1683,6.216,2738,5.796,3134,4.316,3890,6.597,4006,4.502,4007,4.998,4008,4.998,4009,4.998,4010,4.998,4011,4.998,4012,4.998,4013,6.249,4014,4.998]],["title/classes/TenantTypeMapper.html",[0,0.256,3901,4.125]],["body/classes/TenantTypeMapper.html",[0,0.29,2,0.902,3,0.048,4,0.043,5,0.038,7,0.301,11,0.842,16,0.958,23,0.466,25,0.004,31,0.465,62,0.106,71,0.052,77,0.003,78,0.003,129,1.373,130,5.508,131,4.362,132,4.362,133,4.362,135,1.417,136,3.324,137,1.388,138,4.362,140,4.869,147,1.731,148,2.331,172,7.022,173,5.351,174,5.829,175,4.442,176,4.869,177,3.696,178,4.587,179,3.495,180,4.587,181,3.495,182,1.542,183,4.85,197,5.351,198,4.442,199,3.696,200,3.812,201,3.812,826,4.85,1680,4.457,1683,6.595,1689,3.592,3134,6.242,3135,4.963,3856,6.242,3898,3.696,3901,6.133,3902,7.838,4015,5.94,4016,5.94,4017,5.94,4018,7.795,4019,7.795,4020,7.795,4021,5.94,4022,5.94]],["title/injectables/TenantTypeRelationalRepository.html",[202,0.934,3132,4.381]],["body/injectables/TenantTypeRelationalRepository.html",[0,0.202,3,0.033,4,0.03,5,0.027,7,0.21,11,0.981,15,1.687,16,1.117,22,1.145,23,0.518,25,0.004,31,0.542,35,1.048,62,0.129,71,0.037,77,0.002,78,0.002,85,2.811,87,2.781,122,1.349,129,1.07,135,1.652,137,1.566,147,2.018,148,1.241,182,1.665,202,1.082,204,1.285,206,2.611,207,1.676,208,3.408,209,2.159,210,2.522,211,2.343,212,2.28,213,1.838,215,3.894,218,2.733,220,1.556,221,2.764,222,1.968,223,2.248,225,2.159,227,2.522,229,1.723,230,2.377,232,1.535,233,3.5,234,3.841,236,0.643,237,2.043,238,1.437,239,1.697,240,1.723,243,2.562,244,1.836,245,1.777,246,1.75,248,1.456,249,1.317,250,2.379,252,2.752,253,2.425,257,2.377,259,2.752,260,2.268,261,1.383,262,3.177,263,2.662,264,4.029,268,2.662,269,1.899,270,2.752,271,2.441,272,2.662,1680,4.773,1689,2.508,3129,5.438,3131,3.467,3132,5.075,3134,2.582,3135,3.467,3856,6.011,3898,2.582,3901,3.264,3903,3.738,3946,3.738,3986,3.467,3988,5.472,4023,9.317,4024,3.738,4025,3.738,4026,4.149,4027,4.149,4028,3.738,4029,4.149,4030,4.149,4031,4.149,4032,4.149,4033,4.149,4034,4.149,4035,6.074,4036,4.149,4037,4.149,4038,7.909,4039,6.608,4040,6.074,4041,3.738,4042,4.149,4043,4.149]],["title/classes/TenantTypeRepository.html",[0,0.256,3129,3.605]],["body/classes/TenantTypeRepository.html",[0,0.26,2,0.81,3,0.043,4,0.039,5,0.035,7,0.27,11,1.031,15,1.643,16,1.173,23,0.54,25,0.004,31,0.569,62,0.12,71,0.047,77,0.003,78,0.003,129,1.278,135,1.736,137,1.7,207,2.275,208,3.911,209,2.579,210,3.013,211,2.799,212,2.617,218,2.401,220,2.722,221,2.892,222,2.531,223,2.685,225,2.579,227,3.013,229,2.216,230,2.84,232,1.975,233,3.649,239,2.183,240,2.216,243,3.06,244,2.362,245,2.286,257,2.84,278,6.469,279,4.851,285,5.677,287,3.539,288,3.539,1680,5.003,3129,4.989,3856,6.077,3898,3.321,4024,4.807,4028,4.807,4039,7.392,4044,9.765,4045,5.336,4046,5.336,4047,5.336,4048,5.336,4049,5.336]],["title/controllers/TenantTypesController.html",[495,2.112,4050,4.381]],["body/controllers/TenantTypesController.html",[0,0.203,3,0.033,4,0.03,5,0.027,7,0.211,11,0.91,15,1.84,16,1.146,22,2.325,23,0.548,25,0.004,27,1.564,31,0.502,34,1.645,36,1.999,62,0.131,68,0.913,71,0.037,72,4.508,77,0.002,78,0.002,129,1.071,135,1.532,137,1.5,147,0.923,182,1.666,206,1.817,207,1.678,209,2.161,211,2.346,212,2.282,221,1.697,225,1.477,230,1.626,232,1.538,236,0.644,249,1.319,253,1.109,257,1.626,261,2.027,495,2.45,497,1.65,499,4.77,502,2.857,504,2.756,506,2.857,507,1.559,509,5.25,510,2.857,511,4.181,513,2.756,516,2.857,518,3.324,519,3.487,520,2.666,521,2.666,522,1.971,523,2.445,526,2.221,528,2.221,529,3.578,530,3.676,531,4.657,532,5.25,533,2.221,534,2.445,535,2.129,536,2.666,537,2.512,538,2.756,539,3.784,540,2.221,541,3.902,542,2.756,543,2.857,546,2.445,547,1.839,548,2.129,549,1.902,550,2.756,553,3.131,554,2.756,555,3.727,556,2.756,557,1.971,558,4.033,560,2.756,561,2.857,563,2.756,566,2.756,567,2.756,930,5.836,1552,2.972,1669,4.784,1679,6.58,1680,4.508,2411,6.613,2547,3.107,3856,5.656,3898,2.586,4050,5.081,4051,4.155,4052,3.743,4053,4.155,4054,4.155,4055,4.155,4056,4.155,4057,7.333,4058,4.155,4059,5.145,4060,3.472,4061,4.155,4062,4.155,4063,4.155,4064,4.155,4065,4.155,4066,4.155,4067,4.155,4068,4.155]],["title/modules/TenantTypesModule.html",[289,1.037,869,3.75]],["body/modules/TenantTypesModule.html",[0,0.318,3,0.052,4,0.047,5,0.042,22,2.283,25,0.004,62,0.134,71,0.057,77,0.003,78,0.003,236,1.01,289,1.798,291,2.658,292,1.903,293,2.145,294,2.145,295,2.118,296,2.993,297,2.993,302,2.724,303,2.067,304,2.118,312,2.793,497,3.285,580,3.407,582,4.053,583,3.735,584,4.18,869,7.549,930,4.32,1680,3.337,3126,7.982,4050,7.596,4059,7.636,4060,5.442,4069,5.868,4070,5.868,4071,5.868,4072,6.514,4073,6.514,4074,6.514]],["title/modules/TenantTypesSeedModule.html",[289,1.037,4075,4.125]],["body/modules/TenantTypesSeedModule.html",[0,0.339,3,0.056,4,0.05,5,0.045,22,1.917,25,0.004,62,0.133,71,0.061,77,0.003,78,0.003,236,1.077,238,2.405,289,1.852,291,2.231,292,2.029,293,2.287,294,2.287,295,2.258,296,3.082,297,3.082,302,2.836,303,2.204,304,2.258,306,4.321,307,3.419,308,4.321,312,2.345,930,4.606,1552,6.161,1680,3.558,1689,4.199,3134,4.321,3136,6.256,3890,4.775,4075,8.178,4076,6.256,4077,6.256,4078,6.256,4079,8.47,4080,6.256]],["title/injectables/TenantTypesSeedService.html",[202,0.934,4079,4.125]],["body/injectables/TenantTypesSeedService.html",[0,0.274,3,0.045,4,0.041,5,0.036,7,0.285,11,0.607,14,5.07,16,1.217,20,5.168,23,0.301,25,0.004,31,0.448,62,0.123,71,0.05,77,0.003,78,0.003,122,1.828,129,1.324,135,1.022,137,1.001,147,1.88,202,1.338,204,1.742,206,2.139,213,2.274,215,4.772,236,0.872,237,2.768,238,1.947,248,1.973,253,2.006,314,3.399,316,5.183,320,4.423,349,5.821,350,5.821,359,5.376,364,4.022,370,5.065,371,5.065,417,5.065,424,4.022,809,4.204,826,6.158,930,5.616,1552,6.056,1680,2.88,1683,3.866,1689,3.399,3134,3.498,3363,4.697,3597,5.065,3760,4.697,3772,4.697,3773,4.697,3839,6.771,3840,5.065,3890,3.866,3986,4.697,4079,5.913,4080,7.627,4081,5.065,4082,7.516,4083,5.622,4084,5.622,4085,5.622,4086,7.516,4087,5.622,4088,5.913,4089,5.622,4090,5.622,4091,5.622,4092,5.622,4093,5.622,4094,5.622,4095,5.622,4096,5.622,4097,5.622,4098,5.622,4099,7.516,4100,5.622,4101,5.622]],["title/injectables/TenantTypesService.html",[202,0.934,4059,3.75]],["body/injectables/TenantTypesService.html",[0,0.218,3,0.036,4,0.032,5,0.029,7,0.227,11,1.004,14,3.357,15,1.522,16,1.19,22,1.771,23,0.533,25,0.004,31,0.554,62,0.126,71,0.039,77,0.002,78,0.002,129,1.131,135,1.691,137,1.608,182,1.786,202,1.143,204,1.387,206,2.281,207,1.771,208,3.559,209,2.281,210,2.665,211,3.483,212,2.381,213,1.942,222,2.123,223,2.375,225,2.281,227,2.665,229,1.859,230,2.512,232,1.657,236,0.694,243,2.707,244,1.981,245,1.918,248,1.571,249,1.421,257,2.936,260,2.447,262,2.342,292,1.308,322,1.777,323,1.831,507,1.679,526,2.393,528,2.393,553,1.949,555,1.981,580,2.342,593,3.88,604,2.342,605,5.436,606,5.436,826,3.994,930,6.309,1669,5.049,1679,6.487,1680,4.873,1683,5.159,1688,3.74,1689,2.707,3129,6.208,3131,3.74,3856,5.786,3898,2.786,4025,4.033,4039,6.847,4041,4.033,4052,5.782,4057,7.315,4059,4.591,4102,4.477,4103,4.477,4104,4.477,4105,4.477,4106,4.477,4107,4.477,4108,4.477,4109,4.477,4110,4.477,4111,4.477,4112,4.477,4113,4.033,4114,4.477,4115,4.477,4116,4.477,4117,4.477,4118,4.477,4119,4.477,4120,4.477,4121,4.477,4122,4.477,4123,4.477]],["title/controllers/TenantsController.html",[495,2.112,4124,4.381]],["body/controllers/TenantsController.html",[0,0.209,3,0.034,4,0.031,5,0.028,7,0.217,11,0.92,15,1.851,16,1.155,22,2.532,23,0.547,25,0.004,27,1.583,31,0.508,34,1.653,36,2.028,62,0.132,68,0.941,71,0.038,72,4.555,77,0.002,78,0.002,129,1.095,135,1.55,137,1.518,147,0.951,182,1.686,206,1.848,207,1.715,209,2.209,211,2.397,212,1.972,221,1.734,225,1.522,230,1.675,232,1.584,236,0.664,249,1.359,253,1.142,257,1.675,261,2.072,328,2.839,495,2.504,497,1.7,499,4.852,502,2.943,504,2.839,506,2.943,507,1.606,509,5.324,510,2.943,511,4.273,513,2.839,516,2.943,518,3.397,519,3.564,520,2.747,521,2.747,522,2.03,523,2.519,526,2.288,528,2.288,529,3.656,530,3.757,531,4.723,532,5.324,533,2.288,534,2.519,535,2.193,536,2.747,537,2.588,538,2.839,539,3.867,540,2.288,541,3.987,542,2.839,543,2.943,546,2.519,547,1.894,548,2.193,549,1.96,550,2.839,553,3.185,554,2.839,555,3.772,556,2.839,557,2.03,558,4.122,560,2.839,561,2.943,563,2.839,564,3.577,566,2.839,567,2.839,587,4.423,1640,6.649,2416,6.707,3898,2.664,4124,5.192,4125,4.281,4126,3.856,4127,4.281,4128,4.281,4129,4.281,4130,4.281,4131,7.393,4132,4.281,4133,3.856,4134,5.192,4135,4.281,4136,4.281,4137,4.281,4138,4.281,4139,4.281,4140,4.281,4141,4.281,4142,4.281]],["title/modules/TenantsModule.html",[289,1.037,575,3.17]],["body/modules/TenantsModule.html",[0,0.28,3,0.046,4,0.042,5,0.037,22,1.583,25,0.004,62,0.141,71,0.051,77,0.003,78,0.003,236,0.89,289,1.691,291,2.447,292,1.676,293,1.889,294,1.889,295,1.865,296,2.816,297,2.816,302,2.508,303,1.82,304,1.865,312,2.571,497,3.024,575,6.405,576,4.605,579,3.944,580,3,582,3.569,583,3.289,584,3.681,587,6.337,860,6.702,862,5.237,865,5.052,868,5.237,869,6.973,871,4.793,927,2.581,928,3.681,929,4.793,930,3.805,931,5.167,932,4.793,933,4.513,2650,5.9,3117,7.837,4124,7.145,4133,5.167,4143,5.167,4144,5.167,4145,5.736,4146,5.167,4147,5.736,4148,5.736]],["title/injectables/TenantsService.html",[202,0.934,587,3.17]],["body/injectables/TenantsService.html",[0,0.106,3,0.017,4,0.016,5,0.014,7,0.11,11,0.763,15,1.024,16,0.948,22,2.129,23,0.502,25,0.004,31,0.422,35,2.562,54,1.375,62,0.125,67,1.112,71,0.019,77,0.001,78,0.001,129,0.642,135,1.285,137,1.184,147,1.862,148,2.507,182,1.316,202,0.649,204,0.672,206,1.68,207,1.005,208,2.233,209,1.295,210,1.513,211,2.566,212,1.494,213,1.102,222,1.029,223,1.348,225,1.295,227,1.513,229,0.901,230,1.425,232,0.803,236,0.337,243,1.536,244,0.96,245,0.93,248,2.48,249,2.243,253,2.237,257,1.842,260,1.186,262,1.135,269,3.838,292,0.634,317,3.956,464,4.209,507,3.615,526,1.16,528,1.16,553,0.945,555,0.96,580,1.135,587,2.202,588,3.52,589,3.715,593,2.202,600,1.552,601,1.068,602,4.572,604,1.135,605,3.657,606,3.657,610,3.145,611,4.481,612,5.764,615,3.043,617,5.836,723,2.083,793,4.295,829,2.606,830,2.606,831,2.606,832,2.606,927,1.639,928,1.392,930,1.439,952,1.392,1592,2.143,1640,4.594,1643,2.504,1644,5.285,1645,6.269,1646,4.689,1647,5.113,2103,2.412,2252,3.538,2508,2.699,2509,1.623,2538,5.1,2539,1.707,2541,1.312,2650,1.35,2692,4.123,3022,4.075,3155,1.552,3274,3.043,3282,1.813,3571,5.1,3856,2.929,3860,1.707,3861,1.707,3862,1.813,3898,1.35,3968,4.606,3970,1.813,4059,3.944,4060,1.813,4126,3.281,4131,5.561,4134,3.043,4149,2.17,4150,1.955,4151,4.707,4152,4.707,4153,2.17,4154,2.17,4155,2.17,4156,2.17,4157,2.17,4158,2.17,4159,2.17,4160,1.955,4161,1.955,4162,2.17,4163,3.642,4164,4.966,4165,3.281,4166,2.17,4167,3.281,4168,2.17,4169,3.642,4170,4.966,4171,3.281,4172,2.17,4173,3.281,4174,2.17,4175,3.642,4176,6.652,4177,3.642,4178,2.17,4179,3.642,4180,6.652,4181,3.642,4182,2.17,4183,3.642,4184,4.966,4185,3.281,4186,2.17,4187,3.281,4188,2.17,4189,3.642,4190,5.513,4191,2.17,4192,3.642,4193,2.17,4194,2.17,4195,2.17,4196,2.17,4197,2.17,4198,2.17,4199,2.17,4200,2.17,4201,2.17,4202,2.17,4203,2.17,4204,3.642,4205,2.17,4206,2.17,4207,3.642,4208,2.17,4209,2.17,4210,3.642,4211,2.17,4212,3.642,4213,2.17,4214,3.642,4215,2.17,4216,2.17,4217,3.642,4218,2.17,4219,2.17,4220,2.17,4221,2.17,4222,2.17,4223,2.17,4224,2.17,4225,2.17,4226,2.17,4227,2.17,4228,2.17]],["title/classes/Tokens.html",[0,0.256,4229,4.381]],["body/classes/Tokens.html",[0,0.434,2,1.111,3,0.059,4,0.053,5,0.047,7,0.371,8,1.425,11,0.961,23,0.477,25,0.004,27,1.652,31,0.53,34,1.614,39,3.078,62,0.121,65,2.189,68,1.609,71,0.065,77,0.003,78,0.003,83,4.466,996,6.652,1028,5.76,4229,7.433,4230,7.321,4231,9.583,4232,9.583,4233,7.321,4234,7.321,4235,7.321]],["title/injectables/TypeOrmConfigService.html",[202,0.934,903,4.125]],["body/injectables/TypeOrmConfigService.html",[0,0.256,3,0.042,4,0.038,5,0.034,7,0.266,11,0.567,16,0.645,23,0.385,25,0.004,30,2.146,31,0.428,36,2.669,62,0.119,71,0.046,77,0.003,78,0.003,87,2.402,129,1.264,135,0.954,137,0.934,182,1.038,202,1.277,204,1.626,213,1.588,236,0.814,238,1.817,246,2.213,507,3.296,549,2.402,687,2.745,891,4.968,892,2.053,903,5.644,910,2.688,911,2.745,945,5.503,1007,3.265,1129,2.535,1856,5.364,1859,4.128,1878,3.754,1992,3.608,1997,3.924,2000,3.924,2007,4.128,2009,4.384,2017,4.384,2019,4.384,2022,4.384,2798,4.384,2859,4.727,2868,4.727,2870,4.727,2871,4.727,2872,4.727,2875,3.924,4236,8.173,4237,8.786,4238,5.247,4239,5.247,4240,8.786,4241,7.173,4242,5.247,4243,5.247,4244,5.247,4245,5.247,4246,4.727,4247,4.727,4248,4.727,4249,5.247,4250,6.462,4251,4.727,4252,4.727,4253,4.727,4254,4.384,4255,4.727,4256,4.727,4257,4.727,4258,4.384,4259,4.727,4260,4.727,4261,5.247,4262,4.727,4263,4.727,4264,5.247,4265,4.384,4266,5.247,4267,5.247,4268,5.247,4269,5.247,4270,5.247,4271,5.247]],["title/classes/UpdateAccountDto.html",[0,0.256,515,4.125]],["body/classes/UpdateAccountDto.html",[0,0.387,2,1.205,3,0.064,4,0.058,5,0.051,25,0.004,62,0.127,68,1.744,71,0.07,77,0.004,78,0.004,126,3.999,207,2.19,501,5.935,515,7.344,527,6.631,1445,7.15,4272,7.937,4273,9.335,4274,5.264]],["title/classes/UpdateKycDetailsDto.html",[0,0.256,2536,4.125]],["body/classes/UpdateKycDetailsDto.html",[0,0.384,2,1.195,3,0.063,4,0.057,5,0.051,25,0.004,62,0.126,68,1.729,71,0.069,77,0.003,78,0.003,126,3.98,207,2.172,927,4.18,1500,5.885,1501,3.733,1503,6.192,1671,5.885,2536,7.308,4274,5.22,4275,7.87,4276,9.29]],["title/classes/UpdateRegionDto.html",[0,0.256,3020,4.125]],["body/classes/UpdateRegionDto.html",[0,0.387,2,1.205,3,0.064,4,0.058,5,0.051,25,0.004,62,0.127,68,1.744,71,0.07,77,0.004,78,0.004,126,3.999,207,2.19,1531,5.935,1533,7.15,3020,7.344,3024,6.631,4274,5.264,4277,7.937,4278,9.335]],["title/classes/UpdateResidenceDto.html",[0,0.256,3252,4.125]],["body/classes/UpdateResidenceDto.html",[0,0.387,2,1.205,3,0.064,4,0.058,5,0.051,25,0.004,62,0.127,68,1.744,71,0.07,77,0.004,78,0.004,126,3.999,207,2.19,1614,5.935,1616,7.15,3252,7.344,3256,6.631,4274,5.264,4279,7.937,4280,9.335]],["title/classes/UpdateSettingsDto.html",[0,0.256,3569,4.125]],["body/classes/UpdateSettingsDto.html",[0,0.387,2,1.205,3,0.064,4,0.058,5,0.051,25,0.004,62,0.127,68,1.744,71,0.07,77,0.004,78,0.004,126,3.999,207,2.19,1632,5.935,1634,6.631,3569,7.344,3573,6.631,4274,5.264,4281,7.937,4282,9.335]],["title/classes/UpdateTenantDto.html",[0,0.256,4131,4.125]],["body/classes/UpdateTenantDto.html",[0,0.387,2,1.205,3,0.064,4,0.058,5,0.051,25,0.004,62,0.127,68,1.744,71,0.07,77,0.004,78,0.004,126,3.999,207,2.19,1640,5.935,1642,7.15,4131,7.344,4134,6.631,4274,5.264,4283,7.937,4284,9.335]],["title/classes/UpdateTenantTypeDto.html",[0,0.256,4057,4.125]],["body/classes/UpdateTenantTypeDto.html",[0,0.384,2,1.195,3,0.063,4,0.057,5,0.051,22,2.564,25,0.004,62,0.126,68,1.729,71,0.069,77,0.003,78,0.003,126,3.98,207,2.172,1669,6.192,1679,5.885,1680,4.032,1682,6.576,4057,7.308,4274,5.22,4285,7.87,4286,9.29]],["title/classes/UpdateUserDto.html",[0,0.256,4287,4.125]],["body/classes/UpdateUserDto.html",[0,0.369,2,0.692,3,0.037,4,0.033,5,0.03,7,0.231,8,1.041,11,1.13,23,0.567,25,0.004,27,1.736,31,0.58,34,1.669,35,2.547,62,0.13,63,4.16,65,1.362,68,1.001,71,0.04,77,0.002,78,0.002,126,2.784,207,1.257,344,3.529,610,2.842,986,3.963,988,3.963,995,5.348,997,3.73,1019,3.146,1076,3.259,1129,3.66,1130,4.86,1132,4.469,1133,2.243,1134,1.983,1135,3.132,1136,3.259,1137,3.259,1138,3.259,1237,3.584,1238,3.584,1239,4.649,1240,4.649,1335,4.581,1336,4.458,1424,4.862,1425,6.825,1437,5.909,1438,5.665,1439,3.806,1441,3.584,1723,3.407,1734,6.005,1735,4.104,1739,6.872,1740,4.104,1743,3.407,1744,4.104,2879,4.104,4274,3.022,4287,5.113,4288,9.865,4289,6.499,4290,4.556,4291,4.556,4292,6.499,4293,4.556,4294,4.556,4295,4.556,4296,4.556,4297,4.556,4298,4.556,4299,4.556,4300,4.556,4301,3.259]],["title/classes/User.html",[0,0.256,54,1.532]],["body/classes/User.html",[0,0.257,2,0.521,3,0.028,4,0.025,5,0.022,7,0.174,8,0.844,11,1.07,13,2.704,15,1.191,19,2.111,22,2.428,23,0.564,24,2.704,25,0.004,27,1.854,28,5.146,29,4.418,30,2.154,31,0.595,34,1.68,35,2.538,36,2.223,38,3.884,39,3.265,54,1.539,62,0.127,66,1.967,68,0.754,71,0.03,77,0.002,78,0.002,147,0.762,344,4.099,507,2.405,610,3.301,723,3.183,793,4.281,873,3.505,874,2.074,918,2.074,919,1.689,927,1.544,977,4.586,986,3.353,988,3.353,997,4.535,1019,2.986,1129,3.097,1134,1.494,1239,3.768,1240,3.768,1335,3.876,1336,3.772,1424,4.114,1644,4.252,1646,3.772,1700,4.408,1809,2.867,2103,3.975,2508,4.124,2509,2.565,2541,2.074,3155,2.454,3333,5.044,3335,4.252,3338,2.699,3860,2.699,3861,2.699,3996,3.091,4302,3.091,4303,3.431,4304,3.431,4305,3.431,4306,3.431,4307,3.431,4308,3.431,4309,3.431,4310,3.431,4311,3.431,4312,3.431,4313,3.431,4314,3.431,4315,3.431,4316,3.431,4317,3.431,4318,3.431,4319,3.431,4320,3.431,4321,3.431,4322,3.431,4323,3.431,4324,5.267,4325,7.192,4326,2.867,4327,2.867,4328,2.867]],["title/classes/UserDto.html",[0,0.256,1083,3.364]],["body/classes/UserDto.html",[0,0.437,2,1.126,3,0.06,4,0.054,5,0.048,7,0.376,8,1.436,15,1.79,19,2.952,23,0.481,25,0.004,27,1.377,28,3.965,31,0.442,34,1.621,39,2.88,62,0.122,65,2.218,68,1.63,71,0.065,77,0.003,78,0.003,83,4.502,683,4.254,997,4.415,1083,5.753,4329,7.417,4330,7.417,4331,7.417]],["title/entities/UserEntity.html",[85,1.864,103,2.487]],["body/entities/UserEntity.html",[0,0.164,3,0.042,4,0.024,5,0.022,7,0.39,8,0.831,11,1.066,13,2.671,15,1.176,16,0.414,19,1.709,22,1.748,23,0.549,24,2.671,25,0.004,27,1.847,29,4.995,30,2.912,31,0.593,34,1.656,35,2.546,36,2.64,38,3.855,54,0.983,62,0.124,71,0.03,77,0.002,78,0.002,85,2.252,87,1.541,89,2.314,93,4.065,99,2.314,103,2.462,104,2.648,105,6.032,106,2.812,109,3.099,110,4.065,113,4.065,115,1.799,117,3.942,118,4.252,119,4.336,120,4.083,121,4.568,122,1.095,123,2.904,124,1.98,125,1.799,126,1.442,310,4.189,311,2.16,322,1.336,344,2.951,507,1.263,610,2.376,694,3.713,793,3.18,927,1.515,950,2.035,986,3.314,988,3.314,1019,2.63,1129,3.06,1294,2.517,1295,2.648,1312,2.648,1335,3.83,1336,3.727,1424,4.065,1524,2.094,1644,4.201,1646,3.727,1700,4.355,2125,4.722,2482,4.568,2483,2.408,2599,3.881,2902,4.083,2991,2.232,3114,4.568,3454,5.706,3755,2.648,3821,5.093,3835,2.648,3871,4.675,3872,6.414,3875,3.032,3876,3.032,3889,2.812,3891,5.706,3892,4.675,3893,4.675,4332,3.366,4333,3.366,4334,3.366,4335,3.366,4336,6.334,4337,3.366,4338,3.366,4339,7.12,4340,3.366,4341,3.366,4342,3.366,4343,3.366,4344,3.366,4345,3.366,4346,3.366,4347,3.366,4348,3.366,4349,3.366,4350,3.366,4351,5.19,4352,3.366,4353,3.366,4354,2.812,4355,3.366,4356,3.366,4357,3.366]],["title/classes/UserMapper.html",[0,0.256,144,3.007]],["body/classes/UserMapper.html",[0,0.227,2,0.706,3,0.037,4,0.034,5,0.03,7,0.236,11,0.712,16,0.811,23,0.354,25,0.004,31,0.393,34,0.753,35,1.666,54,2.748,62,0.13,71,0.041,77,0.002,78,0.002,129,1.162,130,5.117,131,3.692,132,3.692,133,3.692,135,1.2,136,2.604,137,1.175,138,3.692,140,4.289,144,3.783,147,1.465,148,2.812,176,4.667,178,3.882,179,2.738,180,3.882,181,2.738,182,1.305,344,4.102,507,3.431,610,3.303,1424,4.918,1759,5.27,1798,6.035,1799,3.888,2109,2.986,2132,3.661,2135,5.19,2136,3.661,2375,2.895,2610,4.192,2611,4.192,2620,5.512,2621,3.888,2624,3.479,3348,6.03,3468,5.19,3469,3.661,3825,6.03,4326,3.888,4327,3.888,4358,4.653,4359,4.653,4360,4.653,4361,4.192,4362,4.653,4363,4.192,4364,4.192,4365,5.943,4366,4.192,4367,5.943,4368,4.192,4369,5.943,4370,4.192,4371,5.943,4372,4.192,4373,5.943,4374,4.192,4375,5.943,4376,4.192,4377,5.943,4378,6.905,4379,4.192,4380,4.192,4381,5.943,4382,4.653,4383,4.653,4384,4.653,4385,4.653,4386,4.192,4387,4.653,4388,4.653,4389,4.192,4390,4.192,4391,4.192,4392,4.653,4393,4.653,4394,4.653,4395,4.653,4396,4.653,4397,4.653,4398,4.653,4399,4.653,4400,4.653,4401,4.653,4402,4.653,4403,4.653]],["title/classes/UserMapper-1.html",[0,0.213,144,2.507,261,1.457]],["body/classes/UserMapper-1.html",[0,0.19,2,0.592,3,0.031,4,0.028,5,0.025,7,0.198,11,0.627,16,0.714,19,1.285,23,0.311,25,0.004,31,0.346,35,2.54,54,2.603,62,0.129,71,0.034,77,0.002,78,0.002,103,4.226,129,1.023,130,4.815,131,3.249,132,3.249,133,3.249,135,1.056,136,2.184,137,1.034,138,3.249,140,3.88,142,2.505,143,2.792,144,3.33,147,1.29,148,2.455,149,2.792,150,4.96,151,2.792,176,4.297,177,2.429,178,3.417,179,2.297,180,3.417,181,2.297,182,1.148,183,3.613,184,2.792,185,2.684,199,2.429,200,2.505,201,2.505,310,4.08,311,2.505,344,3.23,507,3.228,610,2.601,927,1.757,1424,4.927,2109,2.505,2125,4.599,2375,2.429,2561,2.589,2563,3.071,2612,3.261,2620,4.852,2621,3.261,2624,2.919,2638,3.516,2927,2.792,3142,3.261,3176,3.261,3468,4.568,3469,3.071,3482,3.516,3703,2.919,3821,4.96,3835,3.071,3889,3.261,3899,3.516,3900,3.516,3906,5.231,3907,6.917,3908,3.516,3909,3.516,3910,5.231,3911,6.917,3912,3.516,3913,3.516,3926,5.231,3927,6.917,3928,3.516,3929,3.516,3934,5.231,3935,3.516,3936,3.516,3937,5.231,3938,3.516,3939,3.516,3947,5.231,3948,3.516,3949,3.516,3950,3.516,4365,5.231,4366,3.516,4367,5.231,4368,3.516,4369,5.231,4370,3.516,4371,5.231,4372,3.516,4373,5.231,4374,3.516,4375,5.231,4376,3.516,4377,3.516,4378,6.246,4379,3.516,4380,3.516,4381,5.231,4389,3.516,4390,3.516,4391,3.516,4404,3.903,4405,3.903,4406,3.903,4407,3.516,4408,3.903,4409,3.903,4410,3.903,4411,3.903,4412,3.903,4413,3.903,4414,3.903,4415,3.903,4416,3.903,4417,3.903,4418,3.903,4419,3.903]],["title/classes/UserRepository.html",[0,0.256,318,3.007]],["body/classes/UserRepository.html",[0,0.236,2,0.734,3,0.039,4,0.035,5,0.031,7,0.245,11,1.048,15,1.575,16,1.193,23,0.546,25,0.004,31,0.579,35,1.712,54,2.881,62,0.121,71,0.043,77,0.003,78,0.003,129,1.194,135,1.765,137,1.728,207,2.16,209,2.41,210,2.815,211,2.615,212,2.484,218,2.176,220,2.543,221,2.918,223,3.139,225,2.41,227,2.815,229,2.008,230,2.653,232,1.789,233,3.464,239,1.978,240,2.008,243,2.859,244,2.14,245,2.072,257,2.653,278,6.502,279,4.606,285,5.444,287,3.207,288,3.207,318,3.887,1019,2.008,1335,4.098,1336,3.989,1356,5.279,1370,3.616,2368,4.496,2375,3.009,2376,4.496,4301,3.459,4420,4.836,4421,5.333,4422,6.158,4423,6.158,4424,4.836,4425,5.333,4426,4.836,4427,4.836,4428,4.836,4429,3.804,4430,4.836,4431,3.804,4432,4.836,4433,4.836,4434,4.836,4435,3.616,4436,5.069,4437,5.069,4438,3.804,4439,3.804]],["title/classes/UserSchemaClass.html",[0,0.256,1798,3.364]],["body/classes/UserSchemaClass.html",[0,0.212,2,0.661,3,0.035,4,0.032,5,0.028,7,0.221,8,1.007,11,1.055,13,3.115,23,0.562,24,3.115,25,0.004,27,1.857,31,0.596,34,1.698,35,2.548,36,2.168,38,4.242,62,0.125,71,0.065,77,0.002,78,0.002,85,1.547,125,2.327,126,1.865,147,0.967,261,1.451,322,3.407,344,3.441,507,2.36,610,2.771,694,4.499,731,5.188,915,2.186,986,3.863,988,3.863,1019,3.067,1129,3.568,1294,3.255,1295,3.425,1312,3.425,1335,4.465,1336,4.346,1424,4.739,1700,5.078,1759,5.9,1766,3.803,1797,3.425,1798,4.036,1804,4.499,1818,3.255,2107,2.436,2171,8.055,2173,3.425,2174,4.703,2175,3.425,2177,3.425,2178,3.425,2677,6.171,2681,3.637,3348,6.751,3524,8.306,3825,6.751,4354,3.637,4361,3.921,4363,3.921,4364,3.921,4386,3.921,4440,3.637,4441,4.353,4442,4.353,4443,4.353,4444,4.353,4445,4.353,4446,4.353,4447,4.353,4448,4.353,4449,4.353,4450,4.353,4451,4.353,4452,4.353,4453,3.921,4454,3.921,4455,4.353]],["title/modules/UserSeedModule.html",[289,1.037,3399,3.921]],["body/modules/UserSeedModule.html",[0,0.335,3,0.055,4,0.05,5,0.044,16,0.843,25,0.004,54,2.004,62,0.132,71,0.06,77,0.003,78,0.003,236,1.064,289,1.841,291,2.204,292,2.004,293,2.259,294,2.259,295,2.231,296,3.065,297,3.065,302,2.814,303,2.177,304,2.231,306,4.269,308,4.269,312,2.316,914,4.717,915,3.445,1764,5.13,1766,4.148,1797,6.724,1798,4.402,1803,6.18,3399,7.753,3464,5.398,4456,6.18,4457,6.18,4458,6.18,4459,7.689,4460,6.18]],["title/injectables/UserSeedService.html",[202,0.934,4459,3.75]],["body/injectables/UserSeedService.html",[0,0.27,3,0.045,4,0.04,5,0.036,7,0.281,11,0.599,16,0.682,23,0.297,25,0.004,31,0.444,54,2.176,62,0.134,71,0.049,77,0.003,78,0.003,129,1.312,135,1.008,137,0.987,147,2.226,148,2.227,202,1.326,204,1.718,206,2.124,213,2.253,220,2.794,236,0.86,248,1.946,249,1.76,253,2.675,314,3.353,316,5.154,320,4.363,344,3.469,610,2.794,852,4.363,915,2.784,986,3.895,988,3.895,1019,3.732,1129,4.664,1239,3.967,1240,3.967,1292,4.363,1293,4.147,1300,3.678,1301,3.813,1305,3.967,1306,4.147,1798,3.558,1807,5.961,2099,7.219,2106,4.147,2107,3.103,3335,5.577,3464,4.363,4081,4.995,4328,6.222,4459,5.327,4460,7.574,4461,5.545,4462,4.995,4463,7.447,4464,6.708,4465,7.509,4466,6.222,4467,6.708,4468,7.447,4469,5.545,4470,7.447,4471,7.447,4472,5.545]],["title/injectables/UserSeedService-1.html",[202,0.778,261,1.457,4459,3.127]],["body/injectables/UserSeedService-1.html",[0,0.209,3,0.034,4,0.031,5,0.028,7,0.218,11,0.791,15,1.585,16,0.901,22,2.596,23,0.393,25,0.004,31,0.479,34,1.186,54,1.254,62,0.132,71,0.038,77,0.002,78,0.002,103,2.036,109,3.998,115,2.295,116,2.462,122,1.396,129,1.097,135,1.333,137,1.305,147,2.19,182,0.849,202,1.109,204,1.33,206,2.248,213,1.884,215,4.955,234,3.329,236,0.666,237,2.114,238,1.487,248,3.416,249,2.551,253,2.51,263,2.755,310,5.403,311,2.755,314,2.596,316,4.61,317,4.101,318,3.571,319,5.765,325,2.755,326,3.071,327,3.378,328,4.131,329,2.848,332,5.242,344,4.595,610,1.611,986,2.246,988,2.246,1019,1.783,1129,4.3,1292,3.378,1293,3.211,1300,2.848,1301,2.952,1305,3.071,1306,3.211,1340,3.587,1646,4.312,1927,4.9,2370,4.56,2488,3.587,2495,3.587,2503,3.587,2902,2.462,2956,4.702,2965,3.378,2970,3.587,2991,2.848,3365,3.868,3618,5.61,3768,3.868,4407,5.61,4459,4.455,4465,5.203,4466,3.587,4467,3.868,4473,8.534,4474,7.328,4475,6.228,4476,4.294,4477,4.294,4478,4.294,4479,6.228,4480,4.294,4481,4.294,4482,4.294,4483,4.294,4484,6.228,4485,4.294,4486,4.294,4487,4.294,4488,4.294,4489,4.294,4490,4.294,4491,4.294,4492,4.294,4493,4.294,4494,4.294,4495,4.294]],["title/controllers/UsersController.html",[495,2.112,4496,4.381]],["body/controllers/UsersController.html",[0,0.19,3,0.031,4,0.028,5,0.025,7,0.198,11,0.886,15,1.817,16,1.125,23,0.539,25,0.004,27,1.524,31,0.489,34,1.393,36,2.073,54,2.782,62,0.135,68,0.858,71,0.034,72,4.408,77,0.002,78,0.002,129,1.023,135,1.493,137,1.462,147,0.867,182,1.623,206,1.751,207,1.603,211,2.24,212,2.201,221,2.657,230,1.527,232,1.444,236,0.605,239,1.596,240,1.621,249,1.239,253,1.042,257,1.527,261,1.936,495,2.34,497,1.55,499,4.599,504,2.589,509,5.093,513,2.589,518,3.174,519,3.33,520,2.505,521,2.505,522,1.851,523,2.297,526,2.086,528,2.086,529,3.417,530,3.511,531,4.518,532,5.093,533,2.086,534,2.297,535,2,536,2.505,537,2.36,538,2.589,539,3.613,540,2.086,541,3.726,542,2.589,546,2.297,547,1.727,548,2,549,1.787,550,2.589,553,3.019,554,2.589,555,3.632,556,2.589,557,1.851,558,3.851,560,2.589,563,2.589,566,2.589,567,2.589,589,4.192,601,1.922,959,5.455,964,2.919,965,6.138,977,5.493,979,5.185,1076,5.493,1098,3.516,1300,2.589,1301,2.684,1356,4.315,1647,2.505,2234,3.071,2370,2.429,2375,2.429,2380,5.742,2547,2.919,3335,5.093,3380,4.852,4287,6.041,4301,4.96,4435,2.919,4436,2.919,4437,2.919,4496,4.852,4497,3.903,4498,5.807,4499,3.903,4500,6.934,4501,3.903,4502,3.903,4503,5.807,4504,3.903,4505,3.903,4506,3.903,4507,3.903,4508,3.903,4509,3.903,4510,3.903,4511,3.903,4512,7.679,4513,3.903,4514,3.903,4515,3.903,4516,3.516,4517,3.903,4518,3.903,4519,3.903,4520,3.903,4521,3.903,4522,3.903,4523,3.903,4524,3.903,4525,3.903,4526,3.903,4527,3.903,4528,3.903,4529,3.903]],["title/injectables/UsersDocumentRepository.html",[202,0.934,1801,4.381]],["body/injectables/UsersDocumentRepository.html",[0,0.167,3,0.028,4,0.025,5,0.022,7,0.174,11,0.974,15,1.336,16,1.109,23,0.516,25,0.004,31,0.538,35,2.279,36,0.867,54,2.843,62,0.125,71,0.03,77,0.002,78,0.002,129,0.928,135,1.641,137,1.567,144,1.967,147,2.138,148,1.575,182,1.822,202,0.938,204,1.063,206,2.612,207,1.454,209,1.872,210,2.187,211,2.032,212,1.672,213,1.594,218,2.37,220,1.287,221,2.765,223,2.661,225,1.872,227,2.187,229,2.187,230,2.061,232,1.949,233,3.183,234,3.427,236,0.532,239,1.403,240,1.425,243,2.221,244,1.518,245,1.47,246,1.447,248,1.204,249,1.089,250,1.967,253,2.408,257,2.061,261,2.137,262,1.795,318,3.021,522,1.627,915,1.723,1019,2.662,1335,4.348,1336,4.232,1356,4.475,1370,2.565,1798,2.201,1799,2.867,1800,2.699,1801,4.401,1807,4.77,2099,5.378,2106,2.565,2107,1.92,2368,3.494,2375,2.135,2376,3.494,2386,3.939,2574,3.091,2575,3.091,2580,4.401,2581,2.867,2582,4.401,2583,4.401,2694,7.099,4301,2.454,4421,4.144,4422,5.044,4423,5.044,4425,4.144,4429,2.699,4431,2.699,4435,2.565,4436,3.939,4437,3.939,4438,2.699,4439,2.699,4462,3.091,4530,3.431,4531,3.431,4532,3.431,4533,5.267,4534,3.431,4535,3.431,4536,3.431,4537,3.431,4538,3.431,4539,3.431,4540,3.431,4541,3.431,4542,5.267,4543,3.091,4544,3.091,4545,3.431,4546,3.431,4547,3.431,4548,8.527,4549,3.091,4550,3.431,4551,3.091,4552,3.431,4553,5.267,4554,3.431,4555,3.431,4556,3.091,4557,4.745,4558,4.745,4559,3.431,4560,3.431,4561,5.267,4562,3.431,4563,3.431,4564,5.267,4565,3.431,4566,3.431,4567,3.091,4568,3.091,4569,3.431]],["title/modules/UsersModule.html",[289,1.037,576,3.17]],["body/modules/UsersModule.html",[0,0.278,3,0.046,4,0.041,5,0.037,25,0.004,62,0.143,71,0.05,77,0.003,78,0.003,147,1.266,236,0.884,289,1.686,291,2.437,292,1.666,293,1.877,294,1.877,295,1.854,296,2.807,297,2.807,302,2.498,303,1.809,304,1.854,312,2.561,497,3.012,575,4.587,576,6.287,578,3.92,580,2.982,582,3.548,583,4.35,584,3.658,589,6.331,860,6.691,862,5.216,865,6.454,868,5.216,871,4.764,873,4.968,874,3.447,918,3.447,919,2.807,921,3.548,927,2.566,928,3.658,929,4.764,932,4.764,933,4.485,1793,5.427,2275,5.655,2303,4.485,2650,5.655,3137,5.427,4496,7.123,4516,5.136,4570,5.136,4571,5.136,4572,5.701,4573,5.136,4574,5.136,4575,5.701]],["title/injectables/UsersRelationalRepository.html",[202,0.934,3141,4.381]],["body/injectables/UsersRelationalRepository.html",[0,0.172,3,0.028,4,0.026,5,0.023,7,0.179,11,0.982,15,1.599,16,1.118,23,0.519,25,0.004,31,0.542,35,2.174,54,2.795,62,0.126,71,0.031,77,0.002,78,0.002,85,3.155,87,2.461,103,1.672,122,1.146,129,0.947,135,1.654,137,1.58,144,2.021,147,2.06,148,1.054,182,1.799,202,0.957,204,1.092,206,2.621,207,1.484,209,1.911,210,2.233,211,2.074,212,1.706,213,1.627,215,3.591,218,2.42,220,1.322,221,2.778,223,2.699,225,1.911,227,2.233,229,1.464,230,2.104,232,1.99,233,3.228,234,3.485,236,0.547,237,1.735,238,1.221,239,1.442,240,1.464,243,2.268,244,1.56,245,1.51,246,1.486,248,1.237,249,1.119,250,2.021,252,2.338,253,2.427,257,2.104,259,2.338,260,1.927,261,1.175,262,2.813,263,2.262,268,2.262,269,1.613,271,2.074,272,2.262,318,3.084,326,2.521,1019,2.707,1335,4.41,1336,4.292,1356,4.538,1370,2.636,1800,2.773,2368,3.566,2375,2.193,2376,3.566,2379,2.773,2386,2.636,3141,4.493,3142,2.945,3502,4.844,4301,2.521,4421,4.23,4422,5.129,4423,5.129,4425,4.23,4429,2.773,4431,2.773,4435,2.636,4436,4.021,4437,4.021,4438,2.773,4439,2.773,4543,3.175,4544,3.175,4549,3.175,4551,3.175,4556,3.175,4557,4.844,4558,3.175,4567,3.175,4568,4.844,4576,3.525,4577,3.525,4578,3.525,4579,4.844,4580,3.525,4581,3.525,4582,3.525,4583,3.525,4584,3.525,4585,3.525,4586,3.525,4587,3.525,4588,5.377,4589,5.377,4590,3.525,4591,3.525,4592,3.525,4593,3.525,4594,5.377,4595,3.525,4596,5.377,4597,7.294,4598,7.294,4599,3.525,4600,3.175,4601,3.525,4602,3.525]],["title/injectables/UsersService.html",[202,0.934,589,3.17]],["body/injectables/UsersService.html",[0,0.09,3,0.015,4,0.013,5,0.012,7,0.093,11,0.777,15,1.337,16,0.885,22,1.986,23,0.435,25,0.004,31,0.429,34,0.8,35,2.453,54,2.103,62,0.127,66,1.053,71,0.016,77,0.001,78,0.001,129,0.557,135,1.309,137,1.226,147,2,148,2.561,182,1.289,202,0.563,204,0.569,206,1.818,207,0.872,209,1.124,210,1.313,211,2.348,212,1.321,213,0.956,221,2.391,223,1.829,225,1.124,227,1.313,229,0.763,230,1.237,232,0.68,236,0.285,239,0.751,240,0.763,243,1.333,244,0.813,245,0.787,248,2.136,249,1.932,253,2.35,257,1.628,269,3.921,318,2.835,344,3.69,464,4.3,507,3.66,526,0.982,528,0.982,587,3.369,589,1.911,591,2.977,599,1.314,601,0.904,602,4.645,605,3.279,606,3.279,607,4.355,608,2.261,610,3.589,611,4.578,612,4.733,617,4.789,723,1.842,793,4.071,927,1.423,928,1.179,952,1.179,986,1.654,988,1.654,1019,3.201,1076,3.986,1129,3.149,1292,1.445,1293,1.373,1294,1.373,1295,1.445,1300,1.218,1301,1.263,1305,1.314,1306,1.373,1312,1.445,1335,3.369,1336,3.278,1356,3.076,1370,1.373,1424,4.947,1644,4.955,1646,4.396,2103,2.132,2114,5.484,2252,4.183,2368,2.097,2375,1.143,2376,2.097,2508,2.386,2509,1.373,2538,4.733,2539,1.445,2541,1.11,2650,1.143,2692,3.112,2694,4.789,3022,3.279,3155,1.314,3274,2.641,3282,1.535,3571,4.733,3860,1.445,3861,1.445,4150,1.655,4160,1.655,4161,1.655,4164,4.453,4165,2.848,4167,2.848,4170,4.453,4171,2.848,4173,2.848,4184,4.453,4185,2.848,4187,2.848,4287,5.128,4301,2.977,4326,1.535,4327,1.535,4354,1.535,4421,2.487,4422,3.274,4423,3.274,4425,2.487,4429,1.445,4431,1.445,4435,1.373,4436,3.112,4437,3.112,4438,1.445,4439,1.445,4465,4.13,4466,2.641,4579,3.749,4600,1.655,4603,1.837,4604,1.837,4605,3.161,4606,1.837,4607,1.837,4608,1.837,4609,1.837,4610,1.837,4611,1.837,4612,1.837,4613,1.837,4614,1.837,4615,3.161,4616,1.837,4617,1.837,4618,3.161,4619,1.837,4620,1.837,4621,3.161,4622,1.837,4623,1.837,4624,1.837,4625,1.837,4626,1.837,4627,4.161,4628,3.161,4629,2.848,4630,1.837,4631,3.161,4632,1.837,4633,3.161,4634,1.837,4635,1.837,4636,4.943,4637,3.161,4638,4.943,4639,1.837,4640,3.161,4641,1.837,4642,1.837,4643,4.943,4644,3.161,4645,1.837,4646,3.161,4647,1.837,4648,1.837,4649,1.837,4650,1.837,4651,1.837,4652,1.837,4653,3.161,4654,1.837,4655,1.837,4656,1.837,4657,3.161,4658,1.837,4659,1.837,4660,3.161,4661,1.837,4662,1.837,4663,3.161,4664,1.837,4665,1.837,4666,1.837,4667,1.837,4668,3.161,4669,1.837,4670,1.837,4671,4.943,4672,1.837,4673,1.837,4674,1.837,4675,1.837,4676,1.837,4677,1.837,4678,1.837,4679,1.837,4680,1.837,4681,1.837,4682,1.837,4683,1.837,4684,1.837,4685,1.837,4686,1.837,4687,1.837]],["title/changelog.html",[4688,3.653,4689,3.653,4690,4.372]],["body/changelog.html",[0,0.106,3,0.007,4,0.006,5,0.029,8,0.134,11,0.09,15,0.155,23,0.045,25,0.001,35,0.211,54,0.637,65,0.652,68,1.905,77,0.001,78,0.001,118,0.419,122,2.062,148,0.817,211,1.935,212,3.486,220,0.313,238,1.525,292,0.244,316,0.478,344,0.388,361,0.751,464,0.419,507,0.313,535,1.874,547,0.687,548,0.427,553,0.676,680,4.205,772,0.624,773,0.624,787,0.596,794,1.685,826,0.967,848,0.656,849,2.043,884,4.949,892,2.821,901,5.779,902,5.709,915,1.095,940,1.298,950,0.939,956,2.735,971,1.446,1012,1.298,1016,0.697,1019,1.135,1036,1.631,1129,1.053,1160,0.697,1173,0.697,1187,5.528,1202,6.964,1224,3.716,1248,0.751,1323,1.631,1367,2.15,1643,0.573,1647,1.399,1851,2.283,1860,1.298,1912,0.751,1992,3.027,1997,0.624,2107,3.549,2193,6.551,2194,6.089,2195,5.844,2210,0.697,2217,0.697,2227,0.751,2243,3.133,2251,1.954,2271,2.043,2444,0.751,2452,1.716,2469,1.298,2573,0.751,2728,0.751,2742,0.697,2799,0.751,2813,2.902,2832,6.007,2833,0.697,2875,0.624,3009,1.399,3323,4.985,3324,0.697,3328,0.751,3335,0.553,3680,1.822,4088,1.222,4113,0.751,4229,0.697,4254,0.697,4258,0.697,4265,0.697,4629,0.751,4691,0.751,4692,1.553,4693,0.834,4694,0.834,4695,0.834,4696,2.181,4697,0.834,4698,0.834,4699,2.181,4700,1.553,4701,0.834,4702,0.834,4703,0.834,4704,0.834,4705,0.834,4706,0.834,4707,2.181,4708,0.834,4709,4.621,4710,0.834,4711,0.834,4712,0.834,4713,0.834,4714,2.461,4715,0.834,4716,0.834,4717,0.834,4718,3.221,4719,1.553,4720,0.834,4721,0.834,4722,0.834,4723,0.834,4724,1.553,4725,0.834,4726,0.834,4727,10.98,4728,6.161,4729,6.161,4730,6.342,4731,9.685,4732,0.834,4733,0.834,4734,0.834,4735,0.834,4736,0.834,4737,0.834,4738,0.834,4739,0.834,4740,0.834,4741,0.834,4742,0.834,4743,0.834,4744,0.834,4745,0.834,4746,0.834,4747,0.834,4748,0.834,4749,0.834,4750,0.834,4751,0.834,4752,0.834,4753,0.834,4754,0.834,4755,0.834,4756,10.896,4757,0.834,4758,0.834,4759,0.834,4760,0.834,4761,1.553,4762,0.834,4763,0.834,4764,0.834,4765,1.553,4766,0.834,4767,0.834,4768,0.834,4769,0.834,4770,0.834,4771,0.834,4772,0.834,4773,0.834,4774,0.834,4775,2.181,4776,0.834,4777,1.553,4778,0.834,4779,0.834,4780,0.834,4781,0.834,4782,0.834,4783,0.834,4784,0.834,4785,0.834,4786,0.834,4787,1.553,4788,0.834,4789,0.834,4790,0.834,4791,0.834,4792,0.834,4793,0.834,4794,0.834,4795,0.834,4796,0.834,4797,4.76,4798,0.834,4799,0.834,4800,0.834,4801,0.834,4802,0.751,4803,0.751,4804,0.834,4805,0.834,4806,5.186,4807,0.834,4808,0.834,4809,0.834,4810,0.834,4811,4.255,4812,1.553,4813,0.834,4814,9.34,4815,1.553,4816,0.834,4817,1.553,4818,0.834,4819,1.553,4820,0.834,4821,1.553,4822,0.834,4823,0.834,4824,0.834,4825,1.553,4826,0.834,4827,0.834,4828,1.553,4829,0.834,4830,0.834,4831,0.834,4832,1.553,4833,0.834,4834,2.181,4835,0.834,4836,0.834,4837,0.834,4838,0.834,4839,0.834,4840,0.834,4841,0.834,4842,0.834,4843,0.834,4844,0.834,4845,0.834,4846,0.834,4847,0.697,4848,0.834,4849,0.834,4850,0.834,4851,0.834,4852,0.834,4853,0.834,4854,0.834,4855,0.834,4856,0.834,4857,0.834,4858,0.834,4859,0.834,4860,0.834,4861,0.834,4862,0.834,4863,0.834,4864,0.834,4865,0.834,4866,0.834,4867,0.834,4868,0.834,4869,0.834,4870,0.834,4871,0.834,4872,0.834,4873,0.834,4874,0.834,4875,0.834,4876,0.834,4877,0.834,4878,0.751,4879,0.834,4880,0.834,4881,0.834,4882,0.834,4883,0.834,4884,0.834,4885,0.834,4886,0.656,4887,0.834,4888,0.834,4889,2.181,4890,0.834,4891,0.834,4892,0.697,4893,3.657,4894,0.834,4895,2.181,4896,2.181,4897,0.834,4898,0.834,4899,0.834,4900,1.964,4901,4.403,4902,0.834,4903,0.834,4904,0.834,4905,1.716,4906,0.834,4907,0.834,4908,0.834,4909,0.834,4910,4.519,4911,0.834,4912,1.553,4913,0.834,4914,0.751,4915,0.834,4916,2.181,4917,0.834,4918,0.834,4919,0.834,4920,0.834,4921,0.834,4922,0.834,4923,0.834,4924,0.834,4925,0.834,4926,0.834,4927,0.834,4928,0.834,4929,0.834,4930,0.834,4931,0.834,4932,1.553,4933,0.834,4934,0.834,4935,0.834,4936,0.834,4937,0.834,4938,1.553,4939,1.553,4940,0.834,4941,0.834,4942,0.834,4943,0.834,4944,0.834,4945,0.834,4946,0.834,4947,0.751,4948,0.834,4949,0.834,4950,0.834,4951,1.553,4952,0.834,4953,0.834,4954,0.834,4955,0.834,4956,1.553,4957,0.834,4958,0.751,4959,0.834,4960,0.834,4961,0.834,4962,0.834,4963,0.834,4964,0.834,4965,0.834,4966,0.834,4967,0.834,4968,0.834,4969,0.834,4970,0.834,4971,0.834,4972,0.834,4973,0.834,4974,0.834,4975,0.834,4976,0.834,4977,0.834,4978,0.834,4979,0.834,4980,0.834,4981,0.834,4982,0.834,4983,0.834,4984,0.834,4985,0.834,4986,0.834,4987,0.834,4988,0.834,4989,0.834,4990,0.834,4991,0.834,4992,0.834,4993,0.834,4994,0.834,4995,0.834,4996,0.834,4997,0.834,4998,0.834,4999,0.834,5000,0.834,5001,0.834,5002,0.834,5003,0.834,5004,0.834,5005,0.834,5006,0.834,5007,0.834,5008,0.834,5009,0.834,5010,0.834,5011,0.834,5012,0.834,5013,0.834,5014,0.834,5015,0.834,5016,0.834,5017,0.834,5018,0.834,5019,0.834,5020,0.834,5021,0.834,5022,0.834,5023,0.834,5024,0.834,5025,0.834,5026,0.834,5027,0.834,5028,0.834,5029,0.834,5030,0.834,5031,0.834,5032,0.834,5033,0.834,5034,0.834,5035,0.834,5036,0.834,5037,0.834,5038,0.834,5039,0.834,5040,0.834,5041,0.834,5042,1.553,5043,0.834,5044,0.834,5045,0.834,5046,0.834,5047,0.834,5048,0.834,5049,0.834,5050,0.834,5051,0.834,5052,0.834,5053,0.834,5054,0.834,5055,0.834,5056,0.834,5057,0.834,5058,0.834,5059,0.834,5060,0.834,5061,0.834,5062,0.834,5063,0.834,5064,0.834,5065,0.834,5066,0.834,5067,0.834,5068,0.834,5069,0.834,5070,0.834,5071,0.834,5072,0.834,5073,0.834,5074,0.834,5075,1.553,5076,0.834,5077,0.834,5078,0.834,5079,0.834,5080,0.834,5081,1.553,5082,0.834,5083,1.553,5084,0.834,5085,1.553,5086,0.834,5087,1.553,5088,0.834,5089,1.553,5090,0.834,5091,1.553,5092,0.834,5093,0.834,5094,2.732,5095,0.834,5096,1.553,5097,0.834,5098,0.834,5099,0.834,5100,0.834,5101,1.553,5102,0.834,5103,0.834,5104,0.834,5105,1.553,5106,0.834,5107,2.181,5108,0.834,5109,0.834,5110,0.834,5111,0.834,5112,0.834,5113,2.181,5114,0.834,5115,0.834,5116,0.834,5117,0.834,5118,0.834,5119,0.834,5120,0.834,5121,0.834,5122,0.834,5123,0.834,5124,0.834,5125,0.834,5126,0.834,5127,0.834,5128,0.834,5129,0.834,5130,0.834,5131,0.834,5132,0.834,5133,0.834,5134,0.834,5135,0.834,5136,0.834,5137,0.834,5138,0.834,5139,0.834,5140,0.834,5141,0.834,5142,0.834,5143,0.834,5144,0.834,5145,0.834,5146,0.834,5147,1.553,5148,0.834,5149,0.834,5150,0.834,5151,0.834,5152,0.834,5153,0.834,5154,0.834,5155,0.834,5156,0.834,5157,0.834,5158,0.834,5159,0.834,5160,0.834,5161,0.834,5162,0.834,5163,0.834,5164,0.834,5165,0.834,5166,0.834,5167,0.834,5168,0.834,5169,0.834,5170,0.834,5171,0.834,5172,0.834,5173,0.834,5174,0.834,5175,0.834,5176,0.834,5177,0.834,5178,0.834,5179,0.834,5180,0.834,5181,0.834,5182,0.834,5183,0.834,5184,2.181,5185,0.834,5186,2.181,5187,0.834,5188,1.553,5189,0.834,5190,0.834,5191,0.834,5192,0.834,5193,0.834,5194,1.553,5195,0.834,5196,1.553,5197,0.834,5198,0.834,5199,0.834,5200,1.964,5201,0.834,5202,0.834,5203,0.834,5204,0.834,5205,0.834,5206,0.834,5207,0.834,5208,0.834,5209,0.834,5210,0.834,5211,0.834,5212,0.834,5213,0.834,5214,0.834,5215,0.834,5216,2.461,5217,0.834,5218,0.834,5219,0.834,5220,0.834,5221,0.834,5222,0.834,5223,0.834,5224,0.834,5225,0.834,5226,0.834,5227,0.834,5228,0.834,5229,0.834,5230,0.834,5231,0.834,5232,0.834,5233,0.834,5234,0.834,5235,0.834,5236,0.834,5237,0.834,5238,0.834,5239,0.834,5240,0.834,5241,0.834,5242,0.834,5243,0.834,5244,0.834,5245,0.834,5246,0.834,5247,0.834,5248,0.834,5249,1.553,5250,0.834,5251,0.834,5252,0.834,5253,0.834,5254,0.834,5255,0.834,5256,2.181,5257,0.834,5258,0.834,5259,0.834,5260,0.834,5261,0.834,5262,0.834,5263,0.834,5264,0.834,5265,1.553,5266,0.834,5267,1.553,5268,0.834,5269,0.834,5270,0.834,5271,0.834,5272,1.553,5273,0.834,5274,1.553,5275,0.834,5276,1.553,5277,0.834,5278,0.834,5279,0.834,5280,0.834,5281,0.834,5282,0.834,5283,0.834,5284,0.834,5285,1.553,5286,0.834,5287,0.834,5288,0.834,5289,2.181,5290,0.834,5291,1.553,5292,0.834,5293,0.834,5294,0.834,5295,0.834,5296,0.834,5297,0.834,5298,0.834,5299,0.834,5300,0.834,5301,0.834,5302,1.553,5303,0.834,5304,1.553,5305,0.834,5306,0.834,5307,0.834,5308,0.834,5309,0.834,5310,0.834,5311,0.834,5312,0.834,5313,0.834,5314,0.834,5315,0.834,5316,0.834,5317,0.834,5318,0.834,5319,0.834,5320,0.834,5321,0.834,5322,0.834,5323,0.834,5324,0.834,5325,0.834,5326,0.834,5327,0.834,5328,0.834,5329,0.834,5330,1.553,5331,0.834,5332,0.834,5333,0.834,5334,0.834,5335,0.834,5336,0.834,5337,1.553,5338,0.834,5339,0.834,5340,0.834,5341,0.834,5342,0.834,5343,0.834,5344,0.834,5345,0.834,5346,0.834,5347,0.834,5348,0.834,5349,0.834,5350,0.834,5351,0.834,5352,0.834,5353,0.834,5354,0.834,5355,0.834,5356,0.834,5357,0.834,5358,0.834,5359,0.834,5360,0.834,5361,0.834,5362,0.834,5363,0.834,5364,0.834,5365,0.834,5366,0.834,5367,0.834,5368,0.834,5369,0.834,5370,0.834,5371,0.834,5372,0.834,5373,0.834,5374,0.834,5375,0.834,5376,0.834,5377,0.834,5378,0.834,5379,0.834,5380,0.834,5381,0.834,5382,0.834,5383,0.834,5384,0.834,5385,0.834,5386,0.834,5387,0.834,5388,0.834,5389,0.834,5390,0.834,5391,0.834,5392,0.834,5393,0.834,5394,0.834,5395,0.834,5396,0.834,5397,0.834,5398,0.834,5399,0.834,5400,0.834,5401,0.834,5402,0.834,5403,0.834,5404,0.834,5405,0.834,5406,0.834,5407,0.834,5408,0.834,5409,0.834,5410,0.834,5411,0.834,5412,0.834,5413,0.834,5414,0.834,5415,0.834,5416,0.834,5417,0.834,5418,0.834,5419,1.553,5420,0.834,5421,0.834,5422,0.834,5423,0.834,5424,0.834,5425,0.834,5426,0.834,5427,0.834,5428,0.834,5429,0.834,5430,0.834,5431,0.834,5432,0.834,5433,0.834,5434,0.834,5435,0.834,5436,0.834,5437,0.834,5438,0.834,5439,0.834,5440,0.834,5441,0.834,5442,0.834,5443,0.834,5444,0.834,5445,0.834,5446,0.834,5447,0.834,5448,0.834,5449,0.834,5450,0.834,5451,0.834,5452,0.834,5453,0.834,5454,0.834,5455,0.834,5456,0.834,5457,0.834,5458,0.834,5459,0.834,5460,0.834,5461,0.834,5462,0.834,5463,0.834,5464,0.834,5465,0.834,5466,0.834,5467,0.834,5468,0.834,5469,0.834,5470,0.834,5471,0.834,5472,0.834,5473,0.834,5474,0.834,5475,0.834,5476,0.834,5477,0.834,5478,0.834,5479,0.834,5480,0.834,5481,0.834,5482,0.834,5483,0.834,5484,0.834,5485,0.834,5486,0.834,5487,0.834,5488,0.834,5489,0.834,5490,0.834,5491,0.834,5492,0.834,5493,0.834,5494,0.834,5495,0.834,5496,0.834,5497,0.834,5498,0.834,5499,0.834,5500,0.834,5501,0.834,5502,0.834,5503,0.834,5504,0.834,5505,0.834,5506,0.834,5507,0.834,5508,0.834,5509,0.834,5510,0.834,5511,0.834,5512,0.834,5513,0.834,5514,0.834,5515,0.834,5516,0.834,5517,0.834,5518,0.834,5519,0.834,5520,0.834,5521,0.834,5522,0.834,5523,0.834,5524,0.834,5525,0.834,5526,0.834,5527,0.834,5528,0.834,5529,0.834,5530,0.834,5531,0.834,5532,0.834,5533,0.834,5534,0.834,5535,0.834,5536,0.834,5537,0.834,5538,0.834,5539,0.834,5540,0.834,5541,0.834,5542,0.834,5543,0.834,5544,0.834,5545,0.834,5546,0.834,5547,0.834,5548,0.834,5549,0.834,5550,0.834,5551,0.834,5552,0.834,5553,0.834,5554,0.834,5555,0.834,5556,0.834,5557,0.834,5558,0.834,5559,0.834,5560,0.834,5561,0.834,5562,0.834,5563,0.834,5564,0.834,5565,0.834,5566,0.834,5567,0.834,5568,0.834,5569,0.834,5570,0.834,5571,0.834,5572,0.834,5573,0.834,5574,0.834,5575,0.834,5576,0.834,5577,0.834,5578,0.834,5579,0.834,5580,0.834,5581,0.834,5582,0.834,5583,0.834,5584,0.834,5585,0.834,5586,1.553,5587,1.553,5588,1.553,5589,0.834,5590,0.834,5591,0.834,5592,0.834,5593,0.834,5594,0.834,5595,0.834,5596,1.553,5597,0.834,5598,0.834,5599,0.751,5600,0.834,5601,0.834,5602,0.834,5603,0.834,5604,0.834,5605,0.834,5606,1.553,5607,0.834,5608,0.834,5609,0.834,5610,0.834,5611,0.834,5612,0.834,5613,0.834,5614,0.834,5615,0.834,5616,0.834,5617,0.834,5618,0.834,5619,0.834,5620,0.834,5621,0.834,5622,0.834,5623,0.834,5624,0.834,5625,0.834,5626,0.834,5627,0.834,5628,0.834,5629,0.834,5630,0.834,5631,0.834,5632,0.834,5633,0.834,5634,0.834,5635,0.834,5636,0.834,5637,0.834,5638,0.834,5639,1.964,5640,0.834,5641,0.834,5642,0.834,5643,0.834,5644,1.553,5645,0.834,5646,0.834,5647,0.834,5648,0.834,5649,0.834,5650,0.834,5651,0.834,5652,0.834]],["title/dependencies.html",[292,1.843,5653,3.938]],["body/dependencies.html",[0,0.38,4,0.043,5,0.038,25,0.004,65,1.776,68,1.305,77,0.003,78,0.003,122,1.932,236,0.921,238,2.057,292,1.736,535,3.043,846,3.812,849,6.506,850,5.351,884,4.261,892,2.325,901,5.829,902,4.442,915,2.983,971,3.94,1012,4.963,1134,2.586,1160,4.963,1187,3.94,1202,4.963,1224,4.673,1287,4.963,1293,4.442,1535,4.673,2107,4.362,2193,5.576,2194,4.249,2195,5.771,2197,4.963,2198,4.963,2242,4.249,2243,5.17,2271,5.829,2452,4.673,2832,4.673,2833,4.963,2866,5.351,3323,4.963,3324,4.963,3389,5.351,4709,4.963,4797,5.351,4802,5.351,4803,5.351,4806,5.351,4811,5.351,4878,5.351,4892,4.963,4905,4.673,4958,5.351,5200,5.351,5216,5.351,5654,7.795,5655,8.7,5656,5.94,5657,7.795,5658,5.94,5659,5.94,5660,5.94,5661,5.94,5662,5.94,5663,5.94,5664,5.94,5665,5.94,5666,5.94,5667,5.94,5668,5.94,5669,5.94,5670,5.94,5671,5.94,5672,5.94,5673,5.94,5674,5.94,5675,5.94,5676,5.94,5677,5.94,5678,5.94,5679,5.94,5680,5.94,5681,5.94,5682,5.94,5683,5.94,5684,5.94,5685,5.94,5686,5.94,5687,5.94,5688,5.94]],["title/miscellaneous/enumerations.html",[5689,2.9,5690,5.684]],["body/miscellaneous/enumerations.html",[7,0.169,9,2.139,22,1.955,25,0.004,44,3.853,50,3.853,54,2.237,58,3.853,77,0.002,78,0.002,261,1.718,323,4.538,341,2.786,347,4.641,349,3.543,350,3.543,359,3.686,364,3.686,368,2.623,397,4.053,415,3.853,418,4.305,437,4.305,438,3.853,439,3.853,448,3.853,480,4.305,708,4.053,709,4.053,710,4.053,754,4.053,755,4.053,756,4.053,757,4.053,758,5.297,759,5.573,760,4.053,761,4.053,762,4.053,763,4.053,764,4.053,765,4.053,766,4.053,767,4.053,768,4.053,769,4.053,770,4.053,771,3.686,772,3.853,773,3.853,774,4.053,775,4.053,776,4.053,777,3.686,778,3.853,779,3.853,780,4.053,781,4.053,782,4.053,783,4.053,784,4.053,785,4.053,786,4.053,787,3.686,790,5.573,791,4.305,792,4.305,795,3.306,807,4.053,808,4.053,809,3.853,810,4.053,811,4.053,812,4.053,813,4.053,814,4.053,815,4.053,816,4.053,817,4.053,818,4.053,819,4.053,820,4.053,821,4.053,822,4.053,823,4.053,824,4.053,971,3.417,1019,2.942,1145,3.686,1187,3.417,1294,3.853,1300,3.417,1305,3.686,1483,3.853,1484,4.641,1487,4.641,1501,1.581,1508,3.543,1511,3.686,1587,4.641,1588,4.641,1589,4.641,1590,4.641,1626,3.853,1680,1.708,1683,3.543,1829,3.003,1847,4.641,1858,4.641,1859,4.053,1860,4.305,1927,4.053,1936,3.003,1945,3.003,1956,2.786,2024,2.786,2034,4.053,2054,3.003,2195,4.177,2483,2.385,2590,5.673,2738,4.305,2851,3.003,2911,3.003,3335,2.211,3366,3.003,3369,3.003,3372,3.003,3553,3.686,3584,3.003,3599,4.641,3841,3.003,3890,2.292,4006,4.641,4013,5.673,4088,4.053,4914,3.003,5689,2.211,5690,3.003,5691,6.297,5692,8.096,5693,3.003,5694,5.152,5695,3.334,5696,3.003,5697,4.641,5698,4.305,5699,3.334,5700,3.334,5701,5.152,5702,3.334,5703,3.334,5704,3.334,5705,3.334,5706,3.003,5707,3.334,5708,3.334,5709,5.152,5710,3.334,5711,3.334,5712,3.334]],["title/miscellaneous/functions.html",[5689,2.9,5713,5.684]],["body/miscellaneous/functions.html",[7,0.36,11,1.065,16,1.212,23,0.529,25,0.004,77,0.003,78,0.003,135,1.794,295,3.075,464,3.565,536,5.603,539,5.433,794,3.715,1852,5.603,2163,6.003,2438,7.295,2439,6.397,2445,6.397,2446,6.397,2846,7.866,3326,7.866,5689,4.71,5713,6.397,5714,7.101,5715,6.397,5716,8.731,5717,8.731,5718,6.397,5719,6.397,5720,7.101,5721,8.731,5722,7.101,5723,7.101,5724,7.101,5725,7.101,5726,6.397,5727,6.397,5728,7.101,5729,7.101,5730,8.731,5731,8.731]],["title/index.html",[7,0.222,4688,3.653,4689,3.653]],["body/index.html",[5,0.041,14,3.346,25,0.004,54,1.869,77,0.003,78,0.003,122,2.08,435,4.576,604,3.346,656,3.764,664,3.764,771,5.85,794,3.346,892,2.503,901,6.74,902,6.115,971,4.242,1019,2.656,1145,4.576,1187,4.242,1992,4.398,2107,3.579,2195,4.242,2370,3.98,2832,5.032,3002,5.344,3335,4.242,3680,6.832,4088,5.032,4709,5.344,4714,5.762,4847,5.344,4892,8.203,4900,5.762,4905,7.724,4910,5.762,5599,5.762,5639,5.762,5732,8.177,5733,6.396,5734,6.396,5735,6.396,5736,6.396,5737,6.396,5738,6.396,5739,6.396,5740,6.396,5741,6.396,5742,6.396,5743,6.396,5744,6.396,5745,6.396,5746,8.177,5747,6.396,5748,6.396,5749,6.396,5750,6.396,5751,6.396,5752,6.396,5753,6.396,5754,6.396,5755,8.177,5756,6.396,5757,9.014,5758,8.177,5759,6.396,5760,6.396,5761,6.396,5762,6.396,5763,6.396,5764,8.177,5765,6.396,5766,6.396,5767,6.396,5768,6.396,5769,6.396,5770,6.396,5771,6.396,5772,6.396,5773,6.396,5774,6.396,5775,6.396,5776,6.396,5777,6.396,5778,6.396,5779,6.396,5780,6.396,5781,6.396,5782,5.762,5783,6.396,5784,6.396,5785,6.396]],["title/license.html",[4688,3.653,4689,3.653,4886,3.439]],["body/license.html",[25,0.003,77,0.003,78,0.003,304,2.178,397,5.27,445,6.034,690,4.168,950,5.091,1593,4.606,2243,4.443,2251,4.792,2526,6.034,2793,5.597,2875,5.009,3495,5.27,4847,5.597,4886,5.27,4947,8.296,5782,6.034,5786,6.034,5787,9.209,5788,6.699,5789,6.699,5790,8.42,5791,6.699,5792,6.699,5793,6.699,5794,6.699,5795,8.42,5796,10.524,5797,6.699,5798,6.699,5799,8.42,5800,6.699,5801,6.699,5802,6.699,5803,6.699,5804,6.699,5805,6.699,5806,6.699,5807,6.699,5808,6.699,5809,8.42,5810,6.699,5811,6.699,5812,6.699,5813,6.699,5814,6.699,5815,8.42,5816,8.42,5817,6.699,5818,6.699,5819,6.699,5820,6.699,5821,6.699,5822,6.699,5823,6.699,5824,6.699,5825,6.699,5826,6.699,5827,6.699,5828,6.699,5829,6.699,5830,6.699,5831,6.699,5832,6.699,5833,6.699,5834,6.699,5835,6.699,5836,6.699,5837,6.699,5838,6.699,5839,6.699,5840,6.699,5841,6.699,5842,6.699]],["title/modules.html",[291,2.303]],["body/modules.html",[25,0.003,77,0.003,78,0.003,290,3.897,291,1.591,569,3.704,574,3.704,575,2.995,576,2.995,853,3.897,856,3.704,857,3.704,858,3.704,859,3.286,860,3.406,861,3.704,862,3.406,863,3.544,864,3.544,865,3.286,866,3.704,867,3.544,868,3.406,869,3.544,1752,3.179,1768,3.544,1781,3.544,1793,3.544,2263,3.544,2273,3.179,2305,3.544,2307,3.544,2474,3.897,2652,3.544,2985,3.897,3037,3.704,3087,3.704,3098,3.544,3106,3.704,3117,3.704,3126,3.704,3137,3.544,3222,3.897,3352,3.897,3396,5.424,3399,5.155,3749,3.897,3829,3.897,3980,3.897,4075,3.897,4905,8.683,5843,11.037,5844,11.037,5845,11.037]],["title/overview.html",[5846,6.458]],["body/overview.html",[2,0.34,25,0.004,77,0.001,78,0.001,87,1.026,204,0.695,217,3.87,261,0.747,289,0.443,290,5.321,291,0.72,292,0.655,293,0.738,294,0.738,295,0.729,296,0.738,297,0.738,298,2.02,299,2.02,300,2.02,301,5.646,302,1.233,303,0.712,304,0.729,317,3.149,318,3.878,497,0.89,524,5.366,569,6.46,570,2.02,571,2.02,572,2.02,573,2.02,574,5.624,575,5.394,576,5.223,587,4.339,589,4.339,840,3.792,853,8.056,854,2.02,855,2.02,856,5.624,857,5.624,858,5.624,859,6.3,860,5.171,861,4.68,862,4.65,863,5.589,864,5.134,865,5.492,866,6.761,867,5.134,868,5.372,869,5.768,966,4.76,968,5.366,999,2.02,1001,2.02,1002,2.02,1143,5.366,1151,2.02,1153,2.02,1154,2.02,1185,5.366,1192,2.02,1193,2.02,1195,2.02,1214,2.02,1216,2.02,1217,2.02,1218,3.792,1219,3.792,1251,5.366,1252,5.366,1752,3.092,1753,2.02,1754,2.02,1755,4.089,1768,3.448,1769,2.02,1770,2.02,1771,4.486,1781,3.448,1782,2.02,1783,2.02,1784,4.486,1793,3.448,1794,2.02,1795,2.02,1956,1.873,2093,1.677,2247,5.366,2252,4.605,2263,4.477,2264,2.02,2265,2.02,2266,2.02,2273,3.092,2299,2.02,2300,2.02,2301,2.02,2305,4.477,2307,4.477,2315,5.366,2316,2.02,2317,2.02,2318,2.02,2331,5.366,2334,2.02,2335,2.02,2336,2.02,2425,3.604,2429,2.02,2430,2.02,2474,5.321,2475,2.02,2476,2.02,2477,2.02,2478,5.646,2527,2.02,2538,4.934,2646,2.02,2647,2.02,2648,2.02,2652,3.448,2755,2.02,2756,2.02,2758,2.02,2764,5.366,2818,2.02,2819,2.02,2820,2.02,2956,3.611,2985,5.321,2986,2.02,2987,2.02,2988,2.02,2989,5.646,3022,4.76,3033,2.02,3034,2.02,3035,2.02,3036,2.02,3037,5.624,3071,2.02,3072,2.02,3076,2.02,3080,2.02,3083,2.02,3084,2.02,3087,5.624,3088,2.02,3089,2.02,3090,3.87,3098,3.448,3099,2.02,3106,5.624,3107,2.02,3108,2.02,3109,4.026,3117,5.624,3118,2.02,3119,2.02,3126,5.624,3127,2.02,3128,2.02,3129,3.87,3137,3.448,3138,2.02,3222,5.321,3223,2.02,3224,2.02,3225,2.02,3226,5.646,3254,5.366,3266,2.02,3267,2.02,3268,2.02,3352,5.321,3353,2.02,3354,2.02,3355,2.02,3356,5.646,3379,2.02,3396,7.627,3397,2.02,3398,2.02,3399,6.03,3483,2.02,3484,2.02,3485,2.02,3571,4.934,3713,2.02,3714,2.02,3716,2.02,3749,5.321,3750,2.02,3751,2.02,3752,2.02,3753,5.646,3829,5.321,3830,2.02,3831,2.02,3832,2.02,3833,5.646,3980,5.321,3981,2.02,3982,2.02,3983,2.02,3984,5.646,4059,5.134,4069,2.02,4070,2.02,4071,2.02,4075,5.321,4076,2.02,4077,2.02,4078,2.02,4079,5.646,4143,2.02,4144,2.02,4146,2.02,4456,2.02,4457,2.02,4458,2.02,4459,5.768,4570,2.02,4571,2.02,4573,2.02,5846,2.02,5847,2.242,5848,2.242,5849,2.242,5850,2.242]],["title/properties.html",[8,1.01,5653,3.938]],["body/properties.html",[8,1.327,14,4.334,25,0.004,77,0.004,78,0.004,548,4.244,4691,7.463,4886,6.518,5786,7.463,5851,8.284]],["title/miscellaneous/typealiases.html",[5689,2.9,5852,6.309]],["body/miscellaneous/typealiases.html",[7,0.302,23,0.561,25,0.004,35,1.504,77,0.003,78,0.003,223,3.846,239,3.192,285,5.009,507,2.233,873,4.267,875,6.522,877,5.837,879,6.522,881,5.584,883,6.522,886,6.522,888,6.522,910,3.999,954,4.556,1036,5.837,1266,6.522,1296,6.522,1501,2.823,2170,4.974,2174,6.913,2176,7.032,2441,6.852,2455,6.522,2675,4.974,2676,6.522,2680,7.032,2775,6.522,3519,4.974,3527,7.032,4440,4.974,4453,7.032,5689,3.948,5693,5.363,5696,5.363,5697,9.663,5698,4.974,5706,5.363,5715,5.363,5853,5.953,5854,5.953,5855,5.953,5856,5.953,5857,5.953,5858,7.806,5859,5.953,5860,5.363,5861,5.953,5862,7.806,5863,9.244,5864,5.953,5865,5.953,5866,5.953,5867,5.953,5868,7.806,5869,5.363,5870,5.363,5871,5.953,5872,5.953,5873,5.953,5874,5.953,5875,5.953,5876,5.953,5877,5.953,5878,5.953,5879,7.806,5880,5.953,5881,5.953,5882,5.953,5883,5.953,5884,5.953]],["title/miscellaneous/variables.html",[5689,2.9,5885,5.684]],["body/miscellaneous/variables.html",[7,0.162,19,2.28,23,0.426,25,0.004,30,1.307,34,1.345,36,2.01,77,0.002,78,0.002,87,1.463,147,1.107,148,1.833,182,1.212,206,1.548,220,1.87,243,1.347,245,2.135,253,2.585,316,2.858,322,4.147,323,4.272,464,2.503,507,2.597,537,1.932,541,3.199,557,2.364,602,1.708,610,1.199,611,2.664,687,1.671,870,2.878,873,5.463,881,3.566,903,2.514,908,2.878,909,4.49,916,2.389,920,4.49,921,5.349,922,2.669,923,2.607,924,2.878,925,2.878,926,2.878,928,2.05,1129,1.544,1133,1.573,1135,3.427,1351,3.922,1501,2.364,1752,4.443,1758,4.165,1768,2.285,1773,4.165,1774,2.285,1781,2.285,1786,4.165,1793,2.285,1797,3.922,1851,4.165,1856,3.727,1859,2.514,1868,2.878,1878,2.285,1992,2.197,1997,2.389,1998,2.878,1999,2.878,2000,2.389,2001,2.878,2002,2.878,2003,2.878,2004,2.878,2005,2.878,2006,2.878,2007,2.514,2008,2.878,2009,2.669,2010,2.878,2012,2.878,2013,2.878,2014,2.878,2016,2.878,2017,2.669,2018,2.878,2019,2.669,2020,2.878,2021,2.878,2022,2.669,2023,2.878,2038,2.669,2042,2.514,2058,4.49,2061,4.49,2079,2.878,2166,2.285,2170,2.669,2179,2.878,2202,4.165,2263,2.285,2267,2.878,2273,4.443,2275,6.36,2302,2.878,2305,2.285,2307,2.285,2310,4.49,2319,2.878,2337,2.878,2370,4.308,2438,4.165,2440,2.878,2441,2.514,2649,4.49,2652,2.285,2675,2.669,2676,4.165,2682,2.878,2775,2.669,2798,2.669,2875,2.389,3098,2.285,3137,2.285,3331,2.878,3333,6.259,3338,4.822,3486,2.878,3519,2.669,3529,2.878,3816,2.878,4246,2.878,4247,2.878,4248,2.878,4250,4.49,4251,2.878,4252,2.878,4253,2.878,4254,2.669,4255,2.878,4256,2.878,4257,2.878,4258,2.669,4259,2.878,4260,2.878,4262,2.878,4263,2.878,4265,2.669,4302,2.878,4328,2.669,4440,2.669,4454,2.878,4464,2.878,4574,2.878,5689,2.119,5698,4.165,5718,2.878,5719,2.878,5726,2.878,5727,2.878,5860,2.878,5869,2.878,5870,2.878,5885,2.878,5886,4.985,5887,8.309,5888,4.985,5889,4.985,5890,4.985,5891,3.195,5892,4.985,5893,3.195,5894,3.195,5895,3.195,5896,4.985,5897,3.195,5898,7.508,5899,3.195,5900,3.195,5901,3.195,5902,4.985,5903,3.195,5904,6.924,5905,4.985,5906,6.924,5907,4.985,5908,4.985,5909,4.985,5910,3.195,5911,3.195,5912,3.195,5913,3.195,5914,3.195,5915,3.195,5916,3.195,5917,3.195,5918,3.195,5919,3.195,5920,3.195,5921,3.195,5922,3.195,5923,3.195,5924,3.195,5925,4.985,5926,4.985,5927,4.985,5928,3.195,5929,3.195,5930,3.195,5931,3.195,5932,3.195,5933,3.195,5934,3.195,5935,3.195,5936,3.195,5937,3.195,5938,3.195,5939,3.195,5940,3.195,5941,3.195,5942,3.195]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":333,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["0.0",{"_index":2949,"title":{},"body":{"classes/RegionMapper.html":{}}}],["0.14.1",{"_index":5667,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":5684,"title":{},"body":{"dependencies.html":{}}}],["0.3.22",{"_index":5688,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":5670,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":5666,"title":{},"body":{"dependencies.html":{}}}],["0.5.21",{"_index":4958,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.7.0",{"_index":5680,"title":{},"body":{"dependencies.html":{}}}],["000ad94",{"_index":5132,"title":{},"body":{"changelog.html":{}}}],["001",{"_index":358,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["00100",{"_index":1564,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["00101",{"_index":1565,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["002",{"_index":366,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["003",{"_index":372,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["004",{"_index":378,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["005",{"_index":382,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["006",{"_index":388,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["007",{"_index":393,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["0071202",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["008",{"_index":396,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["00895cc",{"_index":5299,"title":{},"body":{"changelog.html":{}}}],["009",{"_index":479,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["00beb9e",{"_index":5352,"title":{},"body":{"changelog.html":{}}}],["00cb348",{"_index":5189,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["0245df7",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["02ab3c8",{"_index":5090,"title":{},"body":{"changelog.html":{}}}],["02c557d",{"_index":5286,"title":{},"body":{"changelog.html":{}}}],["03279f7",{"_index":5376,"title":{},"body":{"changelog.html":{}}}],["03a9d52",{"_index":5057,"title":{},"body":{"changelog.html":{}}}],["03e6235",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["03ff73d",{"_index":5414,"title":{},"body":{"changelog.html":{}}}],["04d2d18",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["054a9b4",{"_index":5559,"title":{},"body":{"changelog.html":{}}}],["05556dd",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["0600fba",{"_index":5402,"title":{},"body":{"changelog.html":{}}}],["0622c0c",{"_index":5120,"title":{},"body":{"changelog.html":{}}}],["062758c",{"_index":5616,"title":{},"body":{"changelog.html":{}}}],["06897c5",{"_index":5360,"title":{},"body":{"changelog.html":{}}}],["0794e5b",{"_index":5035,"title":{},"body":{"changelog.html":{}}}],["086237e",{"_index":5164,"title":{},"body":{"changelog.html":{}}}],["087280b",{"_index":5211,"title":{},"body":{"changelog.html":{}}}],["08:00",{"_index":1572,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["08b372f",{"_index":5434,"title":{},"body":{"changelog.html":{}}}],["0939b32",{"_index":5130,"title":{},"body":{"changelog.html":{}}}],["0a957e3",{"_index":5074,"title":{},"body":{"changelog.html":{}}}],["0af09f2",{"_index":5236,"title":{},"body":{"changelog.html":{}}}],["0c26e2a",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["0da3df0",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["0dcf84d",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["0e33c9e",{"_index":5321,"title":{},"body":{"changelog.html":{}}}],["0e58e08",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["0e80661",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["0f10b2d",{"_index":5297,"title":{},"body":{"changelog.html":{}}}],["0f18353",{"_index":5213,"title":{},"body":{"changelog.html":{}}}],["0fa6bdc",{"_index":5589,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":261,"title":{"classes/EnvironmentVariablesValidator-1.html":{},"classes/FileMapper-1.html":{},"classes/FileResponseDto-1.html":{},"classes/KycDetailsMapper-1.html":{},"classes/SessionMapper-1.html":{},"classes/UserMapper-1.html":{},"injectables/UserSeedService-1.html":{}},"body":{"injectables/AccountRelationalRepository.html":{},"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/QueryUserDto.html":{},"injectables/RegionRelationalRepository.html":{},"controllers/RegionsController.html":{},"injectables/ResidenceRelationalRepository.html":{},"controllers/ResidencesController.html":{},"classes/SessionSchemaClass.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SortUserDto.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"classes/UserSchemaClass.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.1",{"_index":5681,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":4878,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":4691,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1.2335",{"_index":1578,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["1.2628",{"_index":3011,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["1.2921",{"_index":1575,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["1.4.5",{"_index":5675,"title":{},"body":{"dependencies.html":{}}}],["1.7.9",{"_index":5664,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":557,"title":{},"body":{"controllers/AccountsController.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/KycDetailsController.html":{},"classes/QueryUserDto.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"classes/SortUserDto.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["10.5.1",{"_index":5678,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2014,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":3242,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["108c714",{"_index":5410,"title":{},"body":{"changelog.html":{}}}],["10c7577",{"_index":5350,"title":{},"body":{"changelog.html":{}}}],["11.0.0",{"_index":5657,"title":{},"body":{"dependencies.html":{}}}],["11.0.20",{"_index":5655,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":5658,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":5659,"title":{},"body":{"dependencies.html":{}}}],["11.1.3",{"_index":5660,"title":{},"body":{"dependencies.html":{}}}],["113f59a",{"_index":5489,"title":{},"body":{"changelog.html":{}}}],["117",{"_index":5850,"title":{},"body":{"overview.html":{}}}],["11ae998",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["11b58ea",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":2527,"title":{},"body":{"classes/KycDetails.html":{},"overview.html":{}}}],["1234567890",{"_index":3996,"title":{},"body":{"injectables/TenantSeedService.html":{},"classes/User.html":{}}}],["1234567890'})@expose({groups",{"_index":4319,"title":{},"body":{"classes/User.html":{}}}],["1266ae9",{"_index":5483,"title":{},"body":{"changelog.html":{}}}],["12e2329",{"_index":5191,"title":{},"body":{"changelog.html":{}}}],["12f8404",{"_index":5307,"title":{},"body":{"changelog.html":{}}}],["1313bcf",{"_index":5548,"title":{},"body":{"changelog.html":{}}}],["138723",{"_index":2224,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["138723})@isnumber",{"_index":2221,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["1399d6f",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["1442",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["1498",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["14b072c",{"_index":5114,"title":{},"body":{"changelog.html":{}}}],["1504",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["1512",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["1533",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["1577ffb",{"_index":5416,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":5848,"title":{},"body":{"overview.html":{}}}],["16.5.0",{"_index":5668,"title":{},"body":{"dependencies.html":{}}}],["16c9f0b",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["171d745",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["17390e1",{"_index":5344,"title":{},"body":{"changelog.html":{}}}],["17:00",{"_index":1574,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["17c05f9",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["185c03f",{"_index":5406,"title":{},"body":{"changelog.html":{}}}],["18629f2",{"_index":5479,"title":{},"body":{"changelog.html":{}}}],["186e239",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["195f298",{"_index":5333,"title":{},"body":{"changelog.html":{}}}],["19683a4",{"_index":5526,"title":{},"body":{"changelog.html":{}}}],["19b4219",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["19c8b5e",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["1b66422",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["1bddd8e",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["1bf7b33",{"_index":5638,"title":{},"body":{"changelog.html":{}}}],["1da7bd4",{"_index":5582,"title":{},"body":{"changelog.html":{}}}],["1e075c9",{"_index":5541,"title":{},"body":{"changelog.html":{}}}],["1e22eea",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["1f2937",{"_index":3784,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["2",{"_index":1927,"title":{"classes/EnvironmentVariablesValidator-2.html":{},"classes/FileResponseDto-2.html":{}},"body":{"injectables/UserSeedService-1.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":5669,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":5674,"title":{},"body":{"dependencies.html":{}}}],["2.4.9",{"_index":5663,"title":{},"body":{"dependencies.html":{}}}],["2019d29",{"_index":5325,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":2526,"title":{},"body":{"classes/KycDetails.html":{},"license.html":{}}}],["2024",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["20cbf04ae985",{"_index":5753,"title":{},"body":{"index.html":{}}}],["210df19",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["212a6c2",{"_index":5264,"title":{},"body":{"changelog.html":{}}}],["215fb8c",{"_index":5220,"title":{},"body":{"changelog.html":{}}}],["22585a5",{"_index":5354,"title":{},"body":{"changelog.html":{}}}],["226ed7e",{"_index":5550,"title":{},"body":{"changelog.html":{}}}],["227f9d9",{"_index":5424,"title":{},"body":{"changelog.html":{}}}],["229ca19",{"_index":5491,"title":{},"body":{"changelog.html":{}}}],["22bf773",{"_index":5640,"title":{},"body":{"changelog.html":{}}}],["234a6ce",{"_index":5436,"title":{},"body":{"changelog.html":{}}}],["23f4fc3",{"_index":5473,"title":{},"body":{"changelog.html":{}}}],["2482f83",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["24c6040",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["2515a36",{"_index":5051,"title":{},"body":{"changelog.html":{}}}],["260b3e4",{"_index":5095,"title":{},"body":{"changelog.html":{}}}],["26e30a9",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["2896589",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["2ac05cb",{"_index":5398,"title":{},"body":{"changelog.html":{}}}],["2ad8c32",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["2b0cae9",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["2bda887",{"_index":5327,"title":{},"body":{"changelog.html":{}}}],["2c204a6",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["2d90600",{"_index":5309,"title":{},"body":{"changelog.html":{}}}],["2e9f73e",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["2fe8423",{"_index":5136,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1936,"title":{"classes/EnvironmentVariablesValidator-3.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["3.0.1",{"_index":5677,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":5665,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":5661,"title":{},"body":{"dependencies.html":{}}}],["3.758.0",{"_index":5654,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1883,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["300cc30",{"_index":5370,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":2528,"title":{},"body":{"classes/KycDetails.html":{}}}],["3110e44",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["32170b1",{"_index":5254,"title":{},"body":{"changelog.html":{}}}],["32d0eb1",{"_index":5246,"title":{},"body":{"changelog.html":{}}}],["32e6636",{"_index":5244,"title":{},"body":{"changelog.html":{}}}],["33009b3",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["3312f2d",{"_index":5543,"title":{},"body":{"changelog.html":{}}}],["33a0fe1",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["33c617a",{"_index":5404,"title":{},"body":{"changelog.html":{}}}],["33edb5c",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["3473707",{"_index":5146,"title":{},"body":{"changelog.html":{}}}],["36.8219",{"_index":1542,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["36.8584",{"_index":3012,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["36.895",{"_index":1577,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["3600",{"_index":2214,"title":{},"body":{"classes/FileType.html":{},"injectables/FilesS3PresignedService.html":{}}}],["36b8d3d",{"_index":5287,"title":{},"body":{"changelog.html":{}}}],["36f6128",{"_index":5388,"title":{},"body":{"changelog.html":{}}}],["375a643",{"_index":5099,"title":{},"body":{"changelog.html":{}}}],["37af8e8",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["385eceb",{"_index":5468,"title":{},"body":{"changelog.html":{}}}],["3865f35",{"_index":5621,"title":{},"body":{"changelog.html":{}}}],["38895d5",{"_index":5358,"title":{},"body":{"changelog.html":{}}}],["3982959",{"_index":5059,"title":{},"body":{"changelog.html":{}}}],["39abb6a",{"_index":5061,"title":{},"body":{"changelog.html":{}}}],["39af8ea",{"_index":5645,"title":{},"body":{"changelog.html":{}}}],["3a25",{"_index":2182,"title":{},"body":{"classes/FileType.html":{}}}],["3af99b4",{"_index":5092,"title":{},"body":{"changelog.html":{}}}],["3bc56aa",{"_index":5570,"title":{},"body":{"changelog.html":{}}}],["3d26e7f",{"_index":5329,"title":{},"body":{"changelog.html":{}}}],["3d2e089",{"_index":5386,"title":{},"body":{"changelog.html":{}}}],["3d5d9f4",{"_index":5430,"title":{},"body":{"changelog.html":{}}}],["3d9c8a0",{"_index":5134,"title":{},"body":{"changelog.html":{}}}],["3f3c437",{"_index":5197,"title":{},"body":{"changelog.html":{}}}],["3f6b0db",{"_index":5240,"title":{},"body":{"changelog.html":{}}}],["3f83f8",{"_index":3783,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["3fd879d",{"_index":5248,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1945,"title":{"classes/EnvironmentVariablesValidator-4.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["4.0.1",{"_index":5682,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":5656,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":5672,"title":{},"body":{"dependencies.html":{}}}],["40340b7",{"_index":5462,"title":{},"body":{"changelog.html":{}}}],["4036",{"_index":5751,"title":{},"body":{"index.html":{}}}],["404dc26",{"_index":5453,"title":{},"body":{"changelog.html":{}}}],["4109cd2",{"_index":5573,"title":{},"body":{"changelog.html":{}}}],["41ddbfc",{"_index":5126,"title":{},"body":{"changelog.html":{}}}],["4326",{"_index":2907,"title":{},"body":{"entities/RegionEntity.html":{}}}],["44995a4",{"_index":5452,"title":{},"body":{"changelog.html":{}}}],["44a317c",{"_index":5553,"title":{},"body":{"changelog.html":{}}}],["44b3477",{"_index":5442,"title":{},"body":{"changelog.html":{}}}],["44cbd8e",{"_index":5502,"title":{},"body":{"changelog.html":{}}}],["45ef8e0",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["471b61f",{"_index":5497,"title":{},"body":{"changelog.html":{}}}],["4767498",{"_index":5116,"title":{},"body":{"changelog.html":{}}}],["47a5798",{"_index":5331,"title":{},"body":{"changelog.html":{}}}],["47b4e79",{"_index":5601,"title":{},"body":{"changelog.html":{}}}],["47eb62b",{"_index":5356,"title":{},"body":{"changelog.html":{}}}],["48",{"_index":5847,"title":{},"body":{"overview.html":{}}}],["482a081",{"_index":5471,"title":{},"body":{"changelog.html":{}}}],["48c9694",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["48e484a",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["491304c",{"_index":5411,"title":{},"body":{"changelog.html":{}}}],["4913164",{"_index":5505,"title":{},"body":{"changelog.html":{}}}],["492d4ae",{"_index":5255,"title":{},"body":{"changelog.html":{}}}],["493742c",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["49b2a37",{"_index":5179,"title":{},"body":{"changelog.html":{}}}],["49cf4f1",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["49e3a33",{"_index":5205,"title":{},"body":{"changelog.html":{}}}],["4a8bd56",{"_index":5583,"title":{},"body":{"changelog.html":{}}}],["4ab0da9",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["4ad3643",{"_index":5477,"title":{},"body":{"changelog.html":{}}}],["4adb",{"_index":2183,"title":{},"body":{"classes/FileType.html":{}}}],["4b0e77c",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["4b9f841",{"_index":5611,"title":{},"body":{"changelog.html":{}}}],["4c0a580",{"_index":5193,"title":{},"body":{"changelog.html":{}}}],["4c14361",{"_index":5076,"title":{},"body":{"changelog.html":{}}}],["4cd8f15",{"_index":5515,"title":{},"body":{"changelog.html":{}}}],["4da9121",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["4e79414",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["4e7d3af",{"_index":5336,"title":{},"body":{"changelog.html":{}}}],["4f28a24",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1956,"title":{"classes/EnvironmentVariablesValidator-5.html":{}},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5.0.1",{"_index":5687,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":558,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["500",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["50e2d4b",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["51",{"_index":5849,"title":{},"body":{"overview.html":{}}}],["5242880",{"_index":2052,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["530783a",{"_index":5342,"title":{},"body":{"changelog.html":{}}}],["5384b6a",{"_index":5394,"title":{},"body":{"changelog.html":{}}}],["5432",{"_index":2004,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["548e8ee",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["551daa2",{"_index":5444,"title":{},"body":{"changelog.html":{}}}],["555abc5",{"_index":5124,"title":{},"body":{"changelog.html":{}}}],["555c673",{"_index":5368,"title":{},"body":{"changelog.html":{}}}],["587",{"_index":2078,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["5885937",{"_index":5140,"title":{},"body":{"changelog.html":{}}}],["58ba399",{"_index":5628,"title":{},"body":{"changelog.html":{}}}],["590f45c",{"_index":5209,"title":{},"body":{"changelog.html":{}}}],["596ecaa",{"_index":5112,"title":{},"body":{"changelog.html":{}}}],["59bc9aa",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["59e6476",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["5ca6aaf",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["5cc3838",{"_index":5335,"title":{},"body":{"changelog.html":{}}}],["5d017ba",{"_index":5569,"title":{},"body":{"changelog.html":{}}}],["5de0e87",{"_index":5506,"title":{},"body":{"changelog.html":{}}}],["5e16486",{"_index":5591,"title":{},"body":{"changelog.html":{}}}],["5ed56aa",{"_index":5514,"title":{},"body":{"changelog.html":{}}}],["5f0912c",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["5mb",{"_index":2053,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["6",{"_index":2024,"title":{"classes/EnvironmentVariablesValidator-6.html":{}},"body":{"entities/RegionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["6.0.1",{"_index":5685,"title":{},"body":{"dependencies.html":{}}}],["6.10.1",{"_index":5679,"title":{},"body":{"dependencies.html":{}}}],["60924ae",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["615c7f4",{"_index":5420,"title":{},"body":{"changelog.html":{}}}],["624254a",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["641e009",{"_index":5207,"title":{},"body":{"changelog.html":{}}}],["654f4e6",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["65db423",{"_index":5082,"title":{},"body":{"changelog.html":{}}}],["665feb3",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["66c5df6",{"_index":5427,"title":{},"body":{"changelog.html":{}}}],["66c9ac7",{"_index":5172,"title":{},"body":{"changelog.html":{}}}],["66df83d",{"_index":5433,"title":{},"body":{"changelog.html":{}}}],["66ed494",{"_index":5308,"title":{},"body":{"changelog.html":{}}}],["672ae95",{"_index":5595,"title":{},"body":{"changelog.html":{}}}],["67b5b01",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["681bb29",{"_index":5271,"title":{},"body":{"changelog.html":{}}}],["6903c1a",{"_index":5222,"title":{},"body":{"changelog.html":{}}}],["69236df",{"_index":5348,"title":{},"body":{"changelog.html":{}}}],["694ff52",{"_index":5390,"title":{},"body":{"changelog.html":{}}}],["69c810f",{"_index":5168,"title":{},"body":{"changelog.html":{}}}],["69f6131",{"_index":5481,"title":{},"body":{"changelog.html":{}}}],["6a1111d",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["6b41f72",{"_index":5142,"title":{},"body":{"changelog.html":{}}}],["6bb9e2f",{"_index":5636,"title":{},"body":{"changelog.html":{}}}],["6bbd949",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["6cbebf3",{"_index":5067,"title":{},"body":{"changelog.html":{}}}],["6cc958d",{"_index":5563,"title":{},"body":{"changelog.html":{}}}],["6d30436",{"_index":5170,"title":{},"body":{"changelog.html":{}}}],["6d4463d",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["6d50d94",{"_index":5148,"title":{},"body":{"changelog.html":{}}}],["6df13f1",{"_index":5438,"title":{},"body":{"changelog.html":{}}}],["6dfc9cc",{"_index":5338,"title":{},"body":{"changelog.html":{}}}],["6e39a2a",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["6e8cee0",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2054,"title":{"classes/EnvironmentVariablesValidator-7.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["7.8.2",{"_index":5686,"title":{},"body":{"dependencies.html":{}}}],["7059f69",{"_index":5047,"title":{},"body":{"changelog.html":{}}}],["70fde88",{"_index":5508,"title":{},"body":{"changelog.html":{}}}],["71fbeb3",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["726d978",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["7433ca0",{"_index":5160,"title":{},"body":{"changelog.html":{}}}],["750",{"_index":5625,"title":{},"body":{"changelog.html":{}}}],["754e538",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["766ab6e",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["767f62d",{"_index":5283,"title":{},"body":{"changelog.html":{}}}],["790f8d0",{"_index":5641,"title":{},"body":{"changelog.html":{}}}],["79a5dd8",{"_index":5440,"title":{},"body":{"changelog.html":{}}}],["79fe840",{"_index":5435,"title":{},"body":{"changelog.html":{}}}],["7b1f178",{"_index":5275,"title":{},"body":{"changelog.html":{}}}],["7b373e3",{"_index":5547,"title":{},"body":{"changelog.html":{}}}],["7b741f4",{"_index":5176,"title":{},"body":{"changelog.html":{}}}],["7b8fb15",{"_index":5396,"title":{},"body":{"changelog.html":{}}}],["7bac23c",{"_index":5499,"title":{},"body":{"changelog.html":{}}}],["7c66721",{"_index":5579,"title":{},"body":{"changelog.html":{}}}],["7d01345",{"_index":5614,"title":{},"body":{"changelog.html":{}}}],["7d14369",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["7d2fe3c",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["7d8dba2",{"_index":5539,"title":{},"body":{"changelog.html":{}}}],["7db3a48",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["7dbad57",{"_index":5185,"title":{},"body":{"changelog.html":{}}}],["7e34d25",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["7f8b2bc",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["7fc7d8f",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2851,"title":{},"body":{"injectables/MailerService.html":{},"miscellaneous/enumerations.html":{}}}],["8.13.2",{"_index":5673,"title":{},"body":{"dependencies.html":{}}}],["8.14.1",{"_index":5683,"title":{},"body":{"dependencies.html":{}}}],["802ff5a",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["8068449",{"_index":5598,"title":{},"body":{"changelog.html":{}}}],["81b54b1",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["81b9f4f",{"_index":5242,"title":{},"body":{"changelog.html":{}}}],["81ccb1a",{"_index":5412,"title":{},"body":{"changelog.html":{}}}],["8254de7",{"_index":5571,"title":{},"body":{"changelog.html":{}}}],["825cd50",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["831d432",{"_index":5292,"title":{},"body":{"changelog.html":{}}}],["8326022",{"_index":5224,"title":{},"body":{"changelog.html":{}}}],["8376216",{"_index":5428,"title":{},"body":{"changelog.html":{}}}],["83817d1",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["83a8d0a",{"_index":5531,"title":{},"body":{"changelog.html":{}}}],["84283a0",{"_index":5501,"title":{},"body":{"changelog.html":{}}}],["8520e88",{"_index":5055,"title":{},"body":{"changelog.html":{}}}],["85c97e1",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["85e6888",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["85ebfab",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["8627644",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["876a4bf",{"_index":5239,"title":{},"body":{"changelog.html":{}}}],["87ba95d",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["88bfbb2",{"_index":5252,"title":{},"body":{"changelog.html":{}}}],["895511e",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["8994479",{"_index":5250,"title":{},"body":{"changelog.html":{}}}],["8a4030f",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["8a5304d",{"_index":5400,"title":{},"body":{"changelog.html":{}}}],["8adaedb",{"_index":5503,"title":{},"body":{"changelog.html":{}}}],["8b9d2c3",{"_index":5301,"title":{},"body":{"changelog.html":{}}}],["8ba7031",{"_index":5279,"title":{},"body":{"changelog.html":{}}}],["8c1df7a",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["8c811ad",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["8ce9af4",{"_index":5392,"title":{},"body":{"changelog.html":{}}}],["8e17307",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["8e6734e",{"_index":5078,"title":{},"body":{"changelog.html":{}}}],["8ea2e76",{"_index":5234,"title":{},"body":{"changelog.html":{}}}],["8eeb",{"_index":5752,"title":{},"body":{"index.html":{}}}],["8f39c86",{"_index":5455,"title":{},"body":{"changelog.html":{}}}],["8f56cd8",{"_index":5293,"title":{},"body":{"changelog.html":{}}}],["8f89f49",{"_index":5201,"title":{},"body":{"changelog.html":{}}}],["8fb2d23",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["8fc1a25",{"_index":5266,"title":{},"body":{"changelog.html":{}}}],["8fe3cec",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2911,"title":{},"body":{"entities/RegionEntity.html":{},"miscellaneous/enumerations.html":{}}}],["9.15.1",{"_index":5671,"title":{},"body":{"dependencies.html":{}}}],["91bf30f",{"_index":5378,"title":{},"body":{"changelog.html":{}}}],["93ac4ce",{"_index":5258,"title":{},"body":{"changelog.html":{}}}],["94f8509",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["95a7a76",{"_index":5084,"title":{},"body":{"changelog.html":{}}}],["95b99fa",{"_index":5464,"title":{},"body":{"changelog.html":{}}}],["95e1091",{"_index":5190,"title":{},"body":{"changelog.html":{}}}],["9635790",{"_index":5432,"title":{},"body":{"changelog.html":{}}}],["964d4ed",{"_index":5150,"title":{},"body":{"changelog.html":{}}}],["965b7b2",{"_index":5156,"title":{},"body":{"changelog.html":{}}}],["9682d2c",{"_index":5380,"title":{},"body":{"changelog.html":{}}}],["9697f5e",{"_index":5305,"title":{},"body":{"changelog.html":{}}}],["96e6854",{"_index":5041,"title":{},"body":{"changelog.html":{}}}],["973cb74",{"_index":5183,"title":{},"body":{"changelog.html":{}}}],["98c2b76",{"_index":5203,"title":{},"body":{"changelog.html":{}}}],["98e49da",{"_index":5228,"title":{},"body":{"changelog.html":{}}}],["9aad4c5",{"_index":5362,"title":{},"body":{"changelog.html":{}}}],["9add502",{"_index":5073,"title":{},"body":{"changelog.html":{}}}],["9b06ddc",{"_index":5152,"title":{},"body":{"changelog.html":{}}}],["9b26ab1",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["9b38243",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["9cc6a60",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["9dacc98",{"_index":5065,"title":{},"body":{"changelog.html":{}}}],["9e180c9",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["9e2b0c5",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["9e6a0c4",{"_index":5144,"title":{},"body":{"changelog.html":{}}}],["9fb0492",{"_index":5457,"title":{},"body":{"changelog.html":{}}}],["__dirname",{"_index":4250,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["__entity",{"_index":1816,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["_id",{"_index":1807,"title":{},"body":{"classes/EntityDocumentHelper.html":{},"injectables/FileDocumentRepository.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/RoleSchema.html":{},"injectables/SessionDocumentRepository.html":{},"classes/StatusSchema.html":{},"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{}}}],["a0ca2d0",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["a192af8",{"_index":5372,"title":{},"body":{"changelog.html":{}}}],["a1e3d34",{"_index":5088,"title":{},"body":{"changelog.html":{}}}],["a20c093",{"_index":5422,"title":{},"body":{"changelog.html":{}}}],["a26b138",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["a27af0b",{"_index":5218,"title":{},"body":{"changelog.html":{}}}],["a283e98",{"_index":5521,"title":{},"body":{"changelog.html":{}}}],["a2ce0c8",{"_index":5364,"title":{},"body":{"changelog.html":{}}}],["a343c03",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["a43f741",{"_index":5199,"title":{},"body":{"changelog.html":{}}}],["a460e22",{"_index":5426,"title":{},"body":{"changelog.html":{}}}],["a4e35a6",{"_index":5469,"title":{},"body":{"changelog.html":{}}}],["a59a18e",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["a636bb7",{"_index":5510,"title":{},"body":{"changelog.html":{}}}],["a6f650d",{"_index":5311,"title":{},"body":{"changelog.html":{}}}],["a724d04",{"_index":5326,"title":{},"body":{"changelog.html":{}}}],["a8f6ca2",{"_index":5626,"title":{},"body":{"changelog.html":{}}}],["a96ec15",{"_index":5295,"title":{},"body":{"changelog.html":{}}}],["a9c6",{"_index":2184,"title":{},"body":{"classes/FileType.html":{}}}],["aa7dbed",{"_index":5532,"title":{},"body":{"changelog.html":{}}}],["aa8753f",{"_index":5458,"title":{},"body":{"changelog.html":{}}}],["aaa3c3f",{"_index":5495,"title":{},"body":{"changelog.html":{}}}],["ab15045",{"_index":5093,"title":{},"body":{"changelog.html":{}}}],["ab493c3",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["ab4ef07",{"_index":5408,"title":{},"body":{"changelog.html":{}}}],["ab530c4",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["ab933c3",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["abc",{"_index":998,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthGoogleLoginDto.html":{}}}],["abc'})@isnotempty",{"_index":992,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthGoogleLoginDto.html":{}}}],["above",{"_index":5814,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":278,"title":{},"body":{"classes/AccountRepository.html":{},"classes/FileRepository.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/KycDetailsRepository.html":{},"classes/RegionRepository.html":{},"classes/ResidenceRepository.html":{},"classes/SessionRepository.html":{},"classes/SettingsRepository.html":{},"classes/TenantRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{}}}],["acc79ac",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["access_key_id",{"_index":2026,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["accessibility",{"_index":767,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["accesskeyid",{"_index":2043,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{},"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["accesstoken",{"_index":1150,"title":{},"body":{"classes/AuthFacebookLoginDto.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountsTable1747393574185.html":{}}}],["account\"(\"id",{"_index":1496,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["account.dto",{"_index":527,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/UpdateAccountDto.html":{}}}],["account.dto.ts",{"_index":1445,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/UpdateAccountDto.html":{}}}],["account.dto.ts:106",{"_index":1449,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:114",{"_index":1457,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:121",{"_index":1453,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:128",{"_index":1454,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:41",{"_index":1462,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:51",{"_index":1459,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:59",{"_index":1463,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:66",{"_index":1447,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:74",{"_index":1451,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:83",{"_index":1455,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:92",{"_index":1456,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.dto.ts:99",{"_index":1460,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["account.repository",{"_index":241,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"modules/RelationalAccountPersistenceModule.html":{}}}],["account['id",{"_index":266,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{}}}],["account_owner_user",{"_index":1489,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["accountdto",{"_index":79,"title":{"classes/AccountDto.html":{}},"body":{"classes/AccountDto.html":{}}}],["accountentity",{"_index":86,"title":{"entities/AccountEntity.html":{}},"body":{"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"modules/RelationalAccountPersistenceModule.html":{}}}],["accountid",{"_index":1490,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["accountmapper",{"_index":127,"title":{"classes/AccountMapper.html":{}},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{}}}],["accountmapper.todomain(entity",{"_index":265,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["accountmapper.todomain(newentity",{"_index":256,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["accountmapper.todomain(updatedentity",{"_index":275,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["accountmapper.topersistence",{"_index":274,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["accountmapper.topersistence(data",{"_index":251,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["accountname",{"_index":3637,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["accountnumber",{"_index":3638,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["accountrelationalrepository",{"_index":203,"title":{"injectables/AccountRelationalRepository.html":{}},"body":{"injectables/AccountRelationalRepository.html":{},"modules/RelationalAccountPersistenceModule.html":{}}}],["accountrepository",{"_index":217,"title":{"classes/AccountRepository.html":{}},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"overview.html":{}}}],["accounts",{"_index":348,"title":{},"body":{"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{}}}],["accounts.controller",{"_index":581,"title":{},"body":{"modules/AccountsModule.html":{}}}],["accounts.dto",{"_index":544,"title":{},"body":{"controllers/AccountsController.html":{}}}],["accounts.dto.ts",{"_index":2388,"title":{},"body":{"classes/FindAllAccountsDto.html":{}}}],["accounts.dto.ts:10",{"_index":2392,"title":{},"body":{"classes/FindAllAccountsDto.html":{}}}],["accounts.dto.ts:16",{"_index":2391,"title":{},"body":{"classes/FindAllAccountsDto.html":{}}}],["accounts.service",{"_index":525,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{}}}],["accounts/accounts.module",{"_index":935,"title":{},"body":{"modules/AppModule.html":{}}}],["accounts/infrastructure/persistence/relational/entities/account.entity",{"_index":309,"title":{},"body":{"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{}}}],["accountscontroller",{"_index":496,"title":{"controllers/AccountsController.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{}}}],["accountscount",{"_index":330,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["accountseedmodule",{"_index":290,"title":{"modules/AccountSeedModule.html":{}},"body":{"modules/AccountSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["accountseedservice",{"_index":301,"title":{"injectables/AccountSeedService.html":{}},"body":{"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"overview.html":{}}}],["accountsmodule",{"_index":569,"title":{"modules/AccountsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsservice",{"_index":524,"title":{"injectables/AccountsService.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"overview.html":{}}}],["accounttype",{"_index":73,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{}}}],["accounttype'})@isenum(accounttypeenum",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{}}}],["accounttypeenum",{"_index":58,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"classes/CreateAccountDto.html":{},"miscellaneous/enumerations.html":{}}}],["accounttypeenum.asset",{"_index":354,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["accounttypeenum.equity",{"_index":486,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["accounttypeenum.expense",{"_index":442,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["accounttypeenum.liability",{"_index":401,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["accounttypeenum.revenue",{"_index":422,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["accumulator",{"_index":4557,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["acl",{"_index":2338,"title":{},"body":{"modules/FilesS3PresignedModule.html":{}}}],["action",{"_index":690,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{},"license.html":{}}}],["actions",{"_index":5765,"title":{},"body":{"index.html":{}}}],["actiontitle",{"_index":2803,"title":{},"body":{"injectables/MailService.html":{}}}],["activation.hbs",{"_index":2800,"title":{},"body":{"injectables/MailService.html":{}}}],["active",{"_index":9,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/Status.html":{},"injectables/StatusSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["ad08bff",{"_index":5610,"title":{},"body":{"changelog.html":{}}}],["adb7713",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":680,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{},"changelog.html":{}}}],["added",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["addkycdetails.ts",{"_index":652,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["addkycdetails.ts:4",{"_index":657,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["addkycdetails.ts:54",{"_index":658,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["addkycdetails.ts:6",{"_index":659,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["addkycdetails1745134929693",{"_index":650,"title":{"classes/AddKycDetails1745134929693.html":{}},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["addkycdetailsfields.ts",{"_index":701,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{}}}],["addkycdetailsfields.ts:39",{"_index":703,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{}}}],["addkycdetailsfields.ts:4",{"_index":702,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{}}}],["addkycdetailsfields.ts:6",{"_index":704,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{}}}],["addkycdetailsfields1745138722127",{"_index":699,"title":{"classes/AddKycDetailsFields1745138722127.html":{}},"body":{"classes/AddKycDetailsFields1745138722127.html":{}}}],["addregions.ts",{"_index":717,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["addregions.ts:30",{"_index":720,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["addregions.ts:4",{"_index":718,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["addregions.ts:6",{"_index":722,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["addregions1745152940566",{"_index":715,"title":{"classes/AddRegions1745152940566.html":{}},"body":{"classes/AddRegions1745152940566.html":{}}}],["address",{"_index":830,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateTenantDto.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantsService.html":{}}}],["addsettingstableandfileds.ts",{"_index":748,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["addsettingstableandfileds.ts:26",{"_index":750,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["addsettingstableandfileds.ts:6",{"_index":749,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["addsettingstableandfileds.ts:8",{"_index":751,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["addsettingstableandfileds1745147786203",{"_index":746,"title":{"classes/AddSettingsTableAndFileds1745147786203.html":{}},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["addtenantfieldsandtenanttypetable.ts",{"_index":801,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["addtenantfieldsandtenanttypetable.ts:43",{"_index":803,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["addtenantfieldsandtenanttypetable.ts:6",{"_index":802,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["addtenantfieldsandtenanttypetable.ts:8",{"_index":804,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["addtenantfieldsandtenanttypetable1745143148021",{"_index":799,"title":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["adf2404",{"_index":5104,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":3335,"title":{},"body":{"classes/Role.html":{},"injectables/RoleSeedService.html":{},"classes/User.html":{},"injectables/UserSeedService.html":{},"controllers/UsersController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["admin@example.com",{"_index":4464,"title":{},"body":{"injectables/UserSeedService.html":{},"miscellaneous/variables.html":{}}}],["admin_email",{"_index":5886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin_password",{"_index":5888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminuser",{"_index":3767,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["ads",{"_index":476,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["advance",{"_index":411,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["advances",{"_index":390,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["advertising",{"_index":475,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["ae5b58a",{"_index":5273,"title":{},"body":{"changelog.html":{}}}],["aefd4c2",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["af2625a",{"_index":5535,"title":{},"body":{"changelog.html":{}}}],["afbc519",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["affc863",{"_index":5523,"title":{},"body":{"changelog.html":{}}}],["afterload",{"_index":1820,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["against",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["agency",{"_index":4094,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["agent",{"_index":3366,"title":{},"body":{"injectables/RoleSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["agreements",{"_index":426,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["agricultural_business",{"_index":820,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["aioptimization",{"_index":3694,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["alert",{"_index":759,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":5853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allconfigtype",{"_index":910,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/typealiases.html":{}}}],["allow",{"_index":996,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/FileType.html":{},"classes/Role.html":{},"classes/Status.html":{},"classes/Tokens.html":{}}}],["allow()@apiproperty",{"_index":4234,"title":{},"body":{"classes/Tokens.html":{}}}],["allow()@apiproperty({type",{"_index":3332,"title":{},"body":{"classes/Role.html":{},"classes/Status.html":{}}}],["allow()@apipropertyoptional",{"_index":989,"title":{},"body":{"classes/AuthAppleLoginDto.html":{}}}],["allowdriverassignment",{"_index":3672,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["allowedwastetypes",{"_index":3609,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["allowexternalvendors",{"_index":3667,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["already",{"_index":335,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/TenantSeedService.html":{}}}],["alter",{"_index":663,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["amazon",{"_index":5761,"title":{},"body":{"index.html":{}}}],["amounts",{"_index":408,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["and/or",{"_index":5807,"title":{},"body":{"license.html":{}}}],["anonymous",{"_index":850,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"dependencies.html":{}}}],["anonymousstrategy",{"_index":840,"title":{"injectables/AnonymousStrategy.html":{}},"body":{"injectables/AnonymousStrategy.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["apartment",{"_index":5709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":771,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"classes/EnvironmentVariablesValidator.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["api_prefix",{"_index":1830,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["apiaccess",{"_index":3692,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["apibearerauth",{"_index":529,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth()@apiokresponse({type",{"_index":1068,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth()@delete('me')@useguards(undefined)@httpcode(httpstatus.no_content",{"_index":1047,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth()@post('logout')@useguards(undefined)@httpcode(httpstatus.no_content",{"_index":1060,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth()@serializeoptions({groups",{"_index":1063,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":2244,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["apiconsumes",{"_index":2245,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["apiconsumes('multipart/form",{"_index":2254,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["apicreatedresponse",{"_index":530,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["apicreatedresponse({type",{"_index":2234,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/UsersController.html":{}}}],["apiexcludeendpoint",{"_index":2246,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["apikey",{"_index":3634,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["apiokresponse",{"_index":531,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["apiokresponse({type",{"_index":959,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":532,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["apiprefix",{"_index":1884,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["apiproperty",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"classes/FileDto.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"classes/FilterUserDto.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/KycDetails.html":{},"classes/KycDetailsDto.html":{},"classes/LoginResponseDto.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"classes/Settings.html":{},"classes/SettingsDto.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"classes/Tokens.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["apiproperty()@isnotempty",{"_index":1028,"title":{},"body":{"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/Tokens.html":{}}}],["apiproperty()@isnumber",{"_index":3340,"title":{},"body":{"classes/RoleDto.html":{},"classes/StatusDto.html":{}}}],["apiproperty()@isstring",{"_index":3812,"title":{},"body":{"classes/SortUserDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":81,"title":{},"body":{"classes/AccountDto.html":{},"classes/FileDto.html":{},"classes/KycDetailsDto.html":{},"classes/RegionDto.html":{},"classes/ResidenceDto.html":{},"classes/SettingsDto.html":{},"classes/TenantDto.html":{},"classes/TenantTypeDto.html":{}}}],["apiproperty()@minlength(6",{"_index":1235,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty()@type(undefined)@isstring",{"_index":3814,"title":{},"body":{"classes/SortUserDto.html":{}}}],["apiproperty({enum",{"_index":1627,"title":{},"body":{"classes/CreateResidenceDto.html":{},"classes/KycDetails.html":{},"classes/Residence.html":{},"classes/Settings.html":{},"classes/TenantType.html":{}}}],["apiproperty({example",{"_index":991,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/CreateUserDto.html":{},"classes/FileUploadDto.html":{}}}],["apiproperty({required",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{}}}],["apiproperty({type",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/CreateRegionDto.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileType.html":{},"classes/KycDetails.html":{},"classes/LoginResponseDto.html":{},"classes/Region.html":{},"classes/Residence.html":{},"classes/Role.html":{},"classes/Settings.html":{},"classes/Tenant.html":{},"classes/TenantType.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":995,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty()@minlength(6",{"_index":1435,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["apipropertyoptional()@isoptional()@isnotempty({message",{"_index":1433,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["apipropertyoptional()@isoptional()@minlength(6",{"_index":4295,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["apipropertyoptional()@transform",{"_index":2389,"title":{},"body":{"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/QueryUserDto.html":{}}}],["apipropertyoptional({example",{"_index":1425,"title":{},"body":{"classes/AuthUpdateDto.html":{},"classes/UpdateUserDto.html":{}}}],["apipropertyoptional({type",{"_index":1438,"title":{},"body":{"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apitags",{"_index":533,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/HomeController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["apitags('accounts",{"_index":545,"title":{},"body":{"controllers/AccountsController.html":{}}}],["apitags('auth",{"_index":975,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{}}}],["apitags('files",{"_index":2250,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{}}}],["apitags('home",{"_index":2427,"title":{},"body":{"controllers/HomeController.html":{}}}],["apitags('kycdetails",{"_index":2542,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["apitags('regions",{"_index":3026,"title":{},"body":{"controllers/RegionsController.html":{}}}],["apitags('residences",{"_index":3258,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["apitags('settings",{"_index":3575,"title":{},"body":{"controllers/SettingsController.html":{}}}],["apitags('tenants",{"_index":4136,"title":{},"body":{"controllers/TenantsController.html":{}}}],["apitags('tenanttypes",{"_index":4062,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["apitags('users",{"_index":4519,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiurl",{"_index":3650,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["app",{"_index":1851,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":5927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(accountseedservice).run",{"_index":5937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(kycdetailseedservice).run",{"_index":5934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(regionseedservice).run",{"_index":5933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(residenceseedservice).run",{"_index":5936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(roleseedservice).run",{"_index":5931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(settingsseedservice).run",{"_index":5935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(statusseedservice).run",{"_index":5932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(tenantseedservice).run",{"_index":5930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(tenanttypesseedservice).run",{"_index":5929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(userseedservice).run",{"_index":5926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_fallback_language",{"_index":1831,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["app_header_language",{"_index":1832,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["app_name",{"_index":2804,"title":{},"body":{"injectables/MailService.html":{}}}],["app_port",{"_index":1833,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["app_url",{"_index":5889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appaudience",{"_index":1934,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["appconfig",{"_index":877,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/FileType.html":{},"modules/SeedModule.html":{},"miscellaneous/typealiases.html":{}}}],["appconfig).backenddomain",{"_index":2203,"title":{},"body":{"classes/FileType.html":{}}}],["appdatasource",{"_index":5890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appid",{"_index":1163,"title":{},"body":{"injectables/AuthFacebookService.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["appinfo",{"_index":2423,"title":{},"body":{"controllers/HomeController.html":{},"injectables/HomeService.html":{}}}],["apple",{"_index":971,"title":{},"body":{"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"injectables/AuthAppleService.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["apple.controller",{"_index":1004,"title":{},"body":{"modules/AuthAppleModule.html":{}}}],["apple.controller.ts",{"_index":955,"title":{},"body":{"controllers/AuthAppleController.html":{}}}],["apple.controller.ts:34",{"_index":962,"title":{},"body":{"controllers/AuthAppleController.html":{}}}],["apple.module",{"_index":894,"title":{},"body":{"modules/AppModule.html":{}}}],["apple.module.ts",{"_index":1003,"title":{},"body":{"modules/AuthAppleModule.html":{}}}],["apple.service",{"_index":969,"title":{},"body":{"controllers/AuthAppleController.html":{},"modules/AuthAppleModule.html":{}}}],["apple.service.ts",{"_index":1005,"title":{},"body":{"injectables/AuthAppleService.html":{}}}],["apple.service.ts:12",{"_index":1010,"title":{},"body":{"injectables/AuthAppleService.html":{}}}],["apple.service.ts:9",{"_index":1008,"title":{},"body":{"injectables/AuthAppleService.html":{}}}],["apple/auth",{"_index":893,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{}}}],["apple/config/apple",{"_index":5873,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apple/config/apple.config",{"_index":889,"title":{},"body":{"modules/AppModule.html":{}}}],["apple/config/apple.config.ts",{"_index":1928,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["apple/config/apple.config.ts:10",{"_index":1931,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["apple/dto/auth",{"_index":984,"title":{},"body":{"classes/AuthAppleLoginDto.html":{}}}],["apple_app_audience",{"_index":1929,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["appleconfig",{"_index":888,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"miscellaneous/typealiases.html":{}}}],["applesigninauth",{"_index":1011,"title":{},"body":{"injectables/AuthAppleService.html":{}}}],["applesigninauth.verifyidtoken(logindto.idtoken",{"_index":1015,"title":{},"body":{"injectables/AuthAppleService.html":{}}}],["applies",{"_index":3554,"title":{},"body":{"classes/Settings.html":{}}}],["apply",{"_index":5607,"title":{},"body":{"changelog.html":{}}}],["appmodule",{"_index":853,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":4114,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["appsecret",{"_index":1165,"title":{},"body":{"injectables/AuthFacebookService.html":{},"classes/EnvironmentVariablesValidator-3.html":{}}}],["architecture",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":5841,"title":{},"body":{"license.html":{}}}],["array",{"_index":2742,"title":{},"body":{"classes/LatestChanges1745163536016.html":{},"entities/RegionEntity.html":{},"changelog.html":{}}}],["asc",{"_index":4560,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["ask",{"_index":5783,"title":{},"body":{"index.html":{}}}],["asset",{"_index":347,"title":{},"body":{"injectables/AccountSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["assign",{"_index":4487,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["assigned",{"_index":4019,"title":{},"body":{"classes/TenantTypeMapper.html":{}}}],["associated",{"_index":445,"title":{},"body":{"injectables/AccountSeedService.html":{},"license.html":{}}}],["async",{"_index":206,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["attachments/assets/a66f114a",{"_index":5749,"title":{},"body":{"index.html":{}}}],["audience",{"_index":1016,"title":{},"body":{"injectables/AuthAppleService.html":{},"injectables/AuthGoogleService.html":{},"changelog.html":{}}}],["audit",{"_index":770,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["auditlogging",{"_index":3697,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["auth",{"_index":884,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"modules/AuthFacebookModule.html":{},"controllers/AuthGoogleController.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"injectables/MailerService.html":{},"changelog.html":{},"dependencies.html":{}}}],["auth.controller",{"_index":1221,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":1087,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/apple",{"_index":976,"title":{},"body":{"controllers/AuthAppleController.html":{}}}],["auth/auth",{"_index":4354,"title":{},"body":{"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersService.html":{}}}],["auth/auth.module",{"_index":872,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{}}}],["auth/auth.service",{"_index":967,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{}}}],["auth/config/auth.config",{"_index":876,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/login",{"_index":974,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{}}}],["auth/facebook",{"_index":1146,"title":{},"body":{"controllers/AuthFacebookController.html":{}}}],["auth/google",{"_index":1188,"title":{},"body":{"controllers/AuthGoogleController.html":{}}}],["auth_confirm_email_secret",{"_index":1894,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["auth_confirm_email_token_expires_in",{"_index":1895,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["auth_forgot_secret",{"_index":1896,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["auth_forgot_token_expires_in",{"_index":1897,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["auth_jwt_secret",{"_index":1898,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["auth_jwt_token_expires_in",{"_index":1899,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["auth_refresh_secret",{"_index":1900,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["auth_refresh_token_expires_in",{"_index":1901,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["authapplecontroller",{"_index":953,"title":{"controllers/AuthAppleController.html":{}},"body":{"controllers/AuthAppleController.html":{},"modules/AuthAppleModule.html":{}}}],["authapplelogindto",{"_index":958,"title":{"classes/AuthAppleLoginDto.html":{}},"body":{"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"injectables/AuthAppleService.html":{}}}],["authapplemodule",{"_index":856,"title":{"modules/AuthAppleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules.html":{},"overview.html":{}}}],["authappleservice",{"_index":968,"title":{"injectables/AuthAppleService.html":{}},"body":{"controllers/AuthAppleController.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"overview.html":{}}}],["authconfig",{"_index":875,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"miscellaneous/typealiases.html":{}}}],["authconfirmemaildto",{"_index":1023,"title":{"classes/AuthConfirmEmailDto.html":{}},"body":{"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{}}}],["authcontroller",{"_index":1030,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authemaillogindto",{"_index":1054,"title":{"classes/AuthEmailLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"injectables/AuthService.html":{}}}],["authfacebookcontroller",{"_index":1139,"title":{"controllers/AuthFacebookController.html":{}},"body":{"controllers/AuthFacebookController.html":{},"modules/AuthFacebookModule.html":{}}}],["authfacebooklogindto",{"_index":1141,"title":{"classes/AuthFacebookLoginDto.html":{}},"body":{"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"injectables/AuthFacebookService.html":{}}}],["authfacebookmodule",{"_index":857,"title":{"modules/AuthFacebookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthFacebookModule.html":{},"modules.html":{},"overview.html":{}}}],["authfacebookservice",{"_index":1143,"title":{"injectables/AuthFacebookService.html":{}},"body":{"controllers/AuthFacebookController.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"overview.html":{}}}],["authforgotpassworddto",{"_index":1050,"title":{"classes/AuthForgotPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthForgotPasswordDto.html":{}}}],["authgooglecontroller",{"_index":1181,"title":{"controllers/AuthGoogleController.html":{}},"body":{"controllers/AuthGoogleController.html":{},"modules/AuthGoogleModule.html":{}}}],["authgooglelogindto",{"_index":1183,"title":{"classes/AuthGoogleLoginDto.html":{}},"body":{"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"injectables/AuthGoogleService.html":{}}}],["authgooglemodule",{"_index":858,"title":{"modules/AuthGoogleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthGoogleModule.html":{},"modules.html":{},"overview.html":{}}}],["authgoogleservice",{"_index":1185,"title":{"injectables/AuthGoogleService.html":{}},"body":{"controllers/AuthGoogleController.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"overview.html":{}}}],["authguard",{"_index":534,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["authmodule",{"_index":859,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":5851,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":5832,"title":{},"body":{"license.html":{}}}],["authprovider",{"_index":1284,"title":{},"body":{"injectables/AuthService.html":{}}}],["authprovidersenum",{"_index":1294,"title":{},"body":{"injectables/AuthService.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["authprovidersenum.email",{"_index":1312,"title":{},"body":{"injectables/AuthService.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersService.html":{}}}],["authregisterlogindto",{"_index":1073,"title":{"classes/AuthRegisterLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthRegisterLoginDto.html":{},"injectables/AuthService.html":{}}}],["authresetpassworddto",{"_index":1078,"title":{"classes/AuthResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthResetPasswordDto.html":{}}}],["authservice",{"_index":966,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["authupdatedto",{"_index":1084,"title":{"classes/AuthUpdateDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{}}}],["autoassigndrivers",{"_index":3695,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["automatically",{"_index":5609,"title":{},"body":{"changelog.html":{}}}],["autopopulate",{"_index":2866,"title":{},"body":{"injectables/MongooseConfigService.html":{},"dependencies.html":{}}}],["autorenewal",{"_index":3684,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["available",{"_index":1553,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["avatar",{"_index":5617,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":253,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":2193,"title":{},"body":{"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"changelog.html":{},"dependencies.html":{}}}],["aws_default_s3_bucket",{"_index":2027,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["aws_s3_region",{"_index":2028,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["awsdefaults3bucket",{"_index":2047,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["awss3region",{"_index":2049,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["b111ef3",{"_index":5418,"title":{},"body":{"changelog.html":{}}}],["b16f037",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["b18021f",{"_index":5174,"title":{},"body":{"changelog.html":{}}}],["b1a001b",{"_index":5555,"title":{},"body":{"changelog.html":{}}}],["b1cfdd6",{"_index":5226,"title":{},"body":{"changelog.html":{}}}],["b235daa",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["b25961e",{"_index":5310,"title":{},"body":{"changelog.html":{}}}],["b2d3962",{"_index":5238,"title":{},"body":{"changelog.html":{}}}],["b33345f",{"_index":5509,"title":{},"body":{"changelog.html":{}}}],["b3b91d2",{"_index":5154,"title":{},"body":{"changelog.html":{}}}],["b3dbf23",{"_index":5630,"title":{},"body":{"changelog.html":{}}}],["b4a885d",{"_index":5549,"title":{},"body":{"changelog.html":{}}}],["b4baeac",{"_index":5288,"title":{},"body":{"changelog.html":{}}}],["b5e1b54",{"_index":5232,"title":{},"body":{"changelog.html":{}}}],["b60d4ec",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["b6c5b84",{"_index":5268,"title":{},"body":{"changelog.html":{}}}],["b7b12e3",{"_index":5448,"title":{},"body":{"changelog.html":{}}}],["b7e8a9b",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["b8b583e",{"_index":5313,"title":{},"body":{"changelog.html":{}}}],["b8dc049",{"_index":5446,"title":{},"body":{"changelog.html":{}}}],["b9220a0",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["b935b46",{"_index":5303,"title":{},"body":{"changelog.html":{}}}],["b93c9f9",{"_index":5517,"title":{},"body":{"changelog.html":{}}}],["ba66854",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["ba8ca64",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["backend_domain",{"_index":1834,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["backenddomain",{"_index":1875,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["backup",{"_index":782,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["backupemail",{"_index":3702,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["backupsettings",{"_index":3698,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["backurl",{"_index":1529,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{}}}],["balance",{"_index":10,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{}}}],["balers",{"_index":363,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["bank",{"_index":379,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["bankname",{"_index":3639,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["banktransfer",{"_index":3636,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["based",{"_index":4259,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["baseentity",{"_index":1815,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["baseuser",{"_index":4491,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["bc",{"_index":5745,"title":{},"body":{"index.html":{}}}],["bca9c68",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["bcb7099",{"_index":5097,"title":{},"body":{"changelog.html":{}}}],["bcda7e5",{"_index":5538,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":1292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{}}}],["bcrypt.compare",{"_index":1317,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":4466,"title":{},"body":{"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{}}}],["bcrypt.hash('secret",{"_index":4467,"title":{},"body":{"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":4626,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(updateuserdto.password",{"_index":4670,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":1293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bd69be5",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["becb3c3",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":413,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["belongs",{"_index":5744,"title":{},"body":{"index.html":{}}}],["below",{"_index":606,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["bf42e74",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["bfeb525",{"_index":5585,"title":{},"body":{"changelog.html":{}}}],["bidding",{"_index":763,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["billing",{"_index":754,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["bills",{"_index":473,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["binary",{"_index":2256,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["bins",{"_index":3682,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["bintrackingenabled",{"_index":3675,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["body",{"_index":519,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["boilerplate",{"_index":4892,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate/blob/main/docs/auth.md#about",{"_index":2472,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["boilerplates",{"_index":5746,"title":{},"body":{"index.html":{}}}],["boilerplates@brocoders.com",{"_index":5778,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"guards/RolesGuard.html":{},"entities/SettingsEntity.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{}}}],["boolean})@isboolean",{"_index":1446,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateResidenceDto.html":{}}}],["boolean})@isoptional()@isboolean",{"_index":1650,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["bootstrap",{"_index":295,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boundaries",{"_index":2887,"title":{},"body":{"classes/Region.html":{}}}],["boundary",{"_index":729,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateRegionDto.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{}}}],["boundary'})@isobject",{"_index":1536,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["branch",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["brocoders",{"_index":5789,"title":{},"body":{"license.html":{}}}],["browse",{"_index":5845,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":5843,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":2211,"title":{},"body":{"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["bug",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["builduserdata",{"_index":4474,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["builduserdata(tenant",{"_index":4477,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["business",{"_index":381,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["buttonstyle",{"_index":3661,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["c",{"_index":5788,"title":{},"body":{"license.html":{}}}],["c0335a0",{"_index":5277,"title":{},"body":{"changelog.html":{}}}],["c081b5d",{"_index":5138,"title":{},"body":{"changelog.html":{}}}],["c0af790",{"_index":5382,"title":{},"body":{"changelog.html":{}}}],["c108a30",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["c14029c",{"_index":5166,"title":{},"body":{"changelog.html":{}}}],["c17cccd",{"_index":5460,"title":{},"body":{"changelog.html":{}}}],["c1cd15f",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["c280fd7",{"_index":5475,"title":{},"body":{"changelog.html":{}}}],["c29c44a",{"_index":5623,"title":{},"body":{"changelog.html":{}}}],["c2ba11e",{"_index":5346,"title":{},"body":{"changelog.html":{}}}],["c334ef6",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["c4a8451",{"_index":5647,"title":{},"body":{"changelog.html":{}}}],["c520300",{"_index":5632,"title":{},"body":{"changelog.html":{}}}],["c52a02a",{"_index":5493,"title":{},"body":{"changelog.html":{}}}],["c55e852",{"_index":5106,"title":{},"body":{"changelog.html":{}}}],["c5c4c2b",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["c714",{"_index":5750,"title":{},"body":{"index.html":{}}}],["c7cfa91",{"_index":5512,"title":{},"body":{"changelog.html":{}}}],["c81a10b",{"_index":5545,"title":{},"body":{"changelog.html":{}}}],["c825524",{"_index":5618,"title":{},"body":{"changelog.html":{}}}],["c855fa5",{"_index":5069,"title":{},"body":{"changelog.html":{}}}],["c888ff3",{"_index":5634,"title":{},"body":{"changelog.html":{}}}],["c89aa15",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["c9aff23",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["ca",{"_index":2019,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["ca0fc31",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["ca64faa",{"_index":5029,"title":{},"body":{"changelog.html":{}}}],["ca9a0f1",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["callback",{"_index":2278,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["callback(null",{"_index":2281,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["callbackurl",{"_index":12,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"entities/SettingsEntity.html":{}}}],["callhandler",{"_index":3319,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["campaigns",{"_index":477,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["canactivate",{"_index":3383,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":3387,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cantuploadfiletype",{"_index":2280,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["carbon_accounting",{"_index":784,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["cascade",{"_index":741,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{}}}],["case",{"_index":5619,"title":{},"body":{"changelog.html":{}}}],["case.transformer",{"_index":1137,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["case.transformer.ts",{"_index":5902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cash",{"_index":384,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["catch",{"_index":1361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RegionSeedService.html":{}}}],["category",{"_index":3551,"title":{},"body":{"classes/Settings.html":{}}}],["cb1082c",{"_index":5103,"title":{},"body":{"changelog.html":{}}}],["cbb2c72",{"_index":5181,"title":{},"body":{"changelog.html":{}}}],["cbb4d1f",{"_index":5315,"title":{},"body":{"changelog.html":{}}}],["cbc3acc",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["cbcfa8b8",{"_index":2181,"title":{},"body":{"classes/FileType.html":{}}}],["cbe4aed",{"_index":5450,"title":{},"body":{"changelog.html":{}}}],["ccd74f9",{"_index":5340,"title":{},"body":{"changelog.html":{}}}],["ce46c16",{"_index":5384,"title":{},"body":{"changelog.html":{}}}],["centroid",{"_index":1539,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["centroidlat",{"_index":728,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateRegionDto.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{}}}],["centroidlon",{"_index":727,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateRegionDto.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{}}}],["cert",{"_index":2022,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["certification",{"_index":768,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["cf7e53f",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["cfbabe0",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["cfe1f18",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":2813,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{}}}],["changelog",{"_index":4690,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":2734,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["character",{"_index":695,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{}}}],["charge",{"_index":1593,"title":{},"body":{"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"license.html":{}}}],["check",{"_index":2469,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TenantSeedService.html":{},"changelog.html":{}}}],["checking",{"_index":5648,"title":{},"body":{"changelog.html":{}}}],["childentity",{"_index":3872,"title":{},"body":{"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["childentity.tenant",{"_index":3873,"title":{},"body":{"entities/TenantEntity.html":{}}}],["childentity.user",{"_index":4339,"title":{},"body":{"entities/UserEntity.html":{}}}],["ci",{"_index":4900,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["claim",{"_index":5835,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountMapper.html":{},"classes/AccountRepository.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FileDto.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/KycDetails.html":{},"classes/KycDetailsDto.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"classes/RegionMapper.html":{},"classes/RegionRepository.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"classes/ResidenceMapper.html":{},"classes/ResidenceRepository.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"classes/RoleSchema.html":{},"classes/Session.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"classes/SettingsDto.html":{},"classes/SettingsMapper.html":{},"classes/SettingsRepository.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"classes/StatusSchema.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"classes/TenantMapper.html":{},"classes/TenantRepository.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"classes/TenantTypeMapper.html":{},"classes/TenantTypeRepository.html":{},"classes/Tokens.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{}},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{}}}],["classconstructor",{"_index":5731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AccountMapper.html":{},"classes/AccountRepository.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FileDto.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/KycDetails.html":{},"classes/KycDetailsDto.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"classes/RegionMapper.html":{},"classes/RegionRepository.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"classes/ResidenceMapper.html":{},"classes/ResidenceRepository.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"classes/RoleSchema.html":{},"classes/Session.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"classes/SettingsDto.html":{},"classes/SettingsMapper.html":{},"classes/SettingsRepository.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"classes/StatusSchema.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"classes/TenantMapper.html":{},"classes/TenantRepository.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"classes/TenantTypeMapper.html":{},"classes/TenantTypeRepository.html":{},"classes/Tokens.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"overview.html":{}}}],["classreference",{"_index":2446,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{},"miscellaneous/functions.html":{}}}],["cli",{"_index":4254,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["clientid",{"_index":1952,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{},"entities/SettingsEntity.html":{}}}],["clientsecret",{"_index":1954,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["clonedpayload",{"_index":2580,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/UsersDocumentRepository.html":{}}}],["clonedpayload.createdat",{"_index":3438,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["clonedpayload.deletedat",{"_index":3440,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["clonedpayload.id",{"_index":2581,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/UsersDocumentRepository.html":{}}}],["clonedpayload.updatedat",{"_index":3439,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["cluster_accountseedmodule",{"_index":298,"title":{},"body":{"modules/AccountSeedModule.html":{},"overview.html":{}}}],["cluster_accountseedmodule_exports",{"_index":299,"title":{},"body":{"modules/AccountSeedModule.html":{},"overview.html":{}}}],["cluster_accountseedmodule_providers",{"_index":300,"title":{},"body":{"modules/AccountSeedModule.html":{},"overview.html":{}}}],["cluster_accountsmodule",{"_index":570,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_exports",{"_index":572,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_imports",{"_index":571,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_providers",{"_index":573,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":854,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":855,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authapplemodule",{"_index":999,"title":{},"body":{"modules/AuthAppleModule.html":{},"overview.html":{}}}],["cluster_authapplemodule_exports",{"_index":1001,"title":{},"body":{"modules/AuthAppleModule.html":{},"overview.html":{}}}],["cluster_authapplemodule_imports",{"_index":1000,"title":{},"body":{"modules/AuthAppleModule.html":{}}}],["cluster_authapplemodule_providers",{"_index":1002,"title":{},"body":{"modules/AuthAppleModule.html":{},"overview.html":{}}}],["cluster_authfacebookmodule",{"_index":1151,"title":{},"body":{"modules/AuthFacebookModule.html":{},"overview.html":{}}}],["cluster_authfacebookmodule_exports",{"_index":1153,"title":{},"body":{"modules/AuthFacebookModule.html":{},"overview.html":{}}}],["cluster_authfacebookmodule_imports",{"_index":1152,"title":{},"body":{"modules/AuthFacebookModule.html":{}}}],["cluster_authfacebookmodule_providers",{"_index":1154,"title":{},"body":{"modules/AuthFacebookModule.html":{},"overview.html":{}}}],["cluster_authgooglemodule",{"_index":1192,"title":{},"body":{"modules/AuthGoogleModule.html":{},"overview.html":{}}}],["cluster_authgooglemodule_exports",{"_index":1193,"title":{},"body":{"modules/AuthGoogleModule.html":{},"overview.html":{}}}],["cluster_authgooglemodule_imports",{"_index":1194,"title":{},"body":{"modules/AuthGoogleModule.html":{}}}],["cluster_authgooglemodule_providers",{"_index":1195,"title":{},"body":{"modules/AuthGoogleModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":1216,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":1215,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":1217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_documentfilepersistencemodule",{"_index":1753,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"overview.html":{}}}],["cluster_documentfilepersistencemodule_exports",{"_index":1754,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"overview.html":{}}}],["cluster_documentkycdetailspersistencemodule",{"_index":1769,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"overview.html":{}}}],["cluster_documentkycdetailspersistencemodule_exports",{"_index":1770,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"overview.html":{}}}],["cluster_documentsessionpersistencemodule",{"_index":1782,"title":{},"body":{"modules/DocumentSessionPersistenceModule.html":{},"overview.html":{}}}],["cluster_documentsessionpersistencemodule_exports",{"_index":1783,"title":{},"body":{"modules/DocumentSessionPersistenceModule.html":{},"overview.html":{}}}],["cluster_documentuserpersistencemodule",{"_index":1794,"title":{},"body":{"modules/DocumentUserPersistenceModule.html":{},"overview.html":{}}}],["cluster_documentuserpersistencemodule_exports",{"_index":1795,"title":{},"body":{"modules/DocumentUserPersistenceModule.html":{},"overview.html":{}}}],["cluster_fileslocalmodule",{"_index":2264,"title":{},"body":{"modules/FilesLocalModule.html":{},"overview.html":{}}}],["cluster_fileslocalmodule_exports",{"_index":2265,"title":{},"body":{"modules/FilesLocalModule.html":{},"overview.html":{}}}],["cluster_fileslocalmodule_providers",{"_index":2266,"title":{},"body":{"modules/FilesLocalModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2299,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":2300,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":2301,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filess3module",{"_index":2316,"title":{},"body":{"modules/FilesS3Module.html":{},"overview.html":{}}}],["cluster_filess3module_exports",{"_index":2317,"title":{},"body":{"modules/FilesS3Module.html":{},"overview.html":{}}}],["cluster_filess3module_providers",{"_index":2318,"title":{},"body":{"modules/FilesS3Module.html":{},"overview.html":{}}}],["cluster_filess3presignedmodule",{"_index":2334,"title":{},"body":{"modules/FilesS3PresignedModule.html":{},"overview.html":{}}}],["cluster_filess3presignedmodule_exports",{"_index":2335,"title":{},"body":{"modules/FilesS3PresignedModule.html":{},"overview.html":{}}}],["cluster_filess3presignedmodule_providers",{"_index":2336,"title":{},"body":{"modules/FilesS3PresignedModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":2429,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_providers",{"_index":2430,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_kycdetailseedmodule",{"_index":2475,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"overview.html":{}}}],["cluster_kycdetailseedmodule_exports",{"_index":2476,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"overview.html":{}}}],["cluster_kycdetailseedmodule_providers",{"_index":2477,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"overview.html":{}}}],["cluster_kycdetailsmodule",{"_index":2646,"title":{},"body":{"modules/KycDetailsModule.html":{},"overview.html":{}}}],["cluster_kycdetailsmodule_exports",{"_index":2647,"title":{},"body":{"modules/KycDetailsModule.html":{},"overview.html":{}}}],["cluster_kycdetailsmodule_providers",{"_index":2648,"title":{},"body":{"modules/KycDetailsModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":2818,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":2819,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":2820,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":2755,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":2756,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_imports",{"_index":2757,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_mailmodule_providers",{"_index":2758,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_regionseedmodule",{"_index":2986,"title":{},"body":{"modules/RegionSeedModule.html":{},"overview.html":{}}}],["cluster_regionseedmodule_exports",{"_index":2987,"title":{},"body":{"modules/RegionSeedModule.html":{},"overview.html":{}}}],["cluster_regionseedmodule_providers",{"_index":2988,"title":{},"body":{"modules/RegionSeedModule.html":{},"overview.html":{}}}],["cluster_regionsmodule",{"_index":3033,"title":{},"body":{"modules/RegionsModule.html":{},"overview.html":{}}}],["cluster_regionsmodule_exports",{"_index":3034,"title":{},"body":{"modules/RegionsModule.html":{},"overview.html":{}}}],["cluster_regionsmodule_imports",{"_index":3035,"title":{},"body":{"modules/RegionsModule.html":{},"overview.html":{}}}],["cluster_regionsmodule_providers",{"_index":3036,"title":{},"body":{"modules/RegionsModule.html":{},"overview.html":{}}}],["cluster_relationalaccountpersistencemodule",{"_index":3071,"title":{},"body":{"modules/RelationalAccountPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalaccountpersistencemodule_exports",{"_index":3072,"title":{},"body":{"modules/RelationalAccountPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalfilepersistencemodule",{"_index":3076,"title":{},"body":{"modules/RelationalFilePersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalfilepersistencemodule_exports",{"_index":3077,"title":{},"body":{"modules/RelationalFilePersistenceModule.html":{}}}],["cluster_relationalkycdetailspersistencemodule",{"_index":3080,"title":{},"body":{"modules/RelationalKycDetailsPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalkycdetailspersistencemodule_exports",{"_index":3081,"title":{},"body":{"modules/RelationalKycDetailsPersistenceModule.html":{}}}],["cluster_relationalregionpersistencemodule",{"_index":3083,"title":{},"body":{"modules/RelationalRegionPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalregionpersistencemodule_exports",{"_index":3084,"title":{},"body":{"modules/RelationalRegionPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalresidencepersistencemodule",{"_index":3088,"title":{},"body":{"modules/RelationalResidencePersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalresidencepersistencemodule_exports",{"_index":3089,"title":{},"body":{"modules/RelationalResidencePersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalsessionpersistencemodule",{"_index":3099,"title":{},"body":{"modules/RelationalSessionPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalsessionpersistencemodule_exports",{"_index":3100,"title":{},"body":{"modules/RelationalSessionPersistenceModule.html":{}}}],["cluster_relationalsettingspersistencemodule",{"_index":3107,"title":{},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationalsettingspersistencemodule_exports",{"_index":3108,"title":{},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaltenantpersistencemodule",{"_index":3118,"title":{},"body":{"modules/RelationalTenantPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaltenantpersistencemodule_exports",{"_index":3119,"title":{},"body":{"modules/RelationalTenantPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaltenanttypepersistencemodule",{"_index":3127,"title":{},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaltenanttypepersistencemodule_exports",{"_index":3128,"title":{},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaluserpersistencemodule",{"_index":3138,"title":{},"body":{"modules/RelationalUserPersistenceModule.html":{},"overview.html":{}}}],["cluster_relationaluserpersistencemodule_exports",{"_index":3139,"title":{},"body":{"modules/RelationalUserPersistenceModule.html":{}}}],["cluster_residenceseedmodule",{"_index":3223,"title":{},"body":{"modules/ResidenceSeedModule.html":{},"overview.html":{}}}],["cluster_residenceseedmodule_exports",{"_index":3224,"title":{},"body":{"modules/ResidenceSeedModule.html":{},"overview.html":{}}}],["cluster_residenceseedmodule_providers",{"_index":3225,"title":{},"body":{"modules/ResidenceSeedModule.html":{},"overview.html":{}}}],["cluster_residencesmodule",{"_index":3266,"title":{},"body":{"modules/ResidencesModule.html":{},"overview.html":{}}}],["cluster_residencesmodule_exports",{"_index":3268,"title":{},"body":{"modules/ResidencesModule.html":{},"overview.html":{}}}],["cluster_residencesmodule_imports",{"_index":3269,"title":{},"body":{"modules/ResidencesModule.html":{}}}],["cluster_residencesmodule_providers",{"_index":3267,"title":{},"body":{"modules/ResidencesModule.html":{},"overview.html":{}}}],["cluster_roleseedmodule",{"_index":3353,"title":{},"body":{"modules/RoleSeedModule.html":{},"overview.html":{}}}],["cluster_roleseedmodule_exports",{"_index":3355,"title":{},"body":{"modules/RoleSeedModule.html":{},"overview.html":{}}}],["cluster_roleseedmodule_providers",{"_index":3354,"title":{},"body":{"modules/RoleSeedModule.html":{},"overview.html":{}}}],["cluster_seedmodule",{"_index":3397,"title":{},"body":{"modules/SeedModule.html":{},"overview.html":{}}}],["cluster_seedmodule_imports",{"_index":3398,"title":{},"body":{"modules/SeedModule.html":{},"overview.html":{}}}],["cluster_sessionmodule",{"_index":3483,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_exports",{"_index":3484,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_providers",{"_index":3485,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":3713,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_exports",{"_index":3714,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":3715,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_settingsmodule_providers",{"_index":3716,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsseedmodule",{"_index":3750,"title":{},"body":{"modules/SettingsSeedModule.html":{},"overview.html":{}}}],["cluster_settingsseedmodule_exports",{"_index":3751,"title":{},"body":{"modules/SettingsSeedModule.html":{},"overview.html":{}}}],["cluster_settingsseedmodule_providers",{"_index":3752,"title":{},"body":{"modules/SettingsSeedModule.html":{},"overview.html":{}}}],["cluster_statusseedmodule",{"_index":3830,"title":{},"body":{"modules/StatusSeedModule.html":{},"overview.html":{}}}],["cluster_statusseedmodule_exports",{"_index":3832,"title":{},"body":{"modules/StatusSeedModule.html":{},"overview.html":{}}}],["cluster_statusseedmodule_providers",{"_index":3831,"title":{},"body":{"modules/StatusSeedModule.html":{},"overview.html":{}}}],["cluster_tenantseedmodule",{"_index":3981,"title":{},"body":{"modules/TenantSeedModule.html":{},"overview.html":{}}}],["cluster_tenantseedmodule_exports",{"_index":3983,"title":{},"body":{"modules/TenantSeedModule.html":{},"overview.html":{}}}],["cluster_tenantseedmodule_providers",{"_index":3982,"title":{},"body":{"modules/TenantSeedModule.html":{},"overview.html":{}}}],["cluster_tenantsmodule",{"_index":4143,"title":{},"body":{"modules/TenantsModule.html":{},"overview.html":{}}}],["cluster_tenantsmodule_exports",{"_index":4144,"title":{},"body":{"modules/TenantsModule.html":{},"overview.html":{}}}],["cluster_tenantsmodule_imports",{"_index":4145,"title":{},"body":{"modules/TenantsModule.html":{}}}],["cluster_tenantsmodule_providers",{"_index":4146,"title":{},"body":{"modules/TenantsModule.html":{},"overview.html":{}}}],["cluster_tenanttypesmodule",{"_index":4069,"title":{},"body":{"modules/TenantTypesModule.html":{},"overview.html":{}}}],["cluster_tenanttypesmodule_exports",{"_index":4071,"title":{},"body":{"modules/TenantTypesModule.html":{},"overview.html":{}}}],["cluster_tenanttypesmodule_imports",{"_index":4072,"title":{},"body":{"modules/TenantTypesModule.html":{}}}],["cluster_tenanttypesmodule_providers",{"_index":4070,"title":{},"body":{"modules/TenantTypesModule.html":{},"overview.html":{}}}],["cluster_tenanttypesseedmodule",{"_index":4076,"title":{},"body":{"modules/TenantTypesSeedModule.html":{},"overview.html":{}}}],["cluster_tenanttypesseedmodule_exports",{"_index":4078,"title":{},"body":{"modules/TenantTypesSeedModule.html":{},"overview.html":{}}}],["cluster_tenanttypesseedmodule_providers",{"_index":4077,"title":{},"body":{"modules/TenantTypesSeedModule.html":{},"overview.html":{}}}],["cluster_userseedmodule",{"_index":4456,"title":{},"body":{"modules/UserSeedModule.html":{},"overview.html":{}}}],["cluster_userseedmodule_exports",{"_index":4457,"title":{},"body":{"modules/UserSeedModule.html":{},"overview.html":{}}}],["cluster_userseedmodule_providers",{"_index":4458,"title":{},"body":{"modules/UserSeedModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":4570,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":4573,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":4572,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":4571,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":826,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateTenantTypeDto.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/RoleSeedService.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"changelog.html":{}}}],["code\"::\"text\"::\"public\".\"tenant_type_code_enum",{"_index":2739,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["code\"::\"text\"::\"public\".\"tenant_type_code_enum_old",{"_index":2746,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["codes",{"_index":1558,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{}}}],["cogs",{"_index":457,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["collaborate",{"_index":5775,"title":{},"body":{"index.html":{}}}],["collection",{"_index":350,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"classes/Region.html":{},"entities/SettingsEntity.html":{},"injectables/TenantTypesSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["collection_agency",{"_index":808,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["collectionfrequencies",{"_index":3610,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["collector",{"_index":791,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["column",{"_index":118,"title":{},"body":{"entities/AccountEntity.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"entities/FileEntity.html":{},"entities/KycDetailsEntity.html":{},"classes/LatestChanges1745163536016.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/StatusEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{},"changelog.html":{}}}],["column({default",{"_index":4344,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({nullable",{"_index":89,"title":{},"body":{"entities/AccountEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":99,"title":{},"body":{"entities/AccountEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/SettingsEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{}}}],["com",{"_index":3995,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["command",{"_index":2210,"title":{},"body":{"classes/FileType.html":{},"injectables/FilesS3PresignedService.html":{},"changelog.html":{}}}],["comment",{"_index":605,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["commercial",{"_index":424,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/CreateRegionDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["commission",{"_index":756,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["commit",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":580,"title":{},"body":{"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"modules/FilesModule.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsService.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/TenantTypesModule.html":{},"injectables/TenantTypesService.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"modules/UsersModule.html":{}}}],["community",{"_index":4086,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["community_group",{"_index":2738,"title":{},"body":{"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["company",{"_index":4092,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["companyname",{"_index":3656,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["compatible",{"_index":5740,"title":{},"body":{"index.html":{}}}],["compliance",{"_index":448,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["compose",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["condition",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":3495,"title":{},"body":{"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"license.html":{}}}],["condo",{"_index":1589,"title":{},"body":{"classes/CreateResidence1747295167463.html":{},"miscellaneous/enumerations.html":{}}}],["config",{"_index":794,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateSettingsDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["config.service",{"_index":905,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{}}}],["config.service.ts",{"_index":2859,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["config.service.ts:10",{"_index":4239,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["config.service.ts:11",{"_index":2861,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["config.service.ts:14",{"_index":2862,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["config.service.ts:7",{"_index":4238,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["config.ts",{"_index":5721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["config.type",{"_index":919,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FileType.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/KycDetailsModule.html":{},"classes/Role.html":{},"modules/SessionModule.html":{},"classes/Status.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["config.type.ts",{"_index":5697,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["config/app",{"_index":2199,"title":{},"body":{"classes/FileType.html":{}}}],["config/app.config",{"_index":878,"title":{},"body":{"modules/AppModule.html":{},"classes/FileType.html":{},"modules/SeedModule.html":{}}}],["config/config.type",{"_index":911,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["config/database.config",{"_index":3403,"title":{},"body":{"modules/SeedModule.html":{}}}],["config/file",{"_index":2190,"title":{},"body":{"classes/FileType.html":{},"modules/FilesModule.html":{}}}],["config/file.config",{"_index":2189,"title":{},"body":{"classes/FileType.html":{},"modules/FilesModule.html":{}}}],["configmodule",{"_index":890,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/MailModule.html":{},"modules/SeedModule.html":{}}}],["configmodule.forroot",{"_index":936,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{}}}],["configservice",{"_index":891,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["configservice.get('app.headerlanguage",{"_index":951,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('file.awss3region",{"_index":2321,"title":{},"body":{"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["configservice.get('file.maxfilesize",{"_index":2289,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["configservice.get('google.clientid",{"_index":1204,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["configservice.get('google.clientsecret",{"_index":1205,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["configservice.get('mail.host",{"_index":2836,"title":{},"body":{"injectables/MailerService.html":{}}}],["configservice.get('mail.ignoretls",{"_index":2838,"title":{},"body":{"injectables/MailerService.html":{}}}],["configservice.get('mail.password",{"_index":2843,"title":{},"body":{"injectables/MailerService.html":{}}}],["configservice.get('mail.port",{"_index":2837,"title":{},"body":{"injectables/MailerService.html":{}}}],["configservice.get('mail.requiretls",{"_index":2840,"title":{},"body":{"injectables/MailerService.html":{}}}],["configservice.get('mail.secure",{"_index":2839,"title":{},"body":{"injectables/MailerService.html":{}}}],["configservice.get('mail.user",{"_index":2841,"title":{},"body":{"injectables/MailerService.html":{}}}],["configservice.getorthrow('app.fallbacklanguage",{"_index":944,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.getorthrow('auth.refreshsecret",{"_index":2463,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["configservice.getorthrow('auth.secret",{"_index":2468,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.getorthrow('file.accesskeyid",{"_index":2322,"title":{},"body":{"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["configservice.getorthrow('file.awsdefaults3bucket",{"_index":2324,"title":{},"body":{"modules/FilesS3Module.html":{}}}],["configservice.getorthrow('file.secretaccesskey",{"_index":2323,"title":{},"body":{"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["configuration",{"_index":1549,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Settings.html":{}}}],["configure",{"_index":5590,"title":{},"body":{"changelog.html":{}}}],["confirm",{"_index":1025,"title":{},"body":{"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["confirmation",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["confirmemail",{"_index":1032,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["confirmemail(confirmemaildto",{"_index":1039,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail(hash",{"_index":1254,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmemaildto",{"_index":1042,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemailexpires",{"_index":1925,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["confirmemailsecret",{"_index":1923,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["confirmemailuserid",{"_index":1350,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmnewemail",{"_index":1033,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["confirmnewemail(confirmemaildto",{"_index":1043,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmnewemail(hash",{"_index":1256,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmnewemail(maildata",{"_index":2766,"title":{},"body":{"injectables/MailService.html":{}}}],["connection",{"_index":2875,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["connection.plugin(mongooseautopopulate",{"_index":2874,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["connectionfactory(connection",{"_index":2873,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["const",{"_index":147,"title":{},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"classes/Role.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionSchemaClass.html":{},"controllers/SettingsController.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"classes/Status.html":{},"injectables/StatusSeedService.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":666,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["construction_company",{"_index":822,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["constructor",{"_index":213,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["constructor(accountrepository",{"_index":214,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{}}}],["constructor(configservice",{"_index":1007,"title":{},"body":{"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/FilesLocalService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["constructor(filemodel",{"_index":2098,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["constructor(filerepository",{"_index":2145,"title":{},"body":{"injectables/FileRelationalRepository.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{}}}],["constructor(jwtservice",{"_index":1249,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(kycdetailsmodel",{"_index":2552,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["constructor(kycdetailsrepository",{"_index":2655,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["constructor(kycrepository",{"_index":2487,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["constructor(mailerservice",{"_index":2763,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(model",{"_index":4461,"title":{},"body":{"injectables/UserSeedService.html":{}}}],["constructor(private",{"_index":549,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"controllers/HomeController.html":{},"injectables/HomeService.html":{},"controllers/KycDetailsController.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"guards/RolesGuard.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"injectables/TypeOrmConfigService.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":3384,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(regionrepository",{"_index":2954,"title":{},"body":{"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{}}}],["constructor(regionservice",{"_index":4150,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["constructor(repository",{"_index":3760,"title":{},"body":{"injectables/SettingsSeedService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["constructor(residencerepository",{"_index":3193,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{}}}],["constructor(rolerepository",{"_index":3359,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["constructor(sessionmodel",{"_index":3415,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["constructor(sessionrepository",{"_index":3489,"title":{},"body":{"injectables/SessionRelationalRepository.html":{},"injectables/SessionService.html":{}}}],["constructor(settingsrepository",{"_index":3720,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["constructor(tenantrepository",{"_index":3954,"title":{},"body":{"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{}}}],["constructor(tenantservice",{"_index":586,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/SettingsService.html":{}}}],["constructor(tenanttyperepository",{"_index":4025,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesService.html":{}}}],["constructor(userrepository",{"_index":4476,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["constructor(userservice",{"_index":3273,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["constructor(usersmodel",{"_index":4531,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["constructor(usersrepository",{"_index":4577,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["consulting",{"_index":5773,"title":{},"body":{"index.html":{}}}],["consumerkey",{"_index":3625,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["consumersecret",{"_index":3626,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["contact",{"_index":5777,"title":{},"body":{"index.html":{}}}],["contact@${tenantname.tolowercase().replace(/\\s+/g",{"_index":3994,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["container",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["contentlength",{"_index":2354,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["contents",{"_index":5754,"title":{},"body":{"index.html":{}}}],["contenttype",{"_index":2325,"title":{},"body":{"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["context",{"_index":2801,"title":{},"body":{"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":3391,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":3392,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":3394,"title":{},"body":{"guards/RolesGuard.html":{}}}],["continue",{"_index":338,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["continuous",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":5838,"title":{},"body":{"license.html":{}}}],["contracts",{"_index":425,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["contributors",{"_index":5755,"title":{},"body":{"index.html":{}}}],["contributorsrc",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":495,"title":{"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/HomeController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/HomeController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["controllers",{"_index":497,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"controllers/AuthAppleController.html":{},"modules/AuthAppleModule.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"modules/AuthFacebookModule.html":{},"controllers/AuthGoogleController.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"controllers/KycDetailsController.html":{},"modules/KycDetailsModule.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coordinates",{"_index":1576,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["copies",{"_index":5809,"title":{},"body":{"license.html":{}}}],["copy",{"_index":5795,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":5787,"title":{},"body":{"license.html":{}}}],["correct",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":455,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["costs",{"_index":444,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["count",{"_index":3839,"title":{},"body":{"injectables/StatusSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["covered",{"_index":1559,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{}}}],["create",{"_index":207,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":550,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["create(createaccountdto",{"_index":500,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{}}}],["create(createkycdetailsdto",{"_index":2531,"title":{},"body":{"controllers/KycDetailsController.html":{},"injectables/KycDetailsService.html":{}}}],["create(createprofiledto",{"_index":4499,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createregiondto",{"_index":3015,"title":{},"body":{"controllers/RegionsController.html":{},"injectables/RegionsService.html":{}}}],["create(createresidencedto",{"_index":3247,"title":{},"body":{"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{}}}],["create(createsettingsdto",{"_index":3564,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{}}}],["create(createtenantdto",{"_index":4126,"title":{},"body":{"controllers/TenantsController.html":{},"injectables/TenantsService.html":{}}}],["create(createtenanttypedto",{"_index":4052,"title":{},"body":{"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{}}}],["create(createuserdto",{"_index":4605,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(data",{"_index":218,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["create(file",{"_index":2292,"title":{},"body":{"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{}}}],["createaccountdto",{"_index":501,"title":{"classes/CreateAccountDto.html":{}},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/UpdateAccountDto.html":{}}}],["createaccountdto.active",{"_index":621,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.balance",{"_index":626,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.callbackurl",{"_index":622,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.description",{"_index":628,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.name",{"_index":629,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.notificationchannel",{"_index":623,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.notificationtype",{"_index":624,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.number",{"_index":627,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.owner",{"_index":613,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.owner.length",{"_index":619,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.owner.map((entity",{"_index":616,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.receivenotification",{"_index":625,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.tenant.id",{"_index":609,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountdto.type",{"_index":620,"title":{},"body":{"injectables/AccountsService.html":{}}}],["createaccountstable.ts",{"_index":1475,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["createaccountstable.ts:39",{"_index":1477,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["createaccountstable.ts:4",{"_index":1476,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["createaccountstable.ts:6",{"_index":1478,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["createaccountstable1747393574185",{"_index":1473,"title":{"classes/CreateAccountsTable1747393574185.html":{}},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/Session.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{}}}],["createdatecolumn",{"_index":93,"title":{},"body":{"entities/AccountEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{}}}],["createdentity",{"_index":2566,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["createdentity.save",{"_index":2569,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["createdfile",{"_index":2112,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["createdfile.save",{"_index":2115,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["createdsession",{"_index":3435,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["createdsession.save",{"_index":3437,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["createduser",{"_index":4545,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["createduser.save",{"_index":4547,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["createhash('sha256",{"_index":1319,"title":{},"body":{"injectables/AuthService.html":{}}}],["createkycdetailsdto",{"_index":1500,"title":{"classes/CreateKycDetailsDto.html":{}},"body":{"classes/CreateKycDetailsDto.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsService.html":{},"classes/UpdateKycDetailsDto.html":{}}}],["createkycdetailsdto.documentdata",{"_index":2701,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.documentnumber",{"_index":2702,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.documenttype",{"_index":2703,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.status",{"_index":2700,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.subjecttype",{"_index":2704,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.submittedat",{"_index":2699,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.tenant.id",{"_index":2693,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.user.id",{"_index":2696,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.verifiedat",{"_index":2698,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createkycdetailsdto.verifiedby",{"_index":2697,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["createmongooseoptions",{"_index":2860,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["createprofiledto",{"_index":4503,"title":{},"body":{"controllers/UsersController.html":{}}}],["createregiondto",{"_index":1531,"title":{"classes/CreateRegionDto.html":{}},"body":{"classes/CreateRegionDto.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/UpdateRegionDto.html":{}}}],["createregiondto.boundary",{"_index":3055,"title":{},"body":{"injectables/RegionsService.html":{}}}],["createregiondto.centroidlat",{"_index":3054,"title":{},"body":{"injectables/RegionsService.html":{}}}],["createregiondto.centroidlon",{"_index":3053,"title":{},"body":{"injectables/RegionsService.html":{}}}],["createregiondto.name",{"_index":3056,"title":{},"body":{"injectables/RegionsService.html":{}}}],["createregiondto.operatinghours",{"_index":3051,"title":{},"body":{"injectables/RegionsService.html":{}}}],["createregiondto.servicetypes",{"_index":3052,"title":{},"body":{"injectables/RegionsService.html":{}}}],["createregiondto.tenant.id",{"_index":3049,"title":{},"body":{"injectables/RegionsService.html":{}}}],["createregiondto.zipcodes",{"_index":3050,"title":{},"body":{"injectables/RegionsService.html":{}}}],["createregionfortenant",{"_index":2993,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["createregionfortenant(tenant",{"_index":2995,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["createresidence.ts",{"_index":1581,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["createresidence.ts:4",{"_index":1582,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["createresidence.ts:48",{"_index":1583,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["createresidence.ts:6",{"_index":1584,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["createresidence1747295167463",{"_index":1579,"title":{"classes/CreateResidence1747295167463.html":{}},"body":{"classes/CreateResidence1747295167463.html":{}}}],["createresidencedto",{"_index":1614,"title":{"classes/CreateResidenceDto.html":{}},"body":{"classes/CreateResidenceDto.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"classes/UpdateResidenceDto.html":{}}}],["createresidencedto.charge",{"_index":3295,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["createresidencedto.isactive",{"_index":3294,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["createresidencedto.name",{"_index":3296,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["createresidencedto.occupants",{"_index":3284,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["createresidencedto.occupants.length",{"_index":3288,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["createresidencedto.occupants.map((entity",{"_index":3286,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["createresidencedto.region.id",{"_index":3291,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["createresidencedto.tenant.id",{"_index":3292,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["createresidencedto.type",{"_index":3293,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["creates",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["createsettingsdto",{"_index":1632,"title":{"classes/CreateSettingsDto.html":{}},"body":{"classes/CreateSettingsDto.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UpdateSettingsDto.html":{}}}],["createsettingsdto.config",{"_index":3796,"title":{},"body":{"injectables/SettingsService.html":{}}}],["createsettingsdto.settingstype",{"_index":3797,"title":{},"body":{"injectables/SettingsService.html":{}}}],["createsettingsdto.subjecttype",{"_index":3798,"title":{},"body":{"injectables/SettingsService.html":{}}}],["createsettingsdto.tenant.id",{"_index":3794,"title":{},"body":{"injectables/SettingsService.html":{}}}],["createsettingsdto.user.id",{"_index":3795,"title":{},"body":{"injectables/SettingsService.html":{}}}],["createtenantdto",{"_index":1640,"title":{"classes/CreateTenantDto.html":{}},"body":{"classes/CreateTenantDto.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UpdateTenantDto.html":{}}}],["createtenantdto.address",{"_index":4196,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.domain",{"_index":4194,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.isactive",{"_index":4200,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.kycsubmissions",{"_index":4183,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.kycsubmissions.length",{"_index":4188,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.kycsubmissions.map((entity",{"_index":4186,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.logo",{"_index":4175,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.logo.id",{"_index":4178,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.name",{"_index":4199,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.primaryemail",{"_index":4198,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.primaryphone",{"_index":4197,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.regions",{"_index":4163,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.regions.length",{"_index":4168,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.regions.map((entity",{"_index":4166,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.schemaname",{"_index":4195,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.settings",{"_index":4169,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.settings.length",{"_index":4174,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.settings.map((entity",{"_index":4172,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.type",{"_index":4179,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.type.id",{"_index":4182,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.users",{"_index":4189,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.users.length",{"_index":4193,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenantdto.users.map((entity",{"_index":4191,"title":{},"body":{"injectables/TenantsService.html":{}}}],["createtenanttable.ts",{"_index":1674,"title":{},"body":{"classes/CreateTenantTable1745086820741.html":{}}}],["createtenanttable.ts:12",{"_index":1676,"title":{},"body":{"classes/CreateTenantTable1745086820741.html":{}}}],["createtenanttable.ts:4",{"_index":1675,"title":{},"body":{"classes/CreateTenantTable1745086820741.html":{}}}],["createtenanttable.ts:6",{"_index":1677,"title":{},"body":{"classes/CreateTenantTable1745086820741.html":{}}}],["createtenanttable1745086820741",{"_index":1672,"title":{"classes/CreateTenantTable1745086820741.html":{}},"body":{"classes/CreateTenantTable1745086820741.html":{}}}],["createtenanttypedto",{"_index":1679,"title":{"classes/CreateTenantTypeDto.html":{}},"body":{"classes/CreateTenantTypeDto.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"classes/UpdateTenantTypeDto.html":{}}}],["createtenanttypedto.code",{"_index":4112,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["createtenanttypedto.description",{"_index":4111,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["createtenanttypedto.name",{"_index":4115,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["createtypeormoptions",{"_index":4237,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["createuser.ts",{"_index":1692,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["createuser.ts:4",{"_index":1693,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["createuser.ts:48",{"_index":1694,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["createuser.ts:6",{"_index":1695,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["createuser1715028537217",{"_index":1690,"title":{"classes/CreateUser1715028537217.html":{}},"body":{"classes/CreateUser1715028537217.html":{}}}],["createuserdto",{"_index":1076,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto.email",{"_index":4627,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.firstname",{"_index":4648,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.kycsubmissions",{"_index":4621,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.kycsubmissions.length",{"_index":4623,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.kycsubmissions.map((entity",{"_index":4622,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.lastname",{"_index":4649,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":4625,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.photo",{"_index":4634,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.photo.id",{"_index":4632,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.photo?.id",{"_index":4630,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.provider",{"_index":4650,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.regions",{"_index":4615,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.regions.length",{"_index":4617,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.regions.map((entity",{"_index":4616,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.role.id",{"_index":4641,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.role?.id",{"_index":4635,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.settings",{"_index":4618,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.settings.length",{"_index":4620,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.settings.map((entity",{"_index":4619,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.socialid",{"_index":4651,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.status.id",{"_index":4647,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.status?.id",{"_index":4642,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.tenant.id",{"_index":4624,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserforrole",{"_index":4475,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["createuserforrole(tenant",{"_index":4479,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["createusertenantrelationship.ts",{"_index":1747,"title":{},"body":{"classes/CreateUserTenantRelationship1745132189825.html":{}}}],["createusertenantrelationship.ts:15",{"_index":1749,"title":{},"body":{"classes/CreateUserTenantRelationship1745132189825.html":{}}}],["createusertenantrelationship.ts:6",{"_index":1748,"title":{},"body":{"classes/CreateUserTenantRelationship1745132189825.html":{}}}],["createusertenantrelationship.ts:8",{"_index":1750,"title":{},"body":{"classes/CreateUserTenantRelationship1745132189825.html":{}}}],["createusertenantrelationship1745132189825",{"_index":1745,"title":{"classes/CreateUserTenantRelationship1745132189825.html":{}},"body":{"classes/CreateUserTenantRelationship1745132189825.html":{}}}],["credentials",{"_index":2207,"title":{},"body":{"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["crypto",{"_index":1288,"title":{},"body":{"injectables/AuthService.html":{}}}],["currency",{"_index":777,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["currentuser",{"_index":1384,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.email",{"_index":1397,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.id",{"_index":1393,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentuser.password",{"_index":1389,"title":{},"body":{"injectables/AuthService.html":{}}}],["custom",{"_index":1891,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["customer",{"_index":368,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["customerrole",{"_index":3233,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["customerrole.id",{"_index":3234,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["customers",{"_index":412,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["customers.length",{"_index":3237,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["d0a9d99",{"_index":5565,"title":{},"body":{"changelog.html":{}}}],["d1dd140",{"_index":5485,"title":{},"body":{"changelog.html":{}}}],["d2793ca",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["d28710e",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["d341e2c",{"_index":5577,"title":{},"body":{"changelog.html":{}}}],["d3a1b59",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["d4cb6eb",{"_index":5374,"title":{},"body":{"changelog.html":{}}}],["d523e26",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["d5dabe7",{"_index":5063,"title":{},"body":{"changelog.html":{}}}],["d691f8c",{"_index":5316,"title":{},"body":{"changelog.html":{}}}],["d74dd84",{"_index":5525,"title":{},"body":{"changelog.html":{}}}],["d7a799d",{"_index":5581,"title":{},"body":{"changelog.html":{}}}],["d7fdf6d",{"_index":5178,"title":{},"body":{"changelog.html":{}}}],["d81dfbc",{"_index":5575,"title":{},"body":{"changelog.html":{}}}],["d826030",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["d8cea5f",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["d8f915a",{"_index":5108,"title":{},"body":{"changelog.html":{}}}],["d9a7fd9",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["d9ba5e1",{"_index":5037,"title":{},"body":{"changelog.html":{}}}],["da39aa3",{"_index":5557,"title":{},"body":{"changelog.html":{}}}],["dafecc7",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["daily",{"_index":3700,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["damages",{"_index":5836,"title":{},"body":{"license.html":{}}}],["darkmodeenabled",{"_index":3664,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["dashboard",{"_index":781,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":220,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"injectables/FilesS3PresignedService.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"interfaces/MailData.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{},"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["data')@apibody({schema",{"_index":2236,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["data.email",{"_index":1020,"title":{},"body":{"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{}}}],["data.family_name",{"_index":1213,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["data.first_name",{"_index":1176,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["data.given_name",{"_index":1212,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["data.hash",{"_index":1405,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id",{"_index":1175,"title":{},"body":{"injectables/AuthFacebookService.html":{},"injectables/AuthService.html":{}}}],["data.interface",{"_index":2774,"title":{},"body":{"injectables/MailService.html":{}}}],["data.interface.ts",{"_index":2754,"title":{},"body":{"interfaces/MailData.html":{}}}],["data.last_name",{"_index":1177,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["data.length",{"_index":5916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.role",{"_index":1418,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.save",{"_index":4471,"title":{},"body":{"injectables/UserSeedService.html":{}}}],["data.sessionid",{"_index":1419,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.sub",{"_index":1018,"title":{},"body":{"injectables/AuthAppleService.html":{},"injectables/AuthGoogleService.html":{}}}],["database",{"_index":1992,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"injectables/JwtStrategy.html":{},"injectables/TenantSeedService.html":{},"injectables/TypeOrmConfigService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database.rejectunauthorized",{"_index":4268,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["database/config/database",{"_index":918,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/KycDetailsModule.html":{},"classes/Role.html":{},"modules/SessionModule.html":{},"classes/Status.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["database/config/database.config",{"_index":874,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/KycDetailsModule.html":{},"classes/Role.html":{},"modules/SessionModule.html":{},"classes/Status.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["database/mongoose",{"_index":917,"title":{},"body":{"modules/AppModule.html":{}}}],["database/typeorm",{"_index":904,"title":{},"body":{"modules/AppModule.html":{}}}],["database_ca",{"_index":1958,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_cert",{"_index":1959,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_host",{"_index":1960,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_key",{"_index":1961,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_max_connections",{"_index":1962,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_name",{"_index":1963,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_password",{"_index":1964,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_port",{"_index":1965,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_reject_unauthorized",{"_index":1966,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_ssl_enabled",{"_index":1967,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_synchronize",{"_index":1968,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_type",{"_index":1969,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_url",{"_index":1970,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["database_username",{"_index":1971,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["databaseconfig",{"_index":873,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/KycDetailsModule.html":{},"classes/Role.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"classes/Status.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig).isdocumentdatabase",{"_index":3338,"title":{},"body":{"classes/Role.html":{},"classes/Status.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":908,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["datasource(options).initialize",{"_index":926,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["datasourcefactory",{"_index":925,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":909,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":38,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/Session.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{}}}],["date(value",{"_index":1525,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["date.now",{"_index":1376,"title":{},"body":{"injectables/AuthService.html":{}}}],["dateformat",{"_index":3606,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["date})@isoptional()@transform",{"_index":1514,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["days",{"_index":1567,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"entities/SettingsEntity.html":{}}}],["db",{"_index":5587,"title":{},"body":{"changelog.html":{}}}],["db6fe90",{"_index":5100,"title":{},"body":{"changelog.html":{}}}],["db8bdd5",{"_index":5652,"title":{},"body":{"changelog.html":{}}}],["dbname",{"_index":2869,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["dd76916",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["dd8248c",{"_index":5086,"title":{},"body":{"changelog.html":{}}}],["dea6a2c",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["deabdcb",{"_index":5122,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":5797,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":5842,"title":{},"body":{"license.html":{}}}],["decimal",{"_index":2909,"title":{},"body":{"entities/RegionEntity.html":{}}}],["declarations",{"_index":294,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/LoginResponseDto.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"controllers/RegionsController.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"controllers/ResidencesController.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"classes/Tokens.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"controllers/UsersController.html":{}}}],["dee24cf",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["deep",{"_index":3327,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["deeppartial",{"_index":285,"title":{},"body":{"classes/AccountRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/RegionRepository.html":{},"classes/ResidenceRepository.html":{},"classes/SettingsRepository.html":{},"classes/TenantRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["deepresolvepromises",{"_index":3326,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{},"miscellaneous/functions.html":{}}}],["deepresolvepromises(data",{"_index":3330,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["deepresolvepromises(input",{"_index":5724,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":322,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/RegionSeedService.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"classes/SessionSchemaClass.html":{},"entities/TenantTypeEntity.html":{},"injectables/TenantTypesService.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["default_stripe_key",{"_index":3781,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["default_webhook_secret",{"_index":3782,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["defaultemail",{"_index":2082,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["defaultlanguage",{"_index":3607,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["defaultname",{"_index":2084,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["defaultrole",{"_index":3620,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["defined",{"_index":31,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"injectables/AuthGoogleService.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"injectables/HomeService.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["defining",{"_index":2886,"title":{},"body":{"classes/Region.html":{}}}],["delete",{"_index":522,"title":{},"body":{"controllers/AccountsController.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/LatestChanges1745163536016.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"injectables/SessionDocumentRepository.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{}}}],["delete(':id",{"_index":566,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@apiparam({name",{"_index":513,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["delete('me",{"_index":1126,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(@request",{"_index":1127,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(request",{"_index":1046,"title":{},"body":{"controllers/AuthController.html":{}}}],["deletebyid",{"_index":3412,"title":{},"body":{"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["deletebyid(id",{"_index":3419,"title":{},"body":{"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["deletebyuserid",{"_index":3413,"title":{},"body":{"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["deletebyuserid(conditions",{"_index":3493,"title":{},"body":{"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["deletebyuserid(undefined",{"_index":3421,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["deletebyuseridwithexclude",{"_index":3414,"title":{},"body":{"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["deletebyuseridwithexclude(conditions",{"_index":3496,"title":{},"body":{"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["deletebyuseridwithexclude(undefined",{"_index":3423,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["deletedat",{"_index":1700,"title":{},"body":{"classes/CreateUser1715028537217.html":{},"classes/Session.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{}}}],["deletedatecolumn",{"_index":3454,"title":{},"body":{"entities/SessionEntity.html":{},"entities/UserEntity.html":{}}}],["delivery",{"_index":414,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["demo",{"_index":5736,"title":{},"body":{"index.html":{}}}],["departments",{"_index":4097,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["dependabot",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":292,"title":{"dependencies.html":{}},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsService.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsService.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesService.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":14,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateRegionDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/Region.html":{},"classes/Settings.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":2283,"title":{},"body":{"modules/FilesLocalModule.html":{}}}],["detail",{"_index":2481,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{}}}],["detail/kyc",{"_index":2480,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{}}}],["details",{"_index":2541,"title":{},"body":{"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["details.controller",{"_index":2651,"title":{},"body":{"modules/KycDetailsModule.html":{}}}],["details.controller.ts",{"_index":2530,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["details.controller.ts:108",{"_index":2535,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["details.controller.ts:45",{"_index":2532,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["details.controller.ts:53",{"_index":2533,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["details.controller.ts:82",{"_index":2534,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["details.controller.ts:95",{"_index":2537,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["details.dto",{"_index":1671,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsService.html":{},"classes/UpdateKycDetailsDto.html":{}}}],["details.dto.ts",{"_index":1503,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/KycDetailsDto.html":{},"classes/UpdateKycDetailsDto.html":{}}}],["details.dto.ts:10",{"_index":2396,"title":{},"body":{"classes/FindAllKycDetailsDto.html":{}}}],["details.dto.ts:107",{"_index":1517,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:116",{"_index":1519,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:16",{"_index":2395,"title":{},"body":{"classes/FindAllKycDetailsDto.html":{}}}],["details.dto.ts:37",{"_index":1522,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:46",{"_index":1520,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:55",{"_index":1516,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:64",{"_index":1510,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:71",{"_index":1505,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:8",{"_index":2589,"title":{},"body":{"classes/KycDetailsDto.html":{}}}],["details.dto.ts:83",{"_index":1506,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:91",{"_index":1507,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.dto.ts:98",{"_index":1513,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details.entity",{"_index":1524,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["details.entity.ts",{"_index":2590,"title":{},"body":{"entities/KycDetailsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["details.entity.ts:33",{"_index":2605,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:39",{"_index":2604,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:45",{"_index":2598,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:52",{"_index":2596,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:55",{"_index":2592,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:65",{"_index":2593,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:71",{"_index":2594,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:77",{"_index":2597,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:84",{"_index":2601,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:90",{"_index":2603,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:93",{"_index":2595,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:96",{"_index":2591,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.entity.ts:99",{"_index":2602,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["details.mapper",{"_index":2563,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["details.mapper.ts",{"_index":2607,"title":{},"body":{"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{}}}],["details.mapper.ts:14",{"_index":2609,"title":{},"body":{"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{}}}],["details.mapper.ts:5",{"_index":2608,"title":{},"body":{"classes/KycDetailsMapper.html":{}}}],["details.mapper.ts:51",{"_index":2613,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["details.module",{"_index":929,"title":{},"body":{"modules/AppModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{}}}],["details.module.ts",{"_index":2649,"title":{},"body":{"modules/KycDetailsModule.html":{},"miscellaneous/variables.html":{}}}],["details.repository",{"_index":1777,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{}}}],["details.repository.ts",{"_index":2551,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{}}}],["details.repository.ts:11",{"_index":2671,"title":{},"body":{"classes/KycDetailsRepository.html":{}}}],["details.repository.ts:12",{"_index":2553,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{}}}],["details.repository.ts:17",{"_index":2672,"title":{},"body":{"classes/KycDetailsRepository.html":{}}}],["details.repository.ts:18",{"_index":2555,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{}}}],["details.repository.ts:19",{"_index":2673,"title":{},"body":{"classes/KycDetailsRepository.html":{}}}],["details.repository.ts:21",{"_index":2674,"title":{},"body":{"classes/KycDetailsRepository.html":{}}}],["details.repository.ts:25",{"_index":2556,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["details.repository.ts:26",{"_index":2656,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{}}}],["details.repository.ts:39",{"_index":2657,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["details.repository.ts:40",{"_index":2557,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["details.repository.ts:45",{"_index":2558,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["details.repository.ts:47",{"_index":2658,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["details.repository.ts:54",{"_index":2560,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["details.repository.ts:55",{"_index":2660,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["details.repository.ts:7",{"_index":2670,"title":{},"body":{"classes/KycDetailsRepository.html":{}}}],["details.repository.ts:79",{"_index":2659,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["details.repository.ts:80",{"_index":2559,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["details.schema",{"_index":1776,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{}}}],["details.schema.ts",{"_index":2676,"title":{},"body":{"classes/KycDetailsSchemaClass.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["details.schema.ts:16",{"_index":2678,"title":{},"body":{"classes/KycDetailsSchemaClass.html":{}}}],["details.schema.ts:19",{"_index":2679,"title":{},"body":{"classes/KycDetailsSchemaClass.html":{}}}],["details.service",{"_index":2539,"title":{},"body":{"controllers/KycDetailsController.html":{},"modules/KycDetailsModule.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["details.service.ts",{"_index":2683,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["details.service.ts:103",{"_index":2687,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["details.service.ts:107",{"_index":2688,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["details.service.ts:111",{"_index":2690,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["details.service.ts:178",{"_index":2689,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["details.service.ts:23",{"_index":2684,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["details.service.ts:35",{"_index":2685,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["details.service.ts:90",{"_index":2686,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["details.ts",{"_index":2510,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:14",{"_index":2523,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:20",{"_index":2522,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:26",{"_index":2518,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:32",{"_index":2516,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:43",{"_index":2512,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:53",{"_index":2513,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:59",{"_index":2514,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:64",{"_index":2517,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:70",{"_index":2519,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:76",{"_index":2521,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:81",{"_index":2515,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:84",{"_index":2511,"title":{},"body":{"classes/KycDetails.html":{}}}],["details.ts:87",{"_index":2520,"title":{},"body":{"classes/KycDetails.html":{}}}],["details/domain/kyc",{"_index":2509,"title":{},"body":{"classes/KycDetails.html":{},"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["details/dto/create",{"_index":1502,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["details/dto/find",{"_index":2394,"title":{},"body":{"classes/FindAllKycDetailsDto.html":{}}}],["details/dto/kyc",{"_index":1670,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/KycDetailsDto.html":{}}}],["details/dto/update",{"_index":4275,"title":{},"body":{"classes/UpdateKycDetailsDto.html":{}}}],["details/infrastructure/persistence/document/document",{"_index":1772,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{}}}],["details/infrastructure/persistence/document/entities/kyc",{"_index":2675,"title":{},"body":{"classes/KycDetailsSchemaClass.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["details/infrastructure/persistence/document/mappers/kyc",{"_index":2606,"title":{},"body":{"classes/KycDetailsMapper.html":{}}}],["details/infrastructure/persistence/document/repositories/kyc",{"_index":2550,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["details/infrastructure/persistence/kyc",{"_index":2669,"title":{},"body":{"classes/KycDetailsRepository.html":{}}}],["details/infrastructure/persistence/relational/entities/kyc",{"_index":2483,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"entities/KycDetailsEntity.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["details/infrastructure/persistence/relational/mappers/kyc",{"_index":2612,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["details/infrastructure/persistence/relational/relational",{"_index":3082,"title":{},"body":{"modules/RelationalKycDetailsPersistenceModule.html":{}}}],["details/infrastructure/persistence/relational/repositories/kyc",{"_index":2654,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["details/kyc",{"_index":928,"title":{},"body":{"modules/AppModule.html":{},"controllers/KycDetailsController.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsService.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":1858,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["df1ce34",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["digest('hex",{"_index":1321,"title":{},"body":{"injectables/AuthService.html":{}}}],["discord",{"_index":5785,"title":{},"body":{"index.html":{}}}],["discussions",{"_index":5784,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":2270,"title":{},"body":{"modules/FilesLocalModule.html":{}}}],["disposal",{"_index":760,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["distribute",{"_index":5805,"title":{},"body":{"license.html":{}}}],["docker",{"_index":4910,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dockerignore",{"_index":5592,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":5596,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":4847,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentdata",{"_index":675,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{}}}],["documentfilepersistencemodule",{"_index":1752,"title":{"modules/DocumentFilePersistenceModule.html":{}},"body":{"modules/DocumentFilePersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["documentkycdetailspersistencemodule",{"_index":1768,"title":{"modules/DocumentKycDetailsPersistenceModule.html":{}},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/KycDetailsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["documentnumber",{"_index":676,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{}}}],["documentsessionpersistencemodule",{"_index":1781,"title":{"modules/DocumentSessionPersistenceModule.html":{}},"body":{"modules/DocumentSessionPersistenceModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["documenttype",{"_index":677,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{}}}],["documentuserpersistencemodule",{"_index":1793,"title":{"modules/DocumentUserPersistenceModule.html":{}},"body":{"modules/DocumentUserPersistenceModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["doe",{"_index":1240,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserSeedService.html":{}}}],["doe'})@isnotempty",{"_index":1233,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{}}}],["doe'})@isoptional()@isnotempty({message",{"_index":1431,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["domain",{"_index":1643,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantsService.html":{},"changelog.html":{}}}],["domain/account",{"_index":141,"title":{},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{}}}],["domain/file",{"_index":2108,"title":{},"body":{"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{}}}],["domain/kyc",{"_index":2540,"title":{},"body":{"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{}}}],["domain/region",{"_index":2931,"title":{},"body":{"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{}}}],["domain/residence",{"_index":3175,"title":{},"body":{"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{}}}],["domain/session",{"_index":3427,"title":{},"body":{"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["domain/settings",{"_index":3574,"title":{},"body":{"controllers/SettingsController.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{}}}],["domain/tenant",{"_index":3898,"title":{},"body":{"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{}}}],["domain/user",{"_index":2375,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["domainentity",{"_index":140,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.active",{"_index":158,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.address",{"_index":3919,"title":{},"body":{"classes/TenantMapper.html":{}}}],["domainentity.balance",{"_index":168,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.boundary",{"_index":2943,"title":{},"body":{"classes/RegionMapper.html":{}}}],["domainentity.callbackurl",{"_index":160,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.centroidlat",{"_index":2941,"title":{},"body":{"classes/RegionMapper.html":{}}}],["domainentity.centroidlon",{"_index":2939,"title":{},"body":{"classes/RegionMapper.html":{}}}],["domainentity.charge",{"_index":3185,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["domainentity.code",{"_index":4020,"title":{},"body":{"classes/TenantTypeMapper.html":{}}}],["domainentity.config",{"_index":3707,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["domainentity.createdat",{"_index":178,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.deletedat",{"_index":3468,"title":{},"body":{"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.description",{"_index":172,"title":{},"body":{"classes/AccountMapper.html":{},"classes/TenantTypeMapper.html":{}}}],["domainentity.documentdata",{"_index":2622,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["domainentity.documentnumber",{"_index":2626,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["domainentity.documenttype",{"_index":2628,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["domainentity.domain",{"_index":3904,"title":{},"body":{"classes/TenantMapper.html":{}}}],["domainentity.email",{"_index":4365,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.firstname",{"_index":4373,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.hash",{"_index":3466,"title":{},"body":{"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{}}}],["domainentity.id",{"_index":176,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.isactive",{"_index":3183,"title":{},"body":{"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{}}}],["domainentity.kycsubmissions",{"_index":3927,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.kycsubmissions.map",{"_index":3948,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.lastname",{"_index":4375,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.logo",{"_index":3917,"title":{},"body":{"classes/TenantMapper.html":{}}}],["domainentity.name",{"_index":174,"title":{},"body":{"classes/AccountMapper.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{}}}],["domainentity.notificationchannel",{"_index":162,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.notificationtype",{"_index":164,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.number",{"_index":170,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.occupants",{"_index":3178,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["domainentity.occupants.map((item",{"_index":3188,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["domainentity.operatinghours",{"_index":2935,"title":{},"body":{"classes/RegionMapper.html":{}}}],["domainentity.owner",{"_index":153,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.owner.map((item",{"_index":187,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.password",{"_index":4367,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.path",{"_index":2133,"title":{},"body":{"classes/FileMapper.html":{},"classes/FileMapper-1.html":{}}}],["domainentity.photo",{"_index":4378,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.photo.id",{"_index":4389,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.photo.path",{"_index":4391,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.primaryemail",{"_index":3923,"title":{},"body":{"classes/TenantMapper.html":{}}}],["domainentity.primaryphone",{"_index":3921,"title":{},"body":{"classes/TenantMapper.html":{}}}],["domainentity.provider",{"_index":4369,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.receivenotification",{"_index":166,"title":{},"body":{"classes/AccountMapper.html":{}}}],["domainentity.region",{"_index":3181,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["domainentity.regions",{"_index":3907,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.regions.map((item",{"_index":3935,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.role",{"_index":4381,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.role.id",{"_index":4382,"title":{},"body":{"classes/UserMapper.html":{}}}],["domainentity.role.id.tostring",{"_index":4387,"title":{},"body":{"classes/UserMapper.html":{}}}],["domainentity.schemaname",{"_index":3914,"title":{},"body":{"classes/TenantMapper.html":{}}}],["domainentity.servicetypes",{"_index":2937,"title":{},"body":{"classes/RegionMapper.html":{}}}],["domainentity.settings",{"_index":3911,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.settings.map((item",{"_index":3938,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.settingstype",{"_index":3709,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["domainentity.socialid",{"_index":4371,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.status",{"_index":2620,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.status.id",{"_index":4384,"title":{},"body":{"classes/UserMapper.html":{}}}],["domainentity.status.id.tostring",{"_index":4393,"title":{},"body":{"classes/UserMapper.html":{}}}],["domainentity.subjecttype",{"_index":2630,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SettingsMapper.html":{}}}],["domainentity.submittedat",{"_index":2618,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["domainentity.tenant",{"_index":150,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SettingsMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.type",{"_index":156,"title":{},"body":{"classes/AccountMapper.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{}}}],["domainentity.updatedat",{"_index":180,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["domainentity.user",{"_index":2633,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{}}}],["domainentity.user.id.tostring",{"_index":3470,"title":{},"body":{"classes/SessionMapper.html":{}}}],["domainentity.users",{"_index":3931,"title":{},"body":{"classes/TenantMapper.html":{}}}],["domainentity.users.map((item",{"_index":3952,"title":{},"body":{"classes/TenantMapper.html":{}}}],["domainentity.verifiedat",{"_index":2616,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["domainentity.verifiedby",{"_index":2614,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["domainentity.zipcodes",{"_index":2933,"title":{},"body":{"classes/RegionMapper.html":{}}}],["don't",{"_index":1471,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"injectables/JwtStrategy.html":{}}}],["dotenv",{"_index":5216,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["down",{"_index":655,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["down(/**queryrunner",{"_index":693,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{}}}],["down(queryrunner",{"_index":719,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["download",{"_index":2227,"title":{},"body":{"controllers/FilesLocalController.html":{},"changelog.html":{}}}],["download(@param('path",{"_index":2260,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["download(path",{"_index":2229,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["driver",{"_index":787,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"entities/SettingsEntity.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["drivers",{"_index":5762,"title":{},"body":{"index.html":{}}}],["driversettings",{"_index":3671,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["drop",{"_index":665,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["dropschema",{"_index":4246,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":1273,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{}}}],["dto.email",{"_index":1347,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/auth",{"_index":970,"title":{},"body":{"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":526,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/file",{"_index":2249,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{}}}],["dto/file.dto",{"_index":2332,"title":{},"body":{"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{}}}],["dto/find",{"_index":543,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{}}}],["dto/login",{"_index":1092,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/query",{"_index":4435,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["dto/refresh",{"_index":1094,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":528,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["due",{"_index":461,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["duplex",{"_index":1588,"title":{},"body":{"classes/CreateResidence1747295167463.html":{},"miscellaneous/enumerations.html":{}}}],["e00070a",{"_index":5192,"title":{},"body":{"changelog.html":{}}}],["e067d90",{"_index":5230,"title":{},"body":{"changelog.html":{}}}],["e07ec45",{"_index":5215,"title":{},"body":{"changelog.html":{}}}],["e09d28d",{"_index":5650,"title":{},"body":{"changelog.html":{}}}],["e0a4f32",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["e18e8fa",{"_index":5561,"title":{},"body":{"changelog.html":{}}}],["e1b1469",{"_index":5319,"title":{},"body":{"changelog.html":{}}}],["e28bf58",{"_index":5071,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":5599,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["e325f0d0f3ae",{"_index":2200,"title":{},"body":{"classes/FileType.html":{}}}],["e325f0d0f3ae'})@allow",{"_index":2185,"title":{},"body":{"classes/FileType.html":{}}}],["e34f79d",{"_index":5284,"title":{},"body":{"changelog.html":{}}}],["e3ae365",{"_index":5603,"title":{},"body":{"changelog.html":{}}}],["e463642",{"_index":5466,"title":{},"body":{"changelog.html":{}}}],["e5780f1",{"_index":5290,"title":{},"body":{"changelog.html":{}}}],["e61a5b1",{"_index":5487,"title":{},"body":{"changelog.html":{}}}],["e688b2e",{"_index":5527,"title":{},"body":{"changelog.html":{}}}],["e6f32dd",{"_index":5567,"title":{},"body":{"changelog.html":{}}}],["e71ea55",{"_index":5162,"title":{},"body":{"changelog.html":{}}}],["e75ada7",{"_index":5529,"title":{},"body":{"changelog.html":{}}}],["e82b684",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["e8da94c",{"_index":5507,"title":{},"body":{"changelog.html":{}}}],["e9e8d1a",{"_index":5519,"title":{},"body":{"changelog.html":{}}}],["ea6b77d",{"_index":5080,"title":{},"body":{"changelog.html":{}}}],["ea7e03d",{"_index":5281,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1566,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["eager",{"_index":105,"title":{},"body":{"entities/AccountEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["earnings",{"_index":488,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["eb185f7",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["eb79e58",{"_index":5257,"title":{},"body":{"changelog.html":{}}}],["ec5d3fa",{"_index":5260,"title":{},"body":{"changelog.html":{}}}],["eca25cf",{"_index":5593,"title":{},"body":{"changelog.html":{}}}],["ecd521d",{"_index":5366,"title":{},"body":{"changelog.html":{}}}],["ecosystem",{"_index":5747,"title":{},"body":{"index.html":{}}}],["ed2d5c4",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["ed7cdae",{"_index":5323,"title":{},"body":{"changelog.html":{}}}],["ed8c6bd",{"_index":5118,"title":{},"body":{"changelog.html":{}}}],["educational_institution",{"_index":811,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["ee7a2b6",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["ef1af99",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["ef70faa",{"_index":5504,"title":{},"body":{"changelog.html":{}}}],["effcd5d",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["elena",{"_index":5769,"title":{},"body":{"index.html":{}}}],["email",{"_index":1019,"title":{},"body":{"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"injectables/AuthGoogleService.html":{},"classes/AuthRegisterLoginDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"interfaces/FacebookInterface.html":{},"injectables/MailService.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"interfaces/SocialInterface.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["email'})@expose({groups",{"_index":4314,"title":{},"body":{"classes/User.html":{}}}],["email.dto",{"_index":1090,"title":{},"body":{"controllers/AuthController.html":{}}}],["email.dto.ts",{"_index":1026,"title":{},"body":{"classes/AuthConfirmEmailDto.html":{}}}],["email.dto.ts:7",{"_index":1029,"title":{},"body":{"classes/AuthConfirmEmailDto.html":{}}}],["email.hbs",{"_index":2817,"title":{},"body":{"injectables/MailService.html":{}}}],["email.text1",{"_index":2785,"title":{},"body":{"injectables/MailService.html":{}}}],["email.text2",{"_index":2786,"title":{},"body":{"injectables/MailService.html":{}}}],["email.text3",{"_index":2787,"title":{},"body":{"injectables/MailService.html":{}}}],["emailalreadyexists",{"_index":4629,"title":{},"body":{"injectables/UsersService.html":{},"changelog.html":{}}}],["emailconfirmtitle",{"_index":2779,"title":{},"body":{"injectables/MailService.html":{}}}],["emailexists",{"_index":1400,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailnotexists",{"_index":1373,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailsettings",{"_index":3652,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["employee",{"_index":467,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["empty",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["en",{"_index":1887,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"injectables/SettingsSeedService.html":{}}}],["enable",{"_index":2728,"title":{},"body":{"classes/LatestChanges1745163536016.html":{},"changelog.html":{}}}],["enabled",{"_index":3623,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["end",{"_index":3670,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["endpoint",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["endtime",{"_index":1573,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{}}}],["energy_provider",{"_index":821,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["ensure",{"_index":4018,"title":{},"body":{"classes/TenantTypeMapper.html":{}}}],["enterprise",{"_index":810,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["entities",{"_index":87,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountRelationalRepository.html":{},"entities/FileEntity.html":{},"injectables/FileRelationalRepository.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsRelationalRepository.html":{},"entities/RegionEntity.html":{},"injectables/RegionRelationalRepository.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceRelationalRepository.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsRelationalRepository.html":{},"entities/StatusEntity.html":{},"entities/TenantEntity.html":{},"injectables/TenantRelationalRepository.html":{},"entities/TenantTypeEntity.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TypeOrmConfigService.html":{},"entities/UserEntity.html":{},"injectables/UsersRelationalRepository.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities.map((entity",{"_index":264,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{}}}],["entities.map((user",{"_index":4596,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["entities/account.entity",{"_index":146,"title":{},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"modules/RelationalAccountPersistenceModule.html":{}}}],["entities/file.entity",{"_index":2141,"title":{},"body":{"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"modules/RelationalFilePersistenceModule.html":{}}}],["entities/file.schema",{"_index":1760,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{}}}],["entities/kyc",{"_index":1775,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{}}}],["entities/region.entity",{"_index":2932,"title":{},"body":{"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"modules/RelationalRegionPersistenceModule.html":{}}}],["entities/residence.entity",{"_index":3096,"title":{},"body":{"modules/RelationalResidencePersistenceModule.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{}}}],["entities/session.entity",{"_index":3104,"title":{},"body":{"modules/RelationalSessionPersistenceModule.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{}}}],["entities/session.schema",{"_index":1788,"title":{},"body":{"modules/DocumentSessionPersistenceModule.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{}}}],["entities/settings.entity",{"_index":3115,"title":{},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{}}}],["entities/tenant",{"_index":3135,"title":{},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{}}}],["entities/tenant.entity",{"_index":3124,"title":{},"body":{"modules/RelationalTenantPersistenceModule.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{}}}],["entities/user.entity",{"_index":3142,"title":{},"body":{"modules/RelationalUserPersistenceModule.html":{},"classes/UserMapper-1.html":{},"injectables/UsersRelationalRepository.html":{}}}],["entities/user.schema",{"_index":1799,"title":{},"body":{"modules/DocumentUserPersistenceModule.html":{},"classes/UserMapper.html":{},"injectables/UsersDocumentRepository.html":{}}}],["entitiesdir",{"_index":4255,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":85,"title":{"entities/AccountEntity.html":{},"entities/FileEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/StatusEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AccountEntity.html":{},"injectables/AccountRelationalRepository.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"entities/FileEntity.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileSchemaClass.html":{},"injectables/KycDetailsDocumentRepository.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"entities/RegionEntity.html":{},"injectables/RegionRelationalRepository.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceRelationalRepository.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionSchemaClass.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsRelationalRepository.html":{},"entities/StatusEntity.html":{},"entities/TenantEntity.html":{},"injectables/TenantRelationalRepository.html":{},"entities/TenantTypeEntity.html":{},"injectables/TenantTypeRelationalRepository.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersRelationalRepository.html":{}}}],["entity.id",{"_index":617,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/ResidencesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["entitydocumenthelper",{"_index":1804,"title":{"classes/EntityDocumentHelper.html":{}},"body":{"classes/EntityDocumentHelper.html":{},"classes/FileSchemaClass.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["entityobject",{"_index":2568,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["entityobjects",{"_index":2571,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["entityobjects.map((entityobject",{"_index":2576,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["entityrelationalhelper",{"_index":123,"title":{"classes/EntityRelationalHelper.html":{}},"body":{"entities/AccountEntity.html":{},"classes/EntityRelationalHelper.html":{},"entities/FileEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/StatusEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{}}}],["entity{.ts,.js",{"_index":4251,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":46,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{}}}],["enum('alert",{"_index":1486,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["enum('apartment",{"_index":1586,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["enum('asset",{"_index":1480,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["enum('community_group",{"_index":806,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{}}}],["enum('email",{"_index":1482,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["enum('invoice",{"_index":753,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{}}}],["enum('pending",{"_index":707,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"classes/LatestChanges1745163536016.html":{}}}],["enum('platform_owner",{"_index":2737,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["enum('tenant",{"_index":789,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["enum('user",{"_index":713,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"classes/LatestChanges1745163536016.html":{}}}],["enumerations",{"_index":5690,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"classes/CreateResidenceDto.html":{},"classes/Residence.html":{},"classes/TenantType.html":{}}}],["env",{"_index":940,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{},"changelog.html":{}}}],["envfilepath",{"_index":939,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{}}}],["environment",{"_index":1847,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["environmental",{"_index":447,"title":{},"body":{"injectables/AccountSeedService.html":{},"entities/SettingsEntity.html":{}}}],["environmentvariablesvalidator",{"_index":1828,"title":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{}},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["envvalues.database_url",{"_index":1994,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["envvalues.database_url)@isstring",{"_index":1988,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["envvariablesclass",{"_index":5730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eq",{"_index":3449,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["equipment",{"_index":360,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["equity",{"_index":480,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/RegionSeedService.html":{},"changelog.html":{}}}],["error('record",{"_index":270,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{}}}],["error('session",{"_index":3506,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["error('user",{"_index":4599,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["error.message",{"_index":3010,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["errorhttpstatuscode",{"_index":5940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":464,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":5606,"title":{},"body":{"changelog.html":{}}}],["eslist",{"_index":5612,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":584,"title":{},"body":{"modules/AccountsModule.html":{},"modules/FilesModule.html":{},"modules/KycDetailsModule.html":{},"modules/RegionsModule.html":{},"modules/ResidencesModule.html":{},"modules/SettingsModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{}}}],["event",{"_index":5831,"title":{},"body":{"license.html":{}}}],["example",{"_index":997,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateUserDto.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/KycDetails.html":{},"classes/Region.html":{},"classes/Role.html":{},"classes/Settings.html":{},"classes/Status.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["example.com",{"_index":4494,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["exception",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["exceptionfactory",{"_index":5941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exclude",{"_index":4324,"title":{},"body":{"classes/User.html":{}}}],["exclude({toplainonly",{"_index":4311,"title":{},"body":{"classes/User.html":{}}}],["excludesessionid",{"_index":1394,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["excludesessionid.tostring",{"_index":3450,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["executioncontext",{"_index":3317,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":336,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["existingkyc",{"_index":2496,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["existingresidences",{"_index":3238,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["existingresidences.length",{"_index":3240,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["existingrole",{"_index":3374,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["existingsetting",{"_index":3769,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["existingtenant",{"_index":3989,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["existinguser",{"_index":4484,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["exists",{"_index":2470,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/TenantSeedService.html":{}}}],["exp",{"_index":443,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["expense",{"_index":437,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"miscellaneous/enumerations.html":{}}}],["expenses",{"_index":387,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["expires",{"_index":1912,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{},"changelog.html":{}}}],["expiresin",{"_index":1353,"title":{},"body":{"injectables/AuthService.html":{},"classes/FileType.html":{},"injectables/FilesS3PresignedService.html":{}}}],["expirydate",{"_index":1530,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{}}}],["export",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":297,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":4325,"title":{},"body":{"classes/User.html":{}}}],["express",{"_index":2243,"title":{},"body":{"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":2233,"title":{},"body":{"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{}}}],["express.multers3.file",{"_index":2313,"title":{},"body":{"controllers/FilesS3Controller.html":{},"injectables/FilesS3Service.html":{}}}],["extends",{"_index":126,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AnonymousStrategy.html":{},"classes/EntityRelationalHelper.html":{},"entities/FileEntity.html":{},"classes/FileSchemaClass.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"entities/SettingsEntity.html":{},"entities/StatusEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{}}}],["extension",{"_index":2730,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["extra",{"_index":4258,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":2456,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2461,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["f12ac82",{"_index":5643,"title":{},"body":{"changelog.html":{}}}],["f403271",{"_index":5317,"title":{},"body":{"changelog.html":{}}}],["f42b3b0",{"_index":5128,"title":{},"body":{"changelog.html":{}}}],["f4a320e",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["f4efa13",{"_index":5537,"title":{},"body":{"changelog.html":{}}}],["f6275a1",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["f6aeb4e",{"_index":5269,"title":{},"body":{"changelog.html":{}}}],["f6d8d1e",{"_index":5187,"title":{},"body":{"changelog.html":{}}}],["f787ca6",{"_index":5533,"title":{},"body":{"changelog.html":{}}}],["f79afd3",{"_index":5102,"title":{},"body":{"changelog.html":{}}}],["f7dafaa",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["f8e5e99",{"_index":5605,"title":{},"body":{"changelog.html":{}}}],["f9d9222",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["fa3d653",{"_index":5262,"title":{},"body":{"changelog.html":{}}}],["fa71397",{"_index":5195,"title":{},"body":{"changelog.html":{}}}],["facebook",{"_index":1145,"title":{},"body":{"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"injectables/AuthFacebookService.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["facebook.controller",{"_index":1156,"title":{},"body":{"modules/AuthFacebookModule.html":{}}}],["facebook.controller.ts",{"_index":1140,"title":{},"body":{"controllers/AuthFacebookController.html":{}}}],["facebook.controller.ts:34",{"_index":1142,"title":{},"body":{"controllers/AuthFacebookController.html":{}}}],["facebook.module",{"_index":896,"title":{},"body":{"modules/AppModule.html":{}}}],["facebook.module.ts",{"_index":1155,"title":{},"body":{"modules/AuthFacebookModule.html":{}}}],["facebook.service",{"_index":1144,"title":{},"body":{"controllers/AuthFacebookController.html":{},"modules/AuthFacebookModule.html":{}}}],["facebook.service.ts",{"_index":1157,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["facebook.service.ts:10",{"_index":1158,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["facebook.service.ts:13",{"_index":1159,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["facebook/auth",{"_index":895,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthFacebookController.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{}}}],["facebook/config/facebook",{"_index":5877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["facebook/config/facebook.config",{"_index":885,"title":{},"body":{"modules/AppModule.html":{}}}],["facebook/config/facebook.config.ts",{"_index":1937,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["facebook/config/facebook.config.ts:10",{"_index":1940,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["facebook/config/facebook.config.ts:14",{"_index":1941,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["facebook/dto/auth",{"_index":1149,"title":{},"body":{"classes/AuthFacebookLoginDto.html":{}}}],["facebook/interfaces/facebook.interface.ts",{"_index":2094,"title":{},"body":{"interfaces/FacebookInterface.html":{}}}],["facebook_app_id",{"_index":1938,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["facebook_app_secret",{"_index":1939,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["facebookconfig",{"_index":883,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"miscellaneous/typealiases.html":{}}}],["facebookinterface",{"_index":1161,"title":{"interfaces/FacebookInterface.html":{}},"body":{"injectables/AuthFacebookService.html":{},"interfaces/FacebookInterface.html":{}}}],["facilities",{"_index":3597,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/TenantTypesSeedService.html":{}}}],["facility",{"_index":792,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["factory",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["fallback",{"_index":4014,"title":{},"body":{"entities/TenantTypeEntity.html":{}}}],["fallbacklanguage",{"_index":943,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["false",{"_index":30,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TypeOrmConfigService.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["false})@isoptional",{"_index":1844,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["false})@isoptional()@isarray()@isstring({each",{"_index":1554,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["false})@isoptional()@isnumber()@islatitude",{"_index":1540,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["false})@isoptional()@isnumber()@islongitude",{"_index":1544,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["false})@isoptional()@isobject",{"_index":1550,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["faviconurl",{"_index":3658,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["fb",{"_index":1160,"title":{},"body":{"injectables/AuthFacebookService.html":{},"changelog.html":{},"dependencies.html":{}}}],["fb.api",{"_index":1170,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["fb.setaccesstoken(logindto.accesstoken",{"_index":1168,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["fb7ccd1",{"_index":5551,"title":{},"body":{"changelog.html":{}}}],["fb9c6a6",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["fd57ef9",{"_index":5110,"title":{},"body":{"changelog.html":{}}}],["fe22ed5",{"_index":5158,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3680,"title":{},"body":{"entities/SettingsEntity.html":{},"changelog.html":{},"index.html":{}}}],["feel",{"_index":5781,"title":{},"body":{"index.html":{}}}],["fees",{"_index":404,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["fields",{"_index":1171,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["file\"(\"id",{"_index":837,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateUser1715028537217.html":{}}}],["file.filename.match(/\\.(jpg|jpeg|png|gif)$/i",{"_index":2346,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["file.filesize",{"_index":2347,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["file.key",{"_index":2360,"title":{},"body":{"injectables/FilesS3Service.html":{}}}],["file.originalname.match(/\\.(jpg|jpeg|png|gif)$/i",{"_index":2279,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["file.repository",{"_index":1761,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"modules/RelationalFilePersistenceModule.html":{}}}],["file_driver",{"_index":2029,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["fileconfig",{"_index":881,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/FileType.html":{},"modules/FilesModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fileconfig).accesskeyid",{"_index":2208,"title":{},"body":{"classes/FileType.html":{}}}],["fileconfig).awsdefaults3bucket",{"_index":2212,"title":{},"body":{"classes/FileType.html":{}}}],["fileconfig).awss3region",{"_index":2206,"title":{},"body":{"classes/FileType.html":{}}}],["fileconfig).driver",{"_index":2202,"title":{},"body":{"classes/FileType.html":{},"modules/FilesModule.html":{},"miscellaneous/variables.html":{}}}],["fileconfig).secretaccesskey",{"_index":2209,"title":{},"body":{"classes/FileType.html":{}}}],["filedocumentrepository",{"_index":1762,"title":{"injectables/FileDocumentRepository.html":{}},"body":{"modules/DocumentFilePersistenceModule.html":{},"injectables/FileDocumentRepository.html":{}}}],["filedriver",{"_index":2034,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{},"classes/FileType.html":{},"modules/FilesModule.html":{},"miscellaneous/enumerations.html":{}}}],["filedriver.local",{"_index":2042,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{},"classes/FileType.html":{},"modules/FilesModule.html":{},"miscellaneous/variables.html":{}}}],["filedriver.s3",{"_index":2038,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{},"modules/FilesModule.html":{},"miscellaneous/variables.html":{}}}],["filedriver.s3].includes",{"_index":2205,"title":{},"body":{"classes/FileType.html":{}}}],["filedriver.s3_presigned",{"_index":2204,"title":{},"body":{"classes/FileType.html":{}}}],["filedriver.s3_presigned].includes(envvalues.file_driver",{"_index":2039,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["filedto",{"_index":1437,"title":{"classes/FileDto.html":{}},"body":{"classes/AuthUpdateDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/FileDto.html":{},"classes/UpdateUserDto.html":{}}}],["filedto})@isoptional",{"_index":1439,"title":{},"body":{"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["filedto})@isoptional()@validatenested()@type(undefined)@isnotemptyobject",{"_index":1654,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["fileentity",{"_index":2125,"title":{"entities/FileEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"modules/RelationalFilePersistenceModule.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{}}}],["filefilter",{"_index":2277,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["fileinterceptor",{"_index":2241,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["filemapper",{"_index":2109,"title":{"classes/FileMapper.html":{},"classes/FileMapper-1.html":{}},"body":{"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/TenantMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["filemapper.todomain(entity",{"_index":2155,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["filemapper.todomain(fileobject",{"_index":2116,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["filemapper.todomain(raw.logo",{"_index":3918,"title":{},"body":{"classes/TenantMapper.html":{}}}],["filemapper.todomain(raw.photo",{"_index":4379,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["filemapper.topersistence(data",{"_index":2151,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["filemapper.topersistence(domainentity.logo",{"_index":3942,"title":{},"body":{"classes/TenantMapper.html":{}}}],["filemodel",{"_index":2101,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["filename",{"_index":2217,"title":{},"body":{"classes/FileUploadDto.html":{},"modules/FilesLocalModule.html":{},"changelog.html":{}}}],["fileobject",{"_index":2114,"title":{},"body":{"injectables/FileDocumentRepository.html":{},"injectables/UsersService.html":{}}}],["fileobjects",{"_index":2119,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["fileobjects.map((fileobject",{"_index":2121,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["filerelationalrepository",{"_index":2143,"title":{"injectables/FileRelationalRepository.html":{}},"body":{"injectables/FileRelationalRepository.html":{},"modules/RelationalFilePersistenceModule.html":{}}}],["filerepository",{"_index":1755,"title":{"classes/FileRepository.html":{}},"body":{"modules/DocumentFilePersistenceModule.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"modules/RelationalFilePersistenceModule.html":{},"overview.html":{}}}],["fileresponsedto",{"_index":2161,"title":{"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{}},"body":{"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{}}}],["fileresponsedto})@apibearerauth()@useguards(undefined)@post('upload",{"_index":2329,"title":{},"body":{"controllers/FilesS3PresignedController.html":{}}}],["fileresponsedto})@apibearerauth()@useguards(undefined)@post('upload')@apiconsumes('multipart/form",{"_index":2235,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["files",{"_index":2251,"title":{},"body":{"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"changelog.html":{},"license.html":{}}}],["files.controller",{"_index":2268,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["files.service",{"_index":2248,"title":{},"body":{"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{}}}],["files/config/file.config",{"_index":882,"title":{},"body":{"modules/AppModule.html":{}}}],["files/domain/file",{"_index":3861,"title":{},"body":{"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["files/dto/file.dto",{"_index":1441,"title":{},"body":{"classes/AuthUpdateDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["files/files.module",{"_index":871,"title":{},"body":{"modules/AppModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{}}}],["files/files.service",{"_index":4161,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["files/infrastructure/persistence/document/entities/file.schema",{"_index":4361,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{}}}],["files/infrastructure/persistence/document/mappers/file.mapper",{"_index":4362,"title":{},"body":{"classes/UserMapper.html":{}}}],["files/infrastructure/persistence/relational/entities/file.entity",{"_index":3889,"title":{},"body":{"entities/TenantEntity.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{}}}],["files/infrastructure/persistence/relational/mappers/file.mapper",{"_index":3900,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["fileschema",{"_index":1758,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"classes/FileSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["fileschemaclass",{"_index":1759,"title":{"classes/FileSchemaClass.html":{}},"body":{"modules/DocumentFilePersistenceModule.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileSchemaClass.html":{},"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{}}}],["fileschemaclass.name",{"_index":1765,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{}}}],["fileschemadocument",{"_index":2176,"title":{},"body":{"classes/FileSchemaClass.html":{},"miscellaneous/typealiases.html":{}}}],["fileservice",{"_index":4151,"title":{},"body":{"injectables/TenantsService.html":{}}}],["filesize",{"_index":2218,"title":{},"body":{"classes/FileUploadDto.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["fileslocalcontroller",{"_index":2225,"title":{"controllers/FilesLocalController.html":{}},"body":{"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{}}}],["fileslocalmodule",{"_index":2263,"title":{"modules/FilesLocalModule.html":{}},"body":{"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fileslocalservice",{"_index":2247,"title":{"injectables/FilesLocalService.html":{}},"body":{"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"overview.html":{}}}],["filesmodule",{"_index":860,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["filess3controller",{"_index":2311,"title":{"controllers/FilesS3Controller.html":{}},"body":{"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{}}}],["filess3module",{"_index":2305,"title":{"modules/FilesS3Module.html":{}},"body":{"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["filess3presignedcontroller",{"_index":2327,"title":{"controllers/FilesS3PresignedController.html":{}},"body":{"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{}}}],["filess3presignedmodule",{"_index":2307,"title":{"modules/FilesS3PresignedModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/FilesS3PresignedModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["filess3presignedservice",{"_index":2331,"title":{"injectables/FilesS3PresignedService.html":{}},"body":{"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"overview.html":{}}}],["filess3service",{"_index":2315,"title":{"injectables/FilesS3Service.html":{}},"body":{"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"injectables/FilesS3Service.html":{},"overview.html":{}}}],["filesservice",{"_index":2252,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesLocalController.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["filetype",{"_index":2103,"title":{"classes/FileType.html":{}},"body":{"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileType.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["filetype['id",{"_index":2117,"title":{},"body":{"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesService.html":{}}}],["fileuploaddto",{"_index":2215,"title":{"classes/FileUploadDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{}}}],["filter",{"_index":2582,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/UsersDocumentRepository.html":{}}}],["filteroptions",{"_index":4436,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["filteroptions.roles.map((role",{"_index":4551,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["filteroptions?.roles?.length",{"_index":4549,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["filterquery",{"_index":4542,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["filters",{"_index":2384,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["filteruserdto",{"_index":2368,"title":{"classes/FilterUserDto.html":{}},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["filtration",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["finance",{"_index":341,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/RoleSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["financerole",{"_index":339,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["financerole.id",{"_index":345,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["financial",{"_index":3598,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["financial_institution",{"_index":819,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["financing",{"_index":398,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["find",{"_index":2573,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"changelog.html":{}}}],["find(where",{"_index":4555,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["findall",{"_index":499,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["findall(query",{"_index":504,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["findallaccountsdto",{"_index":505,"title":{"classes/FindAllAccountsDto.html":{}},"body":{"controllers/AccountsController.html":{},"classes/FindAllAccountsDto.html":{}}}],["findallkycdetailsdto",{"_index":2393,"title":{"classes/FindAllKycDetailsDto.html":{}},"body":{"classes/FindAllKycDetailsDto.html":{},"controllers/KycDetailsController.html":{}}}],["findallregionsdto",{"_index":2397,"title":{"classes/FindAllRegionsDto.html":{}},"body":{"classes/FindAllRegionsDto.html":{},"controllers/RegionsController.html":{}}}],["findallresidencesdto",{"_index":2402,"title":{"classes/FindAllResidencesDto.html":{}},"body":{"classes/FindAllResidencesDto.html":{},"controllers/ResidencesController.html":{}}}],["findallsettingsdto",{"_index":2407,"title":{"classes/FindAllSettingsDto.html":{}},"body":{"classes/FindAllSettingsDto.html":{},"controllers/SettingsController.html":{}}}],["findalltenantsdto",{"_index":2416,"title":{"classes/FindAllTenantsDto.html":{}},"body":{"classes/FindAllTenantsDto.html":{},"controllers/TenantsController.html":{}}}],["findalltenanttypesdto",{"_index":2411,"title":{"classes/FindAllTenantTypesDto.html":{}},"body":{"classes/FindAllTenantTypesDto.html":{},"controllers/TenantTypesController.html":{}}}],["findallwithpagination",{"_index":208,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{}}}],["findallwithpagination(undefined",{"_index":222,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{}}}],["findbyemail",{"_index":4421,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":4425,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findbyid",{"_index":209,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findbyid(@param('id",{"_index":561,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{}}}],["findbyid(id",{"_index":225,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findbyids",{"_index":210,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findbyids(ids",{"_index":227,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findbysocialidandprovider",{"_index":4422,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findbysocialidandprovider(undefined",{"_index":4429,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findmanywithpagination",{"_index":4423,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findmanywithpagination(undefined",{"_index":4431,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":4498,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(@param('id",{"_index":4526,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":4507,"title":{},"body":{"controllers/UsersController.html":{}}}],["findoptionswhere",{"_index":4588,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["first",{"_index":2503,"title":{},"body":{"injectables/KycDetailSeedService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/UserSeedService-1.html":{}}}],["first_name",{"_index":2095,"title":{},"body":{"interfaces/FacebookInterface.html":{}}}],["firstname",{"_index":986,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"classes/AuthRegisterLoginDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"interfaces/SocialInterface.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{}}}],["fitness",{"_index":5827,"title":{},"body":{"license.html":{}}}],["fix",{"_index":5608,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["fk_0252300651acd5cbf815645395d",{"_index":740,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["fk_0ed69b4239b1f892b96798065a1",{"_index":836,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["fk_1751a572e91385a09d41c624714",{"_index":2745,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["fk_1fa41192963d6275ba8952f02a9",{"_index":797,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["fk_295d21c339b0985283e10f683ae",{"_index":691,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/LatestChanges1745163536016.html":{}}}],["fk_38c7bb1a7983b359f34b63a0fd6",{"_index":838,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["fk_3d2f174ef04fb312fdebd0ddc53",{"_index":1717,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["fk_44c05a3ad5f7ef9b00d4a352045",{"_index":1497,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["fk_57d4a46e1bf22f67d2e2807010e",{"_index":1606,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["fk_685bf353c85f23b6f848e4dcded",{"_index":1751,"title":{},"body":{"classes/CreateUserTenantRelationship1745132189825.html":{}}}],["fk_6d5184542539a16abc28d80084e",{"_index":1494,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["fk_6f135e350fdddcd8e043f1ea5c5",{"_index":1609,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["fk_73a44889926ed74ebd527dc9a96",{"_index":668,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["fk_75e2be4ce11d447ef43be0e374f",{"_index":1712,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["fk_78f4992112d203106339e1b20e6",{"_index":685,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/LatestChanges1745163536016.html":{}}}],["fk_7e9514d9b3815c4c9c059dc6a2d",{"_index":667,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["fk_85ec57103a142cba21f202f59d2",{"_index":1607,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["fk_9175e059b0a720536f7726a88c7",{"_index":798,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["fk_a54b6ef97fee0107ea51d0cdd36",{"_index":1495,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["fk_aaf7ebdc7470c865314f414b241",{"_index":739,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["fk_bffa18d20b4a268de41fa3d4664",{"_index":1605,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["fk_c28e52f758e7bbc53828db92194",{"_index":1713,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["fk_dbbbcbac1f75c3aca60e371c200",{"_index":742,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["fk_dc18daa696860586ba4667a9d31",{"_index":1715,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["flat_rate",{"_index":3615,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["flow",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":5813,"title":{},"body":{"license.html":{}}}],["foreign",{"_index":686,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["forget",{"_index":1472,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{}}}],["forgot",{"_index":1088,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthForgotPasswordDto.html":{}}}],["forgotexpires",{"_index":1921,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["forgotpassword",{"_index":1034,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["forgotpassword(email",{"_index":1258,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(forgotpassworddto",{"_index":1049,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(maildata",{"_index":2768,"title":{},"body":{"injectables/MailService.html":{}}}],["forgotpassworddto",{"_index":1053,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotsecret",{"_index":1919,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["forgotuserid",{"_index":1378,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":2255,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["forwardref",{"_index":2650,"title":{},"body":{"modules/KycDetailsModule.html":{},"injectables/KycDetailsService.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["found",{"_index":271,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["free",{"_index":5782,"title":{},"body":{"index.html":{},"license.html":{}}}],["frequency",{"_index":3699,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["fri",{"_index":1570,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["fromaddress",{"_index":3653,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["frontend",{"_index":5741,"title":{},"body":{"index.html":{}}}],["frontend_domain",{"_index":1835,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["frontenddomain",{"_index":1873,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["fronturl",{"_index":1528,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{}}}],["fs",{"_index":2830,"title":{},"body":{"injectables/MailerService.html":{}}}],["fs.readfile(templatepath",{"_index":2849,"title":{},"body":{"injectables/MailerService.html":{}}}],["fuel",{"_index":440,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["full",{"_index":5735,"title":{},"body":{"index.html":{}}}],["fully",{"_index":5739,"title":{},"body":{"index.html":{}}}],["function",{"_index":2444,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{},"changelog.html":{}}}],["functions",{"_index":5713,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":482,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["funds",{"_index":377,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["furnished",{"_index":5812,"title":{},"body":{"license.html":{}}}],["gear",{"_index":453,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["generate",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["generateerrors",{"_index":5717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["generateerrors(errors",{"_index":5727,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generator",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["generator.util",{"_index":1291,"title":{},"body":{"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["generic",{"_index":824,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["geojson",{"_index":1535,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"dependencies.html":{}}}],["geometry",{"_index":2904,"title":{},"body":{"entities/RegionEntity.html":{}}}],["geometry(polygon,4326",{"_index":2744,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["get(':id",{"_index":560,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apiparam({name",{"_index":510,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{}}}],["get(':path",{"_index":2259,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["get(':path')@apiexcludeendpoint",{"_index":2230,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["get('me",{"_index":1112,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apiokresponse({type",{"_index":506,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{}}}],["getdefaulttenantconfig",{"_index":3756,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["getdefaultuserconfig",{"_index":3757,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["getobjectcommand",{"_index":2191,"title":{},"body":{"classes/FileType.html":{}}}],["getprofilebytoken",{"_index":1006,"title":{},"body":{"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{}}}],["getprofilebytoken(logindto",{"_index":1009,"title":{},"body":{"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{}}}],["getsignedurl",{"_index":2196,"title":{},"body":{"classes/FileType.html":{},"injectables/FilesS3PresignedService.html":{}}}],["getsignedurl(s3",{"_index":2213,"title":{},"body":{"classes/FileType.html":{}}}],["getsignedurl(this.s3",{"_index":2356,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["getters",{"_index":2178,"title":{},"body":{"classes/FileSchemaClass.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["getting",{"_index":4688,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettokensdata",{"_index":1244,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokensdata(data",{"_index":1260,"title":{},"body":{"injectables/AuthService.html":{}}}],["github",{"_index":5764,"title":{},"body":{"index.html":{}}}],["goods",{"_index":433,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["google",{"_index":1187,"title":{},"body":{"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"injectables/AuthGoogleService.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["google.controller",{"_index":1197,"title":{},"body":{"modules/AuthGoogleModule.html":{}}}],["google.controller.ts",{"_index":1182,"title":{},"body":{"controllers/AuthGoogleController.html":{}}}],["google.controller.ts:34",{"_index":1184,"title":{},"body":{"controllers/AuthGoogleController.html":{}}}],["google.module",{"_index":898,"title":{},"body":{"modules/AppModule.html":{}}}],["google.module.ts",{"_index":1196,"title":{},"body":{"modules/AuthGoogleModule.html":{}}}],["google.service",{"_index":1186,"title":{},"body":{"controllers/AuthGoogleController.html":{},"modules/AuthGoogleModule.html":{}}}],["google.service.ts",{"_index":1198,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["google.service.ts:14",{"_index":1199,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["google.service.ts:23",{"_index":1200,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["google/auth",{"_index":897,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthGoogleController.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{}}}],["google/config/google",{"_index":5878,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["google/config/google.config",{"_index":887,"title":{},"body":{"modules/AppModule.html":{}}}],["google/config/google.config.ts",{"_index":1946,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["google/config/google.config.ts:10",{"_index":1949,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["google/config/google.config.ts:14",{"_index":1950,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["google/dto/auth",{"_index":1191,"title":{},"body":{"classes/AuthGoogleLoginDto.html":{}}}],["google_client_id",{"_index":1947,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["google_client_secret",{"_index":1948,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["googleconfig",{"_index":886,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"miscellaneous/typealiases.html":{}}}],["government",{"_index":417,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["government_agency",{"_index":814,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["granted",{"_index":5792,"title":{},"body":{"license.html":{}}}],["grants",{"_index":481,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["green",{"_index":484,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["group",{"_index":4087,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["groups",{"_index":977,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["guard",{"_index":3379,"title":{"guards/RolesGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":3381,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guest",{"_index":3372,"title":{},"body":{"injectables/RoleSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["hand",{"_index":385,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["handlebars",{"_index":2833,"title":{},"body":{"injectables/MailerService.html":{},"changelog.html":{},"dependencies.html":{}}}],["handlebars.compile(template",{"_index":2852,"title":{},"body":{"injectables/MailerService.html":{}}}],["handlers",{"_index":454,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["hash",{"_index":1027,"title":{},"body":{"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/CreateUser1715028537217.html":{},"classes/Session.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{}}}],["hasnextpage",{"_index":2440,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":5624,"title":{},"body":{"changelog.html":{}}}],["headerlanguage",{"_index":1888,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["headerresolver",{"_index":899,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcare_provider",{"_index":812,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["helper",{"_index":125,"title":{},"body":{"entities/AccountEntity.html":{},"entities/FileEntity.html":{},"classes/FileSchemaClass.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"entities/SettingsEntity.html":{},"entities/StatusEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{}}}],["helper.ts",{"_index":1806,"title":{},"body":{"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{}}}],["helper.ts:12",{"_index":1823,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["helper.ts:17",{"_index":1810,"title":{},"body":{"classes/EntityDocumentHelper.html":{}}}],["helper.ts:5",{"_index":1819,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["helper.ts:8",{"_index":1821,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["here",{"_index":604,"title":{},"body":{"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"entities/FileEntity.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"index.html":{}}}],["hereby",{"_index":5791,"title":{},"body":{"license.html":{}}}],["hexagonal",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":5833,"title":{},"body":{"license.html":{}}}],["home.controller",{"_index":2432,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.service",{"_index":2426,"title":{},"body":{"controllers/HomeController.html":{},"modules/HomeModule.html":{}}}],["home/home.module",{"_index":907,"title":{},"body":{"modules/AppModule.html":{}}}],["homecontroller",{"_index":2421,"title":{"controllers/HomeController.html":{}},"body":{"controllers/HomeController.html":{},"modules/HomeModule.html":{}}}],["homemodule",{"_index":861,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeservice",{"_index":2425,"title":{"injectables/HomeService.html":{}},"body":{"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"overview.html":{}}}],["hospitality_business",{"_index":823,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["host",{"_index":2000,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"injectables/MailerService.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["hours",{"_index":1548,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{}}}],["house",{"_index":1587,"title":{},"body":{"classes/CreateResidence1747295167463.html":{},"miscellaneous/enumerations.html":{}}}],["household",{"_index":421,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["html",{"_index":2847,"title":{},"body":{"injectables/MailerService.html":{}}}],["http",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["http://localhost",{"_index":1877,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["http://localhost:${process.env.app_port",{"_index":5911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":964,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.created",{"_index":4520,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":1098,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.ok",{"_index":979,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/UsersController.html":{}}}],["https://example.com/back.jpg",{"_index":2525,"title":{},"body":{"classes/KycDetails.html":{}}}],["https://example.com/front.jpg",{"_index":2524,"title":{},"body":{"classes/KycDetails.html":{}}}],["https://example.com/path/to/file.jpg",{"_index":2201,"title":{},"body":{"classes/FileType.html":{}}}],["https://example.com/path/to/file.jpg'})@transform",{"_index":2187,"title":{},"body":{"classes/FileType.html":{}}}],["https://github.com/brocoders/extensive",{"_index":5742,"title":{},"body":{"index.html":{}}}],["https://github.com/brocoders/nestjs",{"_index":2471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://github.com/typeorm/typeorm/issues/2567",{"_index":4357,"title":{},"body":{"entities/UserEntity.html":{}}}],["https://github.com/typestack/class",{"_index":1811,"title":{},"body":{"classes/EntityDocumentHelper.html":{}}}],["https://github.com/user",{"_index":5748,"title":{},"body":{"index.html":{}}}],["https://nestjs",{"_index":5737,"title":{},"body":{"index.html":{}}}],["https://node",{"_index":4260,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":601,"title":{},"body":{"injectables/AccountsService.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["httpstatus.not_found",{"_index":1366,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.payload_too_large",{"_index":2350,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["httpstatus.unprocessable_entity",{"_index":611,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["hydrateddocument",{"_index":2174,"title":{},"body":{"classes/FileSchemaClass.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{},"miscellaneous/typealiases.html":{}}}],["i18n",{"_index":902,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["i18n.t('common.confirmemail",{"_index":2783,"title":{},"body":{"injectables/MailService.html":{}}}],["i18n.t('common.resetpassword",{"_index":2807,"title":{},"body":{"injectables/MailService.html":{}}}],["i18n.t('confirm",{"_index":2784,"title":{},"body":{"injectables/MailService.html":{}}}],["i18n.t('reset",{"_index":2808,"title":{},"body":{"injectables/MailService.html":{}}}],["i18ncontext",{"_index":2772,"title":{},"body":{"injectables/MailService.html":{}}}],["i18ncontext.current",{"_index":2778,"title":{},"body":{"injectables/MailService.html":{}}}],["i18nmodule",{"_index":900,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule.forrootasync",{"_index":941,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileType.html":{},"injectables/FilesService.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"injectables/RoleSeedService.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRepository.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["id,last_name,email,first_name",{"_index":1172,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["id.tostring",{"_index":2583,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/UsersDocumentRepository.html":{}}}],["ids",{"_index":229,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["idtoken",{"_index":987,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthGoogleLoginDto.html":{},"injectables/AuthGoogleService.html":{}}}],["idtype",{"_index":3333,"title":{},"body":{"classes/Role.html":{},"classes/Status.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["idx_0252300651acd5cbf815645395",{"_index":737,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["idx_3d2f174ef04fb312fdebd0ddc5",{"_index":1711,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["idx_44c05a3ad5f7ef9b00d4a35204",{"_index":1493,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["idx_58e4dbff0e1a32a9bdc861bb29",{"_index":1708,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["idx_6f135e350fdddcd8e043f1ea5c",{"_index":1599,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["idx_85ec57103a142cba21f202f59d",{"_index":1598,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["idx_9bd2fe7a8e694dedc4ec2f666f",{"_index":1707,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["idx_a54b6ef97fee0107ea51d0cdd3",{"_index":1492,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["idx_dbbbcbac1f75c3aca60e371c20",{"_index":738,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["idx_f0e1b4ecdca13b177e2e3a0613",{"_index":1709,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["ignoretls",{"_index":2086,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{},"injectables/MailerService.html":{}}}],["image.jpg",{"_index":2223,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["image.jpg'})@isstring",{"_index":2219,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["imagenotexists",{"_index":4633,"title":{},"body":{"injectables/UsersService.html":{}}}],["implements",{"_index":246,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MongooseConfigService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResolvePromisesInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["implied",{"_index":5823,"title":{},"body":{"license.html":{}}}],["import",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":312,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{}}}],["improved",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["in(ids",{"_index":268,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["inactive",{"_index":3841,"title":{},"body":{"injectables/StatusSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["included",{"_index":5817,"title":{},"body":{"license.html":{}}}],["includes(string(createuserdto.role.id",{"_index":4639,"title":{},"body":{"injectables/UsersService.html":{}}}],["includes(string(createuserdto.status.id",{"_index":4645,"title":{},"body":{"injectables/UsersService.html":{}}}],["includes(string(updateuserdto.role.id",{"_index":4677,"title":{},"body":{"injectables/UsersService.html":{}}}],["includes(string(updateuserdto.status.id",{"_index":4680,"title":{},"body":{"injectables/UsersService.html":{}}}],["including",{"_index":5799,"title":{},"body":{"license.html":{}}}],["income",{"_index":420,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["incorrectoldpassword",{"_index":1390,"title":{},"body":{"injectables/AuthService.html":{}}}],["incorrectpassword",{"_index":1315,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"injectables/AuthGoogleService.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column({type",{"_index":4336,"title":{},"body":{"entities/UserEntity.html":{}}}],["individual",{"_index":2493,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["industrial",{"_index":2926,"title":{},"body":{"entities/RegionEntity.html":{}}}],["infer",{"_index":945,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["infinitypagination",{"_index":541,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["infinitypagination${classreference.name}responsedto",{"_index":2449,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{}}}],["infinitypaginationresponse",{"_index":536,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["infinitypaginationresponse(account",{"_index":552,"title":{},"body":{"controllers/AccountsController.html":{}}}],["infinitypaginationresponse(classreference",{"_index":2445,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{},"miscellaneous/functions.html":{}}}],["infinitypaginationresponse(kycdetails",{"_index":2544,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["infinitypaginationresponse(region",{"_index":3028,"title":{},"body":{"controllers/RegionsController.html":{}}}],["infinitypaginationresponse(residence",{"_index":3261,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["infinitypaginationresponse(settings",{"_index":3577,"title":{},"body":{"controllers/SettingsController.html":{}}}],["infinitypaginationresponse(tenant",{"_index":4138,"title":{},"body":{"controllers/TenantsController.html":{}}}],["infinitypaginationresponse(tenanttype",{"_index":4064,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["infinitypaginationresponse(user",{"_index":4522,"title":{},"body":{"controllers/UsersController.html":{}}}],["infinitypaginationresponsedto",{"_index":537,"title":{"classes/InfinityPaginationResponseDto.html":{}},"body":{"controllers/AccountsController.html":{},"classes/InfinityPaginationResponseDto.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["infrastructure/persistence/account.repository",{"_index":603,"title":{},"body":{"injectables/AccountsService.html":{}}}],["infrastructure/persistence/document/document",{"_index":2303,"title":{},"body":{"modules/FilesModule.html":{},"modules/KycDetailsModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{}}}],["infrastructure/persistence/file.repository",{"_index":2365,"title":{},"body":{"injectables/FilesService.html":{}}}],["infrastructure/persistence/kyc",{"_index":2691,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["infrastructure/persistence/region.repository",{"_index":3048,"title":{},"body":{"injectables/RegionsService.html":{}}}],["infrastructure/persistence/relational/entities/kyc",{"_index":1523,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"injectables/KycDetailsService.html":{}}}],["infrastructure/persistence/relational/entities/settings.entity",{"_index":3559,"title":{},"body":{"classes/Settings.html":{},"injectables/SettingsService.html":{}}}],["infrastructure/persistence/relational/entities/tenant",{"_index":1688,"title":{},"body":{"classes/CreateTenantTypeDto.html":{},"classes/TenantType.html":{},"injectables/TenantTypesService.html":{}}}],["infrastructure/persistence/relational/relational",{"_index":582,"title":{},"body":{"modules/AccountsModule.html":{},"modules/FilesModule.html":{},"modules/KycDetailsModule.html":{},"modules/RegionsModule.html":{},"modules/ResidencesModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{}}}],["infrastructure/persistence/residence.repository",{"_index":3283,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["infrastructure/persistence/session.repository",{"_index":3539,"title":{},"body":{"injectables/SessionService.html":{}}}],["infrastructure/persistence/settings.repository",{"_index":3793,"title":{},"body":{"injectables/SettingsService.html":{}}}],["infrastructure/persistence/tenant",{"_index":4110,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["infrastructure/persistence/tenant.repository",{"_index":4162,"title":{},"body":{"injectables/TenantsService.html":{}}}],["infrastructure/persistence/user.repository",{"_index":4614,"title":{},"body":{"injectables/UsersService.html":{}}}],["infrastructure/uploader/local/files.module",{"_index":2304,"title":{},"body":{"modules/FilesModule.html":{}}}],["infrastructure/uploader/s3",{"_index":2308,"title":{},"body":{"modules/FilesModule.html":{}}}],["infrastructure/uploader/s3/files.module",{"_index":2306,"title":{},"body":{"modules/FilesModule.html":{}}}],["infrastructuredatabasemodule",{"_index":920,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["infrastructurepersistencemodule",{"_index":2275,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/KycDetailsModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["infrastructureuploadermodule",{"_index":2310,"title":{},"body":{"modules/FilesModule.html":{},"miscellaneous/variables.html":{}}}],["initiatives",{"_index":485,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["inject",{"_index":952,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":2692,"title":{},"body":{"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":202,"title":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"injectables/AnonymousStrategy.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"injectables/AnonymousStrategy.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"injectables/AnonymousStrategy.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":2106,"title":{},"body":{"injectables/FileDocumentRepository.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{}}}],["injectmodel(fileschemaclass.name",{"_index":2111,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["injectmodel(kycdetailsschemaclass.name",{"_index":2564,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["injectmodel(sessionschemaclass.name",{"_index":3430,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["injectmodel(userschemaclass.name",{"_index":4462,"title":{},"body":{"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{}}}],["injectrepository",{"_index":237,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/FileRelationalRepository.html":{},"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersRelationalRepository.html":{}}}],["injectrepository(accountentity",{"_index":247,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{}}}],["injectrepository(fileentity",{"_index":2150,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["injectrepository(kycdetailsentity",{"_index":2491,"title":{},"body":{"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsRelationalRepository.html":{}}}],["injectrepository(regionentity",{"_index":2965,"title":{},"body":{"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["injectrepository(residenceentity",{"_index":3202,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{}}}],["injectrepository(roleentity",{"_index":327,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["injectrepository(sessionentity",{"_index":3500,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["injectrepository(settingsentity",{"_index":3729,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{}}}],["injectrepository(statusentity",{"_index":3838,"title":{},"body":{"injectables/StatusSeedService.html":{}}}],["injectrepository(tenantentity",{"_index":325,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["injectrepository(tenanttypeentity",{"_index":3986,"title":{},"body":{"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{}}}],["injectrepository(userentity",{"_index":326,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersRelationalRepository.html":{}}}],["input",{"_index":5725,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inquiries",{"_index":5779,"title":{},"body":{"index.html":{}}}],["install",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["instance",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["instancetoplain",{"_index":1824,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["instancetoplain(this",{"_index":1827,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["instructions",{"_index":3641,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["integer",{"_index":684,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{}}}],["integration",{"_index":772,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["intercept",{"_index":3315,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["intercept(context",{"_index":3316,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["interface",{"_index":2092,"title":{"interfaces/FacebookInterface.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/MailData.html":{},"interfaces/SocialInterface.html":{}},"body":{"interfaces/FacebookInterface.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/MailData.html":{},"entities/SettingsEntity.html":{},"interfaces/SocialInterface.html":{}}}],["interfaces",{"_index":2093,"title":{},"body":{"interfaces/FacebookInterface.html":{},"interfaces/IPaginationOptions.html":{},"interfaces/MailData.html":{},"interfaces/SocialInterface.html":{},"overview.html":{}}}],["interfaces/facebook.interface",{"_index":1162,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["interfaces/mail",{"_index":2773,"title":{},"body":{"injectables/MailService.html":{}}}],["internationalization/translations",{"_index":5759,"title":{},"body":{"index.html":{}}}],["internet",{"_index":470,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["invalidhash",{"_index":1362,"title":{},"body":{"injectables/AuthService.html":{}}}],["inventory",{"_index":394,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["invoice",{"_index":3599,"title":{},"body":{"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["invoicegenerated",{"_index":3690,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["invoiceprefix",{"_index":3604,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["ipaginationoptions",{"_index":243,"title":{"interfaces/IPaginationOptions.html":{}},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"interfaces/IPaginationOptions.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":1592,"title":{},"body":{"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantsService.html":{}}}],["isarray",{"_index":1468,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{}}}],["isboolean",{"_index":1467,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateTenantDto.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["isboolean()@isoptional",{"_index":1983,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["isdate",{"_index":1515,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["isdocumentdatabase",{"_index":921,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/KycDetailsModule.html":{},"modules/SessionModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":1132,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/UpdateUserDto.html":{}}}],["isenum",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-6.html":{}}}],["isenum(accounttypeenum",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{}}}],["isenum(environment",{"_index":1861,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isenum(environment)@isoptional",{"_index":1848,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isenum(filedriver",{"_index":2035,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["isenum(notificationchannelenum",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{}}}],["isenum(notificationtypeenum",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{}}}],["isglobal",{"_index":937,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{}}}],["isint",{"_index":1854,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["isint()@isoptional",{"_index":1977,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["isint()@min(0)@max(65535",{"_index":1981,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["isint()@min(0)@max(65535)@isoptional",{"_index":1841,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["isjson",{"_index":1932,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["isjson()@isoptional",{"_index":1930,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["islatitude",{"_index":1562,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["islongitude",{"_index":1563,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["isnotempty",{"_index":83,"title":{},"body":{"classes/AccountDto.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/FileDto.html":{},"classes/KycDetailsDto.html":{},"classes/RegionDto.html":{},"classes/ResidenceDto.html":{},"classes/SettingsDto.html":{},"classes/TenantDto.html":{},"classes/TenantTypeDto.html":{},"classes/Tokens.html":{},"classes/UserDto.html":{}}}],["isnotemptyobject",{"_index":1470,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":1466,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/FileUploadDto.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/QueryUserDto.html":{},"classes/RoleDto.html":{},"classes/SortUserDto.html":{},"classes/StatusDto.html":{}}}],["isnumber()@isoptional",{"_index":2390,"title":{},"body":{"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/QueryUserDto.html":{}}}],["isobject",{"_index":1561,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["isoptional",{"_index":63,"title":{},"body":{"classes/Account.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@validatenested()@type(undefined)@isarray",{"_index":1458,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring",{"_index":84,"title":{},"body":{"classes/AccountDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FileDto.html":{},"classes/FileUploadDto.html":{},"classes/FilterUserDto.html":{},"classes/KycDetailsDto.html":{},"classes/QueryUserDto.html":{},"classes/RegionDto.html":{},"classes/ResidenceDto.html":{},"classes/SettingsDto.html":{},"classes/SortUserDto.html":{},"classes/TenantDto.html":{},"classes/TenantTypeDto.html":{}}}],["isstring()@isoptional",{"_index":1837,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["issue",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["isurl",{"_index":1855,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isurl({require_tld",{"_index":1843,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isvalidoldpassword",{"_index":1391,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1316,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":3949,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["items",{"_index":458,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["john",{"_index":1239,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserSeedService.html":{}}}],["john'})@isnotempty",{"_index":1231,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{}}}],["john'})@isoptional()@isnotempty({message",{"_index":1428,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["john.doe@example.com",{"_index":4328,"title":{},"body":{"classes/User.html":{},"injectables/UserSeedService.html":{},"miscellaneous/variables.html":{}}}],["john.doe@example.com'})@expose({groups",{"_index":4305,"title":{},"body":{"classes/User.html":{}}}],["joincolumn",{"_index":3892,"title":{},"body":{"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["jointable",{"_index":119,"title":{},"body":{"entities/AccountEntity.html":{},"entities/ResidenceEntity.html":{},"entities/UserEntity.html":{}}}],["js",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["json.parse",{"_index":2640,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["json.parse(process.env.apple_app_audience",{"_index":1935,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["json.parse(raw.documentdata",{"_index":2625,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["json.parse(value",{"_index":2383,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["jsonb",{"_index":711,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"entities/KycDetailsEntity.html":{},"classes/LatestChanges1745163536016.html":{},"entities/RegionEntity.html":{},"entities/SettingsEntity.html":{}}}],["jwt",{"_index":2452,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{}}}],["jwtdata",{"_index":1358,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdata.confirmemailuserid",{"_index":1360,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdata.forgotuserid",{"_index":1381,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdata.newemail",{"_index":1371,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtfromrequest",{"_index":2460,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":1223,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":1229,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayloadtype",{"_index":1266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtrefreshpayloadtype",{"_index":1296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["jwtrefreshstrategy",{"_index":1218,"title":{"injectables/JwtRefreshStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"overview.html":{}}}],["jwtservice",{"_index":1250,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":1219,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwttoken",{"_index":1346,"title":{},"body":{"injectables/AuthService.html":{}}}],["keepconnectionalive",{"_index":4247,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["kes",{"_index":3560,"title":{},"body":{"classes/Settings.html":{}}}],["key",{"_index":687,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["keyof",{"_index":2378,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["kind",{"_index":5822,"title":{},"body":{"license.html":{}}}],["kyc",{"_index":927,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"classes/FindAllKycDetailsDto.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["kyc_details",{"_index":672,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"entities/KycDetailsEntity.html":{},"classes/LatestChanges1745163536016.html":{}}}],["kyc_details\"(\"id",{"_index":698,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["kycdetails",{"_index":2508,"title":{"classes/KycDetails.html":{}},"body":{"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["kycdetails['id",{"_index":2577,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{}}}],["kycdetailscontroller",{"_index":2529,"title":{"controllers/KycDetailsController.html":{}},"body":{"controllers/KycDetailsController.html":{},"modules/KycDetailsModule.html":{}}}],["kycdetailsdocumentrepository",{"_index":1778,"title":{"injectables/KycDetailsDocumentRepository.html":{}},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"injectables/KycDetailsDocumentRepository.html":{}}}],["kycdetailsdto",{"_index":1652,"title":{"classes/KycDetailsDto.html":{}},"body":{"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/KycDetailsDto.html":{}}}],["kycdetailseedmodule",{"_index":2474,"title":{"modules/KycDetailSeedModule.html":{}},"body":{"modules/KycDetailSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["kycdetailseedservice",{"_index":2478,"title":{"injectables/KycDetailSeedService.html":{}},"body":{"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"overview.html":{}}}],["kycdetailsentity",{"_index":2482,"title":{"entities/KycDetailsEntity.html":{}},"body":{"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["kycdetailsid",{"_index":671,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["kycdetailsmapper",{"_index":2561,"title":{"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{}},"body":{"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["kycdetailsmapper.todomain(entity",{"_index":2587,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{}}}],["kycdetailsmapper.todomain(entityobject",{"_index":2570,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["kycdetailsmapper.todomain(item",{"_index":3929,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["kycdetailsmapper.todomain(newentity",{"_index":2663,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["kycdetailsmapper.todomain(updatedentity",{"_index":2667,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["kycdetailsmapper.topersistence",{"_index":2586,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{}}}],["kycdetailsmapper.topersistence(data",{"_index":2565,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{}}}],["kycdetailsmapper.topersistence(item",{"_index":3950,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["kycdetailsmodel",{"_index":2554,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["kycdetailsmodule",{"_index":862,"title":{"modules/KycDetailsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/KycDetailsModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["kycdetailsrelationalrepository",{"_index":2653,"title":{"injectables/KycDetailsRelationalRepository.html":{}},"body":{"injectables/KycDetailsRelationalRepository.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{}}}],["kycdetailsrepository",{"_index":1771,"title":{"classes/KycDetailsRepository.html":{}},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"overview.html":{}}}],["kycdetailsschema",{"_index":1773,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"classes/KycDetailsSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["kycdetailsschemaclass",{"_index":1774,"title":{"classes/KycDetailsSchemaClass.html":{}},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["kycdetailsschemaclass.name",{"_index":1780,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{}}}],["kycdetailsschemadocument",{"_index":2680,"title":{},"body":{"classes/KycDetailsSchemaClass.html":{},"miscellaneous/typealiases.html":{}}}],["kycdetailsservice",{"_index":2538,"title":{"injectables/KycDetailsService.html":{}},"body":{"controllers/KycDetailsController.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["kycrepository",{"_index":2489,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["kycstatus",{"_index":1508,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsService.html":{},"miscellaneous/enumerations.html":{}}}],["kycstatus.pending",{"_index":1526,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsService.html":{}}}],["kycsubjecttype",{"_index":1511,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{},"miscellaneous/enumerations.html":{}}}],["kycsubjecttype.tenant",{"_index":2507,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["kycsubjecttype.user",{"_index":2498,"title":{},"body":{"injectables/KycDetailSeedService.html":{},"classes/KycDetailsMapper-1.html":{}}}],["kycsubjecttype})@isstring",{"_index":1512,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["kycsubmissions",{"_index":1644,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UsersService.html":{}}}],["kycsubmissionsobjects",{"_index":4184,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["kycsubmissionsobjects.length",{"_index":4187,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["landfill",{"_index":403,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["lang",{"_index":1892,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["language",{"_index":776,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["large",{"_index":2351,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["last_name",{"_index":2096,"title":{},"body":{"interfaces/FacebookInterface.html":{}}}],["lastname",{"_index":988,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"classes/AuthRegisterLoginDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"interfaces/SocialInterface.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{}}}],["latestchanges.ts",{"_index":2724,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["latestchanges.ts:4",{"_index":2725,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["latestchanges.ts:6",{"_index":2727,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["latestchanges.ts:73",{"_index":2726,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["latestchanges1745163536016",{"_index":2722,"title":{"classes/LatestChanges1745163536016.html":{}},"body":{"classes/LatestChanges1745163536016.html":{}}}],["latitude",{"_index":1538,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["layout",{"_index":780,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["lazy",{"_index":3235,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["legend",{"_index":293,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["liab",{"_index":402,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["liability",{"_index":397,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["liable",{"_index":5834,"title":{},"body":{"license.html":{}}}],["library",{"_index":1202,"title":{},"body":{"injectables/AuthGoogleService.html":{},"changelog.html":{},"dependencies.html":{}}}],["libs",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":4886,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["limit",{"_index":555,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"interfaces/IPaginationOptions.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsService.html":{},"classes/QueryUserDto.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/SortUserDto.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"controllers/UsersController.html":{}}}],["limit(paginationoptions.limit",{"_index":2575,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/UsersDocumentRepository.html":{}}}],["limitation",{"_index":5800,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5824,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2288,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"entities/SettingsEntity.html":{}}}],["lines",{"_index":362,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["link",{"_index":5597,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":5602,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["listing",{"_index":762,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["literal",{"_index":223,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"injectables/AuthService.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/KycDetails.html":{},"injectables/KycDetailsDocumentRepository.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":3631,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["load",{"_index":938,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{}}}],["loaderoptions",{"_index":946,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":3236,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["loans",{"_index":399,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["local",{"_index":4088,"title":{},"body":{"injectables/TenantTypesSeedService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["locale",{"_index":3605,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["localization",{"_index":775,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["logger",{"_index":315,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["logger(accountseedservice.name",{"_index":324,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["logger(regionseedservice.name",{"_index":2998,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["logger(residenceseedservice.name",{"_index":3230,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["logging",{"_index":4248,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":956,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"changelog.html":{}}}],["login(@body",{"_index":980,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthGoogleController.html":{}}}],["login(logindto",{"_index":957,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{}}}],["login.dto",{"_index":972,"title":{},"body":{"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{}}}],["login.dto.ts",{"_index":985,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{}}}],["login.dto.ts:10",{"_index":1230,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{}}}],["login.dto.ts:11",{"_index":990,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthEmailLoginDto.html":{}}}],["login.dto.ts:14",{"_index":1236,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{}}}],["login.dto.ts:15",{"_index":994,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthEmailLoginDto.html":{}}}],["login.dto.ts:18",{"_index":1232,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{}}}],["login.dto.ts:22",{"_index":1234,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{}}}],["login.dto.ts:7",{"_index":993,"title":{},"body":{"classes/AuthAppleLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthGoogleLoginDto.html":{}}}],["logindto",{"_index":963,"title":{},"body":{"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{}}}],["logindto.firstname",{"_index":1021,"title":{},"body":{"injectables/AuthAppleService.html":{}}}],["logindto.idtoken",{"_index":1208,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["logindto.lastname",{"_index":1022,"title":{},"body":{"injectables/AuthAppleService.html":{}}}],["logindto.password",{"_index":1318,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginresponsedto",{"_index":973,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["loginresponsedto})@httpcode(httpstatus.ok",{"_index":1057,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginresponsedto})@serializeoptions({groups",{"_index":960,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{}}}],["logistics",{"_index":3603,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["logo",{"_index":1645,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantsService.html":{}}}],["logoid",{"_index":833,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["logoobject",{"_index":4176,"title":{},"body":{"injectables/TenantsService.html":{}}}],["logourl",{"_index":3657,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["logout",{"_index":1035,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@request",{"_index":1122,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(data",{"_index":1262,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(request",{"_index":1059,"title":{},"body":{"controllers/AuthController.html":{}}}],["longitude",{"_index":1543,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["loss",{"_index":460,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["lowercasetransformer",{"_index":1135,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["lts.2",{"_index":5676,"title":{},"body":{"dependencies.html":{}}}],["machine",{"_index":5600,"title":{},"body":{"changelog.html":{}}}],["machinery",{"_index":365,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["mail",{"_index":2074,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{},"injectables/MailService.html":{}}}],["mail.service",{"_index":2760,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/config/mail.config",{"_index":880,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.module",{"_index":906,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["mail/mail.service",{"_index":1299,"title":{},"body":{"injectables/AuthService.html":{}}}],["mail_default_email",{"_index":2056,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["mail_default_name",{"_index":2057,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["mail_host",{"_index":2058,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{},"miscellaneous/variables.html":{}}}],["mail_ignore_tls",{"_index":2059,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["mail_password",{"_index":2060,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["mail_port",{"_index":2061,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{},"miscellaneous/variables.html":{}}}],["mail_require_tls",{"_index":2062,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["mail_secure",{"_index":2063,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["mail_user",{"_index":2064,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["mailconfig",{"_index":879,"title":{},"body":{"modules/AppModule.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"miscellaneous/typealiases.html":{}}}],["maildata",{"_index":2752,"title":{"interfaces/MailData.html":{}},"body":{"interfaces/MailData.html":{},"injectables/MailService.html":{}}}],["maildata.data.hash",{"_index":2790,"title":{},"body":{"injectables/MailService.html":{}}}],["maildata.data.tokenexpires.tostring",{"_index":2815,"title":{},"body":{"injectables/MailService.html":{}}}],["maildata.to",{"_index":2792,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["mailer.service",{"_index":2822,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer/mailer.module",{"_index":913,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["mailer/mailer.service",{"_index":2777,"title":{},"body":{"injectables/MailService.html":{}}}],["mailermodule",{"_index":864,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailerservice",{"_index":2764,"title":{"injectables/MailerService.html":{}},"body":{"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"overview.html":{}}}],["mailing",{"_index":5756,"title":{},"body":{"index.html":{}}}],["mailmodule",{"_index":863,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":2844,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailoptions.from",{"_index":2855,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailoptions.html",{"_index":2857,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailservice",{"_index":1252,"title":{"injectables/MailService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"overview.html":{}}}],["main",{"_index":380,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["maintenance",{"_index":439,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["management",{"_index":370,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["manager",{"_index":3369,"title":{},"body":{"injectables/RoleSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["managing",{"_index":4090,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["manufacturing_company",{"_index":817,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":120,"title":{},"body":{"entities/AccountEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/UserEntity.html":{}}}],["manytomany(undefined",{"_index":104,"title":{},"body":{"entities/AccountEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone",{"_index":121,"title":{},"body":{"entities/AccountEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone(undefined",{"_index":110,"title":{},"body":{"entities/AccountEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["map",{"_index":3324,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{},"changelog.html":{},"dependencies.html":{}}}],["map(string",{"_index":4638,"title":{},"body":{"injectables/UsersService.html":{}}}],["mappers/account.mapper",{"_index":242,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["mappers/file.mapper",{"_index":2110,"title":{},"body":{"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{}}}],["mappers/kyc",{"_index":2562,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{}}}],["mappers/region.mapper",{"_index":2964,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["mappers/residence.mapper",{"_index":3201,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["mappers/session.mapper",{"_index":3429,"title":{},"body":{"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{}}}],["mappers/settings.mapper",{"_index":3728,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["mappers/tenant",{"_index":4033,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["mappers/tenant.mapper",{"_index":3962,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["mappers/user.mapper",{"_index":4543,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["marketing",{"_index":474,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["marketplace",{"_index":761,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["marketplacecommission",{"_index":3666,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["marketplaceenabled",{"_index":3665,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["matching",{"_index":78,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":428,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["max",{"_index":1856,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["max(65535",{"_index":1863,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["maxconnections",{"_index":2011,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["maxfilesize",{"_index":2051,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["maxpickupsperday",{"_index":3673,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["maybetype",{"_index":2775,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["me(@request",{"_index":1113,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(request",{"_index":1062,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(userjwtpayload",{"_index":1265,"title":{},"body":{"injectables/AuthService.html":{}}}],["merchantability",{"_index":5826,"title":{},"body":{"license.html":{}}}],["merge",{"_index":5803,"title":{},"body":{"license.html":{}}}],["message",{"_index":1442,"title":{},"body":{"classes/AuthUpdateDto.html":{},"injectables/FilesS3PresignedService.html":{}}}],["messages",{"_index":5604,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":4803,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["methods",{"_index":129,"title":{},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityRelationalHelper.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"controllers/HomeController.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["migrationinterface",{"_index":653,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["migrations",{"_index":4252,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["migrations/**/*{.ts,.js",{"_index":4253,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":1857,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["min(0",{"_index":1862,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["minimumpickupamount",{"_index":3616,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["minlength",{"_index":1237,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(6",{"_index":1238,"title":{},"body":{"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["miscellaneous",{"_index":5689,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["missingoldpassword",{"_index":1388,"title":{},"body":{"injectables/AuthService.html":{}}}],["mit",{"_index":5786,"title":{},"body":{"license.html":{},"properties.html":{}}}],["mobile",{"_index":373,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["mode",{"_index":3629,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["model",{"_index":2099,"title":{},"body":{"injectables/FileDocumentRepository.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{}}}],["modify",{"_index":5802,"title":{},"body":{"license.html":{}}}],["module",{"_index":289,"title":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":291,"title":{"modules.html":{}},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["mon",{"_index":1568,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/RegionSeedService.html":{}}}],["money",{"_index":374,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["mongodb",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["mongodb'].includes(process.env.database_type",{"_index":1996,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["mongoose",{"_index":2107,"title":{},"body":{"injectables/FileDocumentRepository.html":{},"classes/FileSchemaClass.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/MongooseConfigService.html":{},"modules/SeedModule.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["mongoose.schema.types.objectid",{"_index":3528,"title":{},"body":{"classes/SessionSchemaClass.html":{}}}],["mongooseautopopulate",{"_index":2865,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseconfigservice",{"_index":916,"title":{"injectables/MongooseConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"modules/SeedModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":914,"title":{},"body":{"modules/AppModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/SeedModule.html":{},"modules/UserSeedModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1764,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/UserSeedModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":922,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemoduleoptions",{"_index":2863,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":2864,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["monorepo",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["monthly",{"_index":471,"title":{},"body":{"injectables/AccountSeedService.html":{},"entities/SettingsEntity.html":{}}}],["more",{"_index":4356,"title":{},"body":{"entities/UserEntity.html":{}}}],["mpesa",{"_index":3622,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["ms",{"_index":1287,"title":{},"body":{"injectables/AuthService.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"dependencies.html":{}}}],["ms(tokenexpiresin",{"_index":1377,"title":{},"body":{"injectables/AuthService.html":{}}}],["ms.stringvalue",{"_index":1914,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["multer",{"_index":2271,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["multermodule",{"_index":2269,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["multermodule.registerasync",{"_index":2276,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["multers3",{"_index":2320,"title":{},"body":{"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["multers3.auto_content_type",{"_index":2326,"title":{},"body":{"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["municipality",{"_index":809,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"injectables/TenantTypesSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["mustbenotempty",{"_index":1429,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["name",{"_index":16,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"injectables/FileDocumentRepository.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"injectables/HomeService.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"classes/Status.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":4355,"title":{},"body":{"entities/UserEntity.html":{}}}],["needloginviaprovider:${user.provider",{"_index":1313,"title":{},"body":{"injectables/AuthService.html":{}}}],["nest",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["nestfactory.create(seedmodule",{"_index":5925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":3322,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["nestjs",{"_index":901,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":236,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"injectables/RegionRelationalRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"injectables/ResidenceRelationalRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"injectables/SessionDocumentRepository.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common/utils/random",{"_index":1290,"title":{},"body":{"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["nestjs/config",{"_index":892,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"modules/SeedModule.html":{},"injectables/TypeOrmConfigService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/core",{"_index":3389,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"changelog.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":915,"title":{},"body":{"modules/AppModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileSchemaClass.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/MongooseConfigService.html":{},"modules/SeedModule.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{},"changelog.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":535,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2242,"title":{},"body":{"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"classes/FileDto.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"classes/KycDetailsDto.html":{},"classes/LoginResponseDto.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"controllers/RegionsController.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"controllers/ResidencesController.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"classes/Tokens.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"changelog.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":238,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"modules/AppModule.html":{},"injectables/FileRelationalRepository.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"injectables/ResidenceRelationalRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TypeOrmConfigService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersRelationalRepository.html":{},"changelog.html":{},"dependencies.html":{}}}],["never",{"_index":5884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["never.type",{"_index":2459,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["never.type.ts",{"_index":5868,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":148,"title":{},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"modules/AppModule.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateKycDetailsDto.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/FileType.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/MailService.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsService.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantsService.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["new.email@example.com",{"_index":1443,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["new.email@example.com'})@isoptional()@isnotempty()@isemail()@transform(lowercasetransformer",{"_index":1426,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["newemail",{"_index":1369,"title":{},"body":{"injectables/AuthService.html":{}}}],["newentity",{"_index":252,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["next",{"_index":3318,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":3329,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["node",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":2831,"title":{},"body":{"injectables/MailerService.html":{}}}],["node_env",{"_index":1836,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["nodeenv",{"_index":1867,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["nodemailer",{"_index":2832,"title":{},"body":{"injectables/MailerService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["nodemailer.createtransport",{"_index":2835,"title":{},"body":{"injectables/MailerService.html":{}}}],["nodemailer.sendmailoptions",{"_index":2845,"title":{},"body":{"injectables/MailerService.html":{}}}],["nodemailer.transporter",{"_index":2829,"title":{},"body":{"injectables/MailerService.html":{}}}],["non_profit_organization",{"_index":813,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":5830,"title":{},"body":{"license.html":{}}}],["not(number(conditions.excludesessionid",{"_index":3511,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["notexists",{"_index":612,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["notfound",{"_index":1310,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception",{"_index":1285,"title":{},"body":{"injectables/AuthService.html":{}}}],["notice",{"_index":5815,"title":{},"body":{"license.html":{}}}],["notification",{"_index":757,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["notificationchannel",{"_index":17,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{}}}],["notificationchannel'})@isoptional()@isenum(notificationchannelenum",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{}}}],["notificationchannelenum",{"_index":44,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"classes/CreateAccountDto.html":{},"miscellaneous/enumerations.html":{}}}],["notificationchannelenum.email",{"_index":355,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["notificationpreferences",{"_index":3561,"title":{},"body":{"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["notifications",{"_index":3600,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["notificationtype",{"_index":18,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{}}}],["notificationtype'})@isoptional()@isenum(notificationtypeenum",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/CreateAccountDto.html":{}}}],["notificationtypeenum",{"_index":50,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"classes/CreateAccountDto.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtypeenum.alert",{"_index":356,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["now",{"_index":731,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/LatestChanges1745163536016.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["npm",{"_index":5629,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":35,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"classes/FilterUserDto.html":{},"classes/KycDetails.html":{},"injectables/KycDetailsDocumentRepository.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/LatestChanges1745163536016.html":{},"classes/QueryUserDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionRelationalRepository.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/Settings.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SortUserDto.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":29,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/CreateResidenceDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/Role.html":{},"entities/RoleEntity.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"classes/User.html":{},"entities/UserEntity.html":{}}}],["nullabletype",{"_index":239,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":19,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FileUploadDto.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"interfaces/IPaginationOptions.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/LoginResponseDto.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/Session.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper-1.html":{},"entities/SettingsEntity.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{},"miscellaneous/variables.html":{}}}],["number(conditions.userid",{"_index":3510,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["number(domainentity.role.id",{"_index":4408,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["number(domainentity.status.id",{"_index":4411,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["number(domainentity.user.id",{"_index":3480,"title":{},"body":{"classes/SessionMapper-1.html":{}}}],["number(id",{"_index":3502,"title":{},"body":{"injectables/SessionRelationalRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["number(role.id",{"_index":4593,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["number(value",{"_index":2381,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["number})@isnumber",{"_index":1448,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateResidenceDto.html":{}}}],["number})@isoptional()@isnumber",{"_index":1521,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["numeric(9,6",{"_index":2743,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["oauth2client",{"_index":1201,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["object",{"_index":1527,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"classes/KycDetails.html":{},"classes/Region.html":{},"classes/Settings.html":{}}}],["object.defineproperty(pagination",{"_index":2447,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{}}}],["object.values(roleenum",{"_index":4637,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.values(statusenum",{"_index":4644,"title":{},"body":{"injectables/UsersService.html":{}}}],["object})@isoptional",{"_index":1504,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["observable",{"_index":3321,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["obtaining",{"_index":5794,"title":{},"body":{"license.html":{}}}],["occupants",{"_index":1617,"title":{},"body":{"classes/CreateResidenceDto.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{}}}],["occupantsobjects",{"_index":3285,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["occupantsobjects.length",{"_index":3287,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["old",{"_index":5649,"title":{},"body":{"changelog.html":{}}}],["oldpassword",{"_index":1387,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{}}}],["omit",{"_index":279,"title":{},"body":{"classes/AccountRepository.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/RegionRepository.html":{},"classes/ResidenceRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"classes/SettingsRepository.html":{},"classes/TenantRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{}}}],["one",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["onetomany",{"_index":3891,"title":{},"body":{"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["onetomany(undefined",{"_index":3871,"title":{},"body":{"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone",{"_index":3893,"title":{},"body":{"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["onetoone(undefined",{"_index":3875,"title":{},"body":{"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["operating",{"_index":1547,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{}}}],["operatinghours",{"_index":725,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateRegionDto.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{}}}],["operations",{"_index":446,"title":{},"body":{"injectables/AccountSeedService.html":{},"entities/SettingsEntity.html":{}}}],["operators",{"_index":407,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["option",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityRelationalHelper.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/Status.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":245,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"modules/AppModule.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["options.limit",{"_index":5917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.ts",{"_index":2438,"title":{},"body":{"interfaces/IPaginationOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":2379,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"injectables/UsersRelationalRepository.html":{}}}],["orderby",{"_index":2377,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["organization",{"_index":2502,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["organizations",{"_index":4089,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["ornevertype",{"_index":2455,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["otherwise",{"_index":5840,"title":{},"body":{"license.html":{}}}],["out",{"_index":304,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":406,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["overriding",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":5846,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owed",{"_index":409,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["owner",{"_index":20,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"injectables/RoleSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["ownerobjects",{"_index":614,"title":{},"body":{"injectables/AccountsService.html":{}}}],["ownerobjects.length",{"_index":618,"title":{},"body":{"injectables/AccountsService.html":{}}}],["owners",{"_index":342,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["package",{"_index":5653,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":5613,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":553,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"interfaces/IPaginationOptions.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsService.html":{},"classes/QueryUserDto.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/SortUserDto.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"controllers/UsersController.html":{},"changelog.html":{}}}],["pagination",{"_index":539,"title":{},"body":{"controllers/AccountsController.html":{},"classes/InfinityPaginationResponseDto.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["pagination.ts",{"_index":5896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginationoptions",{"_index":257,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["paginationoptions.limit",{"_index":262,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountsService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["paginationoptions.page",{"_index":260,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountsService.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersRelationalRepository.html":{}}}],["param",{"_index":521,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/FilesLocalController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":2547,"title":{},"body":{"controllers/KycDetailsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":135,"title":{},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":5919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.value?.tolowercase().trim",{"_index":5921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parententity",{"_index":2599,"title":{},"body":{"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/RoleEntity.html":{},"entities/SettingsEntity.html":{},"entities/UserEntity.html":{}}}],["parententity.kycsubmissions",{"_index":2600,"title":{},"body":{"entities/KycDetailsEntity.html":{}}}],["parententity.regions",{"_index":2920,"title":{},"body":{"entities/RegionEntity.html":{}}}],["parententity.roles",{"_index":3346,"title":{},"body":{"entities/RoleEntity.html":{}}}],["parententity.settings",{"_index":3590,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["parententity.users",{"_index":4351,"title":{},"body":{"entities/UserEntity.html":{}}}],["parseint(process.env.app_port",{"_index":1880,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["parseint(process.env.database_max_connections",{"_index":2013,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["parseint(process.env.database_port",{"_index":2003,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["parseint(process.env.mail_port",{"_index":2077,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["parseint(process.env.port",{"_index":1882,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["partial",{"_index":234,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["partial.type",{"_index":288,"title":{},"body":{"classes/AccountRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/RegionRepository.html":{},"classes/ResidenceRepository.html":{},"classes/SettingsRepository.html":{},"classes/TenantRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{}}}],["partial.type.ts",{"_index":5858,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":4274,"title":{},"body":{"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createaccountdto",{"_index":4273,"title":{},"body":{"classes/UpdateAccountDto.html":{}}}],["partialtype(createkycdetailsdto",{"_index":4276,"title":{},"body":{"classes/UpdateKycDetailsDto.html":{}}}],["partialtype(createregiondto",{"_index":4278,"title":{},"body":{"classes/UpdateRegionDto.html":{}}}],["partialtype(createresidencedto",{"_index":4280,"title":{},"body":{"classes/UpdateResidenceDto.html":{}}}],["partialtype(createsettingsdto",{"_index":4282,"title":{},"body":{"classes/UpdateSettingsDto.html":{}}}],["partialtype(createtenantdto",{"_index":4284,"title":{},"body":{"classes/UpdateTenantDto.html":{}}}],["partialtype(createtenanttypedto",{"_index":4286,"title":{},"body":{"classes/UpdateTenantTypeDto.html":{}}}],["partialtype(createuserdto",{"_index":4289,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":5828,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2842,"title":{},"body":{"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{}}}],["passkey",{"_index":3627,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["passport",{"_index":849,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":1222,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":851,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":842,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["passwithnotests",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["password",{"_index":1129,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"injectables/MailService.html":{},"entities/SettingsEntity.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["password.dto",{"_index":1089,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto.ts",{"_index":1178,"title":{},"body":{"classes/AuthForgotPasswordDto.html":{},"classes/AuthResetPasswordDto.html":{}}}],["password.dto.ts:10",{"_index":1180,"title":{},"body":{"classes/AuthForgotPasswordDto.html":{}}}],["password.dto.ts:11",{"_index":1241,"title":{},"body":{"classes/AuthResetPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1242,"title":{},"body":{"classes/AuthResetPasswordDto.html":{}}}],["password.hbs",{"_index":2816,"title":{},"body":{"injectables/MailService.html":{}}}],["password.text1",{"_index":2809,"title":{},"body":{"injectables/MailService.html":{}}}],["password.text2",{"_index":2810,"title":{},"body":{"injectables/MailService.html":{}}}],["password.text3",{"_index":2811,"title":{},"body":{"injectables/MailService.html":{}}}],["password.text4",{"_index":2812,"title":{},"body":{"injectables/MailService.html":{}}}],["patch",{"_index":520,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":563,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@apiparam({name",{"_index":516,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{}}}],["patch('me",{"_index":1124,"title":{},"body":{"controllers/AuthController.html":{}}}],["path",{"_index":547,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"classes/CreateUser1715028537217.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"controllers/KycDetailsController.html":{},"injectables/MailService.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"changelog.html":{}}}],["path.join",{"_index":2796,"title":{},"body":{"injectables/MailService.html":{}}}],["path.join(__dirname",{"_index":947,"title":{},"body":{"modules/AppModule.html":{}}}],["payable",{"_index":405,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["payload",{"_index":233,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AnonymousStrategy.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["payload.id",{"_index":2473,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sessionid",{"_index":2464,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["payload.type",{"_index":1298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.type.ts",{"_index":5863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payloadtoolargeexception",{"_index":2343,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["payment",{"_index":755,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["paymentgateways",{"_index":3621,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["paymentreceived",{"_index":3691,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["payments",{"_index":369,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["paypal",{"_index":3628,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["payroll",{"_index":468,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["paystack",{"_index":3642,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["pending",{"_index":710,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"entities/KycDetailsEntity.html":{},"classes/LatestChanges1745163536016.html":{},"miscellaneous/enumerations.html":{}}}],["permission",{"_index":5790,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":3619,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["permit",{"_index":5810,"title":{},"body":{"license.html":{}}}],["permits",{"_index":449,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["persistence.module",{"_index":583,"title":{},"body":{"modules/AccountsModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/KycDetailsModule.html":{},"modules/RegionsModule.html":{},"modules/ResidencesModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{}}}],["persistence.module.ts",{"_index":1757,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{}}}],["persistence/document/document",{"_index":2272,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["persistence/file.repository",{"_index":2294,"title":{},"body":{"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{}}}],["persistence/relational/relational",{"_index":2274,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["persistenceentity",{"_index":183,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.active",{"_index":190,"title":{},"body":{"classes/AccountMapper.html":{}}}],["persistenceentity.address",{"_index":3943,"title":{},"body":{"classes/TenantMapper.html":{}}}],["persistenceentity.balance",{"_index":195,"title":{},"body":{"classes/AccountMapper.html":{}}}],["persistenceentity.boundary",{"_index":2951,"title":{},"body":{"classes/RegionMapper.html":{}}}],["persistenceentity.callbackurl",{"_index":191,"title":{},"body":{"classes/AccountMapper.html":{}}}],["persistenceentity.centroidlat",{"_index":2950,"title":{},"body":{"classes/RegionMapper.html":{}}}],["persistenceentity.centroidlon",{"_index":2948,"title":{},"body":{"classes/RegionMapper.html":{}}}],["persistenceentity.charge",{"_index":3191,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["persistenceentity.code",{"_index":4022,"title":{},"body":{"classes/TenantTypeMapper.html":{}}}],["persistenceentity.config",{"_index":3711,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["persistenceentity.createdat",{"_index":200,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.deletedat",{"_index":3482,"title":{},"body":{"classes/SessionMapper-1.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.description",{"_index":197,"title":{},"body":{"classes/AccountMapper.html":{},"classes/TenantTypeMapper.html":{}}}],["persistenceentity.documentdata",{"_index":2639,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["persistenceentity.documentnumber",{"_index":2641,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["persistenceentity.documenttype",{"_index":2642,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["persistenceentity.domain",{"_index":3933,"title":{},"body":{"classes/TenantMapper.html":{}}}],["persistenceentity.email",{"_index":4412,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["persistenceentity.firstname",{"_index":4416,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["persistenceentity.hash",{"_index":3481,"title":{},"body":{"classes/SessionMapper-1.html":{}}}],["persistenceentity.id",{"_index":199,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.isactive",{"_index":3190,"title":{},"body":{"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{}}}],["persistenceentity.kycsubmissions",{"_index":3947,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.lastname",{"_index":4417,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["persistenceentity.logo",{"_index":3941,"title":{},"body":{"classes/TenantMapper.html":{}}}],["persistenceentity.name",{"_index":198,"title":{},"body":{"classes/AccountMapper.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{}}}],["persistenceentity.notificationchannel",{"_index":192,"title":{},"body":{"classes/AccountMapper.html":{}}}],["persistenceentity.notificationtype",{"_index":193,"title":{},"body":{"classes/AccountMapper.html":{}}}],["persistenceentity.number",{"_index":196,"title":{},"body":{"classes/AccountMapper.html":{}}}],["persistenceentity.occupants",{"_index":3187,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["persistenceentity.operatinghours",{"_index":2946,"title":{},"body":{"classes/RegionMapper.html":{}}}],["persistenceentity.owner",{"_index":186,"title":{},"body":{"classes/AccountMapper.html":{}}}],["persistenceentity.password",{"_index":4413,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["persistenceentity.path",{"_index":2142,"title":{},"body":{"classes/FileMapper-1.html":{}}}],["persistenceentity.photo",{"_index":4418,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["persistenceentity.primaryemail",{"_index":3945,"title":{},"body":{"classes/TenantMapper.html":{}}}],["persistenceentity.primaryphone",{"_index":3944,"title":{},"body":{"classes/TenantMapper.html":{}}}],["persistenceentity.provider",{"_index":4414,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["persistenceentity.receivenotification",{"_index":194,"title":{},"body":{"classes/AccountMapper.html":{}}}],["persistenceentity.region",{"_index":3189,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["persistenceentity.regions",{"_index":3934,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.role",{"_index":4419,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["persistenceentity.schemaname",{"_index":3940,"title":{},"body":{"classes/TenantMapper.html":{}}}],["persistenceentity.servicetypes",{"_index":2947,"title":{},"body":{"classes/RegionMapper.html":{}}}],["persistenceentity.settings",{"_index":3937,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.settingstype",{"_index":3712,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["persistenceentity.socialid",{"_index":4415,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["persistenceentity.status",{"_index":2638,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.subjecttype",{"_index":2643,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SettingsMapper.html":{}}}],["persistenceentity.submittedat",{"_index":2637,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["persistenceentity.tenant",{"_index":184,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SettingsMapper.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.type",{"_index":189,"title":{},"body":{"classes/AccountMapper.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{}}}],["persistenceentity.updatedat",{"_index":201,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper-1.html":{}}}],["persistenceentity.user",{"_index":2644,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{}}}],["persistenceentity.users",{"_index":3951,"title":{},"body":{"classes/TenantMapper.html":{}}}],["persistenceentity.verifiedat",{"_index":2636,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["persistenceentity.verifiedby",{"_index":2635,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["persistenceentity.zipcodes",{"_index":2945,"title":{},"body":{"classes/RegionMapper.html":{}}}],["persistencemodel",{"_index":250,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["persistenceschema",{"_index":2135,"title":{},"body":{"classes/FileMapper.html":{},"classes/KycDetailsMapper.html":{},"classes/SessionMapper.html":{},"classes/UserMapper.html":{}}}],["persistenceschema._id",{"_index":2136,"title":{},"body":{"classes/FileMapper.html":{},"classes/KycDetailsMapper.html":{},"classes/SessionMapper.html":{},"classes/UserMapper.html":{}}}],["persistenceschema.createdat",{"_index":2610,"title":{},"body":{"classes/KycDetailsMapper.html":{},"classes/UserMapper.html":{}}}],["persistenceschema.deletedat",{"_index":4403,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.email",{"_index":4394,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.firstname",{"_index":4398,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.lastname",{"_index":4399,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.password",{"_index":4395,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.path",{"_index":2137,"title":{},"body":{"classes/FileMapper.html":{}}}],["persistenceschema.photo",{"_index":4400,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.provider",{"_index":4396,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.role",{"_index":4401,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.socialid",{"_index":4397,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.status",{"_index":4402,"title":{},"body":{"classes/UserMapper.html":{}}}],["persistenceschema.updatedat",{"_index":2611,"title":{},"body":{"classes/KycDetailsMapper.html":{},"classes/UserMapper.html":{}}}],["person",{"_index":5793,"title":{},"body":{"license.html":{}}}],["persons",{"_index":5811,"title":{},"body":{"license.html":{}}}],["petty",{"_index":383,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["pg",{"_index":4797,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["phonenumberid",{"_index":3651,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["photo",{"_index":1424,"title":{},"body":{"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersService.html":{}}}],["photo._id",{"_index":4388,"title":{},"body":{"classes/UserMapper.html":{}}}],["photo.id",{"_index":4409,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["photo.path",{"_index":4390,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["photoid",{"_index":1701,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["pick",{"_index":1263,"title":{},"body":{"injectables/AuthService.html":{}}}],["pickupcompleted",{"_index":3689,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["pickupspermonth",{"_index":3681,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["pin",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["pk_01aac7f0120ad731078bf7786f2",{"_index":736,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["pk_0669fe20e252eb692bf4d344975",{"_index":796,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["pk_36b46d232307066b3a2c9ea3a1d",{"_index":1698,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["pk_4a98ba209be6df3b80a4feb5838",{"_index":828,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["pk_54115ee388cdb6d86bb4bf5b2ea",{"_index":1488,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["pk_5f48ffc3af96bc486f5f3f3a6da",{"_index":732,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["pk_618d05a83dac6021158cd01919a",{"_index":1594,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["pk_83983b321401e4ca9ebcc3317db",{"_index":2735,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["pk_8c4fa1c9e16c1049f7af3780b32",{"_index":1597,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["pk_a94aa68eef768f0a1d3d99f0442",{"_index":1491,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["pk_b36bcfe02fc8de3c57a8b2391c2",{"_index":1696,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["pk_cace4a159ff9f2512dd42373760",{"_index":1706,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["pk_da8c6efd67bb301e810e56ac139",{"_index":1678,"title":{},"body":{"classes/CreateTenantTable1745086820741.html":{}}}],["pk_e12743a7086ec826733f54e1d95",{"_index":1697,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["pk_f55da76ac1c3ac420f444d2ff11",{"_index":1710,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["plaintoinstance",{"_index":2374,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["plaintoinstance(filteruserdto",{"_index":2382,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["plaintoinstance(sortuserdto",{"_index":2385,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["planname",{"_index":3678,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["platform",{"_index":3363,"title":{},"body":{"injectables/RoleSeedService.html":{},"entities/SettingsEntity.html":{},"injectables/TenantTypesSeedService.html":{}}}],["platform_owner",{"_index":4013,"title":{},"body":{"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["platfrorm",{"_index":4084,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["please",{"_index":5776,"title":{},"body":{"index.html":{}}}],["polygon",{"_index":1534,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{}}}],["pool",{"_index":4262,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["pop",{"_index":2286,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["port",{"_index":1878,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"injectables/MailerService.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":5819,"title":{},"body":{"license.html":{}}}],["post",{"_index":518,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["post('email/confirm",{"_index":1101,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('email/confirm')@httpcode(httpstatus.no_content",{"_index":1040,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('email/confirm/new",{"_index":1103,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('email/confirm/new')@httpcode(httpstatus.no_content",{"_index":1044,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('email/login",{"_index":1095,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('email/register",{"_index":1097,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('email/register')@httpcode(httpstatus.no_content",{"_index":1074,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('forgot/password",{"_index":1105,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('forgot/password')@httpcode(httpstatus.no_content",{"_index":1051,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":978,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{}}}],["post('logout",{"_index":1121,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":1115,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset/password",{"_index":1107,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset/password')@httpcode(httpstatus.no_content",{"_index":1079,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload",{"_index":2253,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{}}}],["post()@apicreatedresponse({type",{"_index":502,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{}}}],["postgis",{"_index":2729,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["postgres",{"_index":5586,"title":{},"body":{"changelog.html":{}}}],["postgres.com/api/pool",{"_index":5914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres.com/apis/pool",{"_index":4261,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["pre",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["precision",{"_index":2910,"title":{},"body":{"entities/RegionEntity.html":{}}}],["predictpickupneeds",{"_index":3696,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["preferences",{"_index":765,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":5622,"title":{},"body":{"changelog.html":{}}}],["prepayments",{"_index":391,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["presigned",{"_index":4914,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["presigned/dto/file",{"_index":2167,"title":{},"body":{"classes/FileResponseDto-2.html":{}}}],["presigned/dto/file.dto.ts",{"_index":2216,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["presigned/dto/file.dto.ts:11",{"_index":2222,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["presigned/dto/file.dto.ts:7",{"_index":2220,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["presigned/files.controller.ts",{"_index":2328,"title":{},"body":{"controllers/FilesS3PresignedController.html":{}}}],["presigned/files.controller.ts:22",{"_index":2330,"title":{},"body":{"controllers/FilesS3PresignedController.html":{}}}],["presigned/files.module",{"_index":2309,"title":{},"body":{"modules/FilesModule.html":{}}}],["presigned/files.module.ts",{"_index":2337,"title":{},"body":{"modules/FilesS3PresignedModule.html":{},"miscellaneous/variables.html":{}}}],["presigned/files.service.ts",{"_index":2340,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["presigned/files.service.ts:19",{"_index":2341,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["presigned/files.service.ts:38",{"_index":2342,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["presigner",{"_index":2198,"title":{},"body":{"classes/FileType.html":{},"injectables/FilesS3PresignedService.html":{},"dependencies.html":{}}}],["prettier",{"_index":5631,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":5651,"title":{},"body":{"changelog.html":{}}}],["price",{"_index":3679,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["pricingmodel",{"_index":3612,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["primary",{"_index":733,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{}}}],["primarycolor",{"_index":3659,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["primarycolumn",{"_index":3343,"title":{},"body":{"entities/RoleEntity.html":{},"entities/StatusEntity.html":{}}}],["primaryemail",{"_index":832,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateTenantDto.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantsService.html":{}}}],["primarygeneratedcolumn",{"_index":117,"title":{},"body":{"entities/AccountEntity.html":{},"entities/FileEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":96,"title":{},"body":{"entities/AccountEntity.html":{},"entities/FileEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/SettingsEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{}}}],["primaryphone",{"_index":831,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateTenantDto.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantsService.html":{}}}],["privacy",{"_index":766,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["privacypolicyurl",{"_index":3686,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["private",{"_index":248,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["proceed",{"_index":2733,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["process.cwd",{"_index":1872,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env",{"_index":1926,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["process.env.access_key_id",{"_index":2044,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["process.env.api_prefix",{"_index":1885,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.app_fallback_language",{"_index":1886,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.app_header_language",{"_index":1889,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.app_name",{"_index":1869,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.app_port",{"_index":1879,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.auth_confirm_email_secret",{"_index":1924,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["process.env.auth_forgot_secret",{"_index":1920,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["process.env.auth_forgot_token_expires_in",{"_index":1922,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["process.env.auth_jwt_secret",{"_index":1911,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["process.env.auth_jwt_token_expires_in",{"_index":1913,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["process.env.auth_refresh_secret",{"_index":1916,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["process.env.auth_refresh_token_expires_in",{"_index":1918,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["process.env.aws_default_s3_bucket",{"_index":2048,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["process.env.aws_s3_region",{"_index":2050,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["process.env.backend_domain",{"_index":1876,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.database_ca",{"_index":2020,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_cert",{"_index":2023,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_host",{"_index":2001,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_key",{"_index":2021,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_max_connections",{"_index":2012,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_name",{"_index":2006,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":2005,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_port",{"_index":2002,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_reject_unauthorized",{"_index":2018,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_ssl_enabled",{"_index":2016,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_synchronize",{"_index":2010,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_type",{"_index":1999,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_url",{"_index":1998,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.database_username",{"_index":2008,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"miscellaneous/variables.html":{}}}],["process.env.facebook_app_id",{"_index":1943,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["process.env.facebook_app_secret",{"_index":1944,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["process.env.file_driver",{"_index":2041,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["process.env.frontend_domain",{"_index":1874,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.google_client_id",{"_index":1953,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["process.env.google_client_secret",{"_index":1955,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["process.env.mail_client_port",{"_index":5912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mail_default_email",{"_index":2083,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["process.env.mail_default_name",{"_index":2085,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["process.env.mail_host",{"_index":2079,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{},"miscellaneous/variables.html":{}}}],["process.env.mail_ignore_tls",{"_index":2087,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["process.env.mail_password",{"_index":2081,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["process.env.mail_port",{"_index":2076,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["process.env.mail_require_tls",{"_index":2091,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["process.env.mail_secure",{"_index":2089,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["process.env.mail_user",{"_index":2080,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["process.env.node_env",{"_index":1868,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":1881,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.pwd",{"_index":1871,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.secret_access_key",{"_index":2046,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["processing",{"_index":364,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"injectables/TenantTypesSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["produce",{"_index":434,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["product",{"_index":432,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["production",{"_index":1859,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["profits",{"_index":490,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["project",{"_index":5734,"title":{},"body":{"index.html":{}}}],["promise",{"_index":221,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["promise((resolve",{"_index":1169,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["promise.all",{"_index":1417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["promotions",{"_index":478,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["prop",{"_index":2171,"title":{},"body":{"classes/FileSchemaClass.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["prop({default",{"_index":2677,"title":{},"body":{"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["prop({type",{"_index":3524,"title":{},"body":{"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthGoogleLoginDto.html":{},"injectables/AuthGoogleService.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"injectables/FilesS3PresignedService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/KycDetails.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"injectables/MailerService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"classes/Session.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/Tokens.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"changelog.html":{},"properties.html":{}}}],["protective",{"_index":452,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["provide",{"_index":1767,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{}}}],["provided",{"_index":5820,"title":{},"body":{"license.html":{}}}],["provider",{"_index":1336,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"entities/SettingsEntity.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":296,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers.enum",{"_index":1295,"title":{},"body":{"injectables/AuthService.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersService.html":{}}}],["providers.enum.ts",{"_index":5694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["public",{"_index":654,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"controllers/AuthController.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/KycDetailsMapper.html":{},"classes/LatestChanges1745163536016.html":{}}}],["public\".\"account_notificationchannel_enum",{"_index":1481,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["public\".\"account_notificationtype_enum",{"_index":1485,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["public\".\"account_type_enum",{"_index":1479,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["public\".\"idx_0252300651acd5cbf815645395",{"_index":745,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["public\".\"idx_3d2f174ef04fb312fdebd0ddc5",{"_index":1718,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["public\".\"idx_44c05a3ad5f7ef9b00d4a35204",{"_index":1498,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["public\".\"idx_58e4dbff0e1a32a9bdc861bb29",{"_index":1720,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["public\".\"idx_6f135e350fdddcd8e043f1ea5c",{"_index":1612,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["public\".\"idx_85ec57103a142cba21f202f59d",{"_index":1613,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["public\".\"idx_9bd2fe7a8e694dedc4ec2f666f",{"_index":1721,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["public\".\"idx_a54b6ef97fee0107ea51d0cdd3",{"_index":1499,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["public\".\"idx_dbbbcbac1f75c3aca60e371c20",{"_index":744,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["public\".\"idx_f0e1b4ecdca13b177e2e3a0613",{"_index":1719,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["public\".\"kyc_details_status_enum",{"_index":706,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"classes/LatestChanges1745163536016.html":{}}}],["public\".\"kyc_details_subjecttype_enum",{"_index":712,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"classes/LatestChanges1745163536016.html":{}}}],["public\".\"residence_type_enum",{"_index":1585,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["public\".\"settings_settingstype_enum",{"_index":752,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{}}}],["public\".\"settings_settingstype_enum_old",{"_index":1604,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["public\".\"settings_subjecttype_enum",{"_index":788,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["public\".\"tenant_type_code_enum",{"_index":805,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{}}}],["public\".\"tenant_type_code_enum_old",{"_index":2740,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["publickey",{"_index":3643,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["publish",{"_index":5804,"title":{},"body":{"license.html":{}}}],["purchases",{"_index":400,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["purpose",{"_index":5829,"title":{},"body":{"license.html":{}}}],["push",{"_index":3645,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["putobjectcommand",{"_index":2344,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["q&a",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["query",{"_index":509,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["query?.filters",{"_index":4524,"title":{},"body":{"controllers/UsersController.html":{}}}],["query?.limit",{"_index":556,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["query?.page",{"_index":554,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["query?.sort",{"_index":4525,"title":{},"body":{"controllers/UsersController.html":{}}}],["queryrunner",{"_index":660,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["queryrunner.query",{"_index":662,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["queryrunner.query('create",{"_index":2732,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["queryrunner.query(`alter",{"_index":670,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["queryrunner.query(`drop",{"_index":714,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{}}}],["queryuserdto",{"_index":2380,"title":{"classes/QueryUserDto.html":{}},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"controllers/UsersController.html":{}}}],["randomstringgenerator",{"_index":1289,"title":{},"body":{"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["randomstringgenerator()}.${file.filename",{"_index":2352,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["randomstringgenerator()}.${file.originalname",{"_index":2284,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["rate_limiting",{"_index":774,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["ratelimit",{"_index":3693,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["raw",{"_index":136,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw._id.tostring",{"_index":2132,"title":{},"body":{"classes/FileMapper.html":{},"classes/KycDetailsMapper.html":{},"classes/SessionMapper.html":{},"classes/UserMapper.html":{}}}],["raw.active",{"_index":159,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.address",{"_index":3920,"title":{},"body":{"classes/TenantMapper.html":{}}}],["raw.balance",{"_index":169,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.boundary",{"_index":2944,"title":{},"body":{"classes/RegionMapper.html":{}}}],["raw.callbackurl",{"_index":161,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.centroidlat",{"_index":2942,"title":{},"body":{"classes/RegionMapper.html":{}}}],["raw.centroidlon",{"_index":2940,"title":{},"body":{"classes/RegionMapper.html":{}}}],["raw.charge",{"_index":3186,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["raw.code",{"_index":4021,"title":{},"body":{"classes/TenantTypeMapper.html":{}}}],["raw.config",{"_index":3708,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["raw.createdat",{"_index":179,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.deletedat",{"_index":3469,"title":{},"body":{"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.description",{"_index":173,"title":{},"body":{"classes/AccountMapper.html":{},"classes/TenantTypeMapper.html":{}}}],["raw.documentdata",{"_index":2623,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["raw.documentnumber",{"_index":2627,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["raw.documenttype",{"_index":2629,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["raw.domain",{"_index":3905,"title":{},"body":{"classes/TenantMapper.html":{}}}],["raw.email",{"_index":4366,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.firstname",{"_index":4374,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.hash",{"_index":3467,"title":{},"body":{"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{}}}],["raw.id",{"_index":177,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.isactive",{"_index":3184,"title":{},"body":{"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{}}}],["raw.kycsubmissions",{"_index":3926,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.kycsubmissions.map((item",{"_index":3928,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.lastname",{"_index":4376,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.logo",{"_index":3916,"title":{},"body":{"classes/TenantMapper.html":{}}}],["raw.name",{"_index":175,"title":{},"body":{"classes/AccountMapper.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{}}}],["raw.notificationchannel",{"_index":163,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.notificationtype",{"_index":165,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.number",{"_index":171,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.occupants",{"_index":3177,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["raw.occupants.map((item",{"_index":3179,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["raw.operatinghours",{"_index":2936,"title":{},"body":{"classes/RegionMapper.html":{}}}],["raw.owner",{"_index":152,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.owner.map((item",{"_index":154,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.password",{"_index":4368,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.path",{"_index":2134,"title":{},"body":{"classes/FileMapper.html":{},"classes/FileMapper-1.html":{}}}],["raw.photo",{"_index":4377,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.primaryemail",{"_index":3924,"title":{},"body":{"classes/TenantMapper.html":{}}}],["raw.primaryphone",{"_index":3922,"title":{},"body":{"classes/TenantMapper.html":{}}}],["raw.provider",{"_index":4370,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.receivenotification",{"_index":167,"title":{},"body":{"classes/AccountMapper.html":{}}}],["raw.region",{"_index":3180,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["raw.regions",{"_index":3906,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.regions.map((item",{"_index":3908,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.role",{"_index":4380,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.role._id",{"_index":4383,"title":{},"body":{"classes/UserMapper.html":{}}}],["raw.schemaname",{"_index":3915,"title":{},"body":{"classes/TenantMapper.html":{}}}],["raw.servicetypes",{"_index":2938,"title":{},"body":{"classes/RegionMapper.html":{}}}],["raw.settings",{"_index":3910,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.settings.map((item",{"_index":3912,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.settingstype",{"_index":3710,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["raw.socialid",{"_index":4372,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.status",{"_index":2621,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.status._id",{"_index":4385,"title":{},"body":{"classes/UserMapper.html":{}}}],["raw.subjecttype",{"_index":2631,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SettingsMapper.html":{}}}],["raw.submittedat",{"_index":2619,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["raw.tenant",{"_index":149,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SettingsMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.type",{"_index":157,"title":{},"body":{"classes/AccountMapper.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{}}}],["raw.updatedat",{"_index":181,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["raw.user",{"_index":2632,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{}}}],["raw.users",{"_index":3930,"title":{},"body":{"classes/TenantMapper.html":{}}}],["raw.users.map((item",{"_index":3932,"title":{},"body":{"classes/TenantMapper.html":{}}}],["raw.verifiedat",{"_index":2617,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["raw.verifiedby",{"_index":2615,"title":{},"body":{"classes/KycDetailsMapper-1.html":{}}}],["raw.zipcodes",{"_index":2934,"title":{},"body":{"classes/RegionMapper.html":{}}}],["react",{"_index":5743,"title":{},"body":{"index.html":{}}}],["read",{"_index":2339,"title":{},"body":{"modules/FilesS3PresignedModule.html":{}}}],["readme",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":249,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"injectables/FileRelationalRepository.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["receivable",{"_index":367,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["received",{"_index":483,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["receivenotification",{"_index":21,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{}}}],["record",{"_index":2846,"title":{},"body":{"injectables/MailerService.html":{},"miscellaneous/functions.html":{}}}],["records",{"_index":2492,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["recyclables",{"_index":431,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["recycled",{"_index":427,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["recycling",{"_index":359,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"injectables/TenantTypesSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["recycling_company",{"_index":807,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["redundant",{"_index":5642,"title":{},"body":{"changelog.html":{}}}],["ref",{"_index":3525,"title":{},"body":{"classes/SessionSchemaClass.html":{}}}],["refactoring",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["references",{"_index":688,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["reflect",{"_index":4802,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["reflector",{"_index":3385,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":1036,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["refresh(@request",{"_index":1116,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":1067,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh.strategy",{"_index":1228,"title":{},"body":{"modules/AuthModule.html":{}}}],["refresh.strategy.ts",{"_index":2451,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh.strategy.ts:13",{"_index":2453,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh.strategy.ts:23",{"_index":2454,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refreshexpires",{"_index":1917,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["refreshresponsedto",{"_index":1093,"title":{"classes/RefreshResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RefreshResponseDto.html":{}}}],["refreshresponsedto})@serializeoptions({groups",{"_index":1069,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshsecret",{"_index":1915,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["refreshtoken",{"_index":1245,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"classes/RefreshResponseDto.html":{}}}],["refreshtoken(data",{"_index":1269,"title":{},"body":{"injectables/AuthService.html":{}}}],["regarding",{"_index":5780,"title":{},"body":{"index.html":{}}}],["region",{"_index":723,"title":{"classes/Region.html":{}},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["region\"(\"id",{"_index":743,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateResidence1747295167463.html":{}}}],["region.dto",{"_index":3024,"title":{},"body":{"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/UpdateRegionDto.html":{}}}],["region.dto.ts",{"_index":1533,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/UpdateRegionDto.html":{}}}],["region.dto.ts:107",{"_index":1537,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["region.dto.ts:115",{"_index":1546,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["region.dto.ts:124",{"_index":1556,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["region.dto.ts:37",{"_index":1560,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["region.dto.ts:51",{"_index":1551,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["region.dto.ts:66",{"_index":1555,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["region.dto.ts:77",{"_index":1545,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["region.dto.ts:88",{"_index":1541,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["region.id",{"_index":3239,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["region.name",{"_index":3241,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["region.repository",{"_index":2963,"title":{},"body":{"injectables/RegionRelationalRepository.html":{},"modules/RelationalRegionPersistenceModule.html":{}}}],["region['id",{"_index":2972,"title":{},"body":{"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{}}}],["regiondto",{"_index":1622,"title":{"classes/RegionDto.html":{}},"body":{"classes/CreateResidenceDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/RegionDto.html":{}}}],["regiondto})@validatenested()@type(undefined)@isnotemptyobject",{"_index":1623,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["regionentity",{"_index":2902,"title":{"entities/RegionEntity.html":{}},"body":{"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"modules/RelationalRegionPersistenceModule.html":{},"entities/ResidenceEntity.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{},"injectables/UserSeedService-1.html":{}}}],["regionid",{"_index":735,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateResidence1747295167463.html":{}}}],["regionmapper",{"_index":2927,"title":{"classes/RegionMapper.html":{}},"body":{"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["regionmapper.todomain(entity",{"_index":2971,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["regionmapper.todomain(item",{"_index":3909,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["regionmapper.todomain(newentity",{"_index":2969,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["regionmapper.todomain(raw.region",{"_index":3182,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["regionmapper.todomain(updatedentity",{"_index":2976,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["regionmapper.topersistence",{"_index":2975,"title":{},"body":{"injectables/RegionRelationalRepository.html":{},"classes/ResidenceMapper.html":{}}}],["regionmapper.topersistence(data",{"_index":2966,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["regionmapper.topersistence(item",{"_index":3936,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["regionobject",{"_index":3289,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["regionrelationalrepository",{"_index":2952,"title":{"injectables/RegionRelationalRepository.html":{}},"body":{"injectables/RegionRelationalRepository.html":{},"modules/RelationalRegionPersistenceModule.html":{}}}],["regionrepository",{"_index":2956,"title":{"classes/RegionRepository.html":{}},"body":{"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{},"modules/RelationalRegionPersistenceModule.html":{},"injectables/ResidenceSeedService.html":{},"injectables/UserSeedService-1.html":{},"overview.html":{}}}],["regions",{"_index":1646,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/ResidenceSeedService.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{}}}],["regions.controller",{"_index":3039,"title":{},"body":{"modules/RegionsModule.html":{}}}],["regions.dto",{"_index":3025,"title":{},"body":{"controllers/RegionsController.html":{}}}],["regions.dto.ts",{"_index":2399,"title":{},"body":{"classes/FindAllRegionsDto.html":{}}}],["regions.dto.ts:10",{"_index":2401,"title":{},"body":{"classes/FindAllRegionsDto.html":{}}}],["regions.dto.ts:16",{"_index":2400,"title":{},"body":{"classes/FindAllRegionsDto.html":{}}}],["regions.length",{"_index":3231,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["regions.service",{"_index":3023,"title":{},"body":{"controllers/RegionsController.html":{},"modules/RegionsModule.html":{}}}],["regions/domain/region",{"_index":3155,"title":{},"body":{"classes/Residence.html":{},"injectables/ResidencesService.html":{},"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["regions/dto/region.dto",{"_index":1630,"title":{},"body":{"classes/CreateResidenceDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{}}}],["regions/infrastructure/persistence/relational/entities/region.entity",{"_index":2991,"title":{},"body":{"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"entities/ResidenceEntity.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{},"injectables/UserSeedService-1.html":{}}}],["regions/infrastructure/persistence/relational/mappers/region.mapper",{"_index":3176,"title":{},"body":{"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["regions/regions.module",{"_index":933,"title":{},"body":{"modules/AppModule.html":{},"modules/ResidencesModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{}}}],["regions/regions.service",{"_index":3282,"title":{},"body":{"injectables/ResidencesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["regionscontroller",{"_index":3013,"title":{"controllers/RegionsController.html":{}},"body":{"controllers/RegionsController.html":{},"modules/RegionsModule.html":{}}}],["regionseedmodule",{"_index":2985,"title":{"modules/RegionSeedModule.html":{}},"body":{"modules/RegionSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["regionseedservice",{"_index":2989,"title":{"injectables/RegionSeedService.html":{}},"body":{"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"overview.html":{}}}],["regionservice",{"_index":3274,"title":{},"body":{"injectables/ResidencesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["regionsmodule",{"_index":865,"title":{"modules/RegionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RegionsModule.html":{},"modules/ResidencesModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["regionsobjects",{"_index":4164,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["regionsobjects.length",{"_index":4167,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["regionsservice",{"_index":3022,"title":{"injectables/RegionsService.html":{}},"body":{"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["regionstocreate",{"_index":3003,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["register",{"_index":1037,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthRegisterLoginDto.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":1099,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createuserdto",{"_index":1072,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(dto",{"_index":1271,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeras",{"_index":1850,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["registeras('app",{"_index":1865,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["registeras('apple",{"_index":1933,"title":{},"body":{"classes/EnvironmentVariablesValidator-2.html":{}}}],["registeras('auth",{"_index":1910,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["registeras('database",{"_index":1995,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["registeras('facebook",{"_index":1942,"title":{},"body":{"classes/EnvironmentVariablesValidator-3.html":{}}}],["registeras('file",{"_index":2040,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["registeras('google",{"_index":1951,"title":{},"body":{"classes/EnvironmentVariablesValidator-4.html":{}}}],["registeras('mail",{"_index":2075,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["regulatory",{"_index":450,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["reinvested",{"_index":489,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["rejected",{"_index":709,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"entities/KycDetailsEntity.html":{},"classes/LatestChanges1745163536016.html":{},"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":2017,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["rel_75e2be4ce11d447ef43be0e374",{"_index":1705,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["relation",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["relationalaccountpersistencemodule",{"_index":574,"title":{"modules/RelationalAccountPersistenceModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules.html":{},"overview.html":{}}}],["relationalfilepersistencemodule",{"_index":2273,"title":{"modules/RelationalFilePersistenceModule.html":{}},"body":{"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["relationalkycdetailspersistencemodule",{"_index":2652,"title":{"modules/RelationalKycDetailsPersistenceModule.html":{}},"body":{"modules/KycDetailsModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["relationalregionpersistencemodule",{"_index":3037,"title":{"modules/RelationalRegionPersistenceModule.html":{}},"body":{"modules/RegionsModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules.html":{},"overview.html":{}}}],["relationalresidencepersistencemodule",{"_index":3087,"title":{"modules/RelationalResidencePersistenceModule.html":{}},"body":{"modules/RelationalResidencePersistenceModule.html":{},"modules/ResidencesModule.html":{},"modules.html":{},"overview.html":{}}}],["relationalsessionpersistencemodule",{"_index":3098,"title":{"modules/RelationalSessionPersistenceModule.html":{}},"body":{"modules/RelationalSessionPersistenceModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["relationalsettingspersistencemodule",{"_index":3106,"title":{"modules/RelationalSettingsPersistenceModule.html":{}},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["relationaltenantpersistencemodule",{"_index":3117,"title":{"modules/RelationalTenantPersistenceModule.html":{}},"body":{"modules/RelationalTenantPersistenceModule.html":{},"modules/TenantsModule.html":{},"modules.html":{},"overview.html":{}}}],["relationaltenanttypepersistencemodule",{"_index":3126,"title":{"modules/RelationalTenantTypePersistenceModule.html":{}},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"modules/TenantTypesModule.html":{},"modules.html":{},"overview.html":{}}}],["relationaluserpersistencemodule",{"_index":3137,"title":{"modules/RelationalUserPersistenceModule.html":{}},"body":{"modules/RelationalUserPersistenceModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["relations",{"_index":2495,"title":{},"body":{"injectables/KycDetailSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["relative",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["reminder",{"_index":758,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["remove",{"_index":211,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["remove(@param('id",{"_index":567,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":230,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["removing",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":1600,"title":{},"body":{"classes/CreateResidence1747295167463.html":{},"classes/LatestChanges1745163536016.html":{}}}],["repairs",{"_index":441,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["replace",{"_index":4113,"title":{},"body":{"injectables/TenantTypesService.html":{},"changelog.html":{}}}],["report",{"_index":1487,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{},"miscellaneous/enumerations.html":{}}}],["reporting",{"_index":769,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["repositories",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["repositories/account.repository",{"_index":3074,"title":{},"body":{"modules/RelationalAccountPersistenceModule.html":{}}}],["repositories/file.repository",{"_index":1763,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{}}}],["repositories/kyc",{"_index":1779,"title":{},"body":{"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{}}}],["repositories/region.repository",{"_index":3086,"title":{},"body":{"modules/RelationalRegionPersistenceModule.html":{}}}],["repositories/residence.repository",{"_index":3094,"title":{},"body":{"modules/RelationalResidencePersistenceModule.html":{}}}],["repositories/session.repository",{"_index":1791,"title":{},"body":{"modules/DocumentSessionPersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{}}}],["repositories/settings.repository",{"_index":3113,"title":{},"body":{"modules/RelationalSettingsPersistenceModule.html":{}}}],["repositories/tenant",{"_index":3133,"title":{},"body":{"modules/RelationalTenantTypePersistenceModule.html":{}}}],["repositories/tenant.repository",{"_index":3123,"title":{},"body":{"modules/RelationalTenantPersistenceModule.html":{}}}],["repositories/user.repository",{"_index":1802,"title":{},"body":{"modules/DocumentUserPersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{}}}],["repository",{"_index":215,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"injectables/FileRelationalRepository.html":{},"injectables/KycDetailSeedService.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersRelationalRepository.html":{}}}],["request",{"_index":846,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"controllers/AuthController.html":{},"classes/FileType.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["request.user.hash",{"_index":1120,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user.sessionid",{"_index":1119,"title":{},"body":{"controllers/AuthController.html":{}}}],["require_tld",{"_index":1864,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["required",{"_index":72,"title":{},"body":{"classes/Account.html":{},"controllers/AccountsController.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["requireidverification",{"_index":3687,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["requiretls",{"_index":2090,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{},"injectables/MailerService.html":{}}}],["reset",{"_index":303,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"controllers/AuthController.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"classes/AuthResetPasswordDto.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":1038,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":1108,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(hash",{"_index":1274,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(resetpassworddto",{"_index":1077,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto",{"_index":1081,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto.hash",{"_index":1110,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassworddto.password",{"_index":1111,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpasswordtitle",{"_index":2805,"title":{},"body":{"injectables/MailService.html":{}}}],["residence",{"_index":1591,"title":{"classes/Residence.html":{}},"body":{"classes/CreateResidence1747295167463.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{}}}],["residence\"(\"id",{"_index":1608,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["residence.dto",{"_index":3256,"title":{},"body":{"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"classes/UpdateResidenceDto.html":{}}}],["residence.dto.ts",{"_index":1616,"title":{},"body":{"classes/CreateResidenceDto.html":{},"classes/UpdateResidenceDto.html":{}}}],["residence.dto.ts:36",{"_index":1629,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["residence.dto.ts:45",{"_index":1621,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["residence.dto.ts:54",{"_index":1624,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["residence.dto.ts:63",{"_index":1625,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["residence.dto.ts:70",{"_index":1619,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["residence.dto.ts:77",{"_index":1618,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["residence.dto.ts:84",{"_index":1620,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["residence.name",{"_index":3244,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["residence.repository",{"_index":3092,"title":{},"body":{"modules/RelationalResidencePersistenceModule.html":{},"injectables/ResidenceRelationalRepository.html":{}}}],["residence['id",{"_index":3209,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{}}}],["residence_occupants_user",{"_index":1595,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["residencedto",{"_index":3156,"title":{"classes/ResidenceDto.html":{}},"body":{"classes/ResidenceDto.html":{}}}],["residenceentity",{"_index":3095,"title":{"entities/ResidenceEntity.html":{}},"body":{"modules/RelationalResidencePersistenceModule.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{}}}],["residenceid",{"_index":1596,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["residencemapper",{"_index":3171,"title":{"classes/ResidenceMapper.html":{}},"body":{"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{}}}],["residencemapper.todomain(entity",{"_index":3208,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["residencemapper.todomain(newentity",{"_index":3206,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["residencemapper.todomain(updatedentity",{"_index":3213,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["residencemapper.topersistence",{"_index":3212,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["residencemapper.topersistence(data",{"_index":3203,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["residencerelationalrepository",{"_index":3093,"title":{"injectables/ResidenceRelationalRepository.html":{}},"body":{"modules/RelationalResidencePersistenceModule.html":{},"injectables/ResidenceRelationalRepository.html":{}}}],["residencerepository",{"_index":3090,"title":{"classes/ResidenceRepository.html":{}},"body":{"modules/RelationalResidencePersistenceModule.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"overview.html":{}}}],["residences",{"_index":3259,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["residences.controller",{"_index":3271,"title":{},"body":{"modules/ResidencesModule.html":{}}}],["residences.dto",{"_index":3257,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["residences.dto.ts",{"_index":2404,"title":{},"body":{"classes/FindAllResidencesDto.html":{}}}],["residences.dto.ts:10",{"_index":2406,"title":{},"body":{"classes/FindAllResidencesDto.html":{}}}],["residences.dto.ts:16",{"_index":2405,"title":{},"body":{"classes/FindAllResidencesDto.html":{}}}],["residences.service",{"_index":3255,"title":{},"body":{"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{}}}],["residences/infrastructure/persistence/relational/entities/residence.entity",{"_index":3228,"title":{},"body":{"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{}}}],["residences/residences.module",{"_index":934,"title":{},"body":{"modules/AppModule.html":{}}}],["residencescontroller",{"_index":3245,"title":{"controllers/ResidencesController.html":{}},"body":{"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{}}}],["residenceseedmodule",{"_index":3222,"title":{"modules/ResidenceSeedModule.html":{}},"body":{"modules/ResidenceSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["residenceseedservice",{"_index":3226,"title":{"injectables/ResidenceSeedService.html":{}},"body":{"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"overview.html":{}}}],["residencesmodule",{"_index":866,"title":{"modules/ResidencesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResidencesModule.html":{},"modules.html":{},"overview.html":{}}}],["residencesservice",{"_index":3254,"title":{"injectables/ResidencesService.html":{}},"body":{"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"overview.html":{}}}],["residencetype",{"_index":1628,"title":{},"body":{"classes/CreateResidenceDto.html":{},"classes/Residence.html":{}}}],["residencetypeenum",{"_index":1626,"title":{},"body":{"classes/CreateResidenceDto.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["residencetypeenum.other",{"_index":3170,"title":{},"body":{"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{}}}],["residential",{"_index":419,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/CreateRegionDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{}}}],["resolve(response",{"_index":1174,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["resolvepromisesinterceptor",{"_index":3313,"title":{"injectables/ResolvePromisesInterceptor.html":{}},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["resolver",{"_index":3328,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{},"changelog.html":{}}}],["resolver.ts",{"_index":5716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolvers",{"_index":949,"title":{},"body":{"modules/AppModule.html":{}}}],["resource",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":1173,"title":{},"body":{"injectables/AuthFacebookService.html":{},"controllers/FilesLocalController.html":{},"changelog.html":{}}}],["response.dto",{"_index":540,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthService.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["response.dto.ts",{"_index":2163,"title":{},"body":{"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/LoginResponseDto.html":{},"classes/RefreshResponseDto.html":{},"miscellaneous/functions.html":{}}}],["response.dto.ts:11",{"_index":2884,"title":{},"body":{"classes/RefreshResponseDto.html":{}}}],["response.dto.ts:12",{"_index":2750,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:13",{"_index":2169,"title":{},"body":{"classes/FileResponseDto-2.html":{}}}],["response.dto.ts:17",{"_index":2751,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:5",{"_index":2442,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{},"classes/RefreshResponseDto.html":{}}}],["response.dto.ts:6",{"_index":2443,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{},"classes/LoginResponseDto.html":{}}}],["response.dto.ts:8",{"_index":2164,"title":{},"body":{"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/RefreshResponseDto.html":{}}}],["response.dto.ts:9",{"_index":2749,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.sendfile(path",{"_index":2261,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["responses",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["rest",{"_index":5732,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":5798,"title":{},"body":{"license.html":{}}}],["results",{"_index":77,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retail_business",{"_index":816,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["retained",{"_index":487,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["return",{"_index":182,"title":{},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileType.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"controllers/HomeController.html":{},"injectables/HomeService.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"classes/SortUserDto.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":137,"title":{},"body":{"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"controllers/AuthAppleController.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityRelationalHelper.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"controllers/HomeController.html":{},"injectables/HomeService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"injectables/StatusSeedService.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["rev",{"_index":423,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["revenue",{"_index":418,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"miscellaneous/enumerations.html":{}}}],["rights",{"_index":5801,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":4806,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["rodion",{"_index":5771,"title":{},"body":{"index.html":{}}}],["role",{"_index":344,"title":{"classes/Role.html":{}},"body":{"injectables/AccountSeedService.html":{},"injectables/AuthService.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/ResidenceSeedService.html":{},"classes/Role.html":{},"entities/RoleEntity.html":{},"modules/RoleSeedModule.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"entities/TenantEntity.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["role\"(\"id",{"_index":1714,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["role._id",{"_index":4386,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{}}}],["role.id",{"_index":4407,"title":{},"body":{"classes/UserMapper-1.html":{},"injectables/UserSeedService-1.html":{}}}],["role.id.tostring",{"_index":4552,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["role.name",{"_index":4490,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["role.tenant",{"_index":3882,"title":{},"body":{"entities/TenantEntity.html":{}}}],["roledef",{"_index":3373,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["roledef.code",{"_index":3375,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["roledef.name",{"_index":3378,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["roledto",{"_index":1734,"title":{"classes/RoleDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/RoleDto.html":{},"classes/SortUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["roledto})@isoptional()@type(undefined",{"_index":1735,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["roledto})@isoptional()@validatenested({each",{"_index":2371,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["roleentity",{"_index":310,"title":{"entities/RoleEntity.html":{}},"body":{"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"entities/RoleEntity.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{},"injectables/UserSeedService-1.html":{}}}],["roleenum",{"_index":1300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["roleenum.admin",{"_index":3364,"title":{},"body":{"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{}}}],["roleenum.admin.tostring",{"_index":4469,"title":{},"body":{"injectables/UserSeedService.html":{}}}],["roleenum.agent",{"_index":3365,"title":{},"body":{"injectables/RoleSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["roleenum.customer",{"_index":3367,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["roleenum.finance",{"_index":3370,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["roleenum.guest",{"_index":3371,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["roleenum.manager",{"_index":3368,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["roleenum.platform_owner",{"_index":3362,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["roleenum.user",{"_index":1339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleSeedService.html":{}}}],["roleenum.user.tostring",{"_index":4472,"title":{},"body":{"injectables/UserSeedService.html":{}}}],["roleid",{"_index":1702,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["rolename",{"_index":3618,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/UserSeedService-1.html":{}}}],["rolename.tolowercase()}.${(tenant?.name",{"_index":4492,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["rolenotexists",{"_index":4640,"title":{},"body":{"injectables/UsersService.html":{}}}],["roleobject",{"_index":4636,"title":{},"body":{"injectables/UsersService.html":{}}}],["rolerepository",{"_index":319,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["roles",{"_index":2370,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"guards/RolesGuard.html":{},"entities/SettingsEntity.html":{},"classes/SortUserDto.html":{},"entities/TenantEntity.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["roles(roleenum.admin",{"_index":4518,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles.length",{"_index":3393,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.map(string).includes(string(request.user?.role?.id",{"_index":3395,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles/domain/role",{"_index":4326,"title":{},"body":{"classes/User.html":{},"classes/UserMapper.html":{},"injectables/UsersService.html":{}}}],["roles/dto/role.dto",{"_index":1743,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["roles/infrastructure/persistence/document/entities/role.schema",{"_index":4363,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{}}}],["roles/infrastructure/persistence/relational/entities/role.entity",{"_index":311,"title":{},"body":{"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{},"injectables/UserSeedService-1.html":{}}}],["roles/roles.decorator",{"_index":4515,"title":{},"body":{"controllers/UsersController.html":{}}}],["roles/roles.enum",{"_index":1301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roles/roles.guard",{"_index":4517,"title":{},"body":{"controllers/UsersController.html":{}}}],["roleschema",{"_index":3348,"title":{"classes/RoleSchema.html":{}},"body":{"classes/RoleSchema.html":{},"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{}}}],["roleseedmodule",{"_index":3352,"title":{"modules/RoleSeedModule.html":{}},"body":{"modules/RoleSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["roleseedservice",{"_index":3356,"title":{"injectables/RoleSeedService.html":{}},"body":{"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"overview.html":{}}}],["rolesguard",{"_index":3380,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/UsersController.html":{}}}],["rolestoseed",{"_index":3361,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["root",{"_index":2262,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["rounded",{"_index":3662,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["routeoptimizationenabled",{"_index":3674,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["routing",{"_index":786,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["rule",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":316,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":5594,"title":{},"body":{"changelog.html":{}}}],["runseed",{"_index":5904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":3323,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{},"changelog.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":3325,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["s3",{"_index":2195,"title":{},"body":{"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["s3_presigned",{"_index":5707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["s3client",{"_index":2192,"title":{},"body":{"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["safeguard",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["safety",{"_index":451,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["salaries",{"_index":465,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["sales",{"_index":429,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["salt",{"_index":4465,"title":{},"body":{"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{}}}],["sandbox",{"_index":3630,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["scale",{"_index":2912,"title":{},"body":{"entities/RegionEntity.html":{}}}],["scaling",{"_index":783,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":1766,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/FileSchemaClass.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{}}}],["schemafactory",{"_index":2173,"title":{},"body":{"classes/FileSchemaClass.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["schemafactory.createforclass",{"_index":2682,"title":{},"body":{"classes/KycDetailsSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(fileschemaclass",{"_index":2179,"title":{},"body":{"classes/FileSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(sessionschemaclass",{"_index":3529,"title":{},"body":{"classes/SessionSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(userschemaclass",{"_index":4454,"title":{},"body":{"classes/UserSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["schemaname",{"_index":829,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateTenantDto.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantsService.html":{}}}],["script",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["sdk",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["sdk/client",{"_index":2194,"title":{},"body":{"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"changelog.html":{},"dependencies.html":{}}}],["sdk/s3",{"_index":2197,"title":{},"body":{"classes/FileType.html":{},"injectables/FilesS3PresignedService.html":{},"dependencies.html":{}}}],["secondarycolor",{"_index":3660,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["secret",{"_index":1351,"title":{},"body":{"injectables/AuthService.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"entities/SettingsEntity.html":{},"miscellaneous/variables.html":{}}}],["secret_access_key",{"_index":2030,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["secretaccesskey",{"_index":2045,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{},"classes/FileType.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["secretkey",{"_index":3644,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["secretorkey",{"_index":2462,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["section",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":2088,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{},"injectables/MailerService.html":{},"entities/SettingsEntity.html":{}}}],["security",{"_index":773,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["seed",{"_index":3009,"title":{},"body":{"injectables/RegionSeedService.html":{},"changelog.html":{}}}],["seed.module",{"_index":3402,"title":{},"body":{"modules/SeedModule.html":{}}}],["seed.module.ts",{"_index":306,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/RegionSeedModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/RoleSeedModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/UserSeedModule.html":{}}}],["seed.service",{"_index":308,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/RegionSeedModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/RoleSeedModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/UserSeedModule.html":{}}}],["seed.service.ts",{"_index":314,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["seed.service.ts:10",{"_index":4081,"title":{},"body":{"injectables/TenantTypesSeedService.html":{},"injectables/UserSeedService.html":{}}}],["seed.service.ts:108",{"_index":3762,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["seed.service.ts:13",{"_index":2488,"title":{},"body":{"injectables/KycDetailSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["seed.service.ts:14",{"_index":3229,"title":{},"body":{"injectables/ResidenceSeedService.html":{},"injectables/StatusSeedService.html":{}}}],["seed.service.ts:16",{"_index":320,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/UserSeedService.html":{}}}],["seed.service.ts:17",{"_index":3360,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["seed.service.ts:18",{"_index":2997,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["seed.service.ts:23",{"_index":2490,"title":{},"body":{"injectables/KycDetailSeedService.html":{},"injectables/SettingsSeedService.html":{}}}],["seed.service.ts:25",{"_index":4481,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["seed.service.ts:28",{"_index":3763,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["seed.service.ts:29",{"_index":321,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["seed.service.ts:39",{"_index":2996,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["seed.service.ts:41",{"_index":4480,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["seed.service.ts:62",{"_index":3764,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["seed.service.ts:66",{"_index":4478,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["seed.service.ts:8",{"_index":3837,"title":{},"body":{"injectables/StatusSeedService.html":{},"injectables/TenantSeedService.html":{}}}],["seed.service.ts:87",{"_index":3761,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["seed.service.ts:9",{"_index":2994,"title":{},"body":{"injectables/RegionSeedService.html":{},"injectables/RoleSeedService.html":{}}}],["seed.ts",{"_index":5906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seeded",{"_index":493,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["seeding",{"_index":3002,"title":{},"body":{"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{},"index.html":{}}}],["seedmodule",{"_index":3396,"title":{"modules/SeedModule.html":{}},"body":{"modules/SeedModule.html":{},"modules.html":{},"overview.html":{}}}],["seedtenantsettings",{"_index":3758,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["seedusersettings",{"_index":3759,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["seek",{"_index":5772,"title":{},"body":{"index.html":{}}}],["select",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["selectfile",{"_index":2295,"title":{},"body":{"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{}}}],["selection",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":5808,"title":{},"body":{"license.html":{}}}],["senderid",{"_index":3648,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["sendmail",{"_index":2825,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmail(undefined",{"_index":2827,"title":{},"body":{"injectables/MailerService.html":{}}}],["sensitive",{"_index":5620,"title":{},"body":{"changelog.html":{}}}],["separated",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["sergeilomako",{"_index":5768,"title":{},"body":{"index.html":{}}}],["serial",{"_index":1699,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["serializeoptions",{"_index":965,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"controllers/UsersController.html":{}}}],["serializeoptions({groups",{"_index":1055,"title":{},"body":{"controllers/AuthController.html":{}}}],["service",{"_index":435,"title":{},"body":{"injectables/AccountSeedService.html":{},"controllers/AuthController.html":{},"classes/CreateRegionDto.html":{},"controllers/HomeController.html":{},"classes/Region.html":{},"index.html":{}}}],["serviceareas",{"_index":3611,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["services",{"_index":371,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["servicetypes",{"_index":726,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateRegionDto.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{}}}],["session",{"_index":1302,"title":{"classes/Session.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUser1715028537217.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["session.hash",{"_index":1404,"title":{},"body":{"injectables/AuthService.html":{}}}],["session.id",{"_index":1328,"title":{},"body":{"injectables/AuthService.html":{}}}],["session.repository",{"_index":1789,"title":{},"body":{"modules/DocumentSessionPersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{}}}],["session.service",{"_index":3487,"title":{},"body":{"modules/SessionModule.html":{}}}],["session.user.id",{"_index":1409,"title":{},"body":{"injectables/AuthService.html":{}}}],["session/domain/session",{"_index":1303,"title":{},"body":{"injectables/AuthService.html":{}}}],["session/session.module",{"_index":912,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["session/session.service",{"_index":1304,"title":{},"body":{"injectables/AuthService.html":{}}}],["session['hash",{"_index":1415,"title":{},"body":{"injectables/AuthService.html":{}}}],["session['id",{"_index":1414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{}}}],["sessiondocumentrepository",{"_index":1790,"title":{"injectables/SessionDocumentRepository.html":{}},"body":{"modules/DocumentSessionPersistenceModule.html":{},"injectables/SessionDocumentRepository.html":{}}}],["sessionentity",{"_index":3103,"title":{"entities/SessionEntity.html":{}},"body":{"modules/RelationalSessionPersistenceModule.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{}}}],["sessionentity._id",{"_index":3471,"title":{},"body":{"classes/SessionMapper.html":{}}}],["sessionentity.createdat",{"_index":3474,"title":{},"body":{"classes/SessionMapper.html":{}}}],["sessionentity.deletedat",{"_index":3476,"title":{},"body":{"classes/SessionMapper.html":{}}}],["sessionentity.hash",{"_index":3473,"title":{},"body":{"classes/SessionMapper.html":{}}}],["sessionentity.updatedat",{"_index":3475,"title":{},"body":{"classes/SessionMapper.html":{}}}],["sessionentity.user",{"_index":3472,"title":{},"body":{"classes/SessionMapper.html":{}}}],["sessionid",{"_index":1118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["sessionmapper",{"_index":3428,"title":{"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{}},"body":{"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{}}}],["sessionmapper.todomain(entity",{"_index":3503,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["sessionmapper.todomain(session",{"_index":3444,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["sessionmapper.todomain(sessionobject",{"_index":3433,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["sessionmapper.todomain(updatedentity",{"_index":3508,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["sessionmapper.topersistence",{"_index":3443,"title":{},"body":{"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{}}}],["sessionmapper.topersistence(data",{"_index":3434,"title":{},"body":{"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{}}}],["sessionmodel",{"_index":3417,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["sessionmodule",{"_index":867,"title":{"modules/SessionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionobject",{"_index":3431,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["sessionrelationalrepository",{"_index":3102,"title":{"injectables/SessionRelationalRepository.html":{}},"body":{"modules/RelationalSessionPersistenceModule.html":{},"injectables/SessionRelationalRepository.html":{}}}],["sessionrepository",{"_index":1784,"title":{"classes/SessionRepository.html":{}},"body":{"modules/DocumentSessionPersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"overview.html":{}}}],["sessionschema",{"_index":1786,"title":{},"body":{"modules/DocumentSessionPersistenceModule.html":{},"classes/SessionSchemaClass.html":{},"miscellaneous/variables.html":{}}}],["sessionschema.index",{"_index":3530,"title":{},"body":{"classes/SessionSchemaClass.html":{}}}],["sessionschemaclass",{"_index":1787,"title":{"classes/SessionSchemaClass.html":{}},"body":{"modules/DocumentSessionPersistenceModule.html":{},"injectables/SessionDocumentRepository.html":{},"classes/SessionMapper.html":{},"classes/SessionSchemaClass.html":{}}}],["sessionschemaclass.name",{"_index":1792,"title":{},"body":{"modules/DocumentSessionPersistenceModule.html":{}}}],["sessionschemadocument",{"_index":3527,"title":{},"body":{"classes/SessionSchemaClass.html":{},"miscellaneous/typealiases.html":{}}}],["sessionservice",{"_index":1251,"title":{"injectables/SessionService.html":{}},"body":{"injectables/AuthService.html":{},"modules/SessionModule.html":{},"injectables/SessionService.html":{},"overview.html":{}}}],["setentityname",{"_index":1817,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["setmetadata('roles",{"_index":5923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":793,"title":{"classes/Settings.html":{}},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsService.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UsersService.html":{}}}],["settings.controller",{"_index":3718,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.dto",{"_index":3573,"title":{},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UpdateSettingsDto.html":{}}}],["settings.dto.ts",{"_index":1634,"title":{},"body":{"classes/CreateSettingsDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/UpdateSettingsDto.html":{}}}],["settings.dto.ts:10",{"_index":2410,"title":{},"body":{"classes/FindAllSettingsDto.html":{}}}],["settings.dto.ts:16",{"_index":2409,"title":{},"body":{"classes/FindAllSettingsDto.html":{}}}],["settings.dto.ts:31",{"_index":1635,"title":{},"body":{"classes/CreateSettingsDto.html":{}}}],["settings.dto.ts:39",{"_index":1636,"title":{},"body":{"classes/CreateSettingsDto.html":{}}}],["settings.dto.ts:47",{"_index":1637,"title":{},"body":{"classes/CreateSettingsDto.html":{}}}],["settings.dto.ts:56",{"_index":1638,"title":{},"body":{"classes/CreateSettingsDto.html":{}}}],["settings.dto.ts:65",{"_index":1639,"title":{},"body":{"classes/CreateSettingsDto.html":{}}}],["settings.repository",{"_index":3111,"title":{},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"injectables/SettingsRelationalRepository.html":{}}}],["settings.service",{"_index":3572,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settings/domain/settings",{"_index":3860,"title":{},"body":{"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["settings/dto/settings.dto",{"_index":1667,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{}}}],["settings/infrastructure/persistence/relational/entities/settings.entity",{"_index":3755,"title":{},"body":{"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["settings/infrastructure/persistence/relational/mappers/settings.mapper",{"_index":3899,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["settings/settings.module",{"_index":932,"title":{},"body":{"modules/AppModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{}}}],["settings/settings.service",{"_index":4160,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["settings['id",{"_index":3736,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{}}}],["settings_settingstype_enum",{"_index":1611,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["settings_settingstype_enum_old",{"_index":1601,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["settingsconfig",{"_index":3547,"title":{},"body":{"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{}}}],["settingscontroller",{"_index":3562,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settingsdto",{"_index":1661,"title":{"classes/SettingsDto.html":{}},"body":{"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/SettingsDto.html":{}}}],["settingsentity",{"_index":3114,"title":{"entities/SettingsEntity.html":{}},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["settingsmapper",{"_index":3703,"title":{"classes/SettingsMapper.html":{}},"body":{"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["settingsmapper.todomain(entity",{"_index":3735,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["settingsmapper.todomain(item",{"_index":3913,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["settingsmapper.todomain(newentity",{"_index":3733,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["settingsmapper.todomain(updatedentity",{"_index":3740,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["settingsmapper.topersistence",{"_index":3739,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["settingsmapper.topersistence(data",{"_index":3730,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["settingsmapper.topersistence(item",{"_index":3939,"title":{},"body":{"classes/TenantMapper.html":{},"classes/UserMapper-1.html":{}}}],["settingsmodule",{"_index":868,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsobjects",{"_index":4170,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["settingsobjects.length",{"_index":4173,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["settingsrelationalrepository",{"_index":3112,"title":{"injectables/SettingsRelationalRepository.html":{}},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"injectables/SettingsRelationalRepository.html":{}}}],["settingsrepository",{"_index":3109,"title":{"classes/SettingsRepository.html":{}},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["settingsseedmodule",{"_index":3749,"title":{"modules/SettingsSeedModule.html":{}},"body":{"modules/SettingsSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsseedservice",{"_index":3753,"title":{"injectables/SettingsSeedService.html":{}},"body":{"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"overview.html":{}}}],["settingsservice",{"_index":3571,"title":{"injectables/SettingsService.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["settingssubjecttype",{"_index":3553,"title":{},"body":{"classes/Settings.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"miscellaneous/enumerations.html":{}}}],["settingssubjecttype.tenant",{"_index":3771,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["settingssubjecttype.user",{"_index":3776,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["settingstype",{"_index":795,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateSettingsDto.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"miscellaneous/enumerations.html":{}}}],["settingstype\"::\"text\"::\"public\".\"settings_settingstype_enum",{"_index":1603,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["settingstype\"::\"text\"::\"public\".\"settings_settingstype_enum_old",{"_index":1610,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["settingstype.preferences",{"_index":3778,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["settingstype.system",{"_index":3775,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["sh",{"_index":5637,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":5816,"title":{},"body":{"license.html":{}}}],["shchepotin",{"_index":5767,"title":{},"body":{"index.html":{}}}],["shortcode",{"_index":3624,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["shrinkage",{"_index":459,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["sign",{"_index":5757,"title":{},"body":{"index.html":{}}}],["signedurl",{"_index":2355,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["signin",{"_index":1012,"title":{},"body":{"injectables/AuthAppleService.html":{},"changelog.html":{},"dependencies.html":{}}}],["simplify",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":4263,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":259,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["skip((paginationoptions.page",{"_index":2574,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{},"injectables/UsersDocumentRepository.html":{}}}],["skipping",{"_index":3001,"title":{},"body":{"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["small",{"_index":386,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["sms",{"_index":1483,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["smsapi",{"_index":3647,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["smtphost",{"_index":3654,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["smtpport",{"_index":3655,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["social",{"_index":5639,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["social/interfaces/social.interface",{"_index":1014,"title":{},"body":{"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{}}}],["socialdata",{"_index":981,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{},"injectables/AuthService.html":{}}}],["socialdata.email?.tolowercase",{"_index":1330,"title":{},"body":{"injectables/AuthService.html":{}}}],["socialdata.firstname",{"_index":1342,"title":{},"body":{"injectables/AuthService.html":{}}}],["socialdata.id",{"_index":1333,"title":{},"body":{"injectables/AuthService.html":{}}}],["socialdata.lastname",{"_index":1343,"title":{},"body":{"injectables/AuthService.html":{}}}],["socialemail",{"_index":1329,"title":{},"body":{"injectables/AuthService.html":{}}}],["socialid",{"_index":1335,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["socialinterface",{"_index":1013,"title":{"interfaces/SocialInterface.html":{}},"body":{"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"interfaces/SocialInterface.html":{}}}],["softdelete",{"_index":1246,"title":{},"body":{"injectables/AuthService.html":{}}}],["softdelete(user",{"_index":1276,"title":{},"body":{"injectables/AuthService.html":{}}}],["software",{"_index":5796,"title":{},"body":{"license.html":{}}}],["sold",{"_index":456,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["sort",{"_index":2386,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["sort.order",{"_index":4595,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["sort.order.touppercase",{"_index":4559,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["sort.orderby",{"_index":4558,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["sorted",{"_index":430,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["sorting",{"_index":361,"title":{},"body":{"injectables/AccountSeedService.html":{},"changelog.html":{}}}],["sortoptions",{"_index":4437,"title":{},"body":{"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["sortoptions?.reduce",{"_index":4556,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["sortuserdto",{"_index":2376,"title":{"classes/SortUserDto.html":{}},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"injectables/AnonymousStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"modules/AuthModule.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"controllers/HomeController.html":{},"modules/HomeModule.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"modules/RegionsModule.html":{},"injectables/RegionsService.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"modules/ResidencesModule.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"modules/SessionModule.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"modules/SettingsModule.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateAccountDto.html":{},"classes/UpdateKycDetailsDto.html":{},"classes/UpdateRegionDto.html":{},"classes/UpdateResidenceDto.html":{},"classes/UpdateSettingsDto.html":{},"classes/UpdateTenantDto.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{}}}],["source.ts",{"_index":5892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":5627,"title":{},"body":{"changelog.html":{}}}],["spatialfeaturetype",{"_index":2905,"title":{},"body":{"entities/RegionEntity.html":{}}}],["special",{"_index":3595,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["specialized",{"_index":353,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["specialservices",{"_index":3617,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["specific",{"_index":3596,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["split",{"_index":2285,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["spoilage",{"_index":462,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["square",{"_index":3663,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src",{"_index":2798,"title":{},"body":{"injectables/MailService.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["src/.../account",{"_index":5691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app",{"_index":5855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../app.config.ts",{"_index":5695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.module.ts",{"_index":5897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../apple",{"_index":5856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth",{"_index":5693,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../config.type.ts",{"_index":5854,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../data",{"_index":5891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database",{"_index":5857,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../deep",{"_index":5715,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../facebook",{"_index":5859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../file",{"_index":5696,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../file.schema.ts",{"_index":5860,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../files.module.ts",{"_index":5898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google",{"_index":5861,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../infinity",{"_index":5719,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../jwt",{"_index":5862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../kyc",{"_index":5698,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../lower",{"_index":5901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mail",{"_index":5864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":5714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../maybe.type.ts",{"_index":5865,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../nullable.type.ts",{"_index":5866,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../or",{"_index":5867,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../residence",{"_index":5699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.ts",{"_index":5893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":5903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enum.ts",{"_index":5700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../run",{"_index":5905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../session.module.ts",{"_index":5899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../session.schema.ts",{"_index":5869,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../settings.entity.ts",{"_index":5701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status.ts",{"_index":5894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statuses.enum.ts",{"_index":5702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tenant",{"_index":5703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.schema.ts",{"_index":5870,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.ts",{"_index":5895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":5900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validate",{"_index":5720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../validation",{"_index":5718,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/accounts/accounts.controller.ts",{"_index":498,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:105",{"_index":514,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:45",{"_index":503,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:53",{"_index":508,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:82",{"_index":512,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.controller.ts:95",{"_index":517,"title":{},"body":{"controllers/AccountsController.html":{}}}],["src/accounts/accounts.module.ts",{"_index":577,"title":{},"body":{"modules/AccountsModule.html":{}}}],["src/accounts/accounts.service.ts",{"_index":585,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/accounts.service.ts:107",{"_index":595,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/accounts.service.ts:111",{"_index":596,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/accounts.service.ts:115",{"_index":598,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/accounts.service.ts:187",{"_index":597,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/accounts.service.ts:20",{"_index":590,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/accounts.service.ts:30",{"_index":592,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/accounts.service.ts:94",{"_index":594,"title":{},"body":{"injectables/AccountsService.html":{}}}],["src/accounts/domain/account.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:101",{"_index":61,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:16",{"_index":57,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:22",{"_index":55,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:30",{"_index":60,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:36",{"_index":32,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:42",{"_index":37,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:51",{"_index":49,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:60",{"_index":52,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:66",{"_index":56,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:72",{"_index":33,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:78",{"_index":53,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:84",{"_index":41,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:90",{"_index":43,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:95",{"_index":42,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/domain/account.ts:98",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["src/accounts/dto/account.dto.ts",{"_index":80,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/account.dto.ts:8",{"_index":82,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/accounts/dto/create",{"_index":1444,"title":{},"body":{"classes/CreateAccountDto.html":{}}}],["src/accounts/dto/find",{"_index":2387,"title":{},"body":{"classes/FindAllAccountsDto.html":{}}}],["src/accounts/dto/update",{"_index":4272,"title":{},"body":{"classes/UpdateAccountDto.html":{}}}],["src/accounts/infrastructure/persistence/account.repository.ts",{"_index":277,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/accounts/infrastructure/persistence/account.repository.ts:11",{"_index":281,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/accounts/infrastructure/persistence/account.repository.ts:17",{"_index":282,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/accounts/infrastructure/persistence/account.repository.ts:19",{"_index":283,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/accounts/infrastructure/persistence/account.repository.ts:21",{"_index":286,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/accounts/infrastructure/persistence/account.repository.ts:26",{"_index":284,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/accounts/infrastructure/persistence/account.repository.ts:7",{"_index":280,"title":{},"body":{"classes/AccountRepository.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts",{"_index":88,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:100",{"_index":94,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:103",{"_index":114,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:27",{"_index":111,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:31",{"_index":107,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:38",{"_index":112,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:44",{"_index":90,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:50",{"_index":92,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:57",{"_index":100,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:64",{"_index":101,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:70",{"_index":108,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:76",{"_index":91,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:82",{"_index":102,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:88",{"_index":95,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:94",{"_index":98,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:97",{"_index":97,"title":{},"body":{"entities/AccountEntity.html":{}}}],["src/accounts/infrastructure/persistence/relational/mappers/account.mapper.ts",{"_index":128,"title":{},"body":{"classes/AccountMapper.html":{}}}],["src/accounts/infrastructure/persistence/relational/mappers/account.mapper.ts:48",{"_index":139,"title":{},"body":{"classes/AccountMapper.html":{}}}],["src/accounts/infrastructure/persistence/relational/mappers/account.mapper.ts:9",{"_index":134,"title":{},"body":{"classes/AccountMapper.html":{}}}],["src/accounts/infrastructure/persistence/relational/relational",{"_index":3073,"title":{},"body":{"modules/RelationalAccountPersistenceModule.html":{}}}],["src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts",{"_index":205,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:12",{"_index":216,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:18",{"_index":219,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:26",{"_index":224,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:39",{"_index":226,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:47",{"_index":228,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:55",{"_index":235,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:76",{"_index":231,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["src/app.module.ts",{"_index":870,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["src/auth",{"_index":954,"title":{},"body":{"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"modules/AuthAppleModule.html":{},"injectables/AuthAppleService.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"modules/AuthFacebookModule.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"modules/AuthGoogleModule.html":{},"injectables/AuthGoogleService.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"interfaces/FacebookInterface.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/auth",{"_index":5705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/auth.controller.ts",{"_index":1031,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:111",{"_index":1071,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:122",{"_index":1061,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:138",{"_index":1086,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:149",{"_index":1048,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:44",{"_index":1058,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":1075,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:56",{"_index":1041,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:64",{"_index":1045,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":1052,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:80",{"_index":1080,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:97",{"_index":1066,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":1220,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":1243,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:112",{"_index":1283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:198",{"_index":1272,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:233",{"_index":1255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:274",{"_index":1257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:316",{"_index":1259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:34",{"_index":1253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:355",{"_index":1275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:397",{"_index":1267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:401",{"_index":1279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":1281,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:498",{"_index":1270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:542",{"_index":1277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:546",{"_index":1264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:550",{"_index":1261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/config/auth",{"_index":5874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/auth/config/auth.config.ts",{"_index":1893,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/config/auth.config.ts:10",{"_index":1906,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/config/auth.config.ts:13",{"_index":1907,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/config/auth.config.ts:16",{"_index":1908,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/config/auth.config.ts:19",{"_index":1909,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/config/auth.config.ts:22",{"_index":1904,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/config/auth.config.ts:25",{"_index":1905,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/config/auth.config.ts:28",{"_index":1902,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/config/auth.config.ts:31",{"_index":1903,"title":{},"body":{"classes/EnvironmentVariablesValidator-1.html":{}}}],["src/auth/dto/auth",{"_index":1024,"title":{},"body":{"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/AuthUpdateDto.html":{}}}],["src/auth/dto/login",{"_index":2748,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["src/auth/dto/refresh",{"_index":2883,"title":{},"body":{"classes/RefreshResponseDto.html":{}}}],["src/auth/strategies/anonymous.strategy.ts",{"_index":841,"title":{},"body":{"injectables/AnonymousStrategy.html":{}}}],["src/auth/strategies/anonymous.strategy.ts:11",{"_index":847,"title":{},"body":{"injectables/AnonymousStrategy.html":{}}}],["src/auth/strategies/anonymous.strategy.ts:6",{"_index":844,"title":{},"body":{"injectables/AnonymousStrategy.html":{}}}],["src/auth/strategies/jwt",{"_index":2450,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":2465,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:10",{"_index":2466,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:20",{"_index":2467,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/types/jwt",{"_index":5879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/config/app",{"_index":5872,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/config/app.config.ts",{"_index":1829,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/enumerations.html":{}}}],["src/config/app.config.ts:23",{"_index":1849,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:29",{"_index":1842,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:33",{"_index":1846,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:37",{"_index":1845,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:41",{"_index":1838,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:45",{"_index":1839,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/app.config.ts:49",{"_index":1840,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/config.type.ts",{"_index":5871,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/database/config/database",{"_index":5875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/database/config/database.config.ts",{"_index":1957,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:18",{"_index":1989,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:22",{"_index":1987,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:26",{"_index":1975,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:32",{"_index":1982,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:36",{"_index":1980,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:40",{"_index":1979,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:44",{"_index":1990,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:48",{"_index":1986,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:52",{"_index":1978,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:56",{"_index":1985,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:60",{"_index":1984,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:64",{"_index":1972,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:68",{"_index":1976,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/config/database.config.ts:72",{"_index":1973,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["src/database/data",{"_index":5913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/migrations/1715028537217",{"_index":1691,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["src/database/migrations/1745086820741",{"_index":1673,"title":{},"body":{"classes/CreateTenantTable1745086820741.html":{}}}],["src/database/migrations/1745132189825",{"_index":1746,"title":{},"body":{"classes/CreateUserTenantRelationship1745132189825.html":{}}}],["src/database/migrations/1745134929693",{"_index":651,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["src/database/migrations/1745138722127",{"_index":700,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{}}}],["src/database/migrations/1745143148021",{"_index":800,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["src/database/migrations/1745147786203",{"_index":747,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{}}}],["src/database/migrations/1745152940566",{"_index":716,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["src/database/migrations/1745163536016",{"_index":2723,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["src/database/migrations/1747295167463",{"_index":1580,"title":{},"body":{"classes/CreateResidence1747295167463.html":{}}}],["src/database/migrations/1747393574185",{"_index":1474,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{}}}],["src/database/mongoose",{"_index":2858,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/database/seeds/document/run",{"_index":5924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/seeds/document/seed.module.ts",{"_index":3400,"title":{},"body":{"modules/SeedModule.html":{}}}],["src/database/seeds/document/user/user",{"_index":4460,"title":{},"body":{"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{}}}],["src/database/seeds/relational/account/account",{"_index":305,"title":{},"body":{"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{}}}],["src/database/seeds/relational/kyc",{"_index":2479,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{}}}],["src/database/seeds/relational/region/region",{"_index":2990,"title":{},"body":{"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{}}}],["src/database/seeds/relational/residence/residence",{"_index":3227,"title":{},"body":{"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{}}}],["src/database/seeds/relational/role/role",{"_index":3357,"title":{},"body":{"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{}}}],["src/database/seeds/relational/run",{"_index":5928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/seeds/relational/settings/settings",{"_index":3754,"title":{},"body":{"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{}}}],["src/database/seeds/relational/status/status",{"_index":3834,"title":{},"body":{"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{}}}],["src/database/seeds/relational/tenant",{"_index":4080,"title":{},"body":{"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{}}}],["src/database/seeds/relational/tenant/tenant",{"_index":3985,"title":{},"body":{"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{}}}],["src/database/seeds/relational/user/user",{"_index":4473,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["src/database/typeorm",{"_index":4236,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["src/files/config/file",{"_index":5706,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/files/config/file.config.ts",{"_index":2025,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["src/files/config/file.config.ts:15",{"_index":2031,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["src/files/config/file.config.ts:21",{"_index":2037,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["src/files/config/file.config.ts:27",{"_index":2032,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["src/files/config/file.config.ts:33",{"_index":2033,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["src/files/config/file.config.ts:9",{"_index":2036,"title":{},"body":{"classes/EnvironmentVariablesValidator-6.html":{}}}],["src/files/domain/file.ts",{"_index":2180,"title":{},"body":{"classes/FileType.html":{}}}],["src/files/domain/file.ts:18",{"_index":2186,"title":{},"body":{"classes/FileType.html":{}}}],["src/files/domain/file.ts:55",{"_index":2188,"title":{},"body":{"classes/FileType.html":{}}}],["src/files/dto/file.dto.ts",{"_index":2122,"title":{},"body":{"classes/FileDto.html":{}}}],["src/files/dto/file.dto.ts:10",{"_index":2124,"title":{},"body":{"classes/FileDto.html":{}}}],["src/files/dto/file.dto.ts:8",{"_index":2123,"title":{},"body":{"classes/FileDto.html":{}}}],["src/files/files.module.ts",{"_index":2302,"title":{},"body":{"modules/FilesModule.html":{},"miscellaneous/variables.html":{}}}],["src/files/files.service.ts",{"_index":2361,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:11",{"_index":2363,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":2364,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:8",{"_index":2362,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/infrastructure/persistence/document/document",{"_index":1756,"title":{},"body":{"modules/DocumentFilePersistenceModule.html":{}}}],["src/files/infrastructure/persistence/document/entities/file.schema.ts",{"_index":2170,"title":{},"body":{"classes/FileSchemaClass.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/files/infrastructure/persistence/document/entities/file.schema.ts:15",{"_index":2172,"title":{},"body":{"classes/FileSchemaClass.html":{}}}],["src/files/infrastructure/persistence/document/mappers/file.mapper.ts",{"_index":2129,"title":{},"body":{"classes/FileMapper.html":{}}}],["src/files/infrastructure/persistence/document/mappers/file.mapper.ts:11",{"_index":2131,"title":{},"body":{"classes/FileMapper.html":{}}}],["src/files/infrastructure/persistence/document/mappers/file.mapper.ts:5",{"_index":2130,"title":{},"body":{"classes/FileMapper.html":{}}}],["src/files/infrastructure/persistence/document/repositories/file.repository.ts",{"_index":2097,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["src/files/infrastructure/persistence/document/repositories/file.repository.ts:13",{"_index":2100,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["src/files/infrastructure/persistence/document/repositories/file.repository.ts:19",{"_index":2102,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["src/files/infrastructure/persistence/document/repositories/file.repository.ts:25",{"_index":2104,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["src/files/infrastructure/persistence/document/repositories/file.repository.ts:30",{"_index":2105,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["src/files/infrastructure/persistence/file.repository.ts",{"_index":2157,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/files/infrastructure/persistence/file.repository.ts:5",{"_index":2158,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/files/infrastructure/persistence/file.repository.ts:7",{"_index":2159,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/files/infrastructure/persistence/file.repository.ts:9",{"_index":2160,"title":{},"body":{"classes/FileRepository.html":{}}}],["src/files/infrastructure/persistence/relational/entities/file.entity.ts",{"_index":2126,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/files/infrastructure/persistence/relational/entities/file.entity.ts:12",{"_index":2127,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/files/infrastructure/persistence/relational/entities/file.entity.ts:15",{"_index":2128,"title":{},"body":{"entities/FileEntity.html":{}}}],["src/files/infrastructure/persistence/relational/mappers/file.mapper.ts",{"_index":2138,"title":{},"body":{"classes/FileMapper-1.html":{}}}],["src/files/infrastructure/persistence/relational/mappers/file.mapper.ts:12",{"_index":2140,"title":{},"body":{"classes/FileMapper-1.html":{}}}],["src/files/infrastructure/persistence/relational/mappers/file.mapper.ts:5",{"_index":2139,"title":{},"body":{"classes/FileMapper-1.html":{}}}],["src/files/infrastructure/persistence/relational/relational",{"_index":3078,"title":{},"body":{"modules/RelationalFilePersistenceModule.html":{}}}],["src/files/infrastructure/persistence/relational/repositories/file.repository.ts",{"_index":2144,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["src/files/infrastructure/persistence/relational/repositories/file.repository.ts:12",{"_index":2146,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["src/files/infrastructure/persistence/relational/repositories/file.repository.ts:18",{"_index":2147,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["src/files/infrastructure/persistence/relational/repositories/file.repository.ts:25",{"_index":2148,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["src/files/infrastructure/persistence/relational/repositories/file.repository.ts:35",{"_index":2149,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["src/files/infrastructure/uploader/local/dto/file",{"_index":2162,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["src/files/infrastructure/uploader/local/files.controller.ts",{"_index":2226,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["src/files/infrastructure/uploader/local/files.controller.ts:51",{"_index":2238,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["src/files/infrastructure/uploader/local/files.controller.ts:59",{"_index":2231,"title":{},"body":{"controllers/FilesLocalController.html":{}}}],["src/files/infrastructure/uploader/local/files.module.ts",{"_index":2267,"title":{},"body":{"modules/FilesLocalModule.html":{},"miscellaneous/variables.html":{}}}],["src/files/infrastructure/uploader/local/files.service.ts",{"_index":2290,"title":{},"body":{"injectables/FilesLocalService.html":{}}}],["src/files/infrastructure/uploader/local/files.service.ts:13",{"_index":2291,"title":{},"body":{"injectables/FilesLocalService.html":{}}}],["src/files/infrastructure/uploader/local/files.service.ts:19",{"_index":2293,"title":{},"body":{"injectables/FilesLocalService.html":{}}}],["src/files/infrastructure/uploader/s3",{"_index":2166,"title":{},"body":{"classes/FileResponseDto-2.html":{},"classes/FileUploadDto.html":{},"controllers/FilesS3PresignedController.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"miscellaneous/variables.html":{}}}],["src/files/infrastructure/uploader/s3/dto/file",{"_index":2165,"title":{},"body":{"classes/FileResponseDto-1.html":{}}}],["src/files/infrastructure/uploader/s3/files.controller.ts",{"_index":2312,"title":{},"body":{"controllers/FilesS3Controller.html":{}}}],["src/files/infrastructure/uploader/s3/files.controller.ts:47",{"_index":2314,"title":{},"body":{"controllers/FilesS3Controller.html":{}}}],["src/files/infrastructure/uploader/s3/files.module.ts",{"_index":2319,"title":{},"body":{"modules/FilesS3Module.html":{},"miscellaneous/variables.html":{}}}],["src/files/infrastructure/uploader/s3/files.service.ts",{"_index":2357,"title":{},"body":{"injectables/FilesS3Service.html":{}}}],["src/files/infrastructure/uploader/s3/files.service.ts:10",{"_index":2358,"title":{},"body":{"injectables/FilesS3Service.html":{}}}],["src/files/infrastructure/uploader/s3/files.service.ts:13",{"_index":2359,"title":{},"body":{"injectables/FilesS3Service.html":{}}}],["src/home/home.controller.ts",{"_index":2422,"title":{},"body":{"controllers/HomeController.html":{}}}],["src/home/home.controller.ts:12",{"_index":2424,"title":{},"body":{"controllers/HomeController.html":{}}}],["src/home/home.module.ts",{"_index":2431,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/home/home.service.ts",{"_index":2433,"title":{},"body":{"injectables/HomeService.html":{}}}],["src/home/home.service.ts:6",{"_index":2434,"title":{},"body":{"injectables/HomeService.html":{}}}],["src/home/home.service.ts:9",{"_index":2435,"title":{},"body":{"injectables/HomeService.html":{}}}],["src/kyc",{"_index":1501,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"classes/FindAllKycDetailsDto.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"modules/KycDetailsModule.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"classes/UpdateKycDetailsDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/mail/config/mail",{"_index":5880,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/mail/config/mail.config.ts",{"_index":2055,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:20",{"_index":2070,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:23",{"_index":2067,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:27",{"_index":2073,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:31",{"_index":2069,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:34",{"_index":2065,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:37",{"_index":2066,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:40",{"_index":2068,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:43",{"_index":2072,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/config/mail.config.ts:46",{"_index":2071,"title":{},"body":{"classes/EnvironmentVariablesValidator-7.html":{}}}],["src/mail/interfaces/mail",{"_index":2753,"title":{},"body":{"interfaces/MailData.html":{}}}],["src/mail/mail.module.ts",{"_index":2759,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":2761,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:12",{"_index":2765,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:122",{"_index":2767,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:18",{"_index":2771,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:66",{"_index":2769,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mailer/mailer.module.ts",{"_index":2821,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/mailer/mailer.service.ts",{"_index":2823,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/mailer/mailer.service.ts:10",{"_index":2826,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/mailer/mailer.service.ts:25",{"_index":2828,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/main.ts",{"_index":5722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/regions/domain/region.ts",{"_index":2885,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:10",{"_index":2899,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:21",{"_index":2894,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:32",{"_index":2896,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:38",{"_index":2890,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:44",{"_index":2889,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:62",{"_index":2888,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:68",{"_index":2893,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:74",{"_index":2897,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:79",{"_index":2892,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:82",{"_index":2891,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/domain/region.ts:85",{"_index":2898,"title":{},"body":{"classes/Region.html":{}}}],["src/regions/dto/create",{"_index":1532,"title":{},"body":{"classes/CreateRegionDto.html":{}}}],["src/regions/dto/find",{"_index":2398,"title":{},"body":{"classes/FindAllRegionsDto.html":{}}}],["src/regions/dto/region.dto.ts",{"_index":2900,"title":{},"body":{"classes/RegionDto.html":{}}}],["src/regions/dto/region.dto.ts:8",{"_index":2901,"title":{},"body":{"classes/RegionDto.html":{}}}],["src/regions/dto/update",{"_index":4277,"title":{},"body":{"classes/UpdateRegionDto.html":{}}}],["src/regions/infrastructure/persistence/region.repository.ts",{"_index":2978,"title":{},"body":{"classes/RegionRepository.html":{}}}],["src/regions/infrastructure/persistence/region.repository.ts:11",{"_index":2980,"title":{},"body":{"classes/RegionRepository.html":{}}}],["src/regions/infrastructure/persistence/region.repository.ts:17",{"_index":2981,"title":{},"body":{"classes/RegionRepository.html":{}}}],["src/regions/infrastructure/persistence/region.repository.ts:19",{"_index":2982,"title":{},"body":{"classes/RegionRepository.html":{}}}],["src/regions/infrastructure/persistence/region.repository.ts:21",{"_index":2984,"title":{},"body":{"classes/RegionRepository.html":{}}}],["src/regions/infrastructure/persistence/region.repository.ts:26",{"_index":2983,"title":{},"body":{"classes/RegionRepository.html":{}}}],["src/regions/infrastructure/persistence/region.repository.ts:7",{"_index":2979,"title":{},"body":{"classes/RegionRepository.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts",{"_index":2903,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:20",{"_index":2925,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:23",{"_index":2918,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:30",{"_index":2919,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:33",{"_index":2913,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:36",{"_index":2914,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:44",{"_index":2908,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:50",{"_index":2917,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:56",{"_index":2921,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:59",{"_index":2924,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:62",{"_index":2916,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:65",{"_index":2915,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/entities/region.entity.ts:68",{"_index":2922,"title":{},"body":{"entities/RegionEntity.html":{}}}],["src/regions/infrastructure/persistence/relational/mappers/region.mapper.ts",{"_index":2928,"title":{},"body":{"classes/RegionMapper.html":{}}}],["src/regions/infrastructure/persistence/relational/mappers/region.mapper.ts:35",{"_index":2930,"title":{},"body":{"classes/RegionMapper.html":{}}}],["src/regions/infrastructure/persistence/relational/mappers/region.mapper.ts:8",{"_index":2929,"title":{},"body":{"classes/RegionMapper.html":{}}}],["src/regions/infrastructure/persistence/relational/relational",{"_index":3085,"title":{},"body":{"modules/RelationalRegionPersistenceModule.html":{}}}],["src/regions/infrastructure/persistence/relational/repositories/region.repository.ts",{"_index":2953,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:12",{"_index":2955,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:18",{"_index":2957,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:26",{"_index":2958,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:39",{"_index":2959,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:47",{"_index":2960,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:55",{"_index":2962,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:76",{"_index":2961,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["src/regions/regions.controller.ts",{"_index":3014,"title":{},"body":{"controllers/RegionsController.html":{}}}],["src/regions/regions.controller.ts:105",{"_index":3019,"title":{},"body":{"controllers/RegionsController.html":{}}}],["src/regions/regions.controller.ts:45",{"_index":3016,"title":{},"body":{"controllers/RegionsController.html":{}}}],["src/regions/regions.controller.ts:53",{"_index":3017,"title":{},"body":{"controllers/RegionsController.html":{}}}],["src/regions/regions.controller.ts:82",{"_index":3018,"title":{},"body":{"controllers/RegionsController.html":{}}}],["src/regions/regions.controller.ts:95",{"_index":3021,"title":{},"body":{"controllers/RegionsController.html":{}}}],["src/regions/regions.module.ts",{"_index":3038,"title":{},"body":{"modules/RegionsModule.html":{}}}],["src/regions/regions.service.ts",{"_index":3040,"title":{},"body":{"injectables/RegionsService.html":{}}}],["src/regions/regions.service.ts:133",{"_index":3046,"title":{},"body":{"injectables/RegionsService.html":{}}}],["src/regions/regions.service.ts:19",{"_index":3041,"title":{},"body":{"injectables/RegionsService.html":{}}}],["src/regions/regions.service.ts:28",{"_index":3042,"title":{},"body":{"injectables/RegionsService.html":{}}}],["src/regions/regions.service.ts:66",{"_index":3043,"title":{},"body":{"injectables/RegionsService.html":{}}}],["src/regions/regions.service.ts:79",{"_index":3044,"title":{},"body":{"injectables/RegionsService.html":{}}}],["src/regions/regions.service.ts:83",{"_index":3045,"title":{},"body":{"injectables/RegionsService.html":{}}}],["src/regions/regions.service.ts:87",{"_index":3047,"title":{},"body":{"injectables/RegionsService.html":{}}}],["src/residences/domain/residence.ts",{"_index":3144,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:13",{"_index":3153,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:19",{"_index":3150,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:25",{"_index":3151,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:31",{"_index":3152,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:37",{"_index":3148,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:43",{"_index":3145,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:49",{"_index":3149,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:54",{"_index":3147,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:57",{"_index":3146,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/domain/residence.ts:60",{"_index":3154,"title":{},"body":{"classes/Residence.html":{}}}],["src/residences/dto/create",{"_index":1615,"title":{},"body":{"classes/CreateResidenceDto.html":{}}}],["src/residences/dto/find",{"_index":2403,"title":{},"body":{"classes/FindAllResidencesDto.html":{}}}],["src/residences/dto/residence.dto.ts",{"_index":3157,"title":{},"body":{"classes/ResidenceDto.html":{}}}],["src/residences/dto/residence.dto.ts:8",{"_index":3158,"title":{},"body":{"classes/ResidenceDto.html":{}}}],["src/residences/dto/update",{"_index":4279,"title":{},"body":{"classes/UpdateResidenceDto.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts",{"_index":3159,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:29",{"_index":3168,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:33",{"_index":3165,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:36",{"_index":3166,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:39",{"_index":3167,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:45",{"_index":3163,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:51",{"_index":3160,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:57",{"_index":3164,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:60",{"_index":3162,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:63",{"_index":3161,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:66",{"_index":3169,"title":{},"body":{"entities/ResidenceEntity.html":{}}}],["src/residences/infrastructure/persistence/relational/mappers/residence.mapper.ts",{"_index":3172,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["src/residences/infrastructure/persistence/relational/mappers/residence.mapper.ts:12",{"_index":3173,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["src/residences/infrastructure/persistence/relational/mappers/residence.mapper.ts:45",{"_index":3174,"title":{},"body":{"classes/ResidenceMapper.html":{}}}],["src/residences/infrastructure/persistence/relational/relational",{"_index":3091,"title":{},"body":{"modules/RelationalResidencePersistenceModule.html":{}}}],["src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts",{"_index":3192,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:12",{"_index":3194,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:18",{"_index":3195,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:26",{"_index":3196,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:39",{"_index":3197,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:47",{"_index":3198,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:55",{"_index":3200,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:79",{"_index":3199,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["src/residences/infrastructure/persistence/residence.repository.ts",{"_index":3215,"title":{},"body":{"classes/ResidenceRepository.html":{}}}],["src/residences/infrastructure/persistence/residence.repository.ts:11",{"_index":3217,"title":{},"body":{"classes/ResidenceRepository.html":{}}}],["src/residences/infrastructure/persistence/residence.repository.ts:17",{"_index":3218,"title":{},"body":{"classes/ResidenceRepository.html":{}}}],["src/residences/infrastructure/persistence/residence.repository.ts:19",{"_index":3219,"title":{},"body":{"classes/ResidenceRepository.html":{}}}],["src/residences/infrastructure/persistence/residence.repository.ts:21",{"_index":3221,"title":{},"body":{"classes/ResidenceRepository.html":{}}}],["src/residences/infrastructure/persistence/residence.repository.ts:26",{"_index":3220,"title":{},"body":{"classes/ResidenceRepository.html":{}}}],["src/residences/infrastructure/persistence/residence.repository.ts:7",{"_index":3216,"title":{},"body":{"classes/ResidenceRepository.html":{}}}],["src/residences/residences.controller.ts",{"_index":3246,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["src/residences/residences.controller.ts:108",{"_index":3251,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["src/residences/residences.controller.ts:45",{"_index":3248,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["src/residences/residences.controller.ts:53",{"_index":3249,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["src/residences/residences.controller.ts:82",{"_index":3250,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["src/residences/residences.controller.ts:95",{"_index":3253,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["src/residences/residences.module.ts",{"_index":3270,"title":{},"body":{"modules/ResidencesModule.html":{}}}],["src/residences/residences.service.ts",{"_index":3272,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["src/residences/residences.service.ts:103",{"_index":3277,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["src/residences/residences.service.ts:116",{"_index":3278,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["src/residences/residences.service.ts:120",{"_index":3279,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["src/residences/residences.service.ts:124",{"_index":3281,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["src/residences/residences.service.ts:204",{"_index":3280,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["src/residences/residences.service.ts:23",{"_index":3275,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["src/residences/residences.service.ts:35",{"_index":3276,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["src/roles/domain/role.ts",{"_index":3331,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["src/roles/domain/role.ts:18",{"_index":3337,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/domain/role.ts:24",{"_index":3334,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/domain/role.ts:31",{"_index":3336,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/dto/role.dto.ts",{"_index":3339,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/roles/dto/role.dto.ts:7",{"_index":3341,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/roles/infrastructure/persistence/document/entities/role.schema.ts",{"_index":3349,"title":{},"body":{"classes/RoleSchema.html":{}}}],["src/roles/infrastructure/persistence/document/entities/role.schema.ts:2",{"_index":3350,"title":{},"body":{"classes/RoleSchema.html":{}}}],["src/roles/infrastructure/persistence/document/entities/role.schema.ts:4",{"_index":3351,"title":{},"body":{"classes/RoleSchema.html":{}}}],["src/roles/infrastructure/persistence/relational/entities/role.entity",{"_index":3894,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/roles/infrastructure/persistence/relational/entities/role.entity.ts",{"_index":3342,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/roles/infrastructure/persistence/relational/entities/role.entity.ts:11",{"_index":3344,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/roles/infrastructure/persistence/relational/entities/role.entity.ts:16",{"_index":3347,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/roles/infrastructure/persistence/relational/entities/role.entity.ts:19",{"_index":3345,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/roles/roles.decorator.ts",{"_index":5922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/roles/roles.enum.ts",{"_index":5710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/roles/roles.guard.ts",{"_index":3382,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.guard.ts:5",{"_index":3386,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.guard.ts:8",{"_index":3388,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/session/domain/session.ts",{"_index":3404,"title":{},"body":{"classes/Session.html":{}}}],["src/session/domain/session.ts:4",{"_index":3408,"title":{},"body":{"classes/Session.html":{}}}],["src/session/domain/session.ts:5",{"_index":3410,"title":{},"body":{"classes/Session.html":{}}}],["src/session/domain/session.ts:6",{"_index":3407,"title":{},"body":{"classes/Session.html":{}}}],["src/session/domain/session.ts:7",{"_index":3405,"title":{},"body":{"classes/Session.html":{}}}],["src/session/domain/session.ts:8",{"_index":3409,"title":{},"body":{"classes/Session.html":{}}}],["src/session/domain/session.ts:9",{"_index":3406,"title":{},"body":{"classes/Session.html":{}}}],["src/session/infrastructure/persistence/document/document",{"_index":1785,"title":{},"body":{"modules/DocumentSessionPersistenceModule.html":{}}}],["src/session/infrastructure/persistence/document/entities/session.schema.ts",{"_index":3519,"title":{},"body":{"classes/SessionSchemaClass.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/session/infrastructure/persistence/document/entities/session.schema.ts:17",{"_index":3526,"title":{},"body":{"classes/SessionSchemaClass.html":{}}}],["src/session/infrastructure/persistence/document/entities/session.schema.ts:20",{"_index":3522,"title":{},"body":{"classes/SessionSchemaClass.html":{}}}],["src/session/infrastructure/persistence/document/entities/session.schema.ts:23",{"_index":3520,"title":{},"body":{"classes/SessionSchemaClass.html":{}}}],["src/session/infrastructure/persistence/document/entities/session.schema.ts:26",{"_index":3523,"title":{},"body":{"classes/SessionSchemaClass.html":{}}}],["src/session/infrastructure/persistence/document/entities/session.schema.ts:29",{"_index":3521,"title":{},"body":{"classes/SessionSchemaClass.html":{}}}],["src/session/infrastructure/persistence/document/mappers/session.mapper.ts",{"_index":3461,"title":{},"body":{"classes/SessionMapper.html":{}}}],["src/session/infrastructure/persistence/document/mappers/session.mapper.ts:21",{"_index":3463,"title":{},"body":{"classes/SessionMapper.html":{}}}],["src/session/infrastructure/persistence/document/mappers/session.mapper.ts:7",{"_index":3462,"title":{},"body":{"classes/SessionMapper.html":{}}}],["src/session/infrastructure/persistence/document/repositories/session.repository.ts",{"_index":3411,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["src/session/infrastructure/persistence/document/repositories/session.repository.ts:12",{"_index":3416,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["src/session/infrastructure/persistence/document/repositories/session.repository.ts:18",{"_index":3425,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["src/session/infrastructure/persistence/document/repositories/session.repository.ts:23",{"_index":3418,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["src/session/infrastructure/persistence/document/repositories/session.repository.ts:30",{"_index":3426,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["src/session/infrastructure/persistence/document/repositories/session.repository.ts:59",{"_index":3420,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["src/session/infrastructure/persistence/document/repositories/session.repository.ts:63",{"_index":3422,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["src/session/infrastructure/persistence/document/repositories/session.repository.ts:67",{"_index":3424,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["src/session/infrastructure/persistence/relational/entities/session.entity.ts",{"_index":3452,"title":{},"body":{"entities/SessionEntity.html":{}}}],["src/session/infrastructure/persistence/relational/entities/session.entity.ts:20",{"_index":3457,"title":{},"body":{"entities/SessionEntity.html":{}}}],["src/session/infrastructure/persistence/relational/entities/session.entity.ts:26",{"_index":3460,"title":{},"body":{"entities/SessionEntity.html":{}}}],["src/session/infrastructure/persistence/relational/entities/session.entity.ts:29",{"_index":3456,"title":{},"body":{"entities/SessionEntity.html":{}}}],["src/session/infrastructure/persistence/relational/entities/session.entity.ts:32",{"_index":3453,"title":{},"body":{"entities/SessionEntity.html":{}}}],["src/session/infrastructure/persistence/relational/entities/session.entity.ts:35",{"_index":3458,"title":{},"body":{"entities/SessionEntity.html":{}}}],["src/session/infrastructure/persistence/relational/entities/session.entity.ts:38",{"_index":3455,"title":{},"body":{"entities/SessionEntity.html":{}}}],["src/session/infrastructure/persistence/relational/mappers/session.mapper.ts",{"_index":3477,"title":{},"body":{"classes/SessionMapper-1.html":{}}}],["src/session/infrastructure/persistence/relational/mappers/session.mapper.ts:20",{"_index":3479,"title":{},"body":{"classes/SessionMapper-1.html":{}}}],["src/session/infrastructure/persistence/relational/mappers/session.mapper.ts:7",{"_index":3478,"title":{},"body":{"classes/SessionMapper-1.html":{}}}],["src/session/infrastructure/persistence/relational/relational",{"_index":3101,"title":{},"body":{"modules/RelationalSessionPersistenceModule.html":{}}}],["src/session/infrastructure/persistence/relational/repositories/session.repository.ts",{"_index":3488,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["src/session/infrastructure/persistence/relational/repositories/session.repository.ts:14",{"_index":3490,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["src/session/infrastructure/persistence/relational/repositories/session.repository.ts:20",{"_index":3498,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["src/session/infrastructure/persistence/relational/repositories/session.repository.ts:30",{"_index":3491,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["src/session/infrastructure/persistence/relational/repositories/session.repository.ts:37",{"_index":3499,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["src/session/infrastructure/persistence/relational/repositories/session.repository.ts:63",{"_index":3492,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["src/session/infrastructure/persistence/relational/repositories/session.repository.ts:69",{"_index":3494,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["src/session/infrastructure/persistence/relational/repositories/session.repository.ts:77",{"_index":3497,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["src/session/infrastructure/persistence/session.repository.ts",{"_index":3512,"title":{},"body":{"classes/SessionRepository.html":{}}}],["src/session/infrastructure/persistence/session.repository.ts:12",{"_index":3518,"title":{},"body":{"classes/SessionRepository.html":{}}}],["src/session/infrastructure/persistence/session.repository.ts:19",{"_index":3514,"title":{},"body":{"classes/SessionRepository.html":{}}}],["src/session/infrastructure/persistence/session.repository.ts:21",{"_index":3515,"title":{},"body":{"classes/SessionRepository.html":{}}}],["src/session/infrastructure/persistence/session.repository.ts:23",{"_index":3516,"title":{},"body":{"classes/SessionRepository.html":{}}}],["src/session/infrastructure/persistence/session.repository.ts:6",{"_index":3517,"title":{},"body":{"classes/SessionRepository.html":{}}}],["src/session/infrastructure/persistence/session.repository.ts:8",{"_index":3513,"title":{},"body":{"classes/SessionRepository.html":{}}}],["src/session/session.module.ts",{"_index":3486,"title":{},"body":{"modules/SessionModule.html":{},"miscellaneous/variables.html":{}}}],["src/session/session.service.ts",{"_index":3531,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:12",{"_index":3537,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:16",{"_index":3533,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:22",{"_index":3538,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:31",{"_index":3534,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:35",{"_index":3535,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:39",{"_index":3536,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/session/session.service.ts:9",{"_index":3532,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/settings/domain/settings.ts",{"_index":3546,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/domain/settings.ts:22",{"_index":3548,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/domain/settings.ts:28",{"_index":3552,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/domain/settings.ts:34",{"_index":3555,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/domain/settings.ts:40",{"_index":3556,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/domain/settings.ts:46",{"_index":3558,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/domain/settings.ts:51",{"_index":3550,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/domain/settings.ts:54",{"_index":3549,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/domain/settings.ts:57",{"_index":3557,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/dto/create",{"_index":1633,"title":{},"body":{"classes/CreateSettingsDto.html":{}}}],["src/settings/dto/find",{"_index":2408,"title":{},"body":{"classes/FindAllSettingsDto.html":{}}}],["src/settings/dto/settings.dto.ts",{"_index":3582,"title":{},"body":{"classes/SettingsDto.html":{}}}],["src/settings/dto/settings.dto.ts:8",{"_index":3583,"title":{},"body":{"classes/SettingsDto.html":{}}}],["src/settings/dto/update",{"_index":4281,"title":{},"body":{"classes/UpdateSettingsDto.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts",{"_index":3584,"title":{},"body":{"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:253",{"_index":3585,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:259",{"_index":3588,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:265",{"_index":3589,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:271",{"_index":3591,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:277",{"_index":3593,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:280",{"_index":3587,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:283",{"_index":3586,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:286",{"_index":3592,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["src/settings/infrastructure/persistence/relational/mappers/settings.mapper.ts",{"_index":3704,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["src/settings/infrastructure/persistence/relational/mappers/settings.mapper.ts:14",{"_index":3705,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["src/settings/infrastructure/persistence/relational/mappers/settings.mapper.ts:39",{"_index":3706,"title":{},"body":{"classes/SettingsMapper.html":{}}}],["src/settings/infrastructure/persistence/relational/relational",{"_index":3110,"title":{},"body":{"modules/RelationalSettingsPersistenceModule.html":{}}}],["src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts",{"_index":3719,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:12",{"_index":3721,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:18",{"_index":3722,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:26",{"_index":3723,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:39",{"_index":3724,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:47",{"_index":3725,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:55",{"_index":3727,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:79",{"_index":3726,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["src/settings/infrastructure/persistence/settings.repository.ts",{"_index":3742,"title":{},"body":{"classes/SettingsRepository.html":{}}}],["src/settings/infrastructure/persistence/settings.repository.ts:11",{"_index":3744,"title":{},"body":{"classes/SettingsRepository.html":{}}}],["src/settings/infrastructure/persistence/settings.repository.ts:17",{"_index":3745,"title":{},"body":{"classes/SettingsRepository.html":{}}}],["src/settings/infrastructure/persistence/settings.repository.ts:19",{"_index":3746,"title":{},"body":{"classes/SettingsRepository.html":{}}}],["src/settings/infrastructure/persistence/settings.repository.ts:21",{"_index":3748,"title":{},"body":{"classes/SettingsRepository.html":{}}}],["src/settings/infrastructure/persistence/settings.repository.ts:26",{"_index":3747,"title":{},"body":{"classes/SettingsRepository.html":{}}}],["src/settings/infrastructure/persistence/settings.repository.ts:7",{"_index":3743,"title":{},"body":{"classes/SettingsRepository.html":{}}}],["src/settings/settings.controller.ts",{"_index":3563,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:108",{"_index":3568,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:45",{"_index":3565,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:53",{"_index":3566,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:82",{"_index":3567,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.controller.ts:95",{"_index":3570,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.module.ts",{"_index":3717,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.service.ts",{"_index":3785,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:101",{"_index":3790,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:105",{"_index":3792,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:162",{"_index":3791,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:27",{"_index":3786,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:39",{"_index":3787,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:84",{"_index":3788,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:97",{"_index":3789,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/social/interfaces/social.interface.ts",{"_index":3811,"title":{},"body":{"interfaces/SocialInterface.html":{}}}],["src/social/tokens.ts",{"_index":4230,"title":{},"body":{"classes/Tokens.html":{}}}],["src/social/tokens.ts:11",{"_index":4235,"title":{},"body":{"classes/Tokens.html":{}}}],["src/social/tokens.ts:7",{"_index":4233,"title":{},"body":{"classes/Tokens.html":{}}}],["src/statuses/domain/status.ts",{"_index":3816,"title":{},"body":{"classes/Status.html":{},"miscellaneous/variables.html":{}}}],["src/statuses/domain/status.ts:17",{"_index":3817,"title":{},"body":{"classes/Status.html":{}}}],["src/statuses/domain/status.ts:24",{"_index":3818,"title":{},"body":{"classes/Status.html":{}}}],["src/statuses/dto/status.dto.ts",{"_index":3819,"title":{},"body":{"classes/StatusDto.html":{}}}],["src/statuses/dto/status.dto.ts:7",{"_index":3820,"title":{},"body":{"classes/StatusDto.html":{}}}],["src/statuses/infrastructure/persistence/document/entities/status.schema.ts",{"_index":3826,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/statuses/infrastructure/persistence/document/entities/status.schema.ts:2",{"_index":3827,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/statuses/infrastructure/persistence/document/entities/status.schema.ts:4",{"_index":3828,"title":{},"body":{"classes/StatusSchema.html":{}}}],["src/statuses/infrastructure/persistence/relational/entities/status.entity.ts",{"_index":3822,"title":{},"body":{"entities/StatusEntity.html":{}}}],["src/statuses/infrastructure/persistence/relational/entities/status.entity.ts:10",{"_index":3823,"title":{},"body":{"entities/StatusEntity.html":{}}}],["src/statuses/infrastructure/persistence/relational/entities/status.entity.ts:13",{"_index":3824,"title":{},"body":{"entities/StatusEntity.html":{}}}],["src/statuses/statuses.enum.ts",{"_index":5712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/tenant",{"_index":1680,"title":{},"body":{"classes/CreateTenantTypeDto.html":{},"classes/FindAllTenantTypesDto.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"classes/UpdateTenantTypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/tenants/domain/tenant.ts",{"_index":3842,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:14",{"_index":3845,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:20",{"_index":3853,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:26",{"_index":3855,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:32",{"_index":3854,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:38",{"_index":3849,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:44",{"_index":3843,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:50",{"_index":3852,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:56",{"_index":3851,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:62",{"_index":3850,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:68",{"_index":3857,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:74",{"_index":3848,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:80",{"_index":3859,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:86",{"_index":3847,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:91",{"_index":3846,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:94",{"_index":3844,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/domain/tenant.ts:97",{"_index":3858,"title":{},"body":{"classes/Tenant.html":{}}}],["src/tenants/dto/create",{"_index":1641,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["src/tenants/dto/find",{"_index":2417,"title":{},"body":{"classes/FindAllTenantsDto.html":{}}}],["src/tenants/dto/tenant.dto",{"_index":1308,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/tenants/dto/tenant.dto.ts",{"_index":3863,"title":{},"body":{"classes/TenantDto.html":{}}}],["src/tenants/dto/tenant.dto.ts:8",{"_index":3864,"title":{},"body":{"classes/TenantDto.html":{}}}],["src/tenants/dto/update",{"_index":4283,"title":{},"body":{"classes/UpdateTenantDto.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity",{"_index":2485,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"modules/RegionSeedModule.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"modules/SettingsSeedModule.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts",{"_index":3865,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:104",{"_index":3870,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:107",{"_index":3869,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:110",{"_index":3867,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:113",{"_index":3887,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:32",{"_index":3883,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:37",{"_index":3868,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:43",{"_index":3881,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:49",{"_index":3885,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:55",{"_index":3884,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:59",{"_index":3877,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:65",{"_index":3866,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:71",{"_index":3880,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:77",{"_index":3879,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:83",{"_index":3878,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:86",{"_index":3886,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:92",{"_index":3874,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:98",{"_index":3888,"title":{},"body":{"entities/TenantEntity.html":{}}}],["src/tenants/infrastructure/persistence/relational/mappers/tenant.mapper.ts",{"_index":3895,"title":{},"body":{"classes/TenantMapper.html":{}}}],["src/tenants/infrastructure/persistence/relational/mappers/tenant.mapper.ts:18",{"_index":3896,"title":{},"body":{"classes/TenantMapper.html":{}}}],["src/tenants/infrastructure/persistence/relational/mappers/tenant.mapper.ts:83",{"_index":3897,"title":{},"body":{"classes/TenantMapper.html":{}}}],["src/tenants/infrastructure/persistence/relational/relational",{"_index":3120,"title":{},"body":{"modules/RelationalTenantPersistenceModule.html":{}}}],["src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts",{"_index":3953,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:12",{"_index":3955,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:18",{"_index":3956,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:26",{"_index":3957,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:39",{"_index":3958,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:47",{"_index":3959,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:55",{"_index":3961,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:76",{"_index":3960,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["src/tenants/infrastructure/persistence/tenant.repository.ts",{"_index":3973,"title":{},"body":{"classes/TenantRepository.html":{}}}],["src/tenants/infrastructure/persistence/tenant.repository.ts:11",{"_index":3975,"title":{},"body":{"classes/TenantRepository.html":{}}}],["src/tenants/infrastructure/persistence/tenant.repository.ts:17",{"_index":3976,"title":{},"body":{"classes/TenantRepository.html":{}}}],["src/tenants/infrastructure/persistence/tenant.repository.ts:19",{"_index":3977,"title":{},"body":{"classes/TenantRepository.html":{}}}],["src/tenants/infrastructure/persistence/tenant.repository.ts:21",{"_index":3979,"title":{},"body":{"classes/TenantRepository.html":{}}}],["src/tenants/infrastructure/persistence/tenant.repository.ts:26",{"_index":3978,"title":{},"body":{"classes/TenantRepository.html":{}}}],["src/tenants/infrastructure/persistence/tenant.repository.ts:7",{"_index":3974,"title":{},"body":{"classes/TenantRepository.html":{}}}],["src/tenants/tenants.controller.ts",{"_index":4125,"title":{},"body":{"controllers/TenantsController.html":{}}}],["src/tenants/tenants.controller.ts:105",{"_index":4130,"title":{},"body":{"controllers/TenantsController.html":{}}}],["src/tenants/tenants.controller.ts:45",{"_index":4127,"title":{},"body":{"controllers/TenantsController.html":{}}}],["src/tenants/tenants.controller.ts:53",{"_index":4128,"title":{},"body":{"controllers/TenantsController.html":{}}}],["src/tenants/tenants.controller.ts:82",{"_index":4129,"title":{},"body":{"controllers/TenantsController.html":{}}}],["src/tenants/tenants.controller.ts:95",{"_index":4132,"title":{},"body":{"controllers/TenantsController.html":{}}}],["src/tenants/tenants.module.ts",{"_index":4147,"title":{},"body":{"modules/TenantsModule.html":{}}}],["src/tenants/tenants.service.ts",{"_index":4149,"title":{},"body":{"injectables/TenantsService.html":{}}}],["src/tenants/tenants.service.ts:207",{"_index":4155,"title":{},"body":{"injectables/TenantsService.html":{}}}],["src/tenants/tenants.service.ts:220",{"_index":4156,"title":{},"body":{"injectables/TenantsService.html":{}}}],["src/tenants/tenants.service.ts:224",{"_index":4157,"title":{},"body":{"injectables/TenantsService.html":{}}}],["src/tenants/tenants.service.ts:228",{"_index":4159,"title":{},"body":{"injectables/TenantsService.html":{}}}],["src/tenants/tenants.service.ts:34",{"_index":4153,"title":{},"body":{"injectables/TenantsService.html":{}}}],["src/tenants/tenants.service.ts:383",{"_index":4158,"title":{},"body":{"injectables/TenantsService.html":{}}}],["src/tenants/tenants.service.ts:56",{"_index":4154,"title":{},"body":{"injectables/TenantsService.html":{}}}],["src/users/domain/user.ts",{"_index":4302,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["src/users/domain/user.ts:101",{"_index":4303,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:104",{"_index":4323,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:107",{"_index":4304,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:24",{"_index":4316,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:30",{"_index":4318,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:36",{"_index":4309,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:42",{"_index":4322,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:47",{"_index":4308,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:54",{"_index":4306,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:57",{"_index":4312,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:64",{"_index":4315,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:71",{"_index":4320,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:77",{"_index":4307,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:83",{"_index":4310,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:88",{"_index":4313,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:93",{"_index":4317,"title":{},"body":{"classes/User.html":{}}}],["src/users/domain/user.ts:98",{"_index":4321,"title":{},"body":{"classes/User.html":{}}}],["src/users/dto/create",{"_index":1722,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dto/query",{"_index":2369,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["src/users/dto/update",{"_index":4288,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/users/dto/user.dto.ts",{"_index":4329,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:10",{"_index":4331,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/infrastructure/persistence/document/document",{"_index":1796,"title":{},"body":{"modules/DocumentUserPersistenceModule.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts",{"_index":4440,"title":{},"body":{"classes/UserSchemaClass.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:24",{"_index":4443,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:27",{"_index":4446,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:32",{"_index":4448,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:38",{"_index":4450,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:43",{"_index":4444,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:48",{"_index":4445,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:53",{"_index":4447,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:58",{"_index":4449,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:63",{"_index":4451,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:66",{"_index":4441,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:69",{"_index":4452,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/entities/user.schema.ts:72",{"_index":4442,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["src/users/infrastructure/persistence/document/mappers/user.mapper.ts",{"_index":4358,"title":{},"body":{"classes/UserMapper.html":{}}}],["src/users/infrastructure/persistence/document/mappers/user.mapper.ts:11",{"_index":4359,"title":{},"body":{"classes/UserMapper.html":{}}}],["src/users/infrastructure/persistence/document/mappers/user.mapper.ts:43",{"_index":4360,"title":{},"body":{"classes/UserMapper.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts",{"_index":4530,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:118",{"_index":4540,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:14",{"_index":4532,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:20",{"_index":4534,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:27",{"_index":4539,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:61",{"_index":4536,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:66",{"_index":4537,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:71",{"_index":4535,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:78",{"_index":4538,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/document/repositories/user.repository.ts:95",{"_index":4541,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity",{"_index":2484,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"entities/RegionEntity.html":{},"modules/SettingsSeedModule.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts",{"_index":4332,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:100",{"_index":4333,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:103",{"_index":4353,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:106",{"_index":4334,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:37",{"_index":4346,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:43",{"_index":4348,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:49",{"_index":4340,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:55",{"_index":4352,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:58",{"_index":4338,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:63",{"_index":4335,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:66",{"_index":4342,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:69",{"_index":4345,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:73",{"_index":4349,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:77",{"_index":4337,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:81",{"_index":4341,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:87",{"_index":4343,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:92",{"_index":4347,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/entities/user.entity.ts:97",{"_index":4350,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/infrastructure/persistence/relational/mappers/user.mapper.ts",{"_index":4404,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["src/users/infrastructure/persistence/relational/mappers/user.mapper.ts:17",{"_index":4405,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["src/users/infrastructure/persistence/relational/mappers/user.mapper.ts:65",{"_index":4406,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["src/users/infrastructure/persistence/relational/relational",{"_index":3140,"title":{},"body":{"modules/RelationalUserPersistenceModule.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts",{"_index":4576,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:102",{"_index":4587,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:123",{"_index":4586,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:14",{"_index":4578,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:20",{"_index":4580,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:28",{"_index":4585,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:60",{"_index":4582,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:68",{"_index":4583,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:76",{"_index":4581,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/relational/repositories/user.repository.ts:86",{"_index":4584,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts",{"_index":4420,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts:13",{"_index":4432,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts:23",{"_index":4427,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts:24",{"_index":4428,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts:25",{"_index":4426,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts:26",{"_index":4430,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts:34",{"_index":4434,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts:39",{"_index":4433,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/infrastructure/persistence/user.repository.ts:9",{"_index":4424,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/users/users.controller.ts",{"_index":4497,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:105",{"_index":4509,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:122",{"_index":4514,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:136",{"_index":4511,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:58",{"_index":4502,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:70",{"_index":4506,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":4574,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":4603,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:235",{"_index":4611,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:251",{"_index":4608,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:255",{"_index":4609,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:259",{"_index":4607,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:263",{"_index":4610,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:276",{"_index":4613,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:37",{"_index":4604,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:472",{"_index":4612,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:54",{"_index":4606,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/deep",{"_index":5723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/utils/document",{"_index":1805,"title":{},"body":{"classes/EntityDocumentHelper.html":{}}}],["src/utils/dto/infinity",{"_index":2439,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{},"miscellaneous/functions.html":{}}}],["src/utils/enum/account",{"_index":5704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enum/residence",{"_index":5708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/infinity",{"_index":5915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/utils/relational",{"_index":1814,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["src/utils/serializer.interceptor.ts",{"_index":3314,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["src/utils/serializer.interceptor.ts:13",{"_index":3320,"title":{},"body":{"injectables/ResolvePromisesInterceptor.html":{}}}],["src/utils/transformers/lower",{"_index":5918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/utils/types/deep",{"_index":5876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/types/maybe.type.ts",{"_index":5881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/types/nullable.type.ts",{"_index":5882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/types/or",{"_index":5883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/types/pagination",{"_index":2437,"title":{},"body":{"interfaces/IPaginationOptions.html":{}}}],["src/utils/validate",{"_index":5728,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/utils/validation",{"_index":5726,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["srid",{"_index":2906,"title":{},"body":{"entities/RegionEntity.html":{}}}],["ssl",{"_index":4265,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sslenabled",{"_index":2015,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{}}}],["start",{"_index":3669,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["started",{"_index":4689,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starttime",{"_index":1571,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{}}}],["static",{"_index":130,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["status",{"_index":610,"title":{"classes/Status.html":{}},"body":{"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"classes/Status.html":{},"entities/StatusEntity.html":{},"modules/StatusSeedModule.html":{},"injectables/TenantsService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["status\"(\"id",{"_index":1716,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["status._id",{"_index":4392,"title":{},"body":{"classes/UserMapper.html":{}}}],["status.id",{"_index":4410,"title":{},"body":{"classes/UserMapper-1.html":{}}}],["statuscode",{"_index":2349,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["statusdto",{"_index":1739,"title":{"classes/StatusDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/StatusDto.html":{},"classes/UpdateUserDto.html":{}}}],["statusdto})@isoptional()@type(undefined",{"_index":1740,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["statusentity",{"_index":3821,"title":{"entities/StatusEntity.html":{}},"body":{"entities/StatusEntity.html":{},"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{}}}],["statusenum",{"_index":1305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StatusSeedService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["statusenum.active",{"_index":1340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StatusSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["statusenum.active.tostring",{"_index":4470,"title":{},"body":{"injectables/UserSeedService.html":{}}}],["statusenum.inactive",{"_index":1348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StatusSeedService.html":{}}}],["statusenum.inactive.tostring",{"_index":1365,"title":{},"body":{"injectables/AuthService.html":{}}}],["statuses/domain/status",{"_index":4327,"title":{},"body":{"classes/User.html":{},"classes/UserMapper.html":{},"injectables/UsersService.html":{}}}],["statuses/dto/status.dto",{"_index":1744,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["statuses/infrastructure/persistence/document/entities/status.schema",{"_index":4364,"title":{},"body":{"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{}}}],["statuses/infrastructure/persistence/relational/entities/status.entity",{"_index":3835,"title":{},"body":{"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{}}}],["statuses/statuses.enum",{"_index":1306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StatusSeedService.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{}}}],["statusid",{"_index":1703,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["statusnotexists",{"_index":4646,"title":{},"body":{"injectables/UsersService.html":{}}}],["statusobject",{"_index":4643,"title":{},"body":{"injectables/UsersService.html":{}}}],["statusschema",{"_index":3825,"title":{"classes/StatusSchema.html":{}},"body":{"classes/StatusSchema.html":{},"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{}}}],["statusseedmodule",{"_index":3829,"title":{"modules/StatusSeedModule.html":{}},"body":{"modules/StatusSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["statusseedservice",{"_index":3833,"title":{"injectables/StatusSeedService.html":{}},"body":{"modules/StatusSeedModule.html":{},"injectables/StatusSeedService.html":{},"overview.html":{}}}],["stock",{"_index":395,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["storage",{"_index":2282,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["strategies/anonymous.strategy",{"_index":1226,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/jwt",{"_index":1227,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/jwt.strategy",{"_index":1225,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/types/jwt",{"_index":1297,"title":{},"body":{"injectables/AuthService.html":{}}}],["strategy",{"_index":848,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["strict",{"_index":2853,"title":{},"body":{"injectables/MailerService.html":{}}}],["strictnullchecks",{"_index":5646,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"controllers/AccountsController.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"modules/FilesLocalModule.html":{},"controllers/FilesS3Controller.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"classes/FilterUserDto.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"injectables/MailerService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"controllers/RegionsController.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"controllers/ResidencesController.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"classes/Session.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"classes/Tokens.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string})@isnotempty",{"_index":1726,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["string})@isoptional",{"_index":4292,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["string})@isoptional()@isstring",{"_index":1450,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{}}}],["string})@isoptional()@transform",{"_index":2876,"title":{},"body":{"classes/QueryUserDto.html":{}}}],["string})@isstring",{"_index":1452,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateResidenceDto.html":{}}}],["string})@transform(lowercasetransformer)@isemail",{"_index":1179,"title":{},"body":{"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{}}}],["string})@transform(lowercasetransformer)@isemail()@isnotempty",{"_index":1131,"title":{},"body":{"classes/AuthEmailLoginDto.html":{}}}],["string})@transform(lowercasetransformer)@isnotempty()@isemail",{"_index":1724,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["string})@transform(lowercasetransformer)@isoptional()@isemail",{"_index":4290,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["stripe",{"_index":3633,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["subject",{"_index":2793,"title":{},"body":{"injectables/MailService.html":{},"classes/Settings.html":{},"license.html":{}}}],["subjecttype",{"_index":678,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateSettingsDto.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{}}}],["sublicense",{"_index":5806,"title":{},"body":{"license.html":{}}}],["submittedat",{"_index":674,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{}}}],["submitting",{"_index":2504,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["submittinguser",{"_index":2505,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["subscriber",{"_index":4257,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["subscribersdir",{"_index":4256,"title":{},"body":{"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["subscriptionplans",{"_index":3677,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["subscriptions",{"_index":436,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["substantial",{"_index":5818,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":3007,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["super",{"_index":852,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UserSeedService.html":{}}}],["super_admin",{"_index":5711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":4905,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":2895,"title":{},"body":{"classes/Region.html":{}}}],["sustainability",{"_index":785,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["svg",{"_index":5844,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":4709,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["swc",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["swiftcode",{"_index":3640,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["synchronize",{"_index":2009,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":790,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["t",{"_index":2441,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{},"interfaces/MailData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":664,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{},"index.html":{}}}],["take",{"_index":263,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersRelationalRepository.html":{}}}],["tax",{"_index":415,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["taxes",{"_index":416,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["technical",{"_index":3601,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["technology_company",{"_index":815,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["template",{"_index":2848,"title":{},"body":{"injectables/MailerService.html":{}}}],["templatepath",{"_index":2795,"title":{},"body":{"injectables/MailService.html":{},"injectables/MailerService.html":{}}}],["templates",{"_index":2799,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{}}}],["tenant",{"_index":22,"title":{"classes/Tenant.html":{}},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"classes/FindAllTenantTypesDto.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{},"classes/Role.html":{},"entities/RoleEntity.html":{},"injectables/RoleSeedService.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"classes/UpdateTenantTypeDto.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["tenant\"(\"id",{"_index":689,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["tenant.dto",{"_index":4134,"title":{},"body":{"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UpdateTenantDto.html":{}}}],["tenant.dto.ts",{"_index":1642,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/UpdateTenantDto.html":{}}}],["tenant.dto.ts:102",{"_index":1657,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:110",{"_index":1656,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:120",{"_index":1665,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:130",{"_index":1653,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:140",{"_index":1666,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:148",{"_index":1651,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:40",{"_index":1649,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:50",{"_index":1659,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:60",{"_index":1662,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:68",{"_index":1660,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:78",{"_index":1655,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:86",{"_index":1648,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.dto.ts:94",{"_index":1658,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenant.id",{"_index":332,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["tenant.name",{"_index":337,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["tenant.repository",{"_index":3121,"title":{},"body":{"modules/RelationalTenantPersistenceModule.html":{},"injectables/TenantRelationalRepository.html":{}}}],["tenant.users?.[0",{"_index":2506,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["tenant['id",{"_index":3968,"title":{},"body":{"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantsService.html":{}}}],["tenant_${tenanttype.code.tolowercase",{"_index":3997,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["tenant_type",{"_index":825,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{}}}],["tenant_type\"(\"id",{"_index":839,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["tenant_type_code_enum",{"_index":2747,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["tenant_type_code_enum_old",{"_index":2736,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["tenantdto",{"_index":1307,"title":{"classes/TenantDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateUserDto.html":{},"classes/TenantDto.html":{}}}],["tenantdto})@validatenested()@type(undefined)@isnotemptyobject",{"_index":1461,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateUserDto.html":{}}}],["tenantentity",{"_index":109,"title":{"entities/TenantEntity.html":{}},"body":{"entities/AccountEntity.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"modules/RegionSeedModule.html":{},"injectables/RegionSeedService.html":{},"modules/RelationalTenantPersistenceModule.html":{},"entities/ResidenceEntity.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"entities/RoleEntity.html":{},"modules/RoleSeedModule.html":{},"injectables/RoleSeedService.html":{},"entities/SettingsEntity.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"entities/UserEntity.html":{},"injectables/UserSeedService-1.html":{}}}],["tenantid",{"_index":681,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["tenantmapper",{"_index":142,"title":{"classes/TenantMapper.html":{}},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/UserMapper-1.html":{}}}],["tenantmapper.todomain(entity",{"_index":3967,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["tenantmapper.todomain(newentity",{"_index":3966,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["tenantmapper.todomain(raw.tenant",{"_index":151,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SettingsMapper.html":{},"classes/UserMapper-1.html":{}}}],["tenantmapper.todomain(updatedentity",{"_index":3971,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["tenantmapper.topersistence",{"_index":185,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SettingsMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/UserMapper-1.html":{}}}],["tenantmapper.topersistence(data",{"_index":3963,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["tenantname",{"_index":3991,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["tenantname.tolowercase().replace(/\\s+/g",{"_index":3993,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["tenantobject",{"_index":607,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/UsersService.html":{}}}],["tenantrelationalrepository",{"_index":3122,"title":{"injectables/TenantRelationalRepository.html":{}},"body":{"modules/RelationalTenantPersistenceModule.html":{},"injectables/TenantRelationalRepository.html":{}}}],["tenantrepository",{"_index":317,"title":{"classes/TenantRepository.html":{}},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/RegionSeedService.html":{},"modules/RelationalTenantPersistenceModule.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantsService.html":{},"injectables/UserSeedService-1.html":{},"overview.html":{}}}],["tenants",{"_index":328,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"controllers/TenantsController.html":{},"injectables/UserSeedService-1.html":{}}}],["tenants.controller",{"_index":4148,"title":{},"body":{"modules/TenantsModule.html":{}}}],["tenants.dto",{"_index":4135,"title":{},"body":{"controllers/TenantsController.html":{}}}],["tenants.dto.ts",{"_index":2418,"title":{},"body":{"classes/FindAllTenantsDto.html":{}}}],["tenants.dto.ts:10",{"_index":2420,"title":{},"body":{"classes/FindAllTenantsDto.html":{}}}],["tenants.dto.ts:16",{"_index":2419,"title":{},"body":{"classes/FindAllTenantsDto.html":{}}}],["tenants.length",{"_index":2999,"title":{},"body":{"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["tenants.map((tenant",{"_index":3004,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["tenants.service",{"_index":4133,"title":{},"body":{"controllers/TenantsController.html":{},"modules/TenantsModule.html":{}}}],["tenants/domain/tenant",{"_index":66,"title":{},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"classes/KycDetails.html":{},"injectables/KycDetailsService.html":{},"classes/Region.html":{},"injectables/RegionsService.html":{},"classes/Residence.html":{},"injectables/ResidencesService.html":{},"classes/Role.html":{},"classes/Settings.html":{},"injectables/SettingsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["tenants/dto/tenant.dto",{"_index":1464,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateUserDto.html":{}}}],["tenants/infrastructure/persistence/relational/entities/tenant.entity",{"_index":115,"title":{},"body":{"entities/AccountEntity.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"entities/ResidenceEntity.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"entities/RoleEntity.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"entities/UserEntity.html":{},"injectables/UserSeedService-1.html":{}}}],["tenants/infrastructure/persistence/relational/mappers/tenant.mapper",{"_index":143,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SettingsMapper.html":{},"classes/UserMapper-1.html":{}}}],["tenants/tenants.module",{"_index":578,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/KycDetailsModule.html":{},"modules/RegionsModule.html":{},"modules/ResidencesModule.html":{},"modules/SettingsModule.html":{},"modules/UsersModule.html":{}}}],["tenants/tenants.service",{"_index":599,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/UsersService.html":{}}}],["tenantscontroller",{"_index":4124,"title":{"controllers/TenantsController.html":{}},"body":{"controllers/TenantsController.html":{},"modules/TenantsModule.html":{}}}],["tenantseedmodule",{"_index":3980,"title":{"modules/TenantSeedModule.html":{}},"body":{"modules/TenantSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["tenantseedservice",{"_index":3984,"title":{"injectables/TenantSeedService.html":{}},"body":{"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"overview.html":{}}}],["tenantservice",{"_index":591,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/UsersService.html":{}}}],["tenantsmodule",{"_index":575,"title":{"modules/TenantsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/KycDetailsModule.html":{},"modules/RegionsModule.html":{},"modules/ResidencesModule.html":{},"modules/SettingsModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["tenantsservice",{"_index":587,"title":{"injectables/TenantsService.html":{}},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"controllers/TenantsController.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["tenanttype",{"_index":3856,"title":{"classes/TenantType.html":{}},"body":{"classes/Tenant.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{}}}],["tenanttype.id",{"_index":3990,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["tenanttype.name",{"_index":3992,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["tenanttype['id",{"_index":4039,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{}}}],["tenanttypecode",{"_index":1683,"title":{},"body":{"classes/CreateTenantTypeDto.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"miscellaneous/enumerations.html":{}}}],["tenanttypecode.collection_agency",{"_index":4093,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["tenanttypecode.community_group",{"_index":4085,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["tenanttypecode.municipality",{"_index":4096,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["tenanttypecode.platform_owner",{"_index":4083,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["tenanttypecode.recycling_company",{"_index":4091,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["tenanttypecode})@isoptional",{"_index":1684,"title":{},"body":{"classes/CreateTenantTypeDto.html":{}}}],["tenanttypedefinitions",{"_index":4082,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["tenanttypedto",{"_index":1663,"title":{"classes/TenantTypeDto.html":{}},"body":{"classes/CreateTenantDto.html":{},"classes/TenantTypeDto.html":{}}}],["tenanttypedto})@isoptional()@validatenested()@type(undefined)@isnotemptyobject",{"_index":1664,"title":{},"body":{"classes/CreateTenantDto.html":{}}}],["tenanttypeentity",{"_index":3134,"title":{"entities/TenantTypeEntity.html":{}},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"entities/TenantEntity.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{}}}],["tenanttypemapper",{"_index":3901,"title":{"classes/TenantTypeMapper.html":{}},"body":{"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{}}}],["tenanttypemapper.todomain(entity",{"_index":4038,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["tenanttypemapper.todomain(newentity",{"_index":4037,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["tenanttypemapper.todomain(raw.type",{"_index":3925,"title":{},"body":{"classes/TenantMapper.html":{}}}],["tenanttypemapper.todomain(updatedentity",{"_index":4042,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["tenanttypemapper.topersistence",{"_index":3946,"title":{},"body":{"classes/TenantMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{}}}],["tenanttypemapper.topersistence(data",{"_index":4034,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["tenanttyperelationalrepository",{"_index":3132,"title":{"injectables/TenantTypeRelationalRepository.html":{}},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"injectables/TenantTypeRelationalRepository.html":{}}}],["tenanttyperepository",{"_index":3129,"title":{"classes/TenantTypeRepository.html":{}},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"overview.html":{}}}],["tenanttypes",{"_index":3987,"title":{},"body":{"injectables/TenantSeedService.html":{}}}],["tenanttypescontroller",{"_index":4050,"title":{"controllers/TenantTypesController.html":{}},"body":{"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{}}}],["tenanttypeservice",{"_index":4152,"title":{},"body":{"injectables/TenantsService.html":{}}}],["tenanttypesmodule",{"_index":869,"title":{"modules/TenantTypesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantsModule.html":{},"modules.html":{},"overview.html":{}}}],["tenanttypesseedmodule",{"_index":4075,"title":{"modules/TenantTypesSeedModule.html":{}},"body":{"modules/TenantTypesSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["tenanttypesseedservice",{"_index":4079,"title":{"injectables/TenantTypesSeedService.html":{}},"body":{"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"overview.html":{}}}],["tenanttypesservice",{"_index":4059,"title":{"injectables/TenantTypesService.html":{}},"body":{"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"overview.html":{}}}],["termsofserviceurl",{"_index":3685,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["test",{"_index":1860,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["test.herokuapp.com/docs",{"_index":5738,"title":{},"body":{"index.html":{}}}],["test/.../constants.ts",{"_index":5887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/utils/constants.ts",{"_index":5910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test1@example.com",{"_index":1130,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["tester_email",{"_index":5907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tester_password",{"_index":5908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":5633,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":4714,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":2741,"title":{},"body":{"classes/LatestChanges1745163536016.html":{},"injectables/MailService.html":{},"entities/RegionEntity.html":{}}}],["text1",{"_index":2780,"title":{},"body":{"injectables/MailService.html":{}}}],["text2",{"_index":2781,"title":{},"body":{"injectables/MailService.html":{}}}],["text3",{"_index":2782,"title":{},"body":{"injectables/MailService.html":{}}}],["text4",{"_index":2806,"title":{},"body":{"injectables/MailService.html":{}}}],["theft",{"_index":463,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["theme",{"_index":779,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["this.__entity",{"_index":1825,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["this.accountrepository.count",{"_index":331,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["this.accountrepository.create",{"_index":273,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountsService.html":{}}}],["this.accountrepository.create(persistencemodel",{"_index":255,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["this.accountrepository.create(wastemanagementaccounts",{"_index":491,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["this.accountrepository.delete(id",{"_index":276,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["this.accountrepository.find",{"_index":258,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["this.accountrepository.findallwithpagination",{"_index":630,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.accountrepository.findbyid(id",{"_index":631,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.accountrepository.findbyids(ids",{"_index":632,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.accountrepository.findone",{"_index":267,"title":{},"body":{"injectables/AccountRelationalRepository.html":{}}}],["this.accountrepository.remove(id",{"_index":649,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.accountrepository.save",{"_index":254,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{}}}],["this.accountrepository.update(id",{"_index":638,"title":{},"body":{"injectables/AccountsService.html":{}}}],["this.accountsservice.create(createaccountdto",{"_index":551,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountsservice.findallwithpagination",{"_index":559,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountsservice.findbyid(id",{"_index":562,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountsservice.remove(id",{"_index":568,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.accountsservice.update(id",{"_index":565,"title":{},"body":{"controllers/AccountsController.html":{}}}],["this.authappleservice.getprofilebytoken(logindto",{"_index":982,"title":{},"body":{"controllers/AuthAppleController.html":{}}}],["this.authfacebookservice.getprofilebytoken(logindto",{"_index":1147,"title":{},"body":{"controllers/AuthFacebookController.html":{}}}],["this.authgoogleservice.getprofilebytoken(logindto",{"_index":1189,"title":{},"body":{"controllers/AuthGoogleController.html":{}}}],["this.authservice.validatesociallogin('apple",{"_index":983,"title":{},"body":{"controllers/AuthAppleController.html":{}}}],["this.authservice.validatesociallogin('facebook",{"_index":1148,"title":{},"body":{"controllers/AuthFacebookController.html":{}}}],["this.authservice.validatesociallogin('google",{"_index":1190,"title":{},"body":{"controllers/AuthGoogleController.html":{}}}],["this.builduserdata(tenant",{"_index":4486,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["this.configservice.get",{"_index":4267,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('app.apiprefix",{"_index":2297,"title":{},"body":{"injectables/FilesLocalService.html":{}}}],["this.configservice.get('app.name",{"_index":2436,"title":{},"body":{"injectables/HomeService.html":{},"injectables/MailService.html":{}}}],["this.configservice.get('app.nodeenv",{"_index":4249,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('apple.appaudience",{"_index":1017,"title":{},"body":{"injectables/AuthAppleService.html":{}}}],["this.configservice.get('database.ca",{"_index":4269,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.cert",{"_index":4271,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.host",{"_index":4243,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.key",{"_index":4270,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.maxconnections",{"_index":4264,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.name",{"_index":2870,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.password",{"_index":2872,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.port",{"_index":4244,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.sslenabled",{"_index":4266,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.synchronize",{"_index":4245,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.type",{"_index":4242,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.url",{"_index":2868,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('database.username",{"_index":2871,"title":{},"body":{"injectables/MongooseConfigService.html":{},"injectables/TypeOrmConfigService.html":{}}}],["this.configservice.get('facebook.appid",{"_index":1164,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["this.configservice.get('facebook.appsecret",{"_index":1166,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["this.configservice.get('file.maxfilesize",{"_index":2348,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["this.configservice.get('mail.defaultname",{"_index":2856,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.configservice.getorthrow('app.frontenddomain",{"_index":2788,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.getorthrow('app.workingdirectory",{"_index":2797,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.getorthrow('auth.confirmemailexpires",{"_index":1354,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.getorthrow('auth.confirmemailsecret",{"_index":1352,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.getorthrow('auth.expires",{"_index":1416,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.getorthrow('auth.forgotexpires",{"_index":1375,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.getorthrow('auth.forgotsecret",{"_index":1379,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.getorthrow('auth.refreshexpires",{"_index":1422,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.getorthrow('auth.refreshsecret",{"_index":1421,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.getorthrow('auth.secret",{"_index":1420,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.getorthrow('file.awsdefaults3bucket",{"_index":2353,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["this.configservice.getorthrow('google.clientid",{"_index":1209,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["this.constructor.name",{"_index":1826,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["this.createregionfortenant(tenant",{"_index":3005,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["this.createuserforrole(tenant",{"_index":4483,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["this.filemodel(data",{"_index":2113,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["this.filemodel.find",{"_index":2120,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["this.filemodel.findbyid(id",{"_index":2118,"title":{},"body":{"injectables/FileDocumentRepository.html":{}}}],["this.filerepository.create",{"_index":2296,"title":{},"body":{"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{}}}],["this.filerepository.create(persistencemodel",{"_index":2153,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["this.filerepository.find",{"_index":2156,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["this.filerepository.findbyid(id",{"_index":2366,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.filerepository.findbyids(ids",{"_index":2367,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.filerepository.findone",{"_index":2154,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["this.filerepository.save",{"_index":2152,"title":{},"body":{"injectables/FileRelationalRepository.html":{}}}],["this.fileservice.findbyid",{"_index":4177,"title":{},"body":{"injectables/TenantsService.html":{}}}],["this.filesservice.create(file",{"_index":2258,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{}}}],["this.filesservice.findbyid",{"_index":4631,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getdefaulttenantconfig",{"_index":3774,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["this.getdefaultuserconfig",{"_index":3777,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["this.gettokensdata",{"_index":1325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.google",{"_index":1203,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["this.google.verifyidtoken",{"_index":1207,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["this.jwtservice.signasync",{"_index":1349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(hash",{"_index":1359,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.kycdetailsmodel",{"_index":2572,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["this.kycdetailsmodel(persistencemodel",{"_index":2567,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["this.kycdetailsmodel.deleteone",{"_index":2588,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["this.kycdetailsmodel.find",{"_index":2579,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["this.kycdetailsmodel.findbyid(id",{"_index":2578,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["this.kycdetailsmodel.findone(filter",{"_index":2584,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["this.kycdetailsmodel.findoneandupdate",{"_index":2585,"title":{},"body":{"injectables/KycDetailsDocumentRepository.html":{}}}],["this.kycdetailsrepository.create",{"_index":2666,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{}}}],["this.kycdetailsrepository.create(persistencemodel",{"_index":2662,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["this.kycdetailsrepository.delete(id",{"_index":2668,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["this.kycdetailsrepository.find",{"_index":2664,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["this.kycdetailsrepository.findallwithpagination",{"_index":2705,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["this.kycdetailsrepository.findbyid(id",{"_index":2706,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["this.kycdetailsrepository.findbyids(ids",{"_index":2707,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["this.kycdetailsrepository.findone",{"_index":2665,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["this.kycdetailsrepository.remove(id",{"_index":2721,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["this.kycdetailsrepository.save",{"_index":2661,"title":{},"body":{"injectables/KycDetailsRelationalRepository.html":{}}}],["this.kycdetailsrepository.update(id",{"_index":2712,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["this.kycdetailsservice.create(createkycdetailsdto",{"_index":2543,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["this.kycdetailsservice.findallwithpagination",{"_index":2545,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["this.kycdetailsservice.findbyid(id",{"_index":2546,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["this.kycdetailsservice.findbyids",{"_index":4185,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["this.kycdetailsservice.remove(id",{"_index":2549,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["this.kycdetailsservice.update(id",{"_index":2548,"title":{},"body":{"controllers/KycDetailsController.html":{}}}],["this.kycrepository.create",{"_index":2500,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["this.kycrepository.findone",{"_index":2497,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["this.kycrepository.save",{"_index":2499,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["this.logger.error('failed",{"_index":3008,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["this.logger.log",{"_index":492,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["this.logger.log(`accounts",{"_index":334,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["this.logger.warn('no",{"_index":3000,"title":{},"body":{"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{}}}],["this.logger.warn(`no",{"_index":3232,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["this.mailerservice.sendmail",{"_index":2791,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.confirmnewemail",{"_index":1401,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice.forgotpassword",{"_index":1380,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice.usersignup",{"_index":1355,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.model",{"_index":4468,"title":{},"body":{"injectables/UserSeedService.html":{}}}],["this.model.findone",{"_index":4463,"title":{},"body":{"injectables/UserSeedService.html":{}}}],["this.reflector.getallandoverride",{"_index":3390,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.regionrepository.create",{"_index":2974,"title":{},"body":{"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{}}}],["this.regionrepository.create(persistencemodel",{"_index":2968,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["this.regionrepository.delete(id",{"_index":2977,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["this.regionrepository.find",{"_index":2970,"title":{},"body":{"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["this.regionrepository.findallwithpagination",{"_index":3057,"title":{},"body":{"injectables/RegionsService.html":{}}}],["this.regionrepository.findbyid(id",{"_index":3058,"title":{},"body":{"injectables/RegionsService.html":{}}}],["this.regionrepository.findbyids(ids",{"_index":3059,"title":{},"body":{"injectables/RegionsService.html":{}}}],["this.regionrepository.findone",{"_index":2973,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["this.regionrepository.remove(id",{"_index":3070,"title":{},"body":{"injectables/RegionsService.html":{}}}],["this.regionrepository.save",{"_index":2967,"title":{},"body":{"injectables/RegionRelationalRepository.html":{}}}],["this.regionrepository.save(regionstocreate",{"_index":3006,"title":{},"body":{"injectables/RegionSeedService.html":{}}}],["this.regionrepository.update(id",{"_index":3062,"title":{},"body":{"injectables/RegionsService.html":{}}}],["this.regionservice.findbyid",{"_index":3290,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["this.regionservice.findbyids",{"_index":4165,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["this.regionsservice.create(createregiondto",{"_index":3027,"title":{},"body":{"controllers/RegionsController.html":{}}}],["this.regionsservice.findallwithpagination",{"_index":3029,"title":{},"body":{"controllers/RegionsController.html":{}}}],["this.regionsservice.findbyid(id",{"_index":3030,"title":{},"body":{"controllers/RegionsController.html":{}}}],["this.regionsservice.remove(id",{"_index":3032,"title":{},"body":{"controllers/RegionsController.html":{}}}],["this.regionsservice.update(id",{"_index":3031,"title":{},"body":{"controllers/RegionsController.html":{}}}],["this.repository.count",{"_index":3840,"title":{},"body":{"injectables/StatusSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["this.repository.create",{"_index":3773,"title":{},"body":{"injectables/SettingsSeedService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["this.repository.findone",{"_index":3770,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["this.repository.save",{"_index":3772,"title":{},"body":{"injectables/SettingsSeedService.html":{},"injectables/StatusSeedService.html":{},"injectables/TenantTypesSeedService.html":{}}}],["this.residencerepository.create",{"_index":3211,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"injectables/ResidencesService.html":{}}}],["this.residencerepository.create(persistencemodel",{"_index":3205,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["this.residencerepository.delete(id",{"_index":3214,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["this.residencerepository.find",{"_index":3207,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{}}}],["this.residencerepository.findallwithpagination",{"_index":3297,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["this.residencerepository.findbyid(id",{"_index":3298,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["this.residencerepository.findbyids(ids",{"_index":3299,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["this.residencerepository.findone",{"_index":3210,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["this.residencerepository.remove(id",{"_index":3312,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["this.residencerepository.save",{"_index":3204,"title":{},"body":{"injectables/ResidenceRelationalRepository.html":{}}}],["this.residencerepository.save(residence",{"_index":3243,"title":{},"body":{"injectables/ResidenceSeedService.html":{}}}],["this.residencerepository.update(id",{"_index":3307,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["this.residencesservice.create(createresidencedto",{"_index":3260,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["this.residencesservice.findallwithpagination",{"_index":3262,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["this.residencesservice.findbyid(id",{"_index":3263,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["this.residencesservice.remove(id",{"_index":3265,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["this.residencesservice.update(id",{"_index":3264,"title":{},"body":{"controllers/ResidencesController.html":{}}}],["this.rolerepository.create",{"_index":3377,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["this.rolerepository.find",{"_index":4482,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["this.rolerepository.findone",{"_index":340,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{}}}],["this.rolerepository.save",{"_index":3376,"title":{},"body":{"injectables/RoleSeedService.html":{}}}],["this.s3",{"_index":2345,"title":{},"body":{"injectables/FilesS3PresignedService.html":{}}}],["this.seedtenantsettings",{"_index":3765,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["this.seedusersettings",{"_index":3766,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["this.service.appinfo",{"_index":2428,"title":{},"body":{"controllers/HomeController.html":{}}}],["this.service.confirmemail(confirmemaildto.hash",{"_index":1102,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.confirmnewemail(confirmemaildto.hash",{"_index":1104,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.forgotpassword(forgotpassworddto.email",{"_index":1106,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.logout",{"_index":1123,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.me(request.user",{"_index":1114,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.refreshtoken",{"_index":1117,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.register(createuserdto",{"_index":1100,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.resetpassword",{"_index":1109,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.softdelete(request.user",{"_index":1128,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.update(request.user",{"_index":1125,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.validatelogin(logindto",{"_index":1096,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.sessionmodel(persistencemodel",{"_index":3436,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["this.sessionmodel.deletemany",{"_index":3446,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["this.sessionmodel.deletemany(transformedcriteria",{"_index":3451,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["this.sessionmodel.deleteone",{"_index":3445,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["this.sessionmodel.findbyid(id",{"_index":3432,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["this.sessionmodel.findone(filter",{"_index":3441,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["this.sessionmodel.findoneandupdate",{"_index":3442,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["this.sessionrepository.create",{"_index":3507,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["this.sessionrepository.create(data",{"_index":3541,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionrepository.create(persistencemodel",{"_index":3505,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["this.sessionrepository.deletebyid(id",{"_index":3543,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionrepository.deletebyuserid(conditions",{"_index":3544,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionrepository.deletebyuseridwithexclude(conditions",{"_index":3545,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionrepository.findbyid(id",{"_index":3540,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionrepository.findone",{"_index":3501,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["this.sessionrepository.save",{"_index":3504,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["this.sessionrepository.softdelete",{"_index":3509,"title":{},"body":{"injectables/SessionRelationalRepository.html":{}}}],["this.sessionrepository.update(id",{"_index":3542,"title":{},"body":{"injectables/SessionService.html":{}}}],["this.sessionservice.create",{"_index":1322,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionservice.deletebyid(data.sessionid",{"_index":1412,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionservice.deletebyuserid",{"_index":1382,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionservice.deletebyuseridwithexclude",{"_index":1392,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionservice.findbyid(data.sessionid",{"_index":1403,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionservice.update(session.id",{"_index":1408,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.settingsrepository.create",{"_index":3738,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsService.html":{}}}],["this.settingsrepository.create(persistencemodel",{"_index":3732,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["this.settingsrepository.delete(id",{"_index":3741,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["this.settingsrepository.find",{"_index":3734,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["this.settingsrepository.findallwithpagination",{"_index":3799,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingsrepository.findbyid(id",{"_index":3800,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingsrepository.findbyids(ids",{"_index":3801,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingsrepository.findone",{"_index":3737,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["this.settingsrepository.remove(id",{"_index":3810,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingsrepository.save",{"_index":3731,"title":{},"body":{"injectables/SettingsRelationalRepository.html":{}}}],["this.settingsrepository.update(id",{"_index":3806,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settingsservice.create(createsettingsdto",{"_index":3576,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settingsservice.findallwithpagination",{"_index":3578,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settingsservice.findbyid(id",{"_index":3579,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settingsservice.findbyids",{"_index":4171,"title":{},"body":{"injectables/TenantsService.html":{},"injectables/UsersService.html":{}}}],["this.settingsservice.remove(id",{"_index":3581,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.settingsservice.update(id",{"_index":3580,"title":{},"body":{"controllers/SettingsController.html":{}}}],["this.tenantrepository.create",{"_index":3970,"title":{},"body":{"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"injectables/TenantsService.html":{}}}],["this.tenantrepository.create(persistencemodel",{"_index":3965,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["this.tenantrepository.delete(id",{"_index":3972,"title":{},"body":{"injectables/TenantRelationalRepository.html":{}}}],["this.tenantrepository.find",{"_index":329,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/RoleSeedService.html":{},"injectables/SettingsSeedService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/UserSeedService-1.html":{}}}],["this.tenantrepository.findallwithpagination",{"_index":4201,"title":{},"body":{"injectables/TenantsService.html":{}}}],["this.tenantrepository.findbyid(id",{"_index":4202,"title":{},"body":{"injectables/TenantsService.html":{}}}],["this.tenantrepository.findbyids(ids",{"_index":4203,"title":{},"body":{"injectables/TenantsService.html":{}}}],["this.tenantrepository.findone",{"_index":3969,"title":{},"body":{"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{}}}],["this.tenantrepository.remove(id",{"_index":4228,"title":{},"body":{"injectables/TenantsService.html":{}}}],["this.tenantrepository.save",{"_index":3964,"title":{},"body":{"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{}}}],["this.tenantrepository.update(id",{"_index":4220,"title":{},"body":{"injectables/TenantsService.html":{}}}],["this.tenantservice.findbyid",{"_index":608,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/UsersService.html":{}}}],["this.tenantsservice.create(createtenantdto",{"_index":4137,"title":{},"body":{"controllers/TenantsController.html":{}}}],["this.tenantsservice.findallwithpagination",{"_index":4139,"title":{},"body":{"controllers/TenantsController.html":{}}}],["this.tenantsservice.findbyid(id",{"_index":4140,"title":{},"body":{"controllers/TenantsController.html":{}}}],["this.tenantsservice.remove(id",{"_index":4142,"title":{},"body":{"controllers/TenantsController.html":{}}}],["this.tenantsservice.update(id",{"_index":4141,"title":{},"body":{"controllers/TenantsController.html":{}}}],["this.tenanttyperepository.create",{"_index":4041,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesService.html":{}}}],["this.tenanttyperepository.create(persistencemodel",{"_index":4036,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["this.tenanttyperepository.delete(id",{"_index":4043,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["this.tenanttyperepository.find",{"_index":3988,"title":{},"body":{"injectables/TenantSeedService.html":{},"injectables/TenantTypeRelationalRepository.html":{}}}],["this.tenanttyperepository.findallwithpagination",{"_index":4116,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["this.tenanttyperepository.findbyid(id",{"_index":4117,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["this.tenanttyperepository.findbyids(ids",{"_index":4118,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["this.tenanttyperepository.findone",{"_index":4040,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["this.tenanttyperepository.remove(id",{"_index":4123,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["this.tenanttyperepository.save",{"_index":4035,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["this.tenanttyperepository.update(id",{"_index":4119,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["this.tenanttypeservice.findbyid",{"_index":4181,"title":{},"body":{"injectables/TenantsService.html":{}}}],["this.tenanttypesservice.create(createtenanttypedto",{"_index":4063,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["this.tenanttypesservice.findallwithpagination",{"_index":4065,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["this.tenanttypesservice.findbyid(id",{"_index":4066,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["this.tenanttypesservice.remove(id",{"_index":4068,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["this.tenanttypesservice.update(id",{"_index":4067,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["this.transporter",{"_index":2834,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.transporter.sendmail",{"_index":2854,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.userrepository.create(baseuser",{"_index":4495,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["this.userrepository.find",{"_index":343,"title":{},"body":{"injectables/AccountSeedService.html":{},"injectables/KycDetailSeedService.html":{},"injectables/ResidenceSeedService.html":{},"injectables/SettingsSeedService.html":{}}}],["this.userrepository.findone",{"_index":3768,"title":{},"body":{"injectables/SettingsSeedService.html":{},"injectables/UserSeedService-1.html":{}}}],["this.userrepository.save(userdata",{"_index":4489,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["this.userservice.findbyid",{"_index":2695,"title":{},"body":{"injectables/KycDetailsService.html":{},"injectables/SettingsService.html":{}}}],["this.userservice.findbyids",{"_index":615,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/ResidencesService.html":{},"injectables/TenantsService.html":{}}}],["this.usersmodel",{"_index":4554,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["this.usersmodel(persistencemodel",{"_index":4546,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["this.usersmodel.deleteone",{"_index":4569,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["this.usersmodel.find",{"_index":4563,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["this.usersmodel.findbyid(id",{"_index":4562,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["this.usersmodel.findone",{"_index":4564,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["this.usersmodel.findone(filter",{"_index":4565,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["this.usersmodel.findoneandupdate",{"_index":4566,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["this.usersrepository.create",{"_index":4600,"title":{},"body":{"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["this.usersrepository.create(persistencemodel",{"_index":4590,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["this.usersrepository.find",{"_index":4594,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["this.usersrepository.findbyemail",{"_index":4628,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findbyemail(email",{"_index":4655,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findbyid(id",{"_index":4653,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findbyids(ids",{"_index":4654,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findbysocialidandprovider",{"_index":4656,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findmanywithpagination",{"_index":4652,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":4597,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["this.usersrepository.remove(id",{"_index":4687,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save",{"_index":4589,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["this.usersrepository.softdelete(id",{"_index":4602,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["this.usersrepository.update(id",{"_index":4682,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create",{"_index":1341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createprofiledto",{"_index":4521,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyemail(email",{"_index":1372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyemail(logindto.email",{"_index":1309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyemail(socialemail",{"_index":1332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyemail(userdto.email",{"_index":1398,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyid(id",{"_index":4527,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(session.user.id",{"_index":1406,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyid(user.id",{"_index":1344,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyid(userid",{"_index":1363,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyid(userjwtpayload.id",{"_index":1383,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbysocialidandprovider",{"_index":1334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findmanywithpagination",{"_index":4523,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":4529,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(user.id",{"_index":1411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.update(id",{"_index":4528,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(user.id",{"_index":1338,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.update(userjwtpayload.id",{"_index":1402,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":269,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/AccountsService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"injectables/FilesLocalService.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantsService.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["ticket",{"_index":1206,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["ticket.getpayload",{"_index":1210,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["time",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["timestamp",{"_index":697,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{}}}],["timestamps",{"_index":2681,"title":{},"body":{"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["timezone",{"_index":778,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["title",{"_index":2802,"title":{},"body":{"injectables/MailService.html":{}}}],["todo",{"_index":2731,"title":{},"body":{"classes/LatestChanges1745163536016.html":{}}}],["todomain",{"_index":131,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["todomain(raw",{"_index":133,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["tojson",{"_index":1818,"title":{},"body":{"classes/EntityRelationalHelper.html":{},"classes/FileSchemaClass.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["token",{"_index":1323,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"classes/RefreshResponseDto.html":{},"entities/SettingsEntity.html":{},"changelog.html":{}}}],["token1",{"_index":4231,"title":{},"body":{"classes/Tokens.html":{}}}],["token2",{"_index":4232,"title":{},"body":{"classes/Tokens.html":{}}}],["tokenexpires",{"_index":1324,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"classes/RefreshResponseDto.html":{}}}],["tokenexpiresin",{"_index":1374,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":4229,"title":{"classes/Tokens.html":{}},"body":{"classes/Tokens.html":{},"changelog.html":{}}}],["tolowercase",{"_index":2287,"title":{},"body":{"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{}}}],["tolowercase().replace(/\\s+/g",{"_index":4493,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["topersistence",{"_index":132,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["topersistence(domainentity",{"_index":138,"title":{},"body":{"classes/AccountMapper.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/RegionMapper.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["toplainonly",{"_index":1809,"title":{},"body":{"classes/EntityDocumentHelper.html":{},"classes/FileType.html":{},"classes/User.html":{}}}],["tort",{"_index":5839,"title":{},"body":{"license.html":{}}}],["townhouse",{"_index":1590,"title":{},"body":{"classes/CreateResidence1747295167463.html":{},"miscellaneous/enumerations.html":{}}}],["tracks",{"_index":376,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["transaction",{"_index":764,"title":{},"body":{"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":1133,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityDocumentHelper.html":{},"classes/FileType.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["transform(lowercasetransformer",{"_index":1138,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["transform(value",{"_index":1808,"title":{},"body":{"classes/EntityDocumentHelper.html":{}}}],["transformedcriteria",{"_index":3448,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["transformer",{"_index":1134,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/FileType.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["transformer/issues/879",{"_index":1812,"title":{},"body":{"classes/EntityDocumentHelper.html":{}}}],["transformfnparams",{"_index":5920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transportation",{"_index":4095,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["transportation_service",{"_index":818,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/LatestChanges1745163536016.html":{},"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["transporter",{"_index":2824,"title":{},"body":{"injectables/MailerService.html":{}}}],["trialperioddays",{"_index":3683,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["trucks",{"_index":352,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["true",{"_index":36,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"modules/AppModule.html":{},"injectables/AuthAppleService.html":{},"injectables/AuthFacebookService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateUserDto.html":{},"classes/EntityDocumentHelper.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"classes/FilterUserDto.html":{},"injectables/HomeService.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"controllers/RegionsController.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"modules/SeedModule.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsSeedService.html":{},"classes/SortUserDto.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"injectables/TypeOrmConfigService.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"miscellaneous/variables.html":{}}}],["true})@apiokresponse({type",{"_index":511,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{}}}],["true})@httpcode(httpstatus.no_content",{"_index":4510,"title":{},"body":{"controllers/UsersController.html":{}}}],["true})@index",{"_index":3459,"title":{},"body":{"entities/SessionEntity.html":{}}}],["true})@joincolumn",{"_index":3876,"title":{},"body":{"entities/TenantEntity.html":{},"entities/UserEntity.html":{}}}],["true})@jointable",{"_index":106,"title":{},"body":{"entities/AccountEntity.html":{},"entities/ResidenceEntity.html":{},"entities/UserEntity.html":{}}}],["true})@type(undefined",{"_index":2372,"title":{},"body":{"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{}}}],["try",{"_index":1357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RegionSeedService.html":{}}}],["twitter",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"entities/AccountEntity.html":{},"classes/AccountMapper.html":{},"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountSeedService.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"controllers/AuthAppleController.html":{},"classes/AuthAppleLoginDto.html":{},"injectables/AuthAppleService.html":{},"classes/AuthConfirmEmailDto.html":{},"controllers/AuthController.html":{},"classes/AuthEmailLoginDto.html":{},"controllers/AuthFacebookController.html":{},"classes/AuthFacebookLoginDto.html":{},"injectables/AuthFacebookService.html":{},"classes/AuthForgotPasswordDto.html":{},"controllers/AuthGoogleController.html":{},"classes/AuthGoogleLoginDto.html":{},"injectables/AuthGoogleService.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"classes/EntityRelationalHelper.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"interfaces/FacebookInterface.html":{},"injectables/FileDocumentRepository.html":{},"classes/FileDto.html":{},"entities/FileEntity.html":{},"classes/FileMapper.html":{},"classes/FileMapper-1.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"classes/FileResponseDto.html":{},"classes/FileResponseDto-1.html":{},"classes/FileResponseDto-2.html":{},"classes/FileSchemaClass.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"controllers/FilesLocalController.html":{},"injectables/FilesLocalService.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/FilesService.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"injectables/HomeService.html":{},"interfaces/IPaginationOptions.html":{},"classes/InfinityPaginationResponseDto.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"classes/KycDetailsDto.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/KycDetailsSchemaClass.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"classes/LoginResponseDto.html":{},"interfaces/MailData.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"classes/RefreshResponseDto.html":{},"classes/Region.html":{},"classes/RegionDto.html":{},"entities/RegionEntity.html":{},"classes/RegionMapper.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionSeedService.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/Residence.html":{},"classes/ResidenceDto.html":{},"entities/ResidenceEntity.html":{},"classes/ResidenceMapper.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidenceSeedService.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/ResolvePromisesInterceptor.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"entities/RoleEntity.html":{},"classes/RoleSchema.html":{},"injectables/RoleSeedService.html":{},"guards/RolesGuard.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"classes/SettingsDto.html":{},"entities/SettingsEntity.html":{},"classes/SettingsMapper.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"interfaces/SocialInterface.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"entities/StatusEntity.html":{},"classes/StatusSchema.html":{},"injectables/StatusSeedService.html":{},"classes/Tenant.html":{},"classes/TenantDto.html":{},"entities/TenantEntity.html":{},"classes/TenantMapper.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeDto.html":{},"entities/TenantTypeEntity.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/Tokens.html":{},"injectables/TypeOrmConfigService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"classes/UserSchemaClass.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.dto",{"_index":1669,"title":{},"body":{"classes/CreateTenantDto.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"classes/UpdateTenantTypeDto.html":{}}}],["type.dto.ts",{"_index":1682,"title":{},"body":{"classes/CreateTenantTypeDto.html":{},"classes/TenantTypeDto.html":{},"classes/UpdateTenantTypeDto.html":{}}}],["type.dto.ts:21",{"_index":1686,"title":{},"body":{"classes/CreateTenantTypeDto.html":{}}}],["type.dto.ts:28",{"_index":1685,"title":{},"body":{"classes/CreateTenantTypeDto.html":{}}}],["type.dto.ts:36",{"_index":1687,"title":{},"body":{"classes/CreateTenantTypeDto.html":{}}}],["type.dto.ts:8",{"_index":4005,"title":{},"body":{"classes/TenantTypeDto.html":{}}}],["type.entity",{"_index":1689,"title":{},"body":{"classes/CreateTenantTypeDto.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"entities/TenantEntity.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"classes/TenantType.html":{},"classes/TenantTypeMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{}}}],["type.entity.ts",{"_index":4006,"title":{},"body":{"entities/TenantTypeEntity.html":{},"miscellaneous/enumerations.html":{}}}],["type.entity.ts:41",{"_index":4009,"title":{},"body":{"entities/TenantTypeEntity.html":{}}}],["type.entity.ts:48",{"_index":4007,"title":{},"body":{"entities/TenantTypeEntity.html":{}}}],["type.entity.ts:54",{"_index":4011,"title":{},"body":{"entities/TenantTypeEntity.html":{}}}],["type.entity.ts:57",{"_index":4010,"title":{},"body":{"entities/TenantTypeEntity.html":{}}}],["type.entity.ts:60",{"_index":4008,"title":{},"body":{"entities/TenantTypeEntity.html":{}}}],["type.entity.ts:63",{"_index":4012,"title":{},"body":{"entities/TenantTypeEntity.html":{}}}],["type.enum",{"_index":70,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateResidenceDto.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{}}}],["type.enum.ts",{"_index":5692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.mapper",{"_index":3903,"title":{},"body":{"classes/TenantMapper.html":{},"injectables/TenantTypeRelationalRepository.html":{}}}],["type.mapper.ts",{"_index":4015,"title":{},"body":{"classes/TenantTypeMapper.html":{}}}],["type.mapper.ts:24",{"_index":4017,"title":{},"body":{"classes/TenantTypeMapper.html":{}}}],["type.mapper.ts:8",{"_index":4016,"title":{},"body":{"classes/TenantTypeMapper.html":{}}}],["type.repository",{"_index":3131,"title":{},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesService.html":{}}}],["type.repository.ts",{"_index":4024,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{}}}],["type.repository.ts:11",{"_index":4046,"title":{},"body":{"classes/TenantTypeRepository.html":{}}}],["type.repository.ts:12",{"_index":4026,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["type.repository.ts:17",{"_index":4047,"title":{},"body":{"classes/TenantTypeRepository.html":{}}}],["type.repository.ts:18",{"_index":4027,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["type.repository.ts:19",{"_index":4048,"title":{},"body":{"classes/TenantTypeRepository.html":{}}}],["type.repository.ts:21",{"_index":4049,"title":{},"body":{"classes/TenantTypeRepository.html":{}}}],["type.repository.ts:26",{"_index":4028,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{}}}],["type.repository.ts:39",{"_index":4029,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["type.repository.ts:47",{"_index":4030,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["type.repository.ts:55",{"_index":4032,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["type.repository.ts:7",{"_index":4045,"title":{},"body":{"classes/TenantTypeRepository.html":{}}}],["type.repository.ts:79",{"_index":4031,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["type.ts",{"_index":3998,"title":{},"body":{"classes/TenantType.html":{}}}],["type.ts:15",{"_index":3999,"title":{},"body":{"classes/TenantType.html":{}}}],["type.ts:21",{"_index":4003,"title":{},"body":{"classes/TenantType.html":{}}}],["type.ts:26",{"_index":4002,"title":{},"body":{"classes/TenantType.html":{}}}],["type.ts:29",{"_index":4000,"title":{},"body":{"classes/TenantType.html":{}}}],["type.ts:32",{"_index":4004,"title":{},"body":{"classes/TenantType.html":{}}}],["type.ts:9",{"_index":4001,"title":{},"body":{"classes/TenantType.html":{}}}],["typealiases",{"_index":5852,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":4098,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["typedef.code",{"_index":4099,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["typedef.description",{"_index":4101,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["typedef.name",{"_index":4100,"title":{},"body":{"injectables/TenantTypesSeedService.html":{}}}],["typeid",{"_index":835,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["typeobject",{"_index":4180,"title":{},"body":{"injectables/TenantsService.html":{}}}],["typeof",{"_index":2624,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}}}],["typeorm",{"_index":122,"title":{},"body":{"entities/AccountEntity.html":{},"injectables/AccountRelationalRepository.html":{},"injectables/AccountSeedService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"modules/AppModule.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityRelationalHelper.html":{},"entities/FileEntity.html":{},"injectables/FileRelationalRepository.html":{},"injectables/KycDetailSeedService.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/LatestChanges1745163536016.html":{},"entities/RegionEntity.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/RegionSeedService.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/ResidenceSeedService.html":{},"entities/RoleEntity.html":{},"injectables/RoleSeedService.html":{},"entities/SessionEntity.html":{},"injectables/SessionRelationalRepository.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/SettingsSeedService.html":{},"entities/StatusEntity.html":{},"injectables/StatusSeedService.html":{},"entities/TenantEntity.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantSeedService.html":{},"entities/TenantTypeEntity.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/TenantTypesSeedService.html":{},"entities/UserEntity.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersRelationalRepository.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["typeormconfigservice",{"_index":903,"title":{"injectables/TypeOrmConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":307,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AppModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/RegionSeedModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/RoleSeedModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesSeedModule.html":{}}}],["typeormmodule.forfeature",{"_index":313,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/ResidenceSeedModule.html":{}}}],["typeormmodule.forfeature([accountentity",{"_index":3075,"title":{},"body":{"modules/RelationalAccountPersistenceModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":3079,"title":{},"body":{"modules/RelationalFilePersistenceModule.html":{}}}],["typeormmodule.forfeature([kycdetailsentity",{"_index":2486,"title":{},"body":{"modules/KycDetailSeedModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{}}}],["typeormmodule.forfeature([regionentity",{"_index":2992,"title":{},"body":{"modules/RegionSeedModule.html":{},"modules/RelationalRegionPersistenceModule.html":{}}}],["typeormmodule.forfeature([residenceentity",{"_index":3097,"title":{},"body":{"modules/RelationalResidencePersistenceModule.html":{}}}],["typeormmodule.forfeature([roleentity",{"_index":3358,"title":{},"body":{"modules/RoleSeedModule.html":{}}}],["typeormmodule.forfeature([sessionentity",{"_index":3105,"title":{},"body":{"modules/RelationalSessionPersistenceModule.html":{}}}],["typeormmodule.forfeature([settingsentity",{"_index":3116,"title":{},"body":{"modules/RelationalSettingsPersistenceModule.html":{},"modules/SettingsSeedModule.html":{}}}],["typeormmodule.forfeature([statusentity",{"_index":3836,"title":{},"body":{"modules/StatusSeedModule.html":{}}}],["typeormmodule.forfeature([tenantentity",{"_index":3125,"title":{},"body":{"modules/RelationalTenantPersistenceModule.html":{},"modules/TenantSeedModule.html":{}}}],["typeormmodule.forfeature([tenanttypeentity",{"_index":3136,"title":{},"body":{"modules/RelationalTenantTypePersistenceModule.html":{},"modules/TenantTypesSeedModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":3143,"title":{},"body":{"modules/RelationalUserPersistenceModule.html":{}}}],["typeormmodule.forrootasync",{"_index":924,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["typeormmoduleoptions",{"_index":4240,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["typeormoptionsfactory",{"_index":4241,"title":{},"body":{"injectables/TypeOrmConfigService.html":{}}}],["types",{"_index":1552,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{},"injectables/TenantSeedService.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{}}}],["types.controller",{"_index":4074,"title":{},"body":{"modules/TenantTypesModule.html":{}}}],["types.controller.ts",{"_index":4051,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["types.controller.ts:108",{"_index":4056,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["types.controller.ts:45",{"_index":4053,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["types.controller.ts:53",{"_index":4054,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["types.controller.ts:82",{"_index":4055,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["types.controller.ts:95",{"_index":4058,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["types.dto",{"_index":4061,"title":{},"body":{"controllers/TenantTypesController.html":{}}}],["types.dto.ts",{"_index":2413,"title":{},"body":{"classes/FindAllTenantTypesDto.html":{}}}],["types.dto.ts:10",{"_index":2415,"title":{},"body":{"classes/FindAllTenantTypesDto.html":{}}}],["types.dto.ts:16",{"_index":2414,"title":{},"body":{"classes/FindAllTenantTypesDto.html":{}}}],["types.module",{"_index":931,"title":{},"body":{"modules/AppModule.html":{},"modules/TenantsModule.html":{}}}],["types.module.ts",{"_index":4073,"title":{},"body":{"modules/TenantTypesModule.html":{}}}],["types.service",{"_index":4060,"title":{},"body":{"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"injectables/TenantsService.html":{}}}],["types.service.ts",{"_index":4102,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["types.service.ts:13",{"_index":4103,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["types.service.ts:19",{"_index":4104,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["types.service.ts:34",{"_index":4105,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["types.service.ts:47",{"_index":4106,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["types.service.ts:51",{"_index":4107,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["types.service.ts:55",{"_index":4109,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["types.service.ts:74",{"_index":4108,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["types/domain/tenant",{"_index":3862,"title":{},"body":{"classes/Tenant.html":{},"classes/TenantType.html":{},"injectables/TenantsService.html":{}}}],["types/dto/create",{"_index":1681,"title":{},"body":{"classes/CreateTenantTypeDto.html":{}}}],["types/dto/find",{"_index":2412,"title":{},"body":{"classes/FindAllTenantTypesDto.html":{}}}],["types/dto/tenant",{"_index":1668,"title":{},"body":{"classes/CreateTenantDto.html":{},"classes/TenantTypeDto.html":{}}}],["types/dto/update",{"_index":4285,"title":{},"body":{"classes/UpdateTenantTypeDto.html":{}}}],["types/infrastructure/persistence/relational/entities/tenant",{"_index":3890,"title":{},"body":{"entities/TenantEntity.html":{},"modules/TenantSeedModule.html":{},"injectables/TenantSeedService.html":{},"entities/TenantTypeEntity.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["types/infrastructure/persistence/relational/mappers/tenant",{"_index":3902,"title":{},"body":{"classes/TenantMapper.html":{},"classes/TenantTypeMapper.html":{}}}],["types/infrastructure/persistence/relational/relational",{"_index":3130,"title":{},"body":{"modules/RelationalTenantTypePersistenceModule.html":{}}}],["types/infrastructure/persistence/relational/repositories/tenant",{"_index":4023,"title":{},"body":{"injectables/TenantTypeRelationalRepository.html":{}}}],["types/infrastructure/persistence/tenant",{"_index":4044,"title":{},"body":{"classes/TenantTypeRepository.html":{}}}],["types/jwt",{"_index":2457,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["types/multer",{"_index":5200,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["types/prompts",{"_index":5662,"title":{},"body":{"dependencies.html":{}}}],["types/tenant",{"_index":930,"title":{},"body":{"modules/AppModule.html":{},"controllers/TenantTypesController.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"injectables/TenantTypesSeedService.html":{},"injectables/TenantTypesService.html":{},"modules/TenantsModule.html":{},"injectables/TenantsService.html":{}}}],["typescript",{"_index":5644,"title":{},"body":{"changelog.html":{}}}],["typical",{"_index":5733,"title":{},"body":{"index.html":{}}}],["typo",{"_index":5635,"title":{},"body":{"changelog.html":{}}}],["typos",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":4811,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["ui/ux",{"_index":3602,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["unauthorizedexception",{"_index":1286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":507,"title":{},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/CreateRegionDto.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/FilterUserDto.html":{},"classes/KycDetails.html":{},"controllers/KycDetailsController.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsMapper-1.html":{},"injectables/KycDetailsService.html":{},"injectables/MailerService.html":{},"classes/QueryUserDto.html":{},"classes/Region.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"entities/ResidenceEntity.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/SortUserDto.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"injectables/TypeOrmConfigService.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserSchemaClass.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["undefined})@get(':id')@httpcode(httpstatus.ok)@apiparam({name",{"_index":4508,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@get('me')@useguards(undefined)@apiokresponse({type",{"_index":1064,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@get()@httpcode(httpstatus.ok",{"_index":4505,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@isoptional()@isstring",{"_index":1509,"title":{},"body":{"classes/CreateKycDetailsDto.html":{}}}],["undefined})@patch(':id')@httpcode(httpstatus.ok)@apiparam({name",{"_index":4513,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@patch('me')@useguards(undefined)@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":1085,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('email/login')@apiokresponse({type",{"_index":1056,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post('login')@httpcode(httpstatus.ok",{"_index":961,"title":{},"body":{"controllers/AuthAppleController.html":{},"controllers/AuthFacebookController.html":{},"controllers/AuthGoogleController.html":{}}}],["undefined})@post('refresh')@useguards(undefined)@httpcode(httpstatus.ok",{"_index":1070,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@post()@httpcode(httpstatus.created",{"_index":4501,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@serializeoptions({groups",{"_index":4504,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@useinterceptors(undefined",{"_index":2237,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["unique",{"_index":694,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateUser1715028537217.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{}}}],["units",{"_index":5763,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":593,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/AnonymousStrategy.html":{},"injectables/AuthService.html":{},"classes/EntityDocumentHelper.html":{},"controllers/FilesS3PresignedController.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{}}}],["unprocessableentityexception",{"_index":602,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"modules/FilesLocalModule.html":{},"injectables/FilesLocalService.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"injectables/FilesS3PresignedService.html":{},"injectables/FilesS3Service.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":656,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{},"index.html":{}}}],["up(/**queryrunner",{"_index":661,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{}}}],["up(queryrunner",{"_index":721,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["update",{"_index":212,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["update(@param('id",{"_index":564,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/RegionsController.html":{},"controllers/TenantsController.html":{}}}],["update(id",{"_index":232,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"controllers/KycDetailsController.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["update(randomstringgenerator",{"_index":1320,"title":{},"body":{"injectables/AuthService.html":{}}}],["update(request",{"_index":1082,"title":{},"body":{"controllers/AuthController.html":{}}}],["update(userjwtpayload",{"_index":1278,"title":{},"body":{"injectables/AuthService.html":{}}}],["update.dto",{"_index":1091,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["update.dto.ts",{"_index":1423,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["update.dto.ts:10",{"_index":1440,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["update.dto.ts:15",{"_index":1430,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["update.dto.ts:20",{"_index":1432,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["update.dto.ts:27",{"_index":1427,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["update.dto.ts:33",{"_index":1436,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["update.dto.ts:38",{"_index":1434,"title":{},"body":{"classes/AuthUpdateDto.html":{}}}],["updateaccountdto",{"_index":515,"title":{"classes/UpdateAccountDto.html":{}},"body":{"controllers/AccountsController.html":{},"injectables/AccountsService.html":{},"classes/UpdateAccountDto.html":{}}}],["updateaccountdto.active",{"_index":640,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.balance",{"_index":645,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.callbackurl",{"_index":641,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.description",{"_index":647,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.name",{"_index":648,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.notificationchannel",{"_index":642,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.notificationtype",{"_index":643,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.number",{"_index":646,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.owner",{"_index":635,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.owner.length",{"_index":637,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.owner.map((entity",{"_index":636,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.receivenotification",{"_index":644,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.tenant",{"_index":633,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.tenant.id",{"_index":634,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updateaccountdto.type",{"_index":639,"title":{},"body":{"injectables/AccountsService.html":{}}}],["updatedat",{"_index":24,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"classes/Session.html":{},"entities/SessionEntity.html":{},"classes/SessionSchemaClass.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"classes/TenantType.html":{},"entities/TenantTypeEntity.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserSchemaClass.html":{}}}],["updatedatecolumn",{"_index":113,"title":{},"body":{"entities/AccountEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{}}}],["updatedentity",{"_index":272,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"injectables/RegionRelationalRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"injectables/SessionRelationalRepository.html":{},"injectables/SettingsRelationalRepository.html":{},"injectables/TenantRelationalRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["updatekycdetailsdto",{"_index":2536,"title":{"classes/UpdateKycDetailsDto.html":{}},"body":{"controllers/KycDetailsController.html":{},"injectables/KycDetailsService.html":{},"classes/UpdateKycDetailsDto.html":{}}}],["updatekycdetailsdto.documentdata",{"_index":2717,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.documentnumber",{"_index":2718,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.documenttype",{"_index":2719,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.status",{"_index":2716,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.subjecttype",{"_index":2720,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.submittedat",{"_index":2715,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.tenant",{"_index":2708,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.tenant.id",{"_index":2709,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.user",{"_index":2710,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.user.id",{"_index":2711,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.verifiedat",{"_index":2714,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updatekycdetailsdto.verifiedby",{"_index":2713,"title":{},"body":{"injectables/KycDetailsService.html":{}}}],["updateprofiledto",{"_index":4512,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateregiondto",{"_index":3020,"title":{"classes/UpdateRegionDto.html":{}},"body":{"controllers/RegionsController.html":{},"injectables/RegionsService.html":{},"classes/UpdateRegionDto.html":{}}}],["updateregiondto.boundary",{"_index":3068,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateregiondto.centroidlat",{"_index":3067,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateregiondto.centroidlon",{"_index":3066,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateregiondto.name",{"_index":3069,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateregiondto.operatinghours",{"_index":3064,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateregiondto.servicetypes",{"_index":3065,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateregiondto.tenant",{"_index":3060,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateregiondto.tenant.id",{"_index":3061,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateregiondto.zipcodes",{"_index":3063,"title":{},"body":{"injectables/RegionsService.html":{}}}],["updateresidencedto",{"_index":3252,"title":{"classes/UpdateResidenceDto.html":{}},"body":{"controllers/ResidencesController.html":{},"injectables/ResidencesService.html":{},"classes/UpdateResidenceDto.html":{}}}],["updateresidencedto.charge",{"_index":3310,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.isactive",{"_index":3309,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.name",{"_index":3311,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.occupants",{"_index":3300,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.occupants.length",{"_index":3302,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.occupants.map((entity",{"_index":3301,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.region",{"_index":3303,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.region.id",{"_index":3304,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.tenant",{"_index":3305,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.tenant.id",{"_index":3306,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updateresidencedto.type",{"_index":3308,"title":{},"body":{"injectables/ResidencesService.html":{}}}],["updates",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["updatesettingsdto",{"_index":3569,"title":{"classes/UpdateSettingsDto.html":{}},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"classes/UpdateSettingsDto.html":{}}}],["updatesettingsdto.config",{"_index":3807,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesettingsdto.settingstype",{"_index":3808,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesettingsdto.subjecttype",{"_index":3809,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesettingsdto.tenant",{"_index":3802,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesettingsdto.tenant.id",{"_index":3803,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesettingsdto.user",{"_index":3804,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatesettingsdto.user.id",{"_index":3805,"title":{},"body":{"injectables/SettingsService.html":{}}}],["updatetenantdto",{"_index":4131,"title":{"classes/UpdateTenantDto.html":{}},"body":{"controllers/TenantsController.html":{},"injectables/TenantsService.html":{},"classes/UpdateTenantDto.html":{}}}],["updatetenantdto.address",{"_index":4223,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.domain",{"_index":4221,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.isactive",{"_index":4227,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.kycsubmissions",{"_index":4214,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.kycsubmissions.length",{"_index":4216,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.kycsubmissions.map((entity",{"_index":4215,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.logo",{"_index":4210,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.logo.id",{"_index":4211,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.name",{"_index":4226,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.primaryemail",{"_index":4225,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.primaryphone",{"_index":4224,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.regions",{"_index":4204,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.regions.length",{"_index":4206,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.regions.map((entity",{"_index":4205,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.schemaname",{"_index":4222,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.settings",{"_index":4207,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.settings.length",{"_index":4209,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.settings.map((entity",{"_index":4208,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.type",{"_index":4212,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.type.id",{"_index":4213,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.users",{"_index":4217,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.users.length",{"_index":4219,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenantdto.users.map((entity",{"_index":4218,"title":{},"body":{"injectables/TenantsService.html":{}}}],["updatetenanttypedto",{"_index":4057,"title":{"classes/UpdateTenantTypeDto.html":{}},"body":{"controllers/TenantTypesController.html":{},"injectables/TenantTypesService.html":{},"classes/UpdateTenantTypeDto.html":{}}}],["updatetenanttypedto.code",{"_index":4121,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["updatetenanttypedto.description",{"_index":4120,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["updatetenanttypedto.name",{"_index":4122,"title":{},"body":{"injectables/TenantTypesService.html":{}}}],["updateuserdto",{"_index":4287,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto.email",{"_index":4671,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.firstname",{"_index":4683,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.kycsubmissions",{"_index":4663,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.kycsubmissions.length",{"_index":4665,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.kycsubmissions.map((entity",{"_index":4664,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.lastname",{"_index":4684,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.password",{"_index":4668,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.photo",{"_index":4675,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.photo.id",{"_index":4674,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.photo?.id",{"_index":4673,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.provider",{"_index":4685,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.regions",{"_index":4657,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.regions.length",{"_index":4659,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.regions.map((entity",{"_index":4658,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.role.id",{"_index":4678,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.role?.id",{"_index":4676,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.settings",{"_index":4660,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.settings.length",{"_index":4662,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.settings.map((entity",{"_index":4661,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.socialid",{"_index":4686,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.status.id",{"_index":4681,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.status?.id",{"_index":4679,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.tenant",{"_index":4666,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto.tenant.id",{"_index":4667,"title":{},"body":{"injectables/UsersService.html":{}}}],["updating",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":5615,"title":{},"body":{"changelog.html":{}}}],["uploadedfile",{"_index":2239,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["uploadfile",{"_index":2228,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{}}}],["uploadfile(@body",{"_index":2333,"title":{},"body":{"controllers/FilesS3PresignedController.html":{}}}],["uploadfile(file",{"_index":2232,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{}}}],["uploads",{"_index":5760,"title":{},"body":{"index.html":{}}}],["uploadsignedurl",{"_index":2168,"title":{},"body":{"classes/FileResponseDto-2.html":{},"injectables/FilesS3PresignedService.html":{}}}],["uq_0ed69b4239b1f892b96798065a1",{"_index":834,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["uq_4c0533c3a7e87116891dec23578",{"_index":827,"title":{},"body":{"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{}}}],["uq_73a44889926ed74ebd527dc9a96",{"_index":679,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["uq_7e9514d9b3815c4c9c059dc6a2d",{"_index":669,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{}}}],["uq_e12875dfb3b1d92d7d7c5377e22",{"_index":1704,"title":{},"body":{"classes/CreateUser1715028537217.html":{}}}],["uri",{"_index":2867,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["url",{"_index":1997,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"injectables/MailService.html":{},"injectables/TypeOrmConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["url.searchparams.set('expires",{"_index":2814,"title":{},"body":{"injectables/MailService.html":{}}}],["url.searchparams.set('hash",{"_index":2789,"title":{},"body":{"injectables/MailService.html":{}}}],["url.tostring",{"_index":2794,"title":{},"body":{"injectables/MailService.html":{}}}],["usd",{"_index":3779,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["use",{"_index":950,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateAccountDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"injectables/KycDetailSeedService.html":{},"entities/UserEntity.html":{},"changelog.html":{},"license.html":{}}}],["useclass",{"_index":923,"title":{},"body":{"modules/AppModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/SeedModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":942,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{}}}],["useguards",{"_index":523,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard('jwt",{"_index":546,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":2240,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":2257,"title":{},"body":{"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{}}}],["user",{"_index":54,"title":{"classes/User.html":{}},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"controllers/AuthController.html":{},"injectables/AuthGoogleService.html":{},"injectables/AuthService.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FilterUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/KycDetailSeedService.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LoginResponseDto.html":{},"injectables/MailerService.html":{},"injectables/MongooseConfigService.html":{},"classes/QueryUserDto.html":{},"entities/RegionEntity.html":{},"classes/Residence.html":{},"injectables/ResidencesService.html":{},"injectables/RoleSeedService.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper-1.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"classes/SessionSchemaClass.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"injectables/SettingsService.html":{},"classes/SortUserDto.html":{},"classes/Tenant.html":{},"injectables/TenantsService.html":{},"classes/User.html":{},"entities/UserEntity.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"classes/UserRepository.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user\"(\"id",{"_index":692,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{}}}],["user.dto",{"_index":4301,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1723,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:104",{"_index":1741,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:16",{"_index":4291,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:17",{"_index":2373,"title":{},"body":{"classes/FilterUserDto.html":{}}}],["user.dto.ts:21",{"_index":4296,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:23",{"_index":4298,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:24",{"_index":3815,"title":{},"body":{"classes/SortUserDto.html":{}}}],["user.dto.ts:25",{"_index":4299,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:28",{"_index":3813,"title":{},"body":{"classes/SortUserDto.html":{}}}],["user.dto.ts:29",{"_index":4293,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:33",{"_index":4294,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:36",{"_index":2880,"title":{},"body":{"classes/QueryUserDto.html":{}}}],["user.dto.ts:37",{"_index":4297,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:39",{"_index":1733,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":2879,"title":{},"body":{"classes/QueryUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:47",{"_index":4300,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:49",{"_index":1737,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:51",{"_index":2878,"title":{},"body":{"classes/QueryUserDto.html":{}}}],["user.dto.ts:59",{"_index":1728,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:60",{"_index":2882,"title":{},"body":{"classes/QueryUserDto.html":{}}}],["user.dto.ts:68",{"_index":1742,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:74",{"_index":1725,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:78",{"_index":1730,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:80",{"_index":1732,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:82",{"_index":1738,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:86",{"_index":1727,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:90",{"_index":1729,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:94",{"_index":1731,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:99",{"_index":1736,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":1337,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":1326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/KycDetailSeedService.html":{},"classes/SessionMapper-1.html":{},"injectables/SettingsSeedService.html":{}}}],["user.password",{"_index":1314,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.provider",{"_index":1311,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.regions",{"_index":2923,"title":{},"body":{"entities/RegionEntity.html":{}}}],["user.repository",{"_index":1800,"title":{},"body":{"modules/DocumentUserPersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["user.role",{"_index":1327,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role.id",{"_index":1410,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.status",{"_index":1368,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.tenant",{"_index":2501,"title":{},"body":{"injectables/KycDetailSeedService.html":{},"injectables/SettingsSeedService.html":{}}}],["user/user",{"_index":3401,"title":{},"body":{"modules/SeedModule.html":{}}}],["user?.role",{"_index":1407,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.status?.id?.tostring",{"_index":1364,"title":{},"body":{"injectables/AuthService.html":{}}}],["user['email",{"_index":1370,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["user['id",{"_index":1356,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["user['provider",{"_index":4439,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["user['role",{"_index":1413,"title":{},"body":{"injectables/AuthService.html":{}}}],["user['socialid",{"_index":4438,"title":{},"body":{"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["user_regions_region",{"_index":734,"title":{},"body":{"classes/AddRegions1745152940566.html":{}}}],["userbyemail",{"_index":1331,"title":{},"body":{"injectables/AuthService.html":{}}}],["userbyemail.id",{"_index":1399,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata",{"_index":4485,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["userdata.regions",{"_index":4488,"title":{},"body":{"injectables/UserSeedService-1.html":{}}}],["userdto",{"_index":1083,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/UserDto.html":{}}}],["userdto.email",{"_index":1396,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto.oldpassword",{"_index":1386,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto.password",{"_index":1385,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto})@validatenested()@type(undefined)@isnotemptyobject",{"_index":1518,"title":{},"body":{"classes/CreateKycDetailsDto.html":{},"classes/CreateSettingsDto.html":{}}}],["userentity",{"_index":103,"title":{"entities/UserEntity.html":{}},"body":{"entities/AccountEntity.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"modules/KycDetailSeedModule.html":{},"injectables/KycDetailSeedService.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"modules/RelationalUserPersistenceModule.html":{},"entities/ResidenceEntity.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper-1.html":{},"entities/SettingsEntity.html":{},"modules/SettingsSeedModule.html":{},"injectables/SettingsSeedService.html":{},"entities/TenantEntity.html":{},"entities/UserEntity.html":{},"classes/UserMapper-1.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersRelationalRepository.html":{}}}],["userid",{"_index":683,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"injectables/AuthService.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"classes/UserDto.html":{}}}],["userid'})@isnotempty",{"_index":4330,"title":{},"body":{"classes/UserDto.html":{}}}],["userid.tostring",{"_index":3447,"title":{},"body":{"injectables/SessionDocumentRepository.html":{}}}],["userjwtpayload",{"_index":1268,"title":{},"body":{"injectables/AuthService.html":{}}}],["userjwtpayload.sessionid",{"_index":1395,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermapper",{"_index":144,"title":{"classes/UserMapper.html":{},"classes/UserMapper-1.html":{}},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{},"classes/UserMapper.html":{},"classes/UserMapper-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["usermapper.todomain(entity",{"_index":4598,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["usermapper.todomain(item",{"_index":155,"title":{},"body":{"classes/AccountMapper.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{}}}],["usermapper.todomain(newentity",{"_index":4591,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["usermapper.todomain(raw.user",{"_index":2634,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SessionMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{}}}],["usermapper.todomain(updatedentity",{"_index":4601,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["usermapper.todomain(user",{"_index":4568,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["usermapper.todomain(userobject",{"_index":4548,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["usermapper.topersistence",{"_index":4567,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["usermapper.topersistence(data",{"_index":4544,"title":{},"body":{"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{}}}],["usermapper.topersistence(domainentity.user",{"_index":2645,"title":{},"body":{"classes/KycDetailsMapper-1.html":{},"classes/SettingsMapper.html":{}}}],["usermapper.topersistence(item",{"_index":188,"title":{},"body":{"classes/AccountMapper.html":{},"classes/ResidenceMapper.html":{},"classes/TenantMapper.html":{}}}],["username",{"_index":2007,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"entities/SettingsEntity.html":{},"injectables/TypeOrmConfigService.html":{},"miscellaneous/variables.html":{}}}],["usernotfound",{"_index":1345,"title":{},"body":{"injectables/AuthService.html":{}}}],["userobject",{"_index":2694,"title":{},"body":{"injectables/KycDetailsService.html":{},"injectables/SettingsService.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersService.html":{}}}],["userobject.id",{"_index":4672,"title":{},"body":{"injectables/UsersService.html":{}}}],["userobject?.password",{"_index":4669,"title":{},"body":{"injectables/UsersService.html":{}}}],["userobjects",{"_index":4553,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["userobjects.map((userobject",{"_index":4561,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["userrepository",{"_index":318,"title":{"classes/UserRepository.html":{}},"body":{"injectables/AccountSeedService.html":{},"modules/DocumentUserPersistenceModule.html":{},"injectables/KycDetailSeedService.html":{},"modules/RelationalUserPersistenceModule.html":{},"injectables/ResidenceSeedService.html":{},"injectables/SettingsSeedService.html":{},"classes/UserRepository.html":{},"injectables/UserSeedService-1.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["users",{"_index":1647,"title":{},"body":{"classes/CreateTenantDto.html":{},"injectables/KycDetailSeedService.html":{},"entities/RegionEntity.html":{},"injectables/SettingsSeedService.html":{},"classes/Tenant.html":{},"entities/TenantEntity.html":{},"injectables/TenantsService.html":{},"controllers/UsersController.html":{},"changelog.html":{}}}],["users.controller",{"_index":4575,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":4516,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/domain/user",{"_index":67,"title":{},"body":{"classes/Account.html":{},"injectables/AccountsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/KycDetails.html":{},"injectables/KycDetailsService.html":{},"classes/LoginResponseDto.html":{},"classes/Residence.html":{},"injectables/ResidencesService.html":{},"classes/Session.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"classes/Settings.html":{},"injectables/SettingsService.html":{},"classes/Tenant.html":{},"injectables/TenantsService.html":{}}}],["users/dto/user.dto",{"_index":1465,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{}}}],["users/infrastructure/persistence/document/entities/user.schema",{"_index":3464,"title":{},"body":{"classes/SessionMapper.html":{},"classes/SessionSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{}}}],["users/infrastructure/persistence/document/mappers/user.mapper",{"_index":3465,"title":{},"body":{"classes/SessionMapper.html":{}}}],["users/infrastructure/persistence/relational/entities/user.entity",{"_index":116,"title":{},"body":{"entities/AccountEntity.html":{},"modules/AccountSeedModule.html":{},"injectables/AccountSeedService.html":{},"entities/KycDetailsEntity.html":{},"entities/ResidenceEntity.html":{},"modules/ResidenceSeedModule.html":{},"injectables/ResidenceSeedService.html":{},"entities/SessionEntity.html":{},"classes/SessionMapper-1.html":{},"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{},"entities/TenantEntity.html":{},"injectables/UserSeedService-1.html":{}}}],["users/infrastructure/persistence/relational/mappers/user.mapper",{"_index":145,"title":{},"body":{"classes/AccountMapper.html":{},"classes/KycDetailsMapper-1.html":{},"classes/ResidenceMapper.html":{},"classes/SessionMapper-1.html":{},"classes/SettingsMapper.html":{},"classes/TenantMapper.html":{}}}],["users/users.module",{"_index":579,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/KycDetailsModule.html":{},"modules/ResidencesModule.html":{},"modules/SettingsModule.html":{},"modules/TenantsModule.html":{}}}],["users/users.service",{"_index":600,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/AuthService.html":{},"injectables/KycDetailsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{}}}],["userschema",{"_index":1797,"title":{},"body":{"modules/DocumentUserPersistenceModule.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"miscellaneous/variables.html":{}}}],["userschema.index",{"_index":4455,"title":{},"body":{"classes/UserSchemaClass.html":{}}}],["userschemaclass",{"_index":1798,"title":{"classes/UserSchemaClass.html":{}},"body":{"modules/DocumentUserPersistenceModule.html":{},"classes/SessionMapper.html":{},"classes/SessionSchemaClass.html":{},"classes/UserMapper.html":{},"classes/UserSchemaClass.html":{},"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UsersDocumentRepository.html":{}}}],["userschemaclass.name",{"_index":1803,"title":{},"body":{"modules/DocumentUserPersistenceModule.html":{},"modules/UserSeedModule.html":{}}}],["userschemadocument",{"_index":4453,"title":{},"body":{"classes/UserSchemaClass.html":{},"miscellaneous/typealiases.html":{}}}],["userscontroller",{"_index":4496,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["usersdocumentrepository",{"_index":1801,"title":{"injectables/UsersDocumentRepository.html":{}},"body":{"modules/DocumentUserPersistenceModule.html":{},"injectables/UsersDocumentRepository.html":{}}}],["userseedmodule",{"_index":3399,"title":{"modules/UserSeedModule.html":{}},"body":{"modules/SeedModule.html":{},"modules/UserSeedModule.html":{},"modules.html":{},"overview.html":{}}}],["userseedservice",{"_index":4459,"title":{"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{}},"body":{"modules/UserSeedModule.html":{},"injectables/UserSeedService.html":{},"injectables/UserSeedService-1.html":{},"overview.html":{}}}],["userservice",{"_index":588,"title":{},"body":{"injectables/AccountsService.html":{},"injectables/KycDetailsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{}}}],["usersignup",{"_index":2762,"title":{},"body":{"injectables/MailService.html":{}}}],["usersignup(maildata",{"_index":2770,"title":{},"body":{"injectables/MailService.html":{}}}],["usersmodel",{"_index":4533,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["usersmodule",{"_index":576,"title":{"modules/UsersModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/KycDetailsModule.html":{},"modules/ResidencesModule.html":{},"modules/SettingsModule.html":{},"modules/TenantsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersobjects",{"_index":4190,"title":{},"body":{"injectables/TenantsService.html":{}}}],["usersobjects.length",{"_index":4192,"title":{},"body":{"injectables/TenantsService.html":{}}}],["usersrelationalrepository",{"_index":3141,"title":{"injectables/UsersRelationalRepository.html":{}},"body":{"modules/RelationalUserPersistenceModule.html":{},"injectables/UsersRelationalRepository.html":{}}}],["usersrepository",{"_index":4579,"title":{},"body":{"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":589,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AccountsService.html":{},"injectables/AuthService.html":{},"injectables/KycDetailsService.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsService.html":{},"injectables/TenantsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["user})@httpcode(httpstatus.ok",{"_index":1065,"title":{},"body":{"controllers/AuthController.html":{}}}],["user})@serializeoptions({groups",{"_index":4500,"title":{},"body":{"controllers/UsersController.html":{}}}],["using",{"_index":1602,"title":{},"body":{"classes/CreateResidence1747295167463.html":{},"classes/LatestChanges1745163536016.html":{}}}],["utc",{"_index":3780,"title":{},"body":{"injectables/SettingsSeedService.html":{}}}],["utf",{"_index":2850,"title":{},"body":{"injectables/MailerService.html":{}}}],["utilities",{"_index":469,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["utility",{"_index":472,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["utils",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["utils/document",{"_index":2175,"title":{},"body":{"classes/FileSchemaClass.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["utils/dto/infinity",{"_index":538,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["utils/enum/account",{"_index":69,"title":{},"body":{"classes/Account.html":{},"entities/AccountEntity.html":{},"injectables/AccountSeedService.html":{},"classes/CreateAccountDto.html":{}}}],["utils/enum/residence",{"_index":1631,"title":{},"body":{"classes/CreateResidenceDto.html":{},"classes/Residence.html":{},"entities/ResidenceEntity.html":{},"injectables/ResidenceSeedService.html":{}}}],["utils/infinity",{"_index":542,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{}}}],["utils/relational",{"_index":124,"title":{},"body":{"entities/AccountEntity.html":{},"entities/FileEntity.html":{},"entities/KycDetailsEntity.html":{},"entities/RegionEntity.html":{},"entities/ResidenceEntity.html":{},"entities/RoleEntity.html":{},"entities/SessionEntity.html":{},"entities/SettingsEntity.html":{},"entities/StatusEntity.html":{},"entities/TenantEntity.html":{},"entities/TenantTypeEntity.html":{},"entities/UserEntity.html":{}}}],["utils/transformers/lower",{"_index":1136,"title":{},"body":{"classes/AuthEmailLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["utils/types/deep",{"_index":287,"title":{},"body":{"classes/AccountRepository.html":{},"classes/KycDetailsRepository.html":{},"classes/RegionRepository.html":{},"classes/ResidenceRepository.html":{},"classes/SettingsRepository.html":{},"classes/TenantRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{}}}],["utils/types/maybe.type",{"_index":2776,"title":{},"body":{"injectables/MailService.html":{}}}],["utils/types/nullable.type",{"_index":240,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileDocumentRepository.html":{},"injectables/FileRelationalRepository.html":{},"classes/FileRepository.html":{},"injectables/FilesService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/SessionDocumentRepository.html":{},"injectables/SessionRelationalRepository.html":{},"classes/SessionRepository.html":{},"injectables/SessionService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"classes/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["utils/types/or",{"_index":2458,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["utils/types/pagination",{"_index":244,"title":{},"body":{"injectables/AccountRelationalRepository.html":{},"classes/AccountRepository.html":{},"injectables/AccountsService.html":{},"injectables/KycDetailsDocumentRepository.html":{},"injectables/KycDetailsRelationalRepository.html":{},"classes/KycDetailsRepository.html":{},"injectables/KycDetailsService.html":{},"injectables/RegionRelationalRepository.html":{},"classes/RegionRepository.html":{},"injectables/RegionsService.html":{},"injectables/ResidenceRelationalRepository.html":{},"classes/ResidenceRepository.html":{},"injectables/ResidencesService.html":{},"injectables/SettingsRelationalRepository.html":{},"classes/SettingsRepository.html":{},"injectables/SettingsService.html":{},"injectables/TenantRelationalRepository.html":{},"classes/TenantRepository.html":{},"injectables/TenantTypeRelationalRepository.html":{},"classes/TenantTypeRepository.html":{},"injectables/TenantTypesService.html":{},"injectables/TenantsService.html":{},"classes/UserRepository.html":{},"injectables/UsersDocumentRepository.html":{},"injectables/UsersRelationalRepository.html":{},"injectables/UsersService.html":{}}}],["utils/validate",{"_index":1853,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["uuid",{"_index":682,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/LatestChanges1745163536016.html":{}}}],["uuid_generate_v4",{"_index":730,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{}}}],["v0.13.2",{"_index":5210,"title":{},"body":{"changelog.html":{}}}],["v0.14.0",{"_index":5212,"title":{},"body":{"changelog.html":{}}}],["v0.14.1",{"_index":5214,"title":{},"body":{"changelog.html":{}}}],["v0.2.2",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["v0.2.36",{"_index":5470,"title":{},"body":{"changelog.html":{}}}],["v0.2.37",{"_index":5472,"title":{},"body":{"changelog.html":{}}}],["v0.2.38",{"_index":5474,"title":{},"body":{"changelog.html":{}}}],["v0.2.39",{"_index":5476,"title":{},"body":{"changelog.html":{}}}],["v0.2.40",{"_index":5478,"title":{},"body":{"changelog.html":{}}}],["v0.2.41",{"_index":5480,"title":{},"body":{"changelog.html":{}}}],["v0.3.10",{"_index":5482,"title":{},"body":{"changelog.html":{}}}],["v0.3.11",{"_index":5484,"title":{},"body":{"changelog.html":{}}}],["v0.3.12",{"_index":5486,"title":{},"body":{"changelog.html":{}}}],["v0.3.13",{"_index":5488,"title":{},"body":{"changelog.html":{}}}],["v0.3.14",{"_index":5490,"title":{},"body":{"changelog.html":{}}}],["v0.3.15",{"_index":5492,"title":{},"body":{"changelog.html":{}}}],["v0.3.16",{"_index":5494,"title":{},"body":{"changelog.html":{}}}],["v0.3.17",{"_index":5496,"title":{},"body":{"changelog.html":{}}}],["v0.3.19",{"_index":5498,"title":{},"body":{"changelog.html":{}}}],["v0.3.9",{"_index":5500,"title":{},"body":{"changelog.html":{}}}],["v0.5.0",{"_index":5389,"title":{},"body":{"changelog.html":{}}}],["v0.5.2",{"_index":5391,"title":{},"body":{"changelog.html":{}}}],["v0.7.0",{"_index":5393,"title":{},"body":{"changelog.html":{}}}],["v1",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["v1.0.1",{"_index":5044,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["v1.1.1",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["v1.1.3",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["v1.1.5",{"_index":5056,"title":{},"body":{"changelog.html":{}}}],["v1.1.6",{"_index":5058,"title":{},"body":{"changelog.html":{}}}],["v1.1.7",{"_index":5060,"title":{},"body":{"changelog.html":{}}}],["v1.2.0",{"_index":5062,"title":{},"body":{"changelog.html":{}}}],["v1.4.3",{"_index":5294,"title":{},"body":{"changelog.html":{}}}],["v1.4.4",{"_index":5296,"title":{},"body":{"changelog.html":{}}}],["v1.7.4",{"_index":5206,"title":{},"body":{"changelog.html":{}}}],["v1.7.6",{"_index":5208,"title":{},"body":{"changelog.html":{}}}],["v1/${file.path",{"_index":2298,"title":{},"body":{"injectables/FilesLocalService.html":{}}}],["v10",{"_index":5188,"title":{},"body":{"changelog.html":{}}}],["v10.0.1",{"_index":5081,"title":{},"body":{"changelog.html":{}}}],["v10.0.2",{"_index":5083,"title":{},"body":{"changelog.html":{}}}],["v10.0.3",{"_index":5085,"title":{},"body":{"changelog.html":{}}}],["v10.0.4",{"_index":5098,"title":{},"body":{"changelog.html":{}}}],["v10.0.5",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["v10.0.6",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["v10.1.0",{"_index":5087,"title":{},"body":{"changelog.html":{}}}],["v10.1.1",{"_index":5089,"title":{},"body":{"changelog.html":{}}}],["v10.1.2",{"_index":5511,"title":{},"body":{"changelog.html":{}}}],["v10.1.3",{"_index":5513,"title":{},"body":{"changelog.html":{}}}],["v10.2.0",{"_index":5091,"title":{},"body":{"changelog.html":{}}}],["v10.2.10",{"_index":5516,"title":{},"body":{"changelog.html":{}}}],["v10.2.4",{"_index":5518,"title":{},"body":{"changelog.html":{}}}],["v10.2.6",{"_index":5520,"title":{},"body":{"changelog.html":{}}}],["v10.2.7",{"_index":5522,"title":{},"body":{"changelog.html":{}}}],["v10.2.8",{"_index":5524,"title":{},"body":{"changelog.html":{}}}],["v10.3.0",{"_index":5302,"title":{},"body":{"changelog.html":{}}}],["v10.3.1",{"_index":5304,"title":{},"body":{"changelog.html":{}}}],["v10.3.2",{"_index":5306,"title":{},"body":{"changelog.html":{}}}],["v10.3.3",{"_index":5528,"title":{},"body":{"changelog.html":{}}}],["v10.3.4",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["v10.3.5",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["v10.3.6",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["v10.3.7",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["v10.3.8",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["v10.4.0",{"_index":5312,"title":{},"body":{"changelog.html":{}}}],["v10.4.5",{"_index":5314,"title":{},"body":{"changelog.html":{}}}],["v16.4.0",{"_index":5217,"title":{},"body":{"changelog.html":{}}}],["v16.4.1",{"_index":5219,"title":{},"body":{"changelog.html":{}}}],["v16.4.4",{"_index":5221,"title":{},"body":{"changelog.html":{}}}],["v16.4.5",{"_index":5223,"title":{},"body":{"changelog.html":{}}}],["v2.1.0",{"_index":5064,"title":{},"body":{"changelog.html":{}}}],["v2.10.0",{"_index":5298,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":5066,"title":{},"body":{"changelog.html":{}}}],["v2.3.1",{"_index":5068,"title":{},"body":{"changelog.html":{}}}],["v2.3.2",{"_index":5070,"title":{},"body":{"changelog.html":{}}}],["v2.3.4",{"_index":5072,"title":{},"body":{"changelog.html":{}}}],["v2.9.1",{"_index":5300,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["v3.0.1",{"_index":5075,"title":{},"body":{"changelog.html":{}}}],["v3.0.2",{"_index":5202,"title":{},"body":{"changelog.html":{}}}],["v3.0.3",{"_index":5204,"title":{},"body":{"changelog.html":{}}}],["v3.1.1",{"_index":5077,"title":{},"body":{"changelog.html":{}}}],["v3.2.0",{"_index":5079,"title":{},"body":{"changelog.html":{}}}],["v3.2.1",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["v3.2.2",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["v3.290.0",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["v3.309.0",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["v3.312.0",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["v3.317.0",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["v3.319.0",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["v3.321.1",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["v3.332.0",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["v3.335.0",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["v3.338.0",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["v3.341.0",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["v3.344.0",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["v3.345.0",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["v3.350.0",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["v3.354.0",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["v3.360.0",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["v3.374.0",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["v3.388.0",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["v3.391.0",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["v3.395.0",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["v3.400.0",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["v3.405.0",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["v3.412.0",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["v3.414.0",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["v3.417.0",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["v3.418.0",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["v3.420.0",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["v3.421.0",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["v3.428.0",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["v3.435.0",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["v3.438.0",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["v3.441.0",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["v3.449.0",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["v3.462.0",{"_index":5030,"title":{},"body":{"changelog.html":{}}}],["v3.481.0",{"_index":5032,"title":{},"body":{"changelog.html":{}}}],["v3.484.0",{"_index":5034,"title":{},"body":{"changelog.html":{}}}],["v3.485.0",{"_index":5036,"title":{},"body":{"changelog.html":{}}}],["v3.490.0",{"_index":5038,"title":{},"body":{"changelog.html":{}}}],["v3.501.0",{"_index":5040,"title":{},"body":{"changelog.html":{}}}],["v3.504.0",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["v3.515.0",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["v3.521.0",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["v3.525.0",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["v3.529.1",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["v3.535.0",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["v3.540.0",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["v3.554.0",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["v3.556.0",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["v3.564.0",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["v3.565.0",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["v3.567.0",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["v3.569.0",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["v3.582.0",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["v3.583.0",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":5413,"title":{},"body":{"changelog.html":{}}}],["v4.0.1",{"_index":5395,"title":{},"body":{"changelog.html":{}}}],["v4.1.1",{"_index":5415,"title":{},"body":{"changelog.html":{}}}],["v4.1.2",{"_index":5417,"title":{},"body":{"changelog.html":{}}}],["v4.2.0",{"_index":5456,"title":{},"body":{"changelog.html":{}}}],["v4.3.0",{"_index":5419,"title":{},"body":{"changelog.html":{}}}],["v4.3.1",{"_index":5421,"title":{},"body":{"changelog.html":{}}}],["v4.4.0",{"_index":5423,"title":{},"body":{"changelog.html":{}}}],["v4.4.1",{"_index":5425,"title":{},"body":{"changelog.html":{}}}],["v4.5.0",{"_index":5459,"title":{},"body":{"changelog.html":{}}}],["v4.6.0",{"_index":5461,"title":{},"body":{"changelog.html":{}}}],["v4.6.1",{"_index":5463,"title":{},"body":{"changelog.html":{}}}],["v4.6.2",{"_index":5465,"title":{},"body":{"changelog.html":{}}}],["v4.6.3",{"_index":5467,"title":{},"body":{"changelog.html":{}}}],["v4.7.8",{"_index":5282,"title":{},"body":{"changelog.html":{}}}],["v4.8.1",{"_index":5109,"title":{},"body":{"changelog.html":{}}}],["v4.8.2",{"_index":5111,"title":{},"body":{"changelog.html":{}}}],["v5",{"_index":5113,"title":{},"body":{"changelog.html":{}}}],["v5.0.1",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["v5.0.2",{"_index":5429,"title":{},"body":{"changelog.html":{}}}],["v5.0.3",{"_index":5115,"title":{},"body":{"changelog.html":{}}}],["v5.0.4",{"_index":5117,"title":{},"body":{"changelog.html":{}}}],["v5.0.5",{"_index":5431,"title":{},"body":{"changelog.html":{}}}],["v5.0.6",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["v5.0.7",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["v5.0.8",{"_index":5119,"title":{},"body":{"changelog.html":{}}}],["v5.0.9",{"_index":5121,"title":{},"body":{"changelog.html":{}}}],["v5.1.0",{"_index":5123,"title":{},"body":{"changelog.html":{}}}],["v5.1.1",{"_index":5125,"title":{},"body":{"changelog.html":{}}}],["v5.1.4",{"_index":5127,"title":{},"body":{"changelog.html":{}}}],["v5.1.5",{"_index":5129,"title":{},"body":{"changelog.html":{}}}],["v5.2.0",{"_index":5131,"title":{},"body":{"changelog.html":{}}}],["v6",{"_index":5133,"title":{},"body":{"changelog.html":{}}}],["v6.1.0",{"_index":5135,"title":{},"body":{"changelog.html":{}}}],["v6.1.2",{"_index":5137,"title":{},"body":{"changelog.html":{}}}],["v6.1.3",{"_index":5139,"title":{},"body":{"changelog.html":{}}}],["v6.1.4",{"_index":5141,"title":{},"body":{"changelog.html":{}}}],["v6.2.1",{"_index":5143,"title":{},"body":{"changelog.html":{}}}],["v6.3.0",{"_index":5145,"title":{},"body":{"changelog.html":{}}}],["v6.6.2",{"_index":5343,"title":{},"body":{"changelog.html":{}}}],["v6.6.3",{"_index":5345,"title":{},"body":{"changelog.html":{}}}],["v6.6.5",{"_index":5347,"title":{},"body":{"changelog.html":{}}}],["v6.7.0",{"_index":5349,"title":{},"body":{"changelog.html":{}}}],["v6.7.1",{"_index":5351,"title":{},"body":{"changelog.html":{}}}],["v6.7.2",{"_index":5353,"title":{},"body":{"changelog.html":{}}}],["v6.7.4",{"_index":5355,"title":{},"body":{"changelog.html":{}}}],["v6.7.5",{"_index":5357,"title":{},"body":{"changelog.html":{}}}],["v6.7.6",{"_index":5359,"title":{},"body":{"changelog.html":{}}}],["v6.7.7",{"_index":5361,"title":{},"body":{"changelog.html":{}}}],["v6.7.8",{"_index":5363,"title":{},"body":{"changelog.html":{}}}],["v6.8.0",{"_index":5365,"title":{},"body":{"changelog.html":{}}}],["v6.9.0",{"_index":5367,"title":{},"body":{"changelog.html":{}}}],["v6.9.1",{"_index":5369,"title":{},"body":{"changelog.html":{}}}],["v6.9.10",{"_index":5371,"title":{},"body":{"changelog.html":{}}}],["v6.9.11",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["v6.9.12",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["v6.9.13",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["v6.9.2",{"_index":5373,"title":{},"body":{"changelog.html":{}}}],["v6.9.3",{"_index":5375,"title":{},"body":{"changelog.html":{}}}],["v6.9.4",{"_index":5377,"title":{},"body":{"changelog.html":{}}}],["v6.9.5",{"_index":5379,"title":{},"body":{"changelog.html":{}}}],["v6.9.6",{"_index":5381,"title":{},"body":{"changelog.html":{}}}],["v6.9.7",{"_index":5383,"title":{},"body":{"changelog.html":{}}}],["v6.9.8",{"_index":5385,"title":{},"body":{"changelog.html":{}}}],["v6.9.9",{"_index":5387,"title":{},"body":{"changelog.html":{}}}],["v7",{"_index":5147,"title":{},"body":{"changelog.html":{}}}],["v7.0",{"_index":1167,"title":{},"body":{"injectables/AuthFacebookService.html":{}}}],["v7.0.12",{"_index":5149,"title":{},"body":{"changelog.html":{}}}],["v7.0.4",{"_index":5151,"title":{},"body":{"changelog.html":{}}}],["v7.0.6",{"_index":5153,"title":{},"body":{"changelog.html":{}}}],["v7.1.0",{"_index":5155,"title":{},"body":{"changelog.html":{}}}],["v7.1.1",{"_index":5157,"title":{},"body":{"changelog.html":{}}}],["v7.1.10",{"_index":5159,"title":{},"body":{"changelog.html":{}}}],["v7.1.11",{"_index":5161,"title":{},"body":{"changelog.html":{}}}],["v7.1.12",{"_index":5163,"title":{},"body":{"changelog.html":{}}}],["v7.1.13",{"_index":5165,"title":{},"body":{"changelog.html":{}}}],["v7.1.14",{"_index":5167,"title":{},"body":{"changelog.html":{}}}],["v7.1.15",{"_index":5169,"title":{},"body":{"changelog.html":{}}}],["v7.1.16",{"_index":5171,"title":{},"body":{"changelog.html":{}}}],["v7.1.17",{"_index":5173,"title":{},"body":{"changelog.html":{}}}],["v7.1.2",{"_index":5175,"title":{},"body":{"changelog.html":{}}}],["v7.1.4",{"_index":5177,"title":{},"body":{"changelog.html":{}}}],["v7.1.6",{"_index":5101,"title":{},"body":{"changelog.html":{}}}],["v7.1.7",{"_index":5180,"title":{},"body":{"changelog.html":{}}}],["v7.1.8",{"_index":5182,"title":{},"body":{"changelog.html":{}}}],["v7.10.0",{"_index":5225,"title":{},"body":{"changelog.html":{}}}],["v7.10.1",{"_index":5227,"title":{},"body":{"changelog.html":{}}}],["v7.10.2",{"_index":5229,"title":{},"body":{"changelog.html":{}}}],["v7.10.3",{"_index":5231,"title":{},"body":{"changelog.html":{}}}],["v7.10.4",{"_index":5233,"title":{},"body":{"changelog.html":{}}}],["v7.11.0",{"_index":5235,"title":{},"body":{"changelog.html":{}}}],["v7.12.0",{"_index":5237,"title":{},"body":{"changelog.html":{}}}],["v7.2.0",{"_index":5184,"title":{},"body":{"changelog.html":{}}}],["v7.3.0",{"_index":5186,"title":{},"body":{"changelog.html":{}}}],["v7.3.1",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["v7.4.0",{"_index":5437,"title":{},"body":{"changelog.html":{}}}],["v7.4.1",{"_index":5241,"title":{},"body":{"changelog.html":{}}}],["v7.5.0",{"_index":5243,"title":{},"body":{"changelog.html":{}}}],["v7.5.1",{"_index":5439,"title":{},"body":{"changelog.html":{}}}],["v7.5.2",{"_index":5441,"title":{},"body":{"changelog.html":{}}}],["v7.5.3",{"_index":5443,"title":{},"body":{"changelog.html":{}}}],["v7.5.4",{"_index":5445,"title":{},"body":{"changelog.html":{}}}],["v7.5.6",{"_index":5447,"title":{},"body":{"changelog.html":{}}}],["v7.5.7",{"_index":5449,"title":{},"body":{"changelog.html":{}}}],["v7.6.0",{"_index":5451,"title":{},"body":{"changelog.html":{}}}],["v7.6.1",{"_index":5245,"title":{},"body":{"changelog.html":{}}}],["v7.6.18",{"_index":5530,"title":{},"body":{"changelog.html":{}}}],["v7.6.2",{"_index":5247,"title":{},"body":{"changelog.html":{}}}],["v7.8.0",{"_index":5249,"title":{},"body":{"changelog.html":{}}}],["v7.8.1",{"_index":5454,"title":{},"body":{"changelog.html":{}}}],["v7.9.1",{"_index":5251,"title":{},"body":{"changelog.html":{}}}],["v7.9.2",{"_index":5253,"title":{},"body":{"changelog.html":{}}}],["v8",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["v8.0.1",{"_index":5094,"title":{},"body":{"changelog.html":{}}}],["v8.0.10",{"_index":5534,"title":{},"body":{"changelog.html":{}}}],["v8.0.11",{"_index":5536,"title":{},"body":{"changelog.html":{}}}],["v8.0.2",{"_index":5194,"title":{},"body":{"changelog.html":{}}}],["v8.0.3",{"_index":5196,"title":{},"body":{"changelog.html":{}}}],["v8.0.4",{"_index":5285,"title":{},"body":{"changelog.html":{}}}],["v8.0.6",{"_index":5540,"title":{},"body":{"changelog.html":{}}}],["v8.0.7",{"_index":5542,"title":{},"body":{"changelog.html":{}}}],["v8.0.8",{"_index":5544,"title":{},"body":{"changelog.html":{}}}],["v8.0.9",{"_index":5546,"title":{},"body":{"changelog.html":{}}}],["v8.1.0",{"_index":5105,"title":{},"body":{"changelog.html":{}}}],["v8.1.1",{"_index":5256,"title":{},"body":{"changelog.html":{}}}],["v8.1.2",{"_index":5289,"title":{},"body":{"changelog.html":{}}}],["v8.1.3",{"_index":5291,"title":{},"body":{"changelog.html":{}}}],["v8.1.4",{"_index":5318,"title":{},"body":{"changelog.html":{}}}],["v8.1.5",{"_index":5320,"title":{},"body":{"changelog.html":{}}}],["v8.1.6",{"_index":5322,"title":{},"body":{"changelog.html":{}}}],["v8.1.9",{"_index":5324,"title":{},"body":{"changelog.html":{}}}],["v8.10.0",{"_index":5397,"title":{},"body":{"changelog.html":{}}}],["v8.11.0",{"_index":5399,"title":{},"body":{"changelog.html":{}}}],["v8.11.1",{"_index":5401,"title":{},"body":{"changelog.html":{}}}],["v8.11.2",{"_index":5403,"title":{},"body":{"changelog.html":{}}}],["v8.11.3",{"_index":5405,"title":{},"body":{"changelog.html":{}}}],["v8.11.4",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["v8.11.5",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["v8.2.0",{"_index":5107,"title":{},"body":{"changelog.html":{}}}],["v8.2.1",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["v8.2.2",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["v8.2.3",{"_index":5552,"title":{},"body":{"changelog.html":{}}}],["v8.2.4",{"_index":5554,"title":{},"body":{"changelog.html":{}}}],["v8.2.6",{"_index":5556,"title":{},"body":{"changelog.html":{}}}],["v8.3.0",{"_index":5558,"title":{},"body":{"changelog.html":{}}}],["v8.3.1",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["v8.3.2",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["v8.3.3",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["v8.3.4",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["v8.4.0",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["v8.4.1",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["v8.5.2",{"_index":5259,"title":{},"body":{"changelog.html":{}}}],["v8.6.0",{"_index":5261,"title":{},"body":{"changelog.html":{}}}],["v8.7.0",{"_index":5263,"title":{},"body":{"changelog.html":{}}}],["v8.7.1",{"_index":5407,"title":{},"body":{"changelog.html":{}}}],["v8.7.3",{"_index":5409,"title":{},"body":{"changelog.html":{}}}],["v8.8.0",{"_index":5265,"title":{},"body":{"changelog.html":{}}}],["v8.9.0",{"_index":5267,"title":{},"body":{"changelog.html":{}}}],["v9",{"_index":5096,"title":{},"body":{"changelog.html":{}}}],["v9.0.1",{"_index":5198,"title":{},"body":{"changelog.html":{}}}],["v9.0.11",{"_index":5560,"title":{},"body":{"changelog.html":{}}}],["v9.0.9",{"_index":5562,"title":{},"body":{"changelog.html":{}}}],["v9.1.0",{"_index":5270,"title":{},"body":{"changelog.html":{}}}],["v9.1.10",{"_index":5328,"title":{},"body":{"changelog.html":{}}}],["v9.1.2",{"_index":5564,"title":{},"body":{"changelog.html":{}}}],["v9.1.4",{"_index":5566,"title":{},"body":{"changelog.html":{}}}],["v9.1.5",{"_index":5568,"title":{},"body":{"changelog.html":{}}}],["v9.1.6",{"_index":5330,"title":{},"body":{"changelog.html":{}}}],["v9.1.7",{"_index":5332,"title":{},"body":{"changelog.html":{}}}],["v9.1.8",{"_index":5334,"title":{},"body":{"changelog.html":{}}}],["v9.10.0",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["v9.2.0",{"_index":5272,"title":{},"body":{"changelog.html":{}}}],["v9.2.1",{"_index":5337,"title":{},"body":{"changelog.html":{}}}],["v9.2.2",{"_index":5339,"title":{},"body":{"changelog.html":{}}}],["v9.2.3",{"_index":5341,"title":{},"body":{"changelog.html":{}}}],["v9.3.10",{"_index":5572,"title":{},"body":{"changelog.html":{}}}],["v9.3.11",{"_index":5574,"title":{},"body":{"changelog.html":{}}}],["v9.3.12",{"_index":5576,"title":{},"body":{"changelog.html":{}}}],["v9.3.9",{"_index":5578,"title":{},"body":{"changelog.html":{}}}],["v9.4.0",{"_index":5580,"title":{},"body":{"changelog.html":{}}}],["v9.4.1",{"_index":5274,"title":{},"body":{"changelog.html":{}}}],["v9.4.2",{"_index":5276,"title":{},"body":{"changelog.html":{}}}],["v9.4.3",{"_index":5584,"title":{},"body":{"changelog.html":{}}}],["v9.6.2",{"_index":5278,"title":{},"body":{"changelog.html":{}}}],["v9.6.3",{"_index":5280,"title":{},"body":{"changelog.html":{}}}],["v9.7.0",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["v9.8.0",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["v9.9.0",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["validate",{"_index":843,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":845,"title":{},"body":{"injectables/AnonymousStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validateconfig",{"_index":1852,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"miscellaneous/functions.html":{}}}],["validateconfig(config",{"_index":5729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateconfig(process.env",{"_index":1866,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{}}}],["validateif",{"_index":1991,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{}}}],["validateif((envvalues",{"_index":1993,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{}}}],["validateif(envvalues",{"_index":1974,"title":{},"body":{"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{}}}],["validatelogin",{"_index":1247,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatelogin(logindto",{"_index":1280,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatenested",{"_index":1469,"title":{},"body":{"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateUserDto.html":{},"classes/FilterUserDto.html":{},"classes/QueryUserDto.html":{},"classes/SortUserDto.html":{}}}],["validatenested()@type(undefined",{"_index":2877,"title":{},"body":{"classes/QueryUserDto.html":{}}}],["validatenested({each",{"_index":2881,"title":{},"body":{"classes/QueryUserDto.html":{}}}],["validatesociallogin",{"_index":1248,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["validatesociallogin(authprovider",{"_index":1282,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["validationerror",{"_index":5942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":5909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationpipeoptions",{"_index":5938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/AccountDto.html":{},"classes/AuthAppleLoginDto.html":{},"classes/AuthConfirmEmailDto.html":{},"classes/AuthEmailLoginDto.html":{},"classes/AuthFacebookLoginDto.html":{},"classes/AuthForgotPasswordDto.html":{},"classes/AuthGoogleLoginDto.html":{},"classes/AuthRegisterLoginDto.html":{},"classes/AuthResetPasswordDto.html":{},"classes/AuthUpdateDto.html":{},"classes/CreateAccountDto.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateRegionDto.html":{},"classes/CreateResidenceDto.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateTenantDto.html":{},"classes/CreateTenantTypeDto.html":{},"classes/CreateUserDto.html":{},"classes/EnvironmentVariablesValidator.html":{},"classes/EnvironmentVariablesValidator-1.html":{},"classes/EnvironmentVariablesValidator-2.html":{},"classes/EnvironmentVariablesValidator-3.html":{},"classes/EnvironmentVariablesValidator-4.html":{},"classes/EnvironmentVariablesValidator-5.html":{},"classes/EnvironmentVariablesValidator-6.html":{},"classes/EnvironmentVariablesValidator-7.html":{},"classes/FileDto.html":{},"classes/FileType.html":{},"classes/FileUploadDto.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/KycDetailsDto.html":{},"classes/QueryUserDto.html":{},"classes/RegionDto.html":{},"classes/ResidenceDto.html":{},"classes/Role.html":{},"classes/RoleDto.html":{},"classes/SettingsDto.html":{},"classes/SortUserDto.html":{},"classes/Status.html":{},"classes/StatusDto.html":{},"classes/TenantDto.html":{},"classes/TenantTypeDto.html":{},"classes/Tokens.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"changelog.html":{},"dependencies.html":{}}}],["value",{"_index":323,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateKycDetailsDto.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateTenantTable1745086820741.html":{},"classes/CreateUser1715028537217.html":{},"classes/CreateUserTenantRelationship1745132189825.html":{},"classes/EntityDocumentHelper.html":{},"classes/FileType.html":{},"classes/FilterUserDto.html":{},"classes/FindAllAccountsDto.html":{},"classes/FindAllKycDetailsDto.html":{},"classes/FindAllRegionsDto.html":{},"classes/FindAllResidencesDto.html":{},"classes/FindAllSettingsDto.html":{},"classes/FindAllTenantTypesDto.html":{},"classes/FindAllTenantsDto.html":{},"classes/InfinityPaginationResponseDto.html":{},"classes/LatestChanges1745163536016.html":{},"classes/QueryUserDto.html":{},"injectables/RegionSeedService.html":{},"injectables/ResidenceSeedService.html":{},"classes/SortUserDto.html":{},"injectables/TenantTypesService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.obj[value.key].tostring",{"_index":1813,"title":{},"body":{"classes/EntityDocumentHelper.html":{}}}],["variables",{"_index":5885,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":696,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/AddRegions1745152940566.html":{},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{},"classes/CreateAccountsTable1747393574185.html":{},"classes/CreateResidence1747295167463.html":{},"classes/CreateUser1715028537217.html":{},"classes/LatestChanges1745163536016.html":{}}}],["vehicle",{"_index":438,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"entities/SettingsEntity.html":{},"miscellaneous/enumerations.html":{}}}],["vehicles",{"_index":351,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["vehicletrackingenabled",{"_index":3676,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["vendor",{"_index":389,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["vendors",{"_index":410,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["vendors/suppliers",{"_index":392,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["verification",{"_index":2494,"title":{},"body":{"injectables/KycDetailSeedService.html":{}}}],["verified",{"_index":708,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"entities/KycDetailsEntity.html":{},"classes/LatestChanges1745163536016.html":{},"miscellaneous/enumerations.html":{}}}],["verifiedat",{"_index":673,"title":{},"body":{"classes/AddKycDetails1745134929693.html":{},"classes/AddKycDetailsFields1745138722127.html":{},"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{}}}],["verifiedby",{"_index":705,"title":{},"body":{"classes/AddKycDetailsFields1745138722127.html":{},"classes/CreateKycDetailsDto.html":{},"classes/KycDetails.html":{},"entities/KycDetailsEntity.html":{},"injectables/KycDetailsService.html":{},"classes/LatestChanges1745163536016.html":{}}}],["version",{"_index":548,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/AuthAppleController.html":{},"controllers/AuthController.html":{},"controllers/AuthFacebookController.html":{},"injectables/AuthFacebookService.html":{},"controllers/AuthGoogleController.html":{},"controllers/FilesLocalController.html":{},"controllers/FilesS3Controller.html":{},"controllers/FilesS3PresignedController.html":{},"controllers/KycDetailsController.html":{},"controllers/RegionsController.html":{},"controllers/ResidencesController.html":{},"controllers/SettingsController.html":{},"controllers/TenantTypesController.html":{},"controllers/TenantsController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"properties.html":{}}}],["via",{"_index":5758,"title":{},"body":{"index.html":{}}}],["virtuals",{"_index":2177,"title":{},"body":{"classes/FileSchemaClass.html":{},"classes/KycDetailsSchemaClass.html":{},"classes/SessionSchemaClass.html":{},"classes/UserSchemaClass.html":{}}}],["vladyslav",{"_index":5766,"title":{},"body":{"index.html":{}}}],["vlasenko",{"_index":5770,"title":{},"body":{"index.html":{}}}],["void",{"_index":1822,"title":{},"body":{"classes/EntityRelationalHelper.html":{}}}],["volume_based",{"_index":3614,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["volumes",{"_index":5588,"title":{},"body":{"changelog.html":{}}}],["wages",{"_index":466,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["wallet",{"_index":375,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["warranties",{"_index":5825,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":5821,"title":{},"body":{"license.html":{}}}],["waste",{"_index":349,"title":{},"body":{"injectables/AccountSeedService.html":{},"classes/AddSettingsTableAndFileds1745147786203.html":{},"classes/CreateResidence1747295167463.html":{},"classes/Region.html":{},"entities/SettingsEntity.html":{},"injectables/TenantTypesSeedService.html":{},"miscellaneous/enumerations.html":{}}}],["wastecategories",{"_index":3608,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["wastemanagementaccounts",{"_index":346,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["wastemanagementaccounts.length",{"_index":494,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["watch",{"_index":948,"title":{},"body":{"modules/AppModule.html":{}}}],["webhook",{"_index":1484,"title":{},"body":{"classes/CreateAccountsTable1747393574185.html":{},"miscellaneous/enumerations.html":{}}}],["webhooks",{"_index":3688,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["webhooksecret",{"_index":3635,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["webhookurl",{"_index":3632,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["wed",{"_index":1569,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{}}}],["weekly",{"_index":3701,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["weight_based",{"_index":3613,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["whatsapp",{"_index":3646,"title":{},"body":{"entities/SettingsEntity.html":{},"injectables/SettingsSeedService.html":{}}}],["whatsappapi",{"_index":3649,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["where.role",{"_index":4592,"title":{},"body":{"injectables/UsersRelationalRepository.html":{}}}],["where['role._id",{"_index":4550,"title":{},"body":{"injectables/UsersDocumentRepository.html":{}}}],["whether",{"_index":5837,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":5939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wide",{"_index":3594,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["windows",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":5774,"title":{},"body":{"index.html":{}}}],["without",{"_index":4947,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["wm",{"_index":357,"title":{},"body":{"injectables/AccountSeedService.html":{}}}],["workingdirectory",{"_index":1870,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["workinghours",{"_index":3668,"title":{},"body":{"entities/SettingsEntity.html":{}}}],["writable",{"_index":2448,"title":{},"body":{"classes/InfinityPaginationResponseDto.html":{}}}],["wrongtoken",{"_index":1211,"title":{},"body":{"injectables/AuthGoogleService.html":{}}}],["x",{"_index":1890,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["zip",{"_index":1557,"title":{},"body":{"classes/CreateRegionDto.html":{},"classes/Region.html":{}}}],["zipcodes",{"_index":724,"title":{},"body":{"classes/AddRegions1745152940566.html":{},"classes/CreateRegionDto.html":{},"classes/LatestChanges1745163536016.html":{},"classes/Region.html":{},"entities/RegionEntity.html":{},"injectables/RegionSeedService.html":{},"injectables/RegionsService.html":{}}}],["zoom",{"_index":302,"title":{},"body":{"modules/AccountSeedModule.html":{},"modules/AccountsModule.html":{},"modules/AppModule.html":{},"modules/AuthAppleModule.html":{},"modules/AuthFacebookModule.html":{},"modules/AuthGoogleModule.html":{},"modules/AuthModule.html":{},"modules/DocumentFilePersistenceModule.html":{},"modules/DocumentKycDetailsPersistenceModule.html":{},"modules/DocumentSessionPersistenceModule.html":{},"modules/DocumentUserPersistenceModule.html":{},"modules/FilesLocalModule.html":{},"modules/FilesModule.html":{},"modules/FilesS3Module.html":{},"modules/FilesS3PresignedModule.html":{},"modules/HomeModule.html":{},"modules/KycDetailSeedModule.html":{},"modules/KycDetailsModule.html":{},"modules/MailModule.html":{},"modules/MailerModule.html":{},"modules/RegionSeedModule.html":{},"modules/RegionsModule.html":{},"modules/RelationalAccountPersistenceModule.html":{},"modules/RelationalFilePersistenceModule.html":{},"modules/RelationalKycDetailsPersistenceModule.html":{},"modules/RelationalRegionPersistenceModule.html":{},"modules/RelationalResidencePersistenceModule.html":{},"modules/RelationalSessionPersistenceModule.html":{},"modules/RelationalSettingsPersistenceModule.html":{},"modules/RelationalTenantPersistenceModule.html":{},"modules/RelationalTenantTypePersistenceModule.html":{},"modules/RelationalUserPersistenceModule.html":{},"modules/ResidenceSeedModule.html":{},"modules/ResidencesModule.html":{},"modules/RoleSeedModule.html":{},"modules/SeedModule.html":{},"modules/SessionModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsSeedModule.html":{},"modules/StatusSeedModule.html":{},"modules/TenantSeedModule.html":{},"modules/TenantTypesModule.html":{},"modules/TenantTypesSeedModule.html":{},"modules/TenantsModule.html":{},"modules/UserSeedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/domain/account.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                balance\n                            \n                            \n                                    \n                                    Optional\n                                callbackUrl\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notificationChannel\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notificationType\n                            \n                            \n                                    \n                                    Optional\n                                number\n                            \n                            \n                                    \n                                    Optional\n                                owner\n                            \n                            \n                                    \n                                receiveNotification\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Boolean, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Number, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        callbackUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notificationChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationChannelEnum | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, enum: NotificationChannelEnum, enumName: 'NotificationChannel'})@IsOptional()@IsEnum(NotificationChannelEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notificationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, enum: NotificationTypeEnum, enumName: 'NotificationType'})@IsOptional()@IsEnum(NotificationTypeEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        receiveNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Boolean, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tenant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tenant, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, enum: AccountTypeEnum, enumName: 'AccountType'})@IsEnum(AccountTypeEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/domain/account.ts:101\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsEnum } from 'class-validator';\nimport { Tenant } from '../../tenants/domain/tenant';\nimport { User } from '../../users/domain/user';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  AccountTypeEnum,\n  NotificationChannelEnum,\n  NotificationTypeEnum,\n} from '../../utils/enum/account-type.enum';\n\nexport class Account {\n  @ApiProperty({\n    type: () => Tenant,\n    nullable: false,\n  })\n  tenant: Tenant;\n\n  @ApiProperty({\n    type: () => [User],\n    nullable: true,\n  })\n  owner?: User[] | null;\n\n  @ApiProperty({\n    required: true,\n    enum: AccountTypeEnum,\n    enumName: 'AccountType',\n  })\n  @IsEnum(AccountTypeEnum)\n  type: AccountTypeEnum;\n\n  @ApiProperty({\n    type: () => Boolean,\n    nullable: false,\n  })\n  active: boolean;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  callbackUrl?: string | null;\n\n  @ApiProperty({\n    required: false,\n    enum: NotificationChannelEnum,\n    enumName: 'NotificationChannel',\n  })\n  @IsOptional()\n  @IsEnum(NotificationChannelEnum)\n  notificationChannel?: NotificationChannelEnum | null;\n\n  @ApiProperty({\n    required: false,\n    enum: NotificationTypeEnum,\n    enumName: 'NotificationType',\n  })\n  @IsOptional()\n  @IsEnum(NotificationTypeEnum)\n  notificationType?: NotificationTypeEnum | null;\n\n  @ApiProperty({\n    type: () => Boolean,\n    nullable: false,\n  })\n  receiveNotification: boolean;\n\n  @ApiProperty({\n    type: () => Number,\n    nullable: false,\n  })\n  balance: number;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  number?: string | null;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: false,\n  })\n  description: string;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: false,\n  })\n  name: string;\n\n  @ApiProperty({\n    type: String,\n  })\n  id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountDto.html":{"url":"classes/AccountDto.html","title":"class - AccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/account.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class AccountDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AccountEntity.html":{"url":"entities/AccountEntity.html","title":"entity - AccountEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AccountEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/infrastructure/persistence/relational/entities/account.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                balance\n                            \n                            \n                                    \n                                    Optional\n                                callbackUrl\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                notificationChannel\n                            \n                            \n                                    \n                                    Optional\n                                notificationType\n                            \n                            \n                                    \n                                    Optional\n                                number\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                owner\n                            \n                            \n                                    \n                                receiveNotification\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        callbackUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        notificationChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationChannelEnum | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationChannelEnum, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        notificationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: NotificationTypeEnum, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {eager: true, nullable: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        receiveNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: AccountTypeEnum, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/infrastructure/persistence/relational/entities/account.entity.ts:103\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { TenantEntity } from '../../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\nimport { UserEntity } from '../../../../../users/infrastructure/persistence/relational/entities/user.entity';\n\nimport {\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  Column,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n} from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\nimport {\n  AccountTypeEnum,\n  NotificationChannelEnum,\n  NotificationTypeEnum,\n} from '../../../../../utils/enum/account-type.enum';\n\n@Entity({\n  name: 'account',\n})\nexport class AccountEntity extends EntityRelationalHelper {\n  @ManyToOne(() => TenantEntity, { eager: true, nullable: false })\n  tenant: TenantEntity;\n\n  @ManyToMany(() => UserEntity, { eager: true, nullable: true })\n  @JoinTable()\n  owner?: UserEntity[] | null;\n\n  @Column({\n    type: 'enum',\n    enum: AccountTypeEnum,\n    nullable: false,\n  })\n  type: AccountTypeEnum;\n\n  @Column({\n    nullable: false,\n    type: Boolean,\n  })\n  active: boolean;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  callbackUrl?: string | null;\n\n  @Column({\n    type: 'enum',\n    enum: NotificationChannelEnum,\n    nullable: true,\n  })\n  notificationChannel?: NotificationChannelEnum | null;\n\n  @Column({\n    type: 'enum',\n    enum: NotificationTypeEnum,\n    nullable: true,\n  })\n  notificationType?: NotificationTypeEnum | null;\n\n  @Column({\n    nullable: false,\n    type: Boolean,\n  })\n  receiveNotification: boolean;\n\n  @Column({\n    nullable: false,\n    type: Number,\n  })\n  balance: number;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  number?: string | null;\n\n  @Column({\n    nullable: false,\n    type: String,\n  })\n  description: string;\n\n  @Column({\n    nullable: false,\n    type: String,\n  })\n  name: string;\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountMapper.html":{"url":"classes/AccountMapper.html","title":"class - AccountMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/infrastructure/persistence/relational/mappers/account.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: AccountEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/relational/mappers/account.mapper.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            AccountEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Account\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/relational/mappers/account.mapper.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AccountEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Account } from '../../../../domain/account';\nimport { TenantMapper } from '../../../../../tenants/infrastructure/persistence/relational/mappers/tenant.mapper';\n\nimport { UserMapper } from '../../../../../users/infrastructure/persistence/relational/mappers/user.mapper';\n\nimport { AccountEntity } from '../entities/account.entity';\n\nexport class AccountMapper {\n  static toDomain(raw: AccountEntity): Account {\n    const domainEntity = new Account();\n    if (raw.tenant) {\n      domainEntity.tenant = TenantMapper.toDomain(raw.tenant);\n    }\n\n    if (raw.owner) {\n      domainEntity.owner = raw.owner.map((item) => UserMapper.toDomain(item));\n    } else if (raw.owner === null) {\n      domainEntity.owner = null;\n    }\n\n    domainEntity.type = raw.type;\n\n    domainEntity.active = raw.active;\n\n    domainEntity.callbackUrl = raw.callbackUrl;\n\n    domainEntity.notificationChannel = raw.notificationChannel;\n\n    domainEntity.notificationType = raw.notificationType;\n\n    domainEntity.receiveNotification = raw.receiveNotification;\n\n    domainEntity.balance = raw.balance;\n\n    domainEntity.number = raw.number;\n\n    domainEntity.description = raw.description;\n\n    domainEntity.name = raw.name;\n\n    domainEntity.id = raw.id;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: Account): AccountEntity {\n    const persistenceEntity = new AccountEntity();\n    if (domainEntity.tenant) {\n      persistenceEntity.tenant = TenantMapper.toPersistence(\n        domainEntity.tenant,\n      );\n    }\n\n    if (domainEntity.owner) {\n      persistenceEntity.owner = domainEntity.owner.map((item) =>\n        UserMapper.toPersistence(item),\n      );\n    } else if (domainEntity.owner === null) {\n      persistenceEntity.owner = null;\n    }\n\n    persistenceEntity.type = domainEntity.type;\n\n    persistenceEntity.active = domainEntity.active;\n\n    persistenceEntity.callbackUrl = domainEntity.callbackUrl;\n\n    persistenceEntity.notificationChannel = domainEntity.notificationChannel;\n\n    persistenceEntity.notificationType = domainEntity.notificationType;\n\n    persistenceEntity.receiveNotification = domainEntity.receiveNotification;\n\n    persistenceEntity.balance = domainEntity.balance;\n\n    persistenceEntity.number = domainEntity.number;\n\n    persistenceEntity.description = domainEntity.description;\n\n    persistenceEntity.name = domainEntity.name;\n\n    if (domainEntity.id) {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountRelationalRepository.html":{"url":"injectables/AccountRelationalRepository.html","title":"injectable - AccountRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Account, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/relational/repositories/account.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, In } from 'typeorm';\nimport { AccountEntity } from '../entities/account.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { Account } from '../../../../domain/account';\nimport { AccountRepository } from '../../account.repository';\nimport { AccountMapper } from '../mappers/account.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class AccountRelationalRepository implements AccountRepository {\n  constructor(\n    @InjectRepository(AccountEntity)\n    private readonly accountRepository: Repository,\n  ) {}\n\n  async create(data: Account): Promise {\n    const persistenceModel = AccountMapper.toPersistence(data);\n    const newEntity = await this.accountRepository.save(\n      this.accountRepository.create(persistenceModel),\n    );\n    return AccountMapper.toDomain(newEntity);\n  }\n\n  async findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const entities = await this.accountRepository.find({\n      skip: (paginationOptions.page - 1) * paginationOptions.limit,\n      take: paginationOptions.limit,\n    });\n\n    return entities.map((entity) => AccountMapper.toDomain(entity));\n  }\n\n  async findById(id: Account['id']): Promise> {\n    const entity = await this.accountRepository.findOne({\n      where: { id },\n    });\n\n    return entity ? AccountMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: Account['id'][]): Promise {\n    const entities = await this.accountRepository.find({\n      where: { id: In(ids) },\n    });\n\n    return entities.map((entity) => AccountMapper.toDomain(entity));\n  }\n\n  async update(id: Account['id'], payload: Partial): Promise {\n    const entity = await this.accountRepository.findOne({\n      where: { id },\n    });\n\n    if (!entity) {\n      throw new Error('Record not found');\n    }\n\n    const updatedEntity = await this.accountRepository.save(\n      this.accountRepository.create(\n        AccountMapper.toPersistence({\n          ...AccountMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return AccountMapper.toDomain(updatedEntity);\n  }\n\n  async remove(id: Account['id']): Promise {\n    await this.accountRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountRepository.html":{"url":"classes/AccountRepository.html","title":"class - AccountRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/infrastructure/persistence/account.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findAllWithPagination\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/account.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/account.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/account.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/account.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/account.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Account, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/infrastructure/persistence/account.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from '../../../utils/types/deep-partial.type';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { IPaginationOptions } from '../../../utils/types/pagination-options';\nimport { Account } from '../../domain/account';\n\nexport abstract class AccountRepository {\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise;\n\n  abstract findById(id: Account['id']): Promise>;\n\n  abstract findByIds(ids: Account['id'][]): Promise;\n\n  abstract update(\n    id: Account['id'],\n    payload: DeepPartial,\n  ): Promise;\n\n  abstract remove(id: Account['id']): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountSeedModule.html":{"url":"modules/AccountSeedModule.html","title":"module - AccountSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountSeedModule\n\n\n\ncluster_AccountSeedModule_exports\n\n\n\ncluster_AccountSeedModule_providers\n\n\n\n\nAccountSeedService \n\nAccountSeedService \n\n\n\nAccountSeedModule\n\nAccountSeedModule\n\nAccountSeedService  -->\n\nAccountSeedModule->AccountSeedService \n\n\n\n\n\nAccountSeedService\n\nAccountSeedService\n\nAccountSeedModule -->\n\nAccountSeedService->AccountSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/account/account-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountSeedService } from './account-seed.service';\nimport { AccountEntity } from '../../../../accounts/infrastructure/persistence/relational/entities/account.entity';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { UserEntity } from '../../../../users/infrastructure/persistence/relational/entities/user.entity';\nimport { RoleEntity } from '../../../../roles/infrastructure/persistence/relational/entities/role.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      AccountEntity,\n      TenantEntity,\n      UserEntity,\n      RoleEntity,\n    ]),\n  ],\n  providers: [AccountSeedService],\n  exports: [AccountSeedService],\n})\nexport class AccountSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountSeedService.html":{"url":"injectables/AccountSeedService.html","title":"injectable - AccountSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/account/account-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountRepository: Repository, tenantRepository: Repository, userRepository: Repository, roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/account/account-seed.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/account/account-seed.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AccountSeedService.name)\n                    \n                \n                    \n                        \n                                Defined in src/database/seeds/relational/account/account-seed.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AccountEntity } from '../../../../accounts/infrastructure/persistence/relational/entities/account.entity';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { UserEntity } from '../../../../users/infrastructure/persistence/relational/entities/user.entity';\nimport { RoleEntity } from '../../../../roles/infrastructure/persistence/relational/entities/role.entity';\nimport { AccountTypeEnum } from '../../../../utils/enum/account-type.enum';\nimport {\n  NotificationChannelEnum,\n  NotificationTypeEnum,\n} from '../../../../utils/enum/account-type.enum';\n\n@Injectable()\nexport class AccountSeedService {\n  private readonly logger = new Logger(AccountSeedService.name);\n\n  constructor(\n    @InjectRepository(AccountEntity)\n    private readonly accountRepository: Repository,\n    @InjectRepository(TenantEntity)\n    private readonly tenantRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(RoleEntity)\n    private readonly roleRepository: Repository,\n  ) {}\n\n  async run() {\n    const tenants = await this.tenantRepository.find();\n\n    for (const tenant of tenants) {\n      const accountsCount = await this.accountRepository.count({\n        where: { tenant: { id: tenant.id } },\n      });\n\n      if (accountsCount > 0) {\n        this.logger.log(`Accounts already exist for tenant: ${tenant.name}`);\n        continue;\n      }\n\n      const financeRole = await this.roleRepository.findOne({\n        where: {\n          name: 'Finance',\n          tenant: { id: tenant.id },\n        },\n      });\n\n      let owners: any = [];\n      if (financeRole) {\n        owners = await this.userRepository.find({\n          where: {\n            role: { id: financeRole.id },\n            tenant: { id: tenant.id },\n          },\n        });\n      }\n\n      const wasteManagementAccounts: Partial[] = [\n        // Asset Accounts\n\n        {\n          name: 'Waste Collection Vehicles',\n          description: 'Trucks and specialized vehicles for waste collection',\n          type: AccountTypeEnum.asset,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-ASSET-001',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Recycling Equipment',\n          description: 'Sorting lines, balers, and processing machinery',\n          type: AccountTypeEnum.asset,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-ASSET-002',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Accounts Receivable',\n          description: 'Customer payments for waste management services',\n          type: AccountTypeEnum.asset,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-ASSET-003',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Mobile Money Wallet',\n          description: 'Tracks all mobile money funds',\n          type: AccountTypeEnum.asset,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-ASSET-004',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Bank Account',\n          description: 'Main business bank account',\n          type: AccountTypeEnum.asset,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-ASSET-005',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Petty Cash',\n          description: 'Cash on hand for small expenses',\n          type: AccountTypeEnum.asset,\n          number: 'WM-ASSET-006',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Vendor Advances',\n          description: 'Prepayments to vendors/suppliers',\n          type: AccountTypeEnum.asset,\n          number: 'WM-ASSET-007',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Inventory',\n          description: 'Value of inventory in stock',\n          type: AccountTypeEnum.asset,\n          number: 'WM-ASSET-008',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n\n        // Liability Accounts\n        {\n          name: 'Equipment Financing',\n          description: 'Loans for waste processing equipment purchases',\n          type: AccountTypeEnum.liability,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-LIAB-001',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Landfill Fees Payable',\n          description: 'Outstanding payments to landfill operators',\n          type: AccountTypeEnum.liability,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-LIAB-002',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Accounts Payable',\n          description: 'Outstanding amounts owed to vendors',\n          type: AccountTypeEnum.liability,\n          number: 'WM-LIAB-003',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Advance Customer Payments',\n          description: 'Prepayments from customers before delivery',\n          type: AccountTypeEnum.liability,\n          number: 'WM-LIAB-004',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Tax Payable',\n          description: 'Taxes owed to government',\n          type: AccountTypeEnum.liability,\n          number: 'WM-LIAB-005',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        // Revenue Accounts\n        {\n          name: 'Residential Collection Fees',\n          description: 'Income from household waste collection services',\n          type: AccountTypeEnum.revenue,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-REV-001',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Commercial Recycling Contracts',\n          description: 'Revenue from business recycling agreements',\n          type: AccountTypeEnum.revenue,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-REV-002',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Recycled Materials Sales',\n          description: 'Income from sales of sorted recyclables',\n          type: AccountTypeEnum.revenue,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-REV-003',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Product Sales',\n          description: 'Revenue from sales of goods or produce',\n          type: AccountTypeEnum.revenue,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-REV-004',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Service Income',\n          description: 'Revenue from services or subscriptions',\n          type: AccountTypeEnum.revenue,\n          number: 'WM-REV-005',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n\n        // Expense Accounts\n        {\n          name: 'Vehicle Maintenance',\n          description: 'Fuel, repairs, and maintenance for collection trucks',\n          type: AccountTypeEnum.expense,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-EXP-001',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Waste Processing Costs',\n          description: 'Costs associated with recycling operations',\n          type: AccountTypeEnum.expense,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-EXP-002',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Environmental Compliance',\n          description: 'Costs for permits and regulatory compliance',\n          type: AccountTypeEnum.expense,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-EXP-003',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Safety Equipment',\n          description: 'Protective gear for waste handlers',\n          type: AccountTypeEnum.expense,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-EXP-004',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Cost of Goods Sold (COGS)',\n          description: 'Cost of inventory items sold',\n          type: AccountTypeEnum.expense,\n          balance: 0,\n          number: 'WM-EXP-005',\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Inventory Shrinkage',\n          description: 'Loss due to spoilage, theft, or errors',\n          type: AccountTypeEnum.expense,\n          number: 'WM-EXP-006',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Salaries & Wages',\n          description: 'Employee payroll and wages',\n          type: AccountTypeEnum.expense,\n          number: 'WM-EXP-007',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Utilities & Internet',\n          description: 'Monthly utility bills and internet costs',\n          type: AccountTypeEnum.expense,\n          number: 'WM-EXP-008',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Marketing & Advertising',\n          description: 'Costs for ads, campaigns, and promotions',\n          type: AccountTypeEnum.expense,\n          number: 'WM-EXP-009',\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          tenant,\n          owner: owners,\n        },\n\n        // Equity Accounts\n        {\n          name: 'Environmental Grants',\n          description: 'Funding received for green initiatives',\n          type: AccountTypeEnum.equity,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-EQUITY-001',\n          tenant,\n          owner: owners,\n        },\n        {\n          name: 'Retained Earnings',\n          description: 'Reinvested profits from operations',\n          type: AccountTypeEnum.equity,\n          balance: 0,\n          active: true,\n          receiveNotification: true,\n          notificationChannel: NotificationChannelEnum.EMAIL,\n          notificationType: NotificationTypeEnum.ALERT,\n          number: 'WM-EQUITY-002',\n          tenant,\n          owner: owners,\n        },\n      ];\n\n      await this.accountRepository.save(\n        this.accountRepository.create(wasteManagementAccounts),\n      );\n      this.logger.log(\n        `Seeded ${wasteManagementAccounts.length} waste management accounts for tenant ${tenant.name}`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsController.html":{"url":"controllers/AccountsController.html","title":"controller - AccountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/accounts.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAccountDto: CreateAccountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Account})\n                \n            \n\n                    \n                        \n                            Defined in src/accounts/accounts.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAccountDto\n                                            \n                                                            CreateAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: FindAllAccountsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/accounts/accounts.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            FindAllAccountsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Account})\n                \n            \n\n                    \n                        \n                            Defined in src/accounts/accounts.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/accounts/accounts.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateAccountDto: UpdateAccountDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Account})\n                \n            \n\n                    \n                        \n                            Defined in src/accounts/accounts.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAccountDto\n                                            \n                                                            UpdateAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { AccountsService } from './accounts.service';\nimport { CreateAccountDto } from './dto/create-account.dto';\nimport { UpdateAccountDto } from './dto/update-account.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Account } from './domain/account';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  InfinityPaginationResponse,\n  InfinityPaginationResponseDto,\n} from '../utils/dto/infinity-pagination-response.dto';\nimport { infinityPagination } from '../utils/infinity-pagination';\nimport { FindAllAccountsDto } from './dto/find-all-accounts.dto';\n\n@ApiTags('Accounts')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@Controller({\n  path: 'accounts',\n  version: '1',\n})\nexport class AccountsController {\n  constructor(private readonly accountsService: AccountsService) {}\n\n  @Post()\n  @ApiCreatedResponse({\n    type: Account,\n  })\n  create(@Body() createAccountDto: CreateAccountDto) {\n    return this.accountsService.create(createAccountDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    type: InfinityPaginationResponse(Account),\n  })\n  async findAll(\n    @Query() query: FindAllAccountsDto,\n  ): Promise> {\n    const page = query?.page ?? 1;\n    let limit = query?.limit ?? 10;\n    if (limit > 50) {\n      limit = 50;\n    }\n\n    return infinityPagination(\n      await this.accountsService.findAllWithPagination({\n        paginationOptions: {\n          page,\n          limit,\n        },\n      }),\n      { page, limit },\n    );\n  }\n\n  @Get(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Account,\n  })\n  findById(@Param('id') id: string) {\n    return this.accountsService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Account,\n  })\n  update(@Param('id') id: string, @Body() updateAccountDto: UpdateAccountDto) {\n    return this.accountsService.update(id, updateAccountDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  remove(@Param('id') id: string) {\n    return this.accountsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsModule.html":{"url":"modules/AccountsModule.html","title":"module - AccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_imports\n\n\n\ncluster_AccountsModule_exports\n\n\n\ncluster_AccountsModule_providers\n\n\n\n\nRelationalAccountPersistenceModule\n\nRelationalAccountPersistenceModule\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nRelationalAccountPersistenceModule->AccountsModule\n\n\n\n\n\nTenantsModule\n\nTenantsModule\n\nAccountsModule -->\n\nTenantsModule->AccountsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAccountsModule -->\n\nUsersModule->AccountsModule\n\n\n\n\n\nAccountsService \n\nAccountsService \n\nAccountsService  -->\n\nAccountsModule->AccountsService \n\n\n\n\n\nRelationalAccountPersistenceModule \n\nRelationalAccountPersistenceModule \n\nRelationalAccountPersistenceModule  -->\n\nAccountsModule->RelationalAccountPersistenceModule \n\n\n\n\n\nAccountsService\n\nAccountsService\n\nAccountsModule -->\n\nAccountsService->AccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts/accounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AccountsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RelationalAccountPersistenceModule\n                        \n                        \n                            TenantsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountsService\n                        \n                        \n                            RelationalAccountPersistenceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TenantsModule } from '../tenants/tenants.module';\nimport { UsersModule } from '../users/users.module';\nimport {\n  // common\n  Module,\n} from '@nestjs/common';\nimport { AccountsService } from './accounts.service';\nimport { AccountsController } from './accounts.controller';\nimport { RelationalAccountPersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\n\n@Module({\n  imports: [\n    TenantsModule,\n\n    UsersModule,\n\n    // import modules, etc.\n    RelationalAccountPersistenceModule,\n  ],\n  controllers: [AccountsController],\n  providers: [AccountsService],\n  exports: [AccountsService, RelationalAccountPersistenceModule],\n})\nexport class AccountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountsService.html":{"url":"injectables/AccountsService.html","title":"injectable - AccountsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/accounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAllWithPagination\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tenantService: TenantsService, userService: UsersService, accountRepository: AccountRepository)\n                    \n                \n                        \n                            \n                                Defined in src/accounts/accounts.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tenantService\n                                                  \n                                                        \n                                                                        TenantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountRepository\n                                                  \n                                                        \n                                                                        AccountRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createAccountDto: CreateAccountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/accounts.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAccountDto\n                                            \n                                                            CreateAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \nfindAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/accounts.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/accounts.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/accounts.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: Account)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/accounts.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Account, updateAccountDto: UpdateAccountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/accounts/accounts.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Account\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAccountDto\n                                            \n                                                            UpdateAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TenantsService } from '../tenants/tenants.service';\nimport { Tenant } from '../tenants/domain/tenant';\n\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/domain/user';\n\nimport {\n  // common\n  Injectable,\n  HttpStatus,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { CreateAccountDto } from './dto/create-account.dto';\nimport { UpdateAccountDto } from './dto/update-account.dto';\nimport { AccountRepository } from './infrastructure/persistence/account.repository';\nimport { IPaginationOptions } from '../utils/types/pagination-options';\nimport { Account } from './domain/account';\n\n@Injectable()\nexport class AccountsService {\n  constructor(\n    private readonly tenantService: TenantsService,\n\n    private readonly userService: UsersService,\n\n    // Dependencies here\n    private readonly accountRepository: AccountRepository,\n  ) {}\n\n  async create(createAccountDto: CreateAccountDto) {\n    // Do not remove comment below.\n    // \n    const tenantObject = await this.tenantService.findById(\n      createAccountDto.tenant.id,\n    );\n    if (!tenantObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          tenant: 'notExists',\n        },\n      });\n    }\n    const tenant = tenantObject;\n\n    let owner: User[] | null | undefined = undefined;\n\n    if (createAccountDto.owner) {\n      const ownerObjects = await this.userService.findByIds(\n        createAccountDto.owner.map((entity) => entity.id),\n      );\n      if (ownerObjects.length !== createAccountDto.owner.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            owner: 'notExists',\n          },\n        });\n      }\n      owner = ownerObjects;\n    } else if (createAccountDto.owner === null) {\n      owner = null;\n    }\n\n    return this.accountRepository.create({\n      // Do not remove comment below.\n      // \n      tenant,\n\n      owner,\n\n      type: createAccountDto.type,\n\n      active: createAccountDto.active,\n\n      callbackUrl: createAccountDto.callbackUrl,\n\n      notificationChannel: createAccountDto.notificationChannel,\n\n      notificationType: createAccountDto.notificationType,\n\n      receiveNotification: createAccountDto.receiveNotification,\n\n      balance: createAccountDto.balance,\n\n      number: createAccountDto.number,\n\n      description: createAccountDto.description,\n\n      name: createAccountDto.name,\n    });\n  }\n\n  findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }) {\n    return this.accountRepository.findAllWithPagination({\n      paginationOptions: {\n        page: paginationOptions.page,\n        limit: paginationOptions.limit,\n      },\n    });\n  }\n\n  findById(id: Account['id']) {\n    return this.accountRepository.findById(id);\n  }\n\n  findByIds(ids: Account['id'][]) {\n    return this.accountRepository.findByIds(ids);\n  }\n\n  async update(\n    id: Account['id'],\n\n    updateAccountDto: UpdateAccountDto,\n  ) {\n    // Do not remove comment below.\n    // \n    let tenant: Tenant | undefined = undefined;\n\n    if (updateAccountDto.tenant) {\n      const tenantObject = await this.tenantService.findById(\n        updateAccountDto.tenant.id,\n      );\n      if (!tenantObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            tenant: 'notExists',\n          },\n        });\n      }\n      tenant = tenantObject;\n    }\n\n    let owner: User[] | null | undefined = undefined;\n\n    if (updateAccountDto.owner) {\n      const ownerObjects = await this.userService.findByIds(\n        updateAccountDto.owner.map((entity) => entity.id),\n      );\n      if (ownerObjects.length !== updateAccountDto.owner.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            owner: 'notExists',\n          },\n        });\n      }\n      owner = ownerObjects;\n    } else if (updateAccountDto.owner === null) {\n      owner = null;\n    }\n\n    return this.accountRepository.update(id, {\n      // Do not remove comment below.\n      // \n      tenant,\n\n      owner,\n\n      type: updateAccountDto.type,\n\n      active: updateAccountDto.active,\n\n      callbackUrl: updateAccountDto.callbackUrl,\n\n      notificationChannel: updateAccountDto.notificationChannel,\n\n      notificationType: updateAccountDto.notificationType,\n\n      receiveNotification: updateAccountDto.receiveNotification,\n\n      balance: updateAccountDto.balance,\n\n      number: updateAccountDto.number,\n\n      description: updateAccountDto.description,\n\n      name: updateAccountDto.name,\n    });\n  }\n\n  remove(id: Account['id']) {\n    return this.accountRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddKycDetails1745134929693.html":{"url":"classes/AddKycDetails1745134929693.html","title":"class - AddKycDetails1745134929693","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddKycDetails1745134929693\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745134929693-AddKycDetails.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddKycDetails1745134929693'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745134929693-AddKycDetails.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745134929693-AddKycDetails.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745134929693-AddKycDetails.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface /**, QueryRunner **/ } from 'typeorm';\n\nexport class AddKycDetails1745134929693 implements MigrationInterface {\n  name = 'AddKycDetails1745134929693';\n\n  public async up(/**queryRunner: QueryRunner**/): Promise {\n    // await queryRunner.query(\n    //   `ALTER TABLE \"tenant\" DROP CONSTRAINT \"FK_7e9514d9b3815c4c9c059dc6a2d\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"user\" DROP CONSTRAINT \"FK_73a44889926ed74ebd527dc9a96\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"tenant\" DROP CONSTRAINT \"UQ_7e9514d9b3815c4c9c059dc6a2d\"`,\n    // );\n    // await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"kycDetailsId\"`);\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"verifiedAt\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"submittedAt\"`,\n    // );\n    // await queryRunner.query(`ALTER TABLE \"kyc_details\" DROP COLUMN \"status\"`);\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"documentData\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"documentNumber\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"documentType\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"subjectType\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"user\" DROP CONSTRAINT \"UQ_73a44889926ed74ebd527dc9a96\"`,\n    // );\n    // await queryRunner.query(`ALTER TABLE \"user\" DROP COLUMN \"kycDetailsId\"`);\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"tenantId\" uuid NOT NULL`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"userId\" integer NOT NULL`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD CONSTRAINT \"FK_78f4992112d203106339e1b20e6\" FOREIGN KEY (\"tenantId\") REFERENCES \"tenant\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD CONSTRAINT \"FK_295d21c339b0985283e10f683ae\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    // );\n  }\n\n  public async down(/**queryRunner: QueryRunner**/): Promise {\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP CONSTRAINT \"FK_295d21c339b0985283e10f683ae\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP CONSTRAINT \"FK_78f4992112d203106339e1b20e6\"`,\n    // );\n    // await queryRunner.query(`ALTER TABLE \"kyc_details\" DROP COLUMN \"userId\"`);\n    // await queryRunner.query(`ALTER TABLE \"kyc_details\" DROP COLUMN \"tenantId\"`);\n    // await queryRunner.query(`ALTER TABLE \"user\" ADD \"kycDetailsId\" uuid`);\n    // await queryRunner.query(\n    //   `ALTER TABLE \"user\" ADD CONSTRAINT \"UQ_73a44889926ed74ebd527dc9a96\" UNIQUE (\"kycDetailsId\")`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"subjectType\" character varying NOT NULL`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"documentType\" character varying`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"documentNumber\" character varying`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"documentData\" character varying`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"status\" character varying`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"submittedAt\" TIMESTAMP`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"verifiedAt\" TIMESTAMP`,\n    // );\n    // await queryRunner.query(`ALTER TABLE \"tenant\" ADD \"kycDetailsId\" uuid`);\n    // await queryRunner.query(\n    //   `ALTER TABLE \"tenant\" ADD CONSTRAINT \"UQ_7e9514d9b3815c4c9c059dc6a2d\" UNIQUE (\"kycDetailsId\")`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"user\" ADD CONSTRAINT \"FK_73a44889926ed74ebd527dc9a96\" FOREIGN KEY (\"kycDetailsId\") REFERENCES \"kyc_details\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"tenant\" ADD CONSTRAINT \"FK_7e9514d9b3815c4c9c059dc6a2d\" FOREIGN KEY (\"kycDetailsId\") REFERENCES \"kyc_details\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    // );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddKycDetailsFields1745138722127.html":{"url":"classes/AddKycDetailsFields1745138722127.html","title":"class - AddKycDetailsFields1745138722127","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddKycDetailsFields1745138722127\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745138722127-AddKycDetailsFields.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddKycDetailsFields1745138722127'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745138722127-AddKycDetailsFields.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745138722127-AddKycDetailsFields.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745138722127-AddKycDetailsFields.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface /** QueryRunner **/ } from 'typeorm';\n\nexport class AddKycDetailsFields1745138722127 implements MigrationInterface {\n  name = 'AddKycDetailsFields1745138722127';\n\n  public async up(/**queryRunner: QueryRunner**/): Promise {\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"verifiedBy\" integer`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"verifiedAt\" TIMESTAMP`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"submittedAt\" TIMESTAMP`,\n    // );\n    // await queryRunner.query(\n    //   `CREATE TYPE \"public\".\"kyc_details_status_enum\" AS ENUM('pending', 'verified', 'rejected')`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"status\" \"public\".\"kyc_details_status_enum\" NOT NULL DEFAULT 'pending'`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"documentData\" jsonb`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"documentNumber\" character varying`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"documentType\" character varying`,\n    // );\n    // await queryRunner.query(\n    //   `CREATE TYPE \"public\".\"kyc_details_subjecttype_enum\" AS ENUM('user', 'tenant')`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" ADD \"subjectType\" \"public\".\"kyc_details_subjecttype_enum\" NOT NULL`,\n    // );\n  }\n\n  public async down(/**queryRunner: QueryRunner**/): Promise {\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"subjectType\"`,\n    // );\n    // await queryRunner.query(\n    //   `DROP TYPE \"public\".\"kyc_details_subjecttype_enum\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"documentType\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"documentNumber\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"documentData\"`,\n    // );\n    // await queryRunner.query(`ALTER TABLE \"kyc_details\" DROP COLUMN \"status\"`);\n    // await queryRunner.query(`DROP TYPE \"public\".\"kyc_details_status_enum\"`);\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"submittedAt\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"verifiedAt\"`,\n    // );\n    // await queryRunner.query(\n    //   `ALTER TABLE \"kyc_details\" DROP COLUMN \"verifiedBy\"`,\n    // );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddRegions1745152940566.html":{"url":"classes/AddRegions1745152940566.html","title":"class - AddRegions1745152940566","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRegions1745152940566\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745152940566-AddRegions.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddRegions1745152940566'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745152940566-AddRegions.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745152940566-AddRegions.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745152940566-AddRegions.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddRegions1745152940566 implements MigrationInterface {\n  name = 'AddRegions1745152940566';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"region\" (\"zipCodes\" character varying, \"operatingHours\" character varying, \"serviceTypes\" character varying, \"centroidLon\" integer, \"centroidLat\" character varying, \"boundary\" character varying, \"name\" character varying, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"tenantId\" uuid NOT NULL, CONSTRAINT \"PK_5f48ffc3af96bc486f5f3f3a6da\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"user_regions_region\" (\"userId\" integer NOT NULL, \"regionId\" uuid NOT NULL, CONSTRAINT \"PK_01aac7f0120ad731078bf7786f2\" PRIMARY KEY (\"userId\", \"regionId\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_0252300651acd5cbf815645395\" ON \"user_regions_region\" (\"userId\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_dbbbcbac1f75c3aca60e371c20\" ON \"user_regions_region\" (\"regionId\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD CONSTRAINT \"FK_aaf7ebdc7470c865314f414b241\" FOREIGN KEY (\"tenantId\") REFERENCES \"tenant\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_regions_region\" ADD CONSTRAINT \"FK_0252300651acd5cbf815645395d\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_regions_region\" ADD CONSTRAINT \"FK_dbbbcbac1f75c3aca60e371c200\" FOREIGN KEY (\"regionId\") REFERENCES \"region\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"user_regions_region\" DROP CONSTRAINT \"FK_dbbbcbac1f75c3aca60e371c200\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_regions_region\" DROP CONSTRAINT \"FK_0252300651acd5cbf815645395d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"region\" DROP CONSTRAINT \"FK_aaf7ebdc7470c865314f414b241\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_dbbbcbac1f75c3aca60e371c20\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_0252300651acd5cbf815645395\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"user_regions_region\"`);\n    await queryRunner.query(`DROP TABLE \"region\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddSettingsTableAndFileds1745147786203.html":{"url":"classes/AddSettingsTableAndFileds1745147786203.html","title":"class - AddSettingsTableAndFileds1745147786203","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSettingsTableAndFileds1745147786203\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745147786203-AddSettingsTableAndFileds.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddSettingsTableAndFileds1745147786203'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745147786203-AddSettingsTableAndFileds.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745147786203-AddSettingsTableAndFileds.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745147786203-AddSettingsTableAndFileds.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddSettingsTableAndFileds1745147786203\n  implements MigrationInterface\n{\n  name = 'AddSettingsTableAndFileds1745147786203';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"settings_settingstype_enum\" AS ENUM('invoice', 'billing', 'payment', 'tax', 'commission', 'notification', 'reminder', 'alert', 'waste', 'collection', 'processing', 'recycling', 'disposal', 'marketplace', 'listing', 'bidding', 'transaction', 'preferences', 'privacy', 'accessibility', 'compliance', 'certification', 'reporting', 'audit', 'api', 'integration', 'security', 'rate_limiting', 'localization', 'language', 'currency', 'timezone', 'theme', 'layout', 'dashboard', 'maintenance', 'backup', 'scaling', 'carbon_accounting', 'sustainability', 'routing', 'vehicle', 'driver')`,\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"settings_subjecttype_enum\" AS ENUM('tenant', 'user', 'system', 'collector', 'facility')`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"settings\" (\"config\" jsonb NOT NULL, \"settingsType\" \"public\".\"settings_settingstype_enum\" NOT NULL, \"subjectType\" \"public\".\"settings_subjecttype_enum\" NOT NULL, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"tenantId\" uuid NOT NULL, \"userId\" integer NOT NULL, CONSTRAINT \"PK_0669fe20e252eb692bf4d344975\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"settings\" ADD CONSTRAINT \"FK_1fa41192963d6275ba8952f02a9\" FOREIGN KEY (\"tenantId\") REFERENCES \"tenant\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"settings\" ADD CONSTRAINT \"FK_9175e059b0a720536f7726a88c7\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"settings\" DROP CONSTRAINT \"FK_9175e059b0a720536f7726a88c7\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"settings\" DROP CONSTRAINT \"FK_1fa41192963d6275ba8952f02a9\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"settings\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"settings_subjecttype_enum\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"settings_settingstype_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html":{"url":"classes/AddTenantFieldsAndTenantTypeTable1745143148021.html","title":"class - AddTenantFieldsAndTenantTypeTable1745143148021","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTenantFieldsAndTenantTypeTable1745143148021\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745143148021-AddTenantFieldsAndTenantTypeTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddTenantFieldsAndTenantTypeTable1745143148021'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745143148021-AddTenantFieldsAndTenantTypeTable.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745143148021-AddTenantFieldsAndTenantTypeTable.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745143148021-AddTenantFieldsAndTenantTypeTable.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddTenantFieldsAndTenantTypeTable1745143148021\n  implements MigrationInterface\n{\n  name = 'AddTenantFieldsAndTenantTypeTable1745143148021';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"tenant_type_code_enum\" AS ENUM('community_group', 'recycling_company', 'collection_agency', 'municipality', 'enterprise', 'educational_institution', 'healthcare_provider', 'non_profit_organization', 'government_agency', 'technology_company', 'retail_business', 'manufacturing_company', 'transportation_service', 'financial_institution', 'agricultural_business', 'energy_provider', 'construction_company', 'hospitality_business', 'generic')`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"tenant_type\" (\"description\" character varying, \"code\" \"public\".\"tenant_type_code_enum\" NOT NULL, \"name\" character varying, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT \"UQ_4c0533c3a7e87116891dec23578\" UNIQUE (\"code\"), CONSTRAINT \"PK_4a98ba209be6df3b80a4feb5838\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD \"schemaName\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD \"address\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD \"primaryPhone\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD \"primaryEmail\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD \"name\" character varying`,\n    );\n    await queryRunner.query(`ALTER TABLE \"tenant\" ADD \"logoId\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD CONSTRAINT \"UQ_0ed69b4239b1f892b96798065a1\" UNIQUE (\"logoId\")`,\n    );\n    await queryRunner.query(`ALTER TABLE \"tenant\" ADD \"typeId\" uuid`);\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD CONSTRAINT \"FK_0ed69b4239b1f892b96798065a1\" FOREIGN KEY (\"logoId\") REFERENCES \"file\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD CONSTRAINT \"FK_38c7bb1a7983b359f34b63a0fd6\" FOREIGN KEY (\"typeId\") REFERENCES \"tenant_type\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" DROP CONSTRAINT \"FK_38c7bb1a7983b359f34b63a0fd6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" DROP CONSTRAINT \"FK_0ed69b4239b1f892b96798065a1\"`,\n    );\n    await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"typeId\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" DROP CONSTRAINT \"UQ_0ed69b4239b1f892b96798065a1\"`,\n    );\n    await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"logoId\"`);\n    await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"name\"`);\n    await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"primaryEmail\"`);\n    await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"primaryPhone\"`);\n    await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"address\"`);\n    await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"schemaName\"`);\n    await queryRunner.query(`DROP TABLE \"tenant_type\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"tenant_type_code_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnonymousStrategy.html":{"url":"injectables/AnonymousStrategy.html","title":"injectable - AnonymousStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnonymousStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/anonymous.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/anonymous.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload, request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/anonymous.strategy.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-anonymous';\nimport { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\n\n@Injectable()\nexport class AnonymousStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super();\n  }\n\n  public validate(payload: unknown, request: unknown): unknown {\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAccountsModule\n\nAccountsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountsModule->AppModule\n\n\n\n\n\nAuthAppleModule\n\nAuthAppleModule\n\nAppModule -->\n\nAuthAppleModule->AppModule\n\n\n\n\n\nAuthFacebookModule\n\nAuthFacebookModule\n\nAppModule -->\n\nAuthFacebookModule->AppModule\n\n\n\n\n\nAuthGoogleModule\n\nAuthGoogleModule\n\nAppModule -->\n\nAuthGoogleModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nKycDetailsModule\n\nKycDetailsModule\n\nAppModule -->\n\nKycDetailsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nRegionsModule\n\nRegionsModule\n\nAppModule -->\n\nRegionsModule->AppModule\n\n\n\n\n\nResidencesModule\n\nResidencesModule\n\nAppModule -->\n\nResidencesModule->AppModule\n\n\n\nAppModule -->\n\nResidencesModule->AppModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAppModule -->\n\nSessionModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nTenantTypesModule\n\nTenantTypesModule\n\nAppModule -->\n\nTenantTypesModule->AppModule\n\n\n\n\n\nTenantsModule\n\nTenantsModule\n\nAppModule -->\n\nTenantsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AccountsModule\n                        \n                        \n                            AuthAppleModule\n                        \n                        \n                            AuthFacebookModule\n                        \n                        \n                            AuthGoogleModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HomeModule\n                        \n                        \n                            KycDetailsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            RegionsModule\n                        \n                        \n                            ResidencesModule\n                        \n                        \n                            ResidencesModule\n                        \n                        \n                            SessionModule\n                        \n                        \n                            SettingsModule\n                        \n                        \n                            TenantTypesModule\n                        \n                        \n                            TenantsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from './users/users.module';\nimport { FilesModule } from './files/files.module';\nimport { AuthModule } from './auth/auth.module';\nimport databaseConfig from './database/config/database.config';\nimport authConfig from './auth/config/auth.config';\nimport appConfig from './config/app.config';\nimport mailConfig from './mail/config/mail.config';\nimport fileConfig from './files/config/file.config';\nimport facebookConfig from './auth-facebook/config/facebook.config';\nimport googleConfig from './auth-google/config/google.config';\nimport appleConfig from './auth-apple/config/apple.config';\nimport path from 'path';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthAppleModule } from './auth-apple/auth-apple.module';\nimport { AuthFacebookModule } from './auth-facebook/auth-facebook.module';\nimport { AuthGoogleModule } from './auth-google/auth-google.module';\nimport { HeaderResolver, I18nModule } from 'nestjs-i18n';\nimport { TypeOrmConfigService } from './database/typeorm-config.service';\nimport { MailModule } from './mail/mail.module';\nimport { HomeModule } from './home/home.module';\nimport { DataSource, DataSourceOptions } from 'typeorm';\nimport { AllConfigType } from './config/config.type';\nimport { SessionModule } from './session/session.module';\nimport { MailerModule } from './mailer/mailer.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongooseConfigService } from './database/mongoose-config.service';\nimport { DatabaseConfig } from './database/config/database-config.type';\n\n// \nconst infrastructureDatabaseModule = (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? MongooseModule.forRootAsync({\n      useClass: MongooseConfigService,\n    })\n  : TypeOrmModule.forRootAsync({\n      useClass: TypeOrmConfigService,\n      dataSourceFactory: async (options: DataSourceOptions) => {\n        return new DataSource(options).initialize();\n      },\n    });\n// \n\nimport { TenantsModule } from './tenants/tenants.module';\n\nimport { KycDetailsModule } from './kyc-details/kyc-details.module';\n\nimport { TenantTypesModule } from './tenant-types/tenant-types.module';\n\nimport { SettingsModule } from './settings/settings.module';\n\nimport { RegionsModule } from './regions/regions.module';\n\nimport { ResidencesModule } from './residences/residences.module';\n\nimport { AccountsModule } from './accounts/accounts.module';\n\n@Module({\n  imports: [\n    AccountsModule,\n    ResidencesModule,\n    ResidencesModule,\n    RegionsModule,\n    SettingsModule,\n    TenantTypesModule,\n    KycDetailsModule,\n    TenantsModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [\n        databaseConfig,\n        authConfig,\n        appConfig,\n        mailConfig,\n        fileConfig,\n        facebookConfig,\n        googleConfig,\n        appleConfig,\n      ],\n      envFilePath: ['.env'],\n    }),\n    infrastructureDatabaseModule,\n    I18nModule.forRootAsync({\n      useFactory: (configService: ConfigService) => ({\n        fallbackLanguage: configService.getOrThrow('app.fallbackLanguage', {\n          infer: true,\n        }),\n        loaderOptions: { path: path.join(__dirname, '/i18n/'), watch: true },\n      }),\n      resolvers: [\n        {\n          use: HeaderResolver,\n          useFactory: (configService: ConfigService) => {\n            return [\n              configService.get('app.headerLanguage', {\n                infer: true,\n              }),\n            ];\n          },\n          inject: [ConfigService],\n        },\n      ],\n      imports: [ConfigModule],\n      inject: [ConfigService],\n    }),\n    UsersModule,\n    FilesModule,\n    AuthModule,\n    AuthFacebookModule,\n    AuthGoogleModule,\n    AuthAppleModule,\n    SessionModule,\n    MailModule,\n    MailerModule,\n    HomeModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthAppleController.html":{"url":"controllers/AuthAppleController.html","title":"controller - AuthAppleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthAppleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-apple/auth-apple.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: AuthAppleLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: LoginResponseDto})@SerializeOptions({groups: undefined})@Post('login')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth-apple/auth-apple.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            AuthAppleLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Post,\n  SerializeOptions,\n} from '@nestjs/common';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from '../auth/auth.service';\nimport { AuthAppleService } from './auth-apple.service';\nimport { AuthAppleLoginDto } from './dto/auth-apple-login.dto';\nimport { LoginResponseDto } from '../auth/dto/login-response.dto';\n\n@ApiTags('Auth')\n@Controller({\n  path: 'auth/apple',\n  version: '1',\n})\nexport class AuthAppleController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authAppleService: AuthAppleService,\n  ) {}\n\n  @ApiOkResponse({\n    type: LoginResponseDto,\n  })\n  @SerializeOptions({\n    groups: ['me'],\n  })\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  async login(@Body() loginDto: AuthAppleLoginDto): Promise {\n    const socialData = await this.authAppleService.getProfileByToken(loginDto);\n\n    return this.authService.validateSocialLogin('apple', socialData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthAppleLoginDto.html":{"url":"classes/AuthAppleLoginDto.html","title":"class - AuthAppleLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthAppleLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-apple/dto/auth-apple-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                idToken\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Allow()@ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-apple/dto/auth-apple-login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'abc'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-apple/dto/auth-apple-login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Allow()@ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-apple/dto/auth-apple-login.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Allow, IsNotEmpty } from 'class-validator';\n\nexport class AuthAppleLoginDto {\n  @ApiProperty({ example: 'abc' })\n  @IsNotEmpty()\n  idToken: string;\n\n  @Allow()\n  @ApiPropertyOptional()\n  firstName?: string;\n\n  @Allow()\n  @ApiPropertyOptional()\n  lastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthAppleModule.html":{"url":"modules/AuthAppleModule.html","title":"module - AuthAppleModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthAppleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthAppleModule\n\n\n\ncluster_AuthAppleModule_imports\n\n\n\ncluster_AuthAppleModule_exports\n\n\n\ncluster_AuthAppleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAuthAppleModule\n\nAuthAppleModule\n\nAuthAppleModule -->\n\nAuthModule->AuthAppleModule\n\n\n\n\n\nAuthAppleService \n\nAuthAppleService \n\nAuthAppleService  -->\n\nAuthAppleModule->AuthAppleService \n\n\n\n\n\nAuthAppleService\n\nAuthAppleService\n\nAuthAppleModule -->\n\nAuthAppleService->AuthAppleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth-apple/auth-apple.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthAppleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthAppleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthAppleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthAppleService } from './auth-apple.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthAppleController } from './auth-apple.controller';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [ConfigModule, AuthModule],\n  providers: [AuthAppleService],\n  exports: [AuthAppleService],\n  controllers: [AuthAppleController],\n})\nexport class AuthAppleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthAppleService.html":{"url":"injectables/AuthAppleService.html","title":"injectable - AuthAppleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthAppleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-apple/auth-apple.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfileByToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth-apple/auth-apple.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfileByToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileByToken(loginDto: AuthAppleLoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth-apple/auth-apple.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            AuthAppleLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport appleSigninAuth from 'apple-signin-auth';\nimport { ConfigService } from '@nestjs/config';\nimport { SocialInterface } from '../social/interfaces/social.interface';\nimport { AuthAppleLoginDto } from './dto/auth-apple-login.dto';\nimport { AllConfigType } from '../config/config.type';\n\n@Injectable()\nexport class AuthAppleService {\n  constructor(private configService: ConfigService) {}\n\n  async getProfileByToken(\n    loginDto: AuthAppleLoginDto,\n  ): Promise {\n    const data = await appleSigninAuth.verifyIdToken(loginDto.idToken, {\n      audience: this.configService.get('apple.appAudience', { infer: true }),\n    });\n\n    return {\n      id: data.sub,\n      email: data.email,\n      firstName: loginDto.firstName,\n      lastName: loginDto.lastName,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthConfirmEmailDto.html":{"url":"classes/AuthConfirmEmailDto.html","title":"class - AuthConfirmEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthConfirmEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-confirm-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-confirm-email.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class AuthConfirmEmailDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  hash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    \n                                    \n                                    Async\n                                confirmNewEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                me\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                resetPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        confirmEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmEmail(confirmEmailDto: AuthConfirmEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email/confirm')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                confirmEmailDto\n                                            \n                                                            AuthConfirmEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        confirmNewEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmNewEmail(confirmEmailDto: AuthConfirmEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email/confirm/new')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                confirmEmailDto\n                                            \n                                                            AuthConfirmEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Delete('me')@UseGuards(undefined)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPassword(forgotPasswordDto: AuthForgotPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot/password')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                forgotPasswordDto\n                                            \n                                                            AuthForgotPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: AuthEmailLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SerializeOptions({groups: undefined})@Post('email/login')@ApiOkResponse({type: LoginResponseDto})@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            AuthEmailLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Post('logout')@UseGuards(undefined)@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@SerializeOptions({groups: undefined})@Get('me')@UseGuards(undefined)@ApiOkResponse({type: User})@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiOkResponse({type: RefreshResponseDto})@SerializeOptions({groups: undefined})@Post('refresh')@UseGuards(undefined)@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createUserDto: AuthRegisterLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email/register')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            AuthRegisterLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(resetPasswordDto: AuthResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset/password')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resetPasswordDto\n                                            \n                                                            AuthResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(request, userDto: AuthUpdateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@SerializeOptions({groups: undefined})@Patch('me')@UseGuards(undefined)@HttpCode(HttpStatus.OK)@ApiOkResponse({type: User})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userDto\n                                            \n                                                            AuthUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Request,\n  Post,\n  UseGuards,\n  Patch,\n  Delete,\n  SerializeOptions,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthEmailLoginDto } from './dto/auth-email-login.dto';\nimport { AuthForgotPasswordDto } from './dto/auth-forgot-password.dto';\nimport { AuthConfirmEmailDto } from './dto/auth-confirm-email.dto';\nimport { AuthResetPasswordDto } from './dto/auth-reset-password.dto';\nimport { AuthUpdateDto } from './dto/auth-update.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AuthRegisterLoginDto } from './dto/auth-register-login.dto';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { NullableType } from '../utils/types/nullable.type';\nimport { User } from '../users/domain/user';\nimport { RefreshResponseDto } from './dto/refresh-response.dto';\n\n@ApiTags('Auth')\n@Controller({\n  path: 'auth',\n  version: '1',\n})\nexport class AuthController {\n  constructor(private readonly service: AuthService) {}\n\n  @SerializeOptions({\n    groups: ['me'],\n  })\n  @Post('email/login')\n  @ApiOkResponse({\n    type: LoginResponseDto,\n  })\n  @HttpCode(HttpStatus.OK)\n  public login(@Body() loginDto: AuthEmailLoginDto): Promise {\n    return this.service.validateLogin(loginDto);\n  }\n\n  @Post('email/register')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async register(@Body() createUserDto: AuthRegisterLoginDto): Promise {\n    return this.service.register(createUserDto);\n  }\n\n  @Post('email/confirm')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async confirmEmail(\n    @Body() confirmEmailDto: AuthConfirmEmailDto,\n  ): Promise {\n    return this.service.confirmEmail(confirmEmailDto.hash);\n  }\n\n  @Post('email/confirm/new')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async confirmNewEmail(\n    @Body() confirmEmailDto: AuthConfirmEmailDto,\n  ): Promise {\n    return this.service.confirmNewEmail(confirmEmailDto.hash);\n  }\n\n  @Post('forgot/password')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async forgotPassword(\n    @Body() forgotPasswordDto: AuthForgotPasswordDto,\n  ): Promise {\n    return this.service.forgotPassword(forgotPasswordDto.email);\n  }\n\n  @Post('reset/password')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  resetPassword(@Body() resetPasswordDto: AuthResetPasswordDto): Promise {\n    return this.service.resetPassword(\n      resetPasswordDto.hash,\n      resetPasswordDto.password,\n    );\n  }\n\n  @ApiBearerAuth()\n  @SerializeOptions({\n    groups: ['me'],\n  })\n  @Get('me')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiOkResponse({\n    type: User,\n  })\n  @HttpCode(HttpStatus.OK)\n  public me(@Request() request): Promise> {\n    return this.service.me(request.user);\n  }\n\n  @ApiBearerAuth()\n  @ApiOkResponse({\n    type: RefreshResponseDto,\n  })\n  @SerializeOptions({\n    groups: ['me'],\n  })\n  @Post('refresh')\n  @UseGuards(AuthGuard('jwt-refresh'))\n  @HttpCode(HttpStatus.OK)\n  public refresh(@Request() request): Promise {\n    return this.service.refreshToken({\n      sessionId: request.user.sessionId,\n      hash: request.user.hash,\n    });\n  }\n\n  @ApiBearerAuth()\n  @Post('logout')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(HttpStatus.NO_CONTENT)\n  public async logout(@Request() request): Promise {\n    await this.service.logout({\n      sessionId: request.user.sessionId,\n    });\n  }\n\n  @ApiBearerAuth()\n  @SerializeOptions({\n    groups: ['me'],\n  })\n  @Patch('me')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({\n    type: User,\n  })\n  public update(\n    @Request() request,\n    @Body() userDto: AuthUpdateDto,\n  ): Promise> {\n    return this.service.update(request.user, userDto);\n  }\n\n  @ApiBearerAuth()\n  @Delete('me')\n  @UseGuards(AuthGuard('jwt'))\n  @HttpCode(HttpStatus.NO_CONTENT)\n  public async delete(@Request() request): Promise {\n    return this.service.softDelete(request.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEmailLoginDto.html":{"url":"classes/AuthEmailLoginDto.html","title":"class - AuthEmailLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEmailLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-email-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test1@example.com', type: String})@Transform(lowerCaseTransformer)@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-email-login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-email-login.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\nimport { Transform } from 'class-transformer';\nimport { lowerCaseTransformer } from '../../utils/transformers/lower-case.transformer';\n\nexport class AuthEmailLoginDto {\n  @ApiProperty({ example: 'test1@example.com', type: String })\n  @Transform(lowerCaseTransformer)\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthFacebookController.html":{"url":"controllers/AuthFacebookController.html","title":"controller - AuthFacebookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthFacebookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-facebook/auth-facebook.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: AuthFacebookLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: LoginResponseDto})@SerializeOptions({groups: undefined})@Post('login')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth-facebook/auth-facebook.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            AuthFacebookLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Post,\n  SerializeOptions,\n} from '@nestjs/common';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from '../auth/auth.service';\nimport { AuthFacebookService } from './auth-facebook.service';\nimport { AuthFacebookLoginDto } from './dto/auth-facebook-login.dto';\nimport { LoginResponseDto } from '../auth/dto/login-response.dto';\n\n@ApiTags('Auth')\n@Controller({\n  path: 'auth/facebook',\n  version: '1',\n})\nexport class AuthFacebookController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authFacebookService: AuthFacebookService,\n  ) {}\n\n  @ApiOkResponse({\n    type: LoginResponseDto,\n  })\n  @SerializeOptions({\n    groups: ['me'],\n  })\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  async login(\n    @Body() loginDto: AuthFacebookLoginDto,\n  ): Promise {\n    const socialData =\n      await this.authFacebookService.getProfileByToken(loginDto);\n\n    return this.authService.validateSocialLogin('facebook', socialData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthFacebookLoginDto.html":{"url":"classes/AuthFacebookLoginDto.html","title":"class - AuthFacebookLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthFacebookLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-facebook/dto/auth-facebook-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'abc'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-facebook/dto/auth-facebook-login.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class AuthFacebookLoginDto {\n  @ApiProperty({ example: 'abc' })\n  @IsNotEmpty()\n  accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthFacebookModule.html":{"url":"modules/AuthFacebookModule.html","title":"module - AuthFacebookModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthFacebookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthFacebookModule\n\n\n\ncluster_AuthFacebookModule_imports\n\n\n\ncluster_AuthFacebookModule_exports\n\n\n\ncluster_AuthFacebookModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAuthFacebookModule\n\nAuthFacebookModule\n\nAuthFacebookModule -->\n\nAuthModule->AuthFacebookModule\n\n\n\n\n\nAuthFacebookService \n\nAuthFacebookService \n\nAuthFacebookService  -->\n\nAuthFacebookModule->AuthFacebookService \n\n\n\n\n\nAuthFacebookService\n\nAuthFacebookService\n\nAuthFacebookModule -->\n\nAuthFacebookService->AuthFacebookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth-facebook/auth-facebook.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthFacebookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthFacebookController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthFacebookService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthFacebookService } from './auth-facebook.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthFacebookController } from './auth-facebook.controller';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [ConfigModule, AuthModule],\n  providers: [AuthFacebookService],\n  exports: [AuthFacebookService],\n  controllers: [AuthFacebookController],\n})\nexport class AuthFacebookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthFacebookService.html":{"url":"injectables/AuthFacebookService.html","title":"injectable - AuthFacebookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthFacebookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-facebook/auth-facebook.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfileByToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth-facebook/auth-facebook.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfileByToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileByToken(loginDto: AuthFacebookLoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth-facebook/auth-facebook.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            AuthFacebookLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Facebook } from 'fb';\nimport { ConfigService } from '@nestjs/config';\nimport { SocialInterface } from '../social/interfaces/social.interface';\nimport { FacebookInterface } from './interfaces/facebook.interface';\nimport { AuthFacebookLoginDto } from './dto/auth-facebook-login.dto';\nimport { AllConfigType } from '../config/config.type';\n\n@Injectable()\nexport class AuthFacebookService {\n  constructor(private configService: ConfigService) {}\n\n  async getProfileByToken(\n    loginDto: AuthFacebookLoginDto,\n  ): Promise {\n    const fb: Facebook = new Facebook({\n      appId: this.configService.get('facebook.appId', {\n        infer: true,\n      }),\n      appSecret: this.configService.get('facebook.appSecret', {\n        infer: true,\n      }),\n      version: 'v7.0',\n    });\n    fb.setAccessToken(loginDto.accessToken);\n\n    const data: FacebookInterface = await new Promise((resolve) => {\n      fb.api(\n        '/me',\n        'get',\n        { fields: 'id,last_name,email,first_name' },\n        (response) => {\n          resolve(response);\n        },\n      );\n    });\n\n    return {\n      id: data.id,\n      email: data.email,\n      firstName: data.first_name,\n      lastName: data.last_name,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthForgotPasswordDto.html":{"url":"classes/AuthForgotPasswordDto.html","title":"class - AuthForgotPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthForgotPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-forgot-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test1@example.com', type: String})@Transform(lowerCaseTransformer)@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-forgot-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail } from 'class-validator';\nimport { Transform } from 'class-transformer';\nimport { lowerCaseTransformer } from '../../utils/transformers/lower-case.transformer';\n\nexport class AuthForgotPasswordDto {\n  @ApiProperty({ example: 'test1@example.com', type: String })\n  @Transform(lowerCaseTransformer)\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthGoogleController.html":{"url":"controllers/AuthGoogleController.html","title":"controller - AuthGoogleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthGoogleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-google/auth-google.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: AuthGoogleLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: LoginResponseDto})@SerializeOptions({groups: undefined})@Post('login')@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/auth-google/auth-google.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            AuthGoogleLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Post,\n  SerializeOptions,\n} from '@nestjs/common';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from '../auth/auth.service';\nimport { AuthGoogleService } from './auth-google.service';\nimport { AuthGoogleLoginDto } from './dto/auth-google-login.dto';\nimport { LoginResponseDto } from '../auth/dto/login-response.dto';\n\n@ApiTags('Auth')\n@Controller({\n  path: 'auth/google',\n  version: '1',\n})\nexport class AuthGoogleController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly authGoogleService: AuthGoogleService,\n  ) {}\n\n  @ApiOkResponse({\n    type: LoginResponseDto,\n  })\n  @SerializeOptions({\n    groups: ['me'],\n  })\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  async login(@Body() loginDto: AuthGoogleLoginDto): Promise {\n    const socialData = await this.authGoogleService.getProfileByToken(loginDto);\n\n    return this.authService.validateSocialLogin('google', socialData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGoogleLoginDto.html":{"url":"classes/AuthGoogleLoginDto.html","title":"class - AuthGoogleLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGoogleLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-google/dto/auth-google-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                idToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'abc'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-google/dto/auth-google-login.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class AuthGoogleLoginDto {\n  @ApiProperty({ example: 'abc' })\n  @IsNotEmpty()\n  idToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthGoogleModule.html":{"url":"modules/AuthGoogleModule.html","title":"module - AuthGoogleModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthGoogleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthGoogleModule\n\n\n\ncluster_AuthGoogleModule_exports\n\n\n\ncluster_AuthGoogleModule_imports\n\n\n\ncluster_AuthGoogleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAuthGoogleModule\n\nAuthGoogleModule\n\nAuthGoogleModule -->\n\nAuthModule->AuthGoogleModule\n\n\n\n\n\nAuthGoogleService \n\nAuthGoogleService \n\nAuthGoogleService  -->\n\nAuthGoogleModule->AuthGoogleService \n\n\n\n\n\nAuthGoogleService\n\nAuthGoogleService\n\nAuthGoogleModule -->\n\nAuthGoogleService->AuthGoogleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth-google/auth-google.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthGoogleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthGoogleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthGoogleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthGoogleService } from './auth-google.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthGoogleController } from './auth-google.controller';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [ConfigModule, AuthModule],\n  providers: [AuthGoogleService],\n  exports: [AuthGoogleService],\n  controllers: [AuthGoogleController],\n})\nexport class AuthGoogleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGoogleService.html":{"url":"injectables/AuthGoogleService.html","title":"injectable - AuthGoogleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-google/auth-google.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                google\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfileByToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth-google/auth-google.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProfileByToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileByToken(loginDto: AuthGoogleLoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth-google/auth-google.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            AuthGoogleLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        google\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OAuth2Client\n\n                    \n                \n                    \n                        \n                                Defined in src/auth-google/auth-google.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { OAuth2Client } from 'google-auth-library';\nimport { SocialInterface } from '../social/interfaces/social.interface';\nimport { AuthGoogleLoginDto } from './dto/auth-google-login.dto';\nimport { AllConfigType } from '../config/config.type';\n\n@Injectable()\nexport class AuthGoogleService {\n  private google: OAuth2Client;\n\n  constructor(private configService: ConfigService) {\n    this.google = new OAuth2Client(\n      configService.get('google.clientId', { infer: true }),\n      configService.get('google.clientSecret', { infer: true }),\n    );\n  }\n\n  async getProfileByToken(\n    loginDto: AuthGoogleLoginDto,\n  ): Promise {\n    const ticket = await this.google.verifyIdToken({\n      idToken: loginDto.idToken,\n      audience: [\n        this.configService.getOrThrow('google.clientId', { infer: true }),\n      ],\n    });\n\n    const data = ticket.getPayload();\n\n    if (!data) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          user: 'wrongToken',\n        },\n      });\n    }\n\n    return {\n      id: data.sub,\n      email: data.email,\n      firstName: data.given_name,\n      lastName: data.family_name,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAuthModule -->\n\nSessionModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAnonymousStrategy\n\nAnonymousStrategy\n\nAuthModule -->\n\nAnonymousStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnonymousStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                        \n                            SessionModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { AnonymousStrategy } from './strategies/anonymous.strategy';\nimport { JwtRefreshStrategy } from './strategies/jwt-refresh.strategy';\nimport { MailModule } from '../mail/mail.module';\nimport { SessionModule } from '../session/session.module';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    SessionModule,\n    PassportModule,\n    MailModule,\n    JwtModule.register({}),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, JwtRefreshStrategy, AnonymousStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRegisterLoginDto.html":{"url":"classes/AuthRegisterLoginDto.html","title":"class - AuthRegisterLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRegisterLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-register-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test1@example.com', type: String})@Transform(lowerCaseTransformer)@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-register-login.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-register-login.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-register-login.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-register-login.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\nimport { Transform } from 'class-transformer';\nimport { lowerCaseTransformer } from '../../utils/transformers/lower-case.transformer';\n\nexport class AuthRegisterLoginDto {\n  @ApiProperty({ example: 'test1@example.com', type: String })\n  @Transform(lowerCaseTransformer)\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @MinLength(6)\n  password: string;\n\n  @ApiProperty({ example: 'John' })\n  @IsNotEmpty()\n  firstName: string;\n\n  @ApiProperty({ example: 'Doe' })\n  @IsNotEmpty()\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResetPasswordDto.html":{"url":"classes/AuthResetPasswordDto.html","title":"class - AuthResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-reset-password.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-reset-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class AuthResetPasswordDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  hash: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmEmail\n                            \n                            \n                                    Async\n                                confirmNewEmail\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Private\n                                    Async\n                                getTokensData\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                me\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                softDelete\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                validateLogin\n                            \n                            \n                                    Async\n                                validateSocialLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, usersService: UsersService, sessionService: SessionService, mailService: MailService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmEmail(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmNewEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmNewEmail(hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:274\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:316\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getTokensData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokensData(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:550\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(data: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:546\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me(userJwtPayload: JwtPayloadType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:397\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userJwtPayload\n                                            \n                                                            JwtPayloadType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(data: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:498\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(dto: AuthRegisterLoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            AuthRegisterLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(hash: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:355\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        softDelete\n                        \n                    \n                \n            \n            \n                \n                        \n                    softDelete(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:542\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userJwtPayload: JwtPayloadType, userDto: AuthUpdateDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:401\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userJwtPayload\n                                            \n                                                            JwtPayloadType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userDto\n                                            \n                                                            AuthUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateLogin(loginDto: AuthEmailLoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            AuthEmailLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateSocialLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateSocialLogin(authProvider: string, socialData: SocialInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authProvider\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                socialData\n                                            \n                                                            SocialInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport ms from 'ms';\nimport crypto from 'crypto';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport { JwtService } from '@nestjs/jwt';\nimport bcrypt from 'bcryptjs';\nimport { AuthEmailLoginDto } from './dto/auth-email-login.dto';\nimport { AuthUpdateDto } from './dto/auth-update.dto';\nimport { AuthProvidersEnum } from './auth-providers.enum';\nimport { SocialInterface } from '../social/interfaces/social.interface';\nimport { AuthRegisterLoginDto } from './dto/auth-register-login.dto';\nimport { NullableType } from '../utils/types/nullable.type';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtRefreshPayloadType } from './strategies/types/jwt-refresh-payload.type';\nimport { JwtPayloadType } from './strategies/types/jwt-payload.type';\nimport { UsersService } from '../users/users.service';\nimport { AllConfigType } from '../config/config.type';\nimport { MailService } from '../mail/mail.service';\nimport { RoleEnum } from '../roles/roles.enum';\nimport { Session } from '../session/domain/session';\nimport { SessionService } from '../session/session.service';\nimport { StatusEnum } from '../statuses/statuses.enum';\nimport { User } from '../users/domain/user';\nimport { TenantDto } from 'src/tenants/dto/tenant.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private usersService: UsersService,\n    private sessionService: SessionService,\n    private mailService: MailService,\n    private configService: ConfigService,\n  ) {}\n\n  async validateLogin(loginDto: AuthEmailLoginDto): Promise {\n    const user = await this.usersService.findByEmail(loginDto.email);\n\n    if (!user) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          email: 'notFound',\n        },\n      });\n    }\n\n    if (user.provider !== AuthProvidersEnum.email) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          email: `needLoginViaProvider:${user.provider}`,\n        },\n      });\n    }\n\n    if (!user.password) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          password: 'incorrectPassword',\n        },\n      });\n    }\n\n    const isValidPassword = await bcrypt.compare(\n      loginDto.password,\n      user.password,\n    );\n\n    if (!isValidPassword) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          password: 'incorrectPassword',\n        },\n      });\n    }\n\n    const hash = crypto\n      .createHash('sha256')\n      .update(randomStringGenerator())\n      .digest('hex');\n\n    const session = await this.sessionService.create({\n      user,\n      hash,\n    });\n\n    const { token, refreshToken, tokenExpires } = await this.getTokensData({\n      id: user.id,\n      role: user.role,\n      sessionId: session.id,\n      hash,\n    });\n\n    return {\n      refreshToken,\n      token,\n      tokenExpires,\n      user,\n    };\n  }\n\n  async validateSocialLogin(\n    authProvider: string,\n    socialData: SocialInterface,\n  ): Promise {\n    let user: NullableType = null;\n    const socialEmail = socialData.email?.toLowerCase();\n    let userByEmail: NullableType = null;\n\n    if (socialEmail) {\n      userByEmail = await this.usersService.findByEmail(socialEmail);\n    }\n\n    if (socialData.id) {\n      user = await this.usersService.findBySocialIdAndProvider({\n        socialId: socialData.id,\n        provider: authProvider,\n      });\n    }\n\n    if (user) {\n      if (socialEmail && !userByEmail) {\n        user.email = socialEmail;\n      }\n      await this.usersService.update(user.id, user);\n    } else if (userByEmail) {\n      user = userByEmail;\n    } else if (socialData.id) {\n      const role = {\n        id: RoleEnum.user,\n      };\n      const status = {\n        id: StatusEnum.active,\n      };\n\n      user = await this.usersService.create({\n        email: socialEmail ?? null,\n        firstName: socialData.firstName ?? null,\n        lastName: socialData.lastName ?? null,\n        socialId: socialData.id,\n        provider: authProvider,\n        role,\n        status,\n        tenant: new TenantDto(),\n      });\n\n      user = await this.usersService.findById(user.id);\n    }\n\n    if (!user) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          user: 'userNotFound',\n        },\n      });\n    }\n\n    const hash = crypto\n      .createHash('sha256')\n      .update(randomStringGenerator())\n      .digest('hex');\n\n    const session = await this.sessionService.create({\n      user,\n      hash,\n    });\n\n    const {\n      token: jwtToken,\n      refreshToken,\n      tokenExpires,\n    } = await this.getTokensData({\n      id: user.id,\n      role: user.role,\n      sessionId: session.id,\n      hash,\n    });\n\n    return {\n      refreshToken,\n      token: jwtToken,\n      tokenExpires,\n      user,\n    };\n  }\n\n  async register(dto: AuthRegisterLoginDto): Promise {\n    const user = await this.usersService.create({\n      ...dto,\n      email: dto.email,\n      role: {\n        id: RoleEnum.user,\n      },\n      status: {\n        id: StatusEnum.inactive,\n      },\n      tenant: new TenantDto(),\n    });\n\n    const hash = await this.jwtService.signAsync(\n      {\n        confirmEmailUserId: user.id,\n      },\n      {\n        secret: this.configService.getOrThrow('auth.confirmEmailSecret', {\n          infer: true,\n        }),\n        expiresIn: this.configService.getOrThrow('auth.confirmEmailExpires', {\n          infer: true,\n        }),\n      },\n    );\n\n    await this.mailService.userSignUp({\n      to: dto.email,\n      data: {\n        hash,\n      },\n    });\n  }\n\n  async confirmEmail(hash: string): Promise {\n    let userId: User['id'];\n\n    try {\n      const jwtData = await this.jwtService.verifyAsync(hash, {\n        secret: this.configService.getOrThrow('auth.confirmEmailSecret', {\n          infer: true,\n        }),\n      });\n\n      userId = jwtData.confirmEmailUserId;\n    } catch {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          hash: `invalidHash`,\n        },\n      });\n    }\n\n    const user = await this.usersService.findById(userId);\n\n    if (\n      !user ||\n      user?.status?.id?.toString() !== StatusEnum.inactive.toString()\n    ) {\n      throw new NotFoundException({\n        status: HttpStatus.NOT_FOUND,\n        error: `notFound`,\n      });\n    }\n\n    user.status = {\n      id: StatusEnum.active,\n    };\n\n    await this.usersService.update(user.id, user);\n  }\n\n  async confirmNewEmail(hash: string): Promise {\n    let userId: User['id'];\n    let newEmail: User['email'];\n\n    try {\n      const jwtData = await this.jwtService.verifyAsync(hash, {\n        secret: this.configService.getOrThrow('auth.confirmEmailSecret', {\n          infer: true,\n        }),\n      });\n\n      userId = jwtData.confirmEmailUserId;\n      newEmail = jwtData.newEmail;\n    } catch {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          hash: `invalidHash`,\n        },\n      });\n    }\n\n    const user = await this.usersService.findById(userId);\n\n    if (!user) {\n      throw new NotFoundException({\n        status: HttpStatus.NOT_FOUND,\n        error: `notFound`,\n      });\n    }\n\n    user.email = newEmail;\n    user.status = {\n      id: StatusEnum.active,\n    };\n\n    await this.usersService.update(user.id, user);\n  }\n\n  async forgotPassword(email: string): Promise {\n    const user = await this.usersService.findByEmail(email);\n\n    if (!user) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          email: 'emailNotExists',\n        },\n      });\n    }\n\n    const tokenExpiresIn = this.configService.getOrThrow('auth.forgotExpires', {\n      infer: true,\n    });\n\n    const tokenExpires = Date.now() + ms(tokenExpiresIn);\n\n    const hash = await this.jwtService.signAsync(\n      {\n        forgotUserId: user.id,\n      },\n      {\n        secret: this.configService.getOrThrow('auth.forgotSecret', {\n          infer: true,\n        }),\n        expiresIn: tokenExpiresIn,\n      },\n    );\n\n    await this.mailService.forgotPassword({\n      to: email,\n      data: {\n        hash,\n        tokenExpires,\n      },\n    });\n  }\n\n  async resetPassword(hash: string, password: string): Promise {\n    let userId: User['id'];\n\n    try {\n      const jwtData = await this.jwtService.verifyAsync(hash, {\n        secret: this.configService.getOrThrow('auth.forgotSecret', {\n          infer: true,\n        }),\n      });\n\n      userId = jwtData.forgotUserId;\n    } catch {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          hash: `invalidHash`,\n        },\n      });\n    }\n\n    const user = await this.usersService.findById(userId);\n\n    if (!user) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          hash: `notFound`,\n        },\n      });\n    }\n\n    user.password = password;\n\n    await this.sessionService.deleteByUserId({\n      userId: user.id,\n    });\n\n    await this.usersService.update(user.id, user);\n  }\n\n  async me(userJwtPayload: JwtPayloadType): Promise> {\n    return this.usersService.findById(userJwtPayload.id);\n  }\n\n  async update(\n    userJwtPayload: JwtPayloadType,\n    userDto: AuthUpdateDto,\n  ): Promise> {\n    const currentUser = await this.usersService.findById(userJwtPayload.id);\n\n    if (!currentUser) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          user: 'userNotFound',\n        },\n      });\n    }\n\n    if (userDto.password) {\n      if (!userDto.oldPassword) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            oldPassword: 'missingOldPassword',\n          },\n        });\n      }\n\n      if (!currentUser.password) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            oldPassword: 'incorrectOldPassword',\n          },\n        });\n      }\n\n      const isValidOldPassword = await bcrypt.compare(\n        userDto.oldPassword,\n        currentUser.password,\n      );\n\n      if (!isValidOldPassword) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            oldPassword: 'incorrectOldPassword',\n          },\n        });\n      } else {\n        await this.sessionService.deleteByUserIdWithExclude({\n          userId: currentUser.id,\n          excludeSessionId: userJwtPayload.sessionId,\n        });\n      }\n    }\n\n    if (userDto.email && userDto.email !== currentUser.email) {\n      const userByEmail = await this.usersService.findByEmail(userDto.email);\n\n      if (userByEmail && userByEmail.id !== currentUser.id) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            email: 'emailExists',\n          },\n        });\n      }\n\n      const hash = await this.jwtService.signAsync(\n        {\n          confirmEmailUserId: currentUser.id,\n          newEmail: userDto.email,\n        },\n        {\n          secret: this.configService.getOrThrow('auth.confirmEmailSecret', {\n            infer: true,\n          }),\n          expiresIn: this.configService.getOrThrow('auth.confirmEmailExpires', {\n            infer: true,\n          }),\n        },\n      );\n\n      await this.mailService.confirmNewEmail({\n        to: userDto.email,\n        data: {\n          hash,\n        },\n      });\n    }\n\n    delete userDto.email;\n    delete userDto.oldPassword;\n\n    await this.usersService.update(userJwtPayload.id, userDto);\n\n    return this.usersService.findById(userJwtPayload.id);\n  }\n\n  async refreshToken(\n    data: Pick,\n  ): Promise> {\n    const session = await this.sessionService.findById(data.sessionId);\n\n    if (!session) {\n      throw new UnauthorizedException();\n    }\n\n    if (session.hash !== data.hash) {\n      throw new UnauthorizedException();\n    }\n\n    const hash = crypto\n      .createHash('sha256')\n      .update(randomStringGenerator())\n      .digest('hex');\n\n    const user = await this.usersService.findById(session.user.id);\n\n    if (!user?.role) {\n      throw new UnauthorizedException();\n    }\n\n    await this.sessionService.update(session.id, {\n      hash,\n    });\n\n    const { token, refreshToken, tokenExpires } = await this.getTokensData({\n      id: session.user.id,\n      role: {\n        id: user.role.id,\n      },\n      sessionId: session.id,\n      hash,\n    });\n\n    return {\n      token,\n      refreshToken,\n      tokenExpires,\n    };\n  }\n\n  async softDelete(user: User): Promise {\n    await this.usersService.remove(user.id);\n  }\n\n  async logout(data: Pick) {\n    return this.sessionService.deleteById(data.sessionId);\n  }\n\n  private async getTokensData(data: {\n    id: User['id'];\n    role: User['role'];\n    sessionId: Session['id'];\n    hash: Session['hash'];\n  }) {\n    const tokenExpiresIn = this.configService.getOrThrow('auth.expires', {\n      infer: true,\n    });\n\n    const tokenExpires = Date.now() + ms(tokenExpiresIn);\n\n    const [token, refreshToken] = await Promise.all([\n      await this.jwtService.signAsync(\n        {\n          id: data.id,\n          role: data.role,\n          sessionId: data.sessionId,\n        },\n        {\n          secret: this.configService.getOrThrow('auth.secret', { infer: true }),\n          expiresIn: tokenExpiresIn,\n        },\n      ),\n      await this.jwtService.signAsync(\n        {\n          sessionId: data.sessionId,\n          hash: data.hash,\n        },\n        {\n          secret: this.configService.getOrThrow('auth.refreshSecret', {\n            infer: true,\n          }),\n          expiresIn: this.configService.getOrThrow('auth.refreshExpires', {\n            infer: true,\n          }),\n        },\n      ),\n    ]);\n\n    return {\n      token,\n      refreshToken,\n      tokenExpires,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUpdateDto.html":{"url":"classes/AuthUpdateDto.html","title":"class - AuthUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                oldPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'new.email@example.com'})@IsOptional()@IsNotEmpty()@IsEmail()@Transform(lowerCaseTransformer)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-update.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'John'})@IsOptional()@IsNotEmpty({message: 'mustBeNotEmpty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-update.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Doe'})@IsOptional()@IsNotEmpty({message: 'mustBeNotEmpty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-update.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsNotEmpty({message: 'mustBeNotEmpty'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-update.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-update.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileDto | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => FileDto})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-update.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsOptional, MinLength } from 'class-validator';\nimport { FileDto } from '../../files/dto/file.dto';\nimport { Transform } from 'class-transformer';\nimport { lowerCaseTransformer } from '../../utils/transformers/lower-case.transformer';\n\nexport class AuthUpdateDto {\n  @ApiPropertyOptional({ type: () => FileDto })\n  @IsOptional()\n  photo?: FileDto | null;\n\n  @ApiPropertyOptional({ example: 'John' })\n  @IsOptional()\n  @IsNotEmpty({ message: 'mustBeNotEmpty' })\n  firstName?: string;\n\n  @ApiPropertyOptional({ example: 'Doe' })\n  @IsOptional()\n  @IsNotEmpty({ message: 'mustBeNotEmpty' })\n  lastName?: string;\n\n  @ApiPropertyOptional({ example: 'new.email@example.com' })\n  @IsOptional()\n  @IsNotEmpty()\n  @IsEmail()\n  @Transform(lowerCaseTransformer)\n  email?: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty()\n  @MinLength(6)\n  password?: string;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsNotEmpty({ message: 'mustBeNotEmpty' })\n  oldPassword?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountDto.html":{"url":"classes/CreateAccountDto.html","title":"class - CreateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/create-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                balance\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                callbackUrl\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notificationChannel\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notificationType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                number\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                owner\n                            \n                            \n                                    \n                                    \n                                receiveNotification\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                tenant\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => Boolean})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => Number})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        callbackUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notificationChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationChannelEnum | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, enum: NotificationChannelEnum, enumName: 'NotificationChannel'})@IsOptional()@IsEnum(NotificationChannelEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notificationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationTypeEnum | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, enum: NotificationTypeEnum, enumName: 'NotificationType'})@IsOptional()@IsEnum(NotificationTypeEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        receiveNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => Boolean})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => TenantDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, enum: AccountTypeEnum, enumName: 'AccountType'})@IsEnum(AccountTypeEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/create-account.dto.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TenantDto } from '../../tenants/dto/tenant.dto';\n\nimport { UserDto } from '../../users/dto/user.dto';\n\nimport {\n  // decorators here\n\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsBoolean,\n  IsArray,\n  ValidateNested,\n  IsNotEmptyObject,\n  IsEnum,\n} from 'class-validator';\n\nimport {\n  // decorators here\n  ApiProperty,\n} from '@nestjs/swagger';\n\nimport {\n  // decorators here\n  Type,\n} from 'class-transformer';\nimport {\n  AccountTypeEnum,\n  NotificationChannelEnum,\n  NotificationTypeEnum,\n} from '../../utils/enum/account-type.enum';\n\nexport class CreateAccountDto {\n  @ApiProperty({\n    required: true,\n    type: () => TenantDto,\n  })\n  @ValidateNested()\n  @Type(() => TenantDto)\n  @IsNotEmptyObject()\n  tenant: TenantDto;\n\n  @ApiProperty({\n    required: false,\n    type: () => [UserDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => UserDto)\n  @IsArray()\n  owner?: UserDto[] | null;\n\n  @ApiProperty({\n    required: true,\n    enum: AccountTypeEnum,\n    enumName: 'AccountType',\n  })\n  @IsEnum(AccountTypeEnum)\n  type: AccountTypeEnum;\n\n  @ApiProperty({\n    required: true,\n    type: () => Boolean,\n  })\n  @IsBoolean()\n  active: boolean;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  callbackUrl?: string | null;\n\n  @ApiProperty({\n    required: false,\n    enum: NotificationChannelEnum,\n    enumName: 'NotificationChannel',\n  })\n  @IsOptional()\n  @IsEnum(NotificationChannelEnum)\n  notificationChannel?: NotificationChannelEnum | null;\n\n  @ApiProperty({\n    required: false,\n    enum: NotificationTypeEnum,\n    enumName: 'NotificationType',\n  })\n  @IsOptional()\n  @IsEnum(NotificationTypeEnum)\n  notificationType?: NotificationTypeEnum | null;\n\n  @ApiProperty({\n    required: true,\n    type: () => Boolean,\n  })\n  @IsBoolean()\n  receiveNotification: boolean;\n\n  @ApiProperty({\n    required: true,\n    type: () => Number,\n  })\n  @IsNumber()\n  balance: number;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  number?: string | null;\n\n  @ApiProperty({\n    required: true,\n    type: () => String,\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    required: true,\n    type: () => String,\n  })\n  @IsString()\n  name: string;\n\n  // Don't forget to use the class-validator decorators in the DTO properties.\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccountsTable1747393574185.html":{"url":"classes/CreateAccountsTable1747393574185.html","title":"class - CreateAccountsTable1747393574185","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccountsTable1747393574185\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747393574185-CreateAccountsTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateAccountsTable1747393574185'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747393574185-CreateAccountsTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747393574185-CreateAccountsTable.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747393574185-CreateAccountsTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateAccountsTable1747393574185 implements MigrationInterface {\n  name = 'CreateAccountsTable1747393574185';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"account_type_enum\" AS ENUM('asset', 'liability', 'equity', 'revenue', 'expense')`,\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"account_notificationchannel_enum\" AS ENUM('EMAIL', 'SMS', 'WEBHOOK')`,\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"account_notificationtype_enum\" AS ENUM('ALERT', 'REMINDER', 'REPORT')`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"account\" (\"type\" \"public\".\"account_type_enum\" NOT NULL, \"active\" boolean NOT NULL, \"callbackUrl\" character varying, \"notificationChannel\" \"public\".\"account_notificationchannel_enum\", \"notificationType\" \"public\".\"account_notificationtype_enum\", \"receiveNotification\" boolean NOT NULL, \"balance\" integer NOT NULL, \"number\" character varying, \"description\" character varying NOT NULL, \"name\" character varying NOT NULL, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"tenantId\" uuid NOT NULL, CONSTRAINT \"PK_54115ee388cdb6d86bb4bf5b2ea\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"account_owner_user\" (\"accountId\" uuid NOT NULL, \"userId\" integer NOT NULL, CONSTRAINT \"PK_a94aa68eef768f0a1d3d99f0442\" PRIMARY KEY (\"accountId\", \"userId\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_a54b6ef97fee0107ea51d0cdd3\" ON \"account_owner_user\" (\"accountId\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_44c05a3ad5f7ef9b00d4a35204\" ON \"account_owner_user\" (\"userId\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"account\" ADD CONSTRAINT \"FK_6d5184542539a16abc28d80084e\" FOREIGN KEY (\"tenantId\") REFERENCES \"tenant\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"account_owner_user\" ADD CONSTRAINT \"FK_a54b6ef97fee0107ea51d0cdd36\" FOREIGN KEY (\"accountId\") REFERENCES \"account\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"account_owner_user\" ADD CONSTRAINT \"FK_44c05a3ad5f7ef9b00d4a352045\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"account_owner_user\" DROP CONSTRAINT \"FK_44c05a3ad5f7ef9b00d4a352045\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"account_owner_user\" DROP CONSTRAINT \"FK_a54b6ef97fee0107ea51d0cdd36\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"account\" DROP CONSTRAINT \"FK_6d5184542539a16abc28d80084e\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_44c05a3ad5f7ef9b00d4a35204\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_a54b6ef97fee0107ea51d0cdd3\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"account_owner_user\"`);\n    await queryRunner.query(`DROP TABLE \"account\"`);\n    await queryRunner.query(\n      `DROP TYPE \"public\".\"account_notificationtype_enum\"`,\n    );\n    await queryRunner.query(\n      `DROP TYPE \"public\".\"account_notificationchannel_enum\"`,\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"account_type_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateKycDetailsDto.html":{"url":"classes/CreateKycDetailsDto.html","title":"class - CreateKycDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateKycDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/dto/create-kyc-details.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                documentData\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                documentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                documentType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                subjectType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                submittedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                tenant\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                verifiedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                verifiedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        documentData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => Object})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        documentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        documentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, enum: KycStatus, default: undefined})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subjectType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycSubjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, enum: KycSubjectType})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        submittedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => Date})@IsOptional()@Transform( => )@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => TenantDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => UserDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        verifiedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => Date})@IsOptional()@Transform( => )@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        verifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => Number})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/create-kyc-details.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TenantDto } from '../../tenants/dto/tenant.dto';\n\nimport { UserDto } from '../../users/dto/user.dto';\n\nimport {\n  // decorators here\n  Type,\n  Transform,\n} from 'class-transformer';\n\nimport {\n  // decorators here\n\n  ValidateNested,\n  IsNotEmptyObject,\n  IsString,\n  IsOptional,\n  IsDate,\n  IsNumber,\n} from 'class-validator';\n\nimport {\n  // decorators here\n  ApiProperty,\n} from '@nestjs/swagger';\nimport {\n  KycStatus,\n  KycSubjectType,\n} from '../infrastructure/persistence/relational/entities/kyc-details.entity';\nexport class CreateKycDetailsDto {\n  @ApiProperty({\n    required: false,\n    type: () => Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  verifiedBy?: number | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => Date,\n  })\n  @IsOptional()\n  @Transform(({ value }) => (value ? new Date(value) : value))\n  @IsDate()\n  verifiedAt?: Date | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => Date,\n  })\n  @IsOptional()\n  @Transform(({ value }) => (value ? new Date(value) : value))\n  @IsDate()\n  submittedAt?: Date | null;\n\n  @ApiProperty({\n    required: false,\n    enum: KycStatus,\n    default: KycStatus.PENDING,\n  })\n  @IsOptional()\n  @IsString()\n  status?: KycStatus;\n\n  @ApiProperty({\n    required: false,\n    type: () => Object,\n  })\n  @IsOptional()\n  documentData?: {\n    frontUrl?: string;\n    backUrl?: string;\n    expiryDate?: Date;\n  };\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  documentNumber?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  documentType?: string | null;\n\n  @ApiProperty({\n    required: true,\n    enum: KycSubjectType,\n  })\n  @IsString()\n  subjectType: KycSubjectType;\n\n  @ApiProperty({\n    required: true,\n    type: () => TenantDto,\n  })\n  @ValidateNested()\n  @Type(() => TenantDto)\n  @IsNotEmptyObject()\n  tenant: TenantDto;\n\n  @ApiProperty({\n    required: true,\n    type: () => UserDto,\n  })\n  @ValidateNested()\n  @Type(() => UserDto)\n  @IsNotEmptyObject()\n  user: UserDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRegionDto.html":{"url":"classes/CreateRegionDto.html","title":"class - CreateRegionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRegionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/dto/create-region.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                boundary\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                centroidLat\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                centroidLon\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                operatingHours\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                serviceTypes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                tenant\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                zipCodes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        boundary\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Polygon\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, example: undefined, description: 'GeoJSON polygon boundary'})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/create-region.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        centroidLat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: undefined, description: 'Latitude of region centroid', required: false})@IsOptional()@IsNumber()@IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/create-region.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        centroidLon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, example: 36.8219, description: 'Longitude of region centroid', required: false})@IsOptional()@IsNumber()@IsLongitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/create-region.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/create-region.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        operatingHours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, example: undefined, description: 'Operating hours configuration', required: false})@IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/create-region.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        serviceTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, example: undefined, description: 'Service types available in this region', required: false})@IsOptional()@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/create-region.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => TenantDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/create-region.dto.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        zipCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, example: undefined, description: 'ZIP codes covered by this region', required: false})@IsOptional()@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/create-region.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TenantDto } from '../../tenants/dto/tenant.dto';\n\nimport {\n  // decorators here\n  Type,\n} from 'class-transformer';\n\nimport {\n  // decorators here\n\n  ValidateNested,\n  IsNotEmptyObject,\n  IsString,\n  IsOptional,\n  IsNumber,\n  IsArray,\n  IsObject,\n  IsLatitude,\n  IsLongitude,\n} from 'class-validator';\n\nimport {\n  // decorators here\n  ApiProperty,\n} from '@nestjs/swagger';\nimport { Polygon } from 'geojson';\nexport class CreateRegionDto {\n  @ApiProperty({\n    type: [String],\n    example: ['00100', '00101'],\n    description: 'ZIP codes covered by this region',\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  zipCodes?: string[];\n\n  @ApiProperty({\n    type: Object,\n    example: {\n      days: ['mon', 'wed', 'fri'],\n      startTime: '08:00',\n      endTime: '17:00',\n    },\n    description: 'Operating hours configuration',\n    required: false,\n  })\n  @IsOptional()\n  @IsObject()\n  operatingHours?: {\n    days: string[];\n    startTime: string;\n    endTime: string;\n  };\n\n  @ApiProperty({\n    type: [String],\n    example: ['residential', 'commercial'],\n    description: 'Service types available in this region',\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  serviceTypes?: string[];\n\n  @ApiProperty({\n    type: Number,\n    example: 36.8219,\n    description: 'Longitude of region centroid',\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  @IsLongitude()\n  centroidLon?: number;\n\n  @ApiProperty({\n    type: Number,\n    example: -1.2921,\n    description: 'Latitude of region centroid',\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  @IsLatitude()\n  centroidLat?: number;\n\n  @ApiProperty({\n    type: Object,\n    example: {\n      type: 'Polygon',\n      coordinates: [\n        [\n          [36.8219, -1.2921],\n          [36.895, -1.2921],\n          [36.895, -1.2335],\n          [36.8219, -1.2335],\n          [36.8219, -1.2921],\n        ],\n      ],\n    },\n    description: 'GeoJSON polygon boundary',\n  })\n  @IsObject()\n  boundary: Polygon;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  name?: string | null;\n\n  @ApiProperty({\n    required: true,\n    type: () => TenantDto,\n  })\n  @ValidateNested()\n  @Type(() => TenantDto)\n  @IsNotEmptyObject()\n  tenant: TenantDto;\n\n  // Don't forget to use the class-validator decorators in the DTO properties.\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResidence1747295167463.html":{"url":"classes/CreateResidence1747295167463.html","title":"class - CreateResidence1747295167463","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResidence1747295167463\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1747295167463-CreateResidence.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateResidence1747295167463'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1747295167463-CreateResidence.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747295167463-CreateResidence.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1747295167463-CreateResidence.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateResidence1747295167463 implements MigrationInterface {\n  name = 'CreateResidence1747295167463';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"residence_type_enum\" AS ENUM('APARTMENT', 'HOUSE', 'DUPLEX', 'CONDO', 'TOWNHOUSE', 'OTHER')`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"residence\" (\"type\" \"public\".\"residence_type_enum\" NOT NULL DEFAULT 'OTHER', \"isActive\" boolean NOT NULL, \"charge\" integer NOT NULL, \"name\" character varying NOT NULL, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"regionId\" uuid NOT NULL, \"tenantId\" uuid NOT NULL, CONSTRAINT \"PK_618d05a83dac6021158cd01919a\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"residence_occupants_user\" (\"residenceId\" uuid NOT NULL, \"userId\" integer NOT NULL, CONSTRAINT \"PK_8c4fa1c9e16c1049f7af3780b32\" PRIMARY KEY (\"residenceId\", \"userId\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_85ec57103a142cba21f202f59d\" ON \"residence_occupants_user\" (\"residenceId\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_6f135e350fdddcd8e043f1ea5c\" ON \"residence_occupants_user\" (\"userId\") `,\n    );\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"settings_settingstype_enum\" RENAME TO \"settings_settingstype_enum_old\"`,\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"settings_settingstype_enum\" AS ENUM('invoice', 'billing', 'payment', 'tax', 'commission', 'notification', 'reminder', 'alert', 'waste', 'collection', 'processing', 'recycling', 'disposal', 'marketplace', 'listing', 'bidding', 'transaction', 'preferences', 'privacy', 'accessibility', 'compliance', 'certification', 'reporting', 'audit', 'api', 'integration', 'security', 'rate_limiting', 'localization', 'language', 'currency', 'timezone', 'theme', 'layout', 'dashboard', 'system', 'maintenance', 'backup', 'scaling', 'carbon_accounting', 'sustainability', 'routing', 'vehicle', 'driver')`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"settings\" ALTER COLUMN \"settingsType\" TYPE \"public\".\"settings_settingstype_enum\" USING \"settingsType\"::\"text\"::\"public\".\"settings_settingstype_enum\"`,\n    );\n    await queryRunner.query(\n      `DROP TYPE \"public\".\"settings_settingstype_enum_old\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"residence\" ADD CONSTRAINT \"FK_bffa18d20b4a268de41fa3d4664\" FOREIGN KEY (\"regionId\") REFERENCES \"region\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"residence\" ADD CONSTRAINT \"FK_57d4a46e1bf22f67d2e2807010e\" FOREIGN KEY (\"tenantId\") REFERENCES \"tenant\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"residence_occupants_user\" ADD CONSTRAINT \"FK_85ec57103a142cba21f202f59d2\" FOREIGN KEY (\"residenceId\") REFERENCES \"residence\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"residence_occupants_user\" ADD CONSTRAINT \"FK_6f135e350fdddcd8e043f1ea5c5\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"residence_occupants_user\" DROP CONSTRAINT \"FK_6f135e350fdddcd8e043f1ea5c5\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"residence_occupants_user\" DROP CONSTRAINT \"FK_85ec57103a142cba21f202f59d2\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"residence\" DROP CONSTRAINT \"FK_57d4a46e1bf22f67d2e2807010e\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"residence\" DROP CONSTRAINT \"FK_bffa18d20b4a268de41fa3d4664\"`,\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"settings_settingstype_enum_old\" AS ENUM('invoice', 'billing', 'payment', 'tax', 'commission', 'notification', 'reminder', 'alert', 'waste', 'collection', 'processing', 'recycling', 'disposal', 'marketplace', 'listing', 'bidding', 'transaction', 'preferences', 'privacy', 'accessibility', 'compliance', 'certification', 'reporting', 'audit', 'api', 'integration', 'security', 'rate_limiting', 'localization', 'language', 'currency', 'timezone', 'theme', 'layout', 'dashboard', 'maintenance', 'backup', 'scaling', 'carbon_accounting', 'sustainability', 'routing', 'vehicle', 'driver')`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"settings\" ALTER COLUMN \"settingsType\" TYPE \"public\".\"settings_settingstype_enum_old\" USING \"settingsType\"::\"text\"::\"public\".\"settings_settingstype_enum_old\"`,\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"settings_settingstype_enum\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"settings_settingstype_enum_old\" RENAME TO \"settings_settingstype_enum\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_6f135e350fdddcd8e043f1ea5c\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_85ec57103a142cba21f202f59d\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"residence_occupants_user\"`);\n    await queryRunner.query(`DROP TABLE \"residence\"`);\n    await queryRunner.query(`DROP TYPE \"public\".\"residence_type_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResidenceDto.html":{"url":"classes/CreateResidenceDto.html","title":"class - CreateResidenceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResidenceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/dto/create-residence.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                charge\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                occupants\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                tenant\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        charge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => Number})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/create-residence.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => Boolean})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/create-residence.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => String})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/create-residence.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        occupants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/create-residence.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegionDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => RegionDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/create-residence.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => TenantDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/create-residence.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResidenceTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ResidenceTypeEnum, enumName: 'ResidenceType', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/create-residence.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDto } from '../../users/dto/user.dto';\n\nimport { RegionDto } from '../../regions/dto/region.dto';\n\nimport { TenantDto } from '../../tenants/dto/tenant.dto';\n\nimport {\n  // decorators here\n\n  IsString,\n  IsNumber,\n  IsBoolean,\n  ValidateNested,\n  IsNotEmptyObject,\n  IsArray,\n  IsOptional,\n} from 'class-validator';\n\nimport {\n  // decorators here\n  ApiProperty,\n} from '@nestjs/swagger';\n\nimport {\n  // decorators here\n  Type,\n} from 'class-transformer';\nimport { ResidenceTypeEnum } from '../../utils/enum/residence-type.enum';\n\nexport class CreateResidenceDto {\n  @ApiProperty({\n    enum: ResidenceTypeEnum,\n    enumName: 'ResidenceType',\n    nullable: false,\n  })\n  type: ResidenceTypeEnum;\n  @ApiProperty({\n    required: false,\n    type: () => [UserDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => UserDto)\n  @IsArray()\n  occupants?: UserDto[] | null;\n\n  @ApiProperty({\n    required: true,\n    type: () => RegionDto,\n  })\n  @ValidateNested()\n  @Type(() => RegionDto)\n  @IsNotEmptyObject()\n  region: RegionDto;\n\n  @ApiProperty({\n    required: true,\n    type: () => TenantDto,\n  })\n  @ValidateNested()\n  @Type(() => TenantDto)\n  @IsNotEmptyObject()\n  tenant: TenantDto;\n\n  @ApiProperty({\n    required: true,\n    type: () => Boolean,\n  })\n  @IsBoolean()\n  isActive: boolean;\n\n  @ApiProperty({\n    required: true,\n    type: () => Number,\n  })\n  @IsNumber()\n  charge: number;\n\n  @ApiProperty({\n    required: true,\n    type: () => String,\n  })\n  @IsString()\n  name: string;\n\n  // Don't forget to use the class-validator decorators in the DTO properties.\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSettingsDto.html":{"url":"classes/CreateSettingsDto.html","title":"class - CreateSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/dto/create-settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                config\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                settingsType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                subjectType\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                tenant\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/create-settings.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        settingsType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/create-settings.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        subjectType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/create-settings.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => TenantDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/create-settings.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => UserDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/create-settings.dto.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TenantDto } from '../../tenants/dto/tenant.dto';\n\nimport { UserDto } from '../../users/dto/user.dto';\n\nimport {\n  // decorators here\n  Type,\n} from 'class-transformer';\n\nimport {\n  // decorators here\n\n  ValidateNested,\n  IsNotEmptyObject,\n  IsString,\n  IsOptional,\n} from 'class-validator';\n\nimport {\n  // decorators here\n  ApiProperty,\n} from '@nestjs/swagger';\n\nexport class CreateSettingsDto {\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  config?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  settingsType?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  subjectType?: string | null;\n\n  @ApiProperty({\n    required: true,\n    type: () => TenantDto,\n  })\n  @ValidateNested()\n  @Type(() => TenantDto)\n  @IsNotEmptyObject()\n  tenant: TenantDto;\n\n  @ApiProperty({\n    required: true,\n    type: () => UserDto,\n  })\n  @ValidateNested()\n  @Type(() => UserDto)\n  @IsNotEmptyObject()\n  user: UserDto;\n\n  // Don't forget to use the class-validator decorators in the DTO properties.\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTenantDto.html":{"url":"classes/CreateTenantDto.html","title":"class - CreateTenantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTenantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/dto/create-tenant.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                kycSubmissions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                logo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                primaryEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                primaryPhone\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                regions\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schemaName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                settings\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => Boolean})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        kycSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KycDetailsDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileDto | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => FileDto})@IsOptional()@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        primaryEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        primaryPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        regions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RegionDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schemaName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SettingsDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TenantTypeDto | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => TenantTypeDto})@IsOptional()@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/create-tenant.dto.ts:140\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RegionDto } from '../../regions/dto/region.dto';\n\nimport { SettingsDto } from '../../settings/dto/settings.dto';\n\nimport { FileDto } from '../../files/dto/file.dto';\n\nimport { TenantTypeDto } from '../../tenant-types/dto/tenant-type.dto';\n\nimport { KycDetailsDto } from '../../kyc-details/dto/kyc-details.dto';\n\nimport { UserDto } from '../../users/dto/user.dto';\n\nimport {\n  // decorators here\n  IsBoolean,\n  IsOptional,\n  IsArray,\n  ValidateNested,\n  IsNotEmptyObject,\n  IsString,\n} from 'class-validator';\n\nimport {\n  // decorators here\n  ApiProperty,\n} from '@nestjs/swagger';\n\nimport {\n  // decorators here\n  Type,\n} from 'class-transformer';\n\nexport class CreateTenantDto {\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  domain?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => [RegionDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => RegionDto)\n  @IsArray()\n  regions?: RegionDto[] | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => [SettingsDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => SettingsDto)\n  @IsArray()\n  settings?: SettingsDto[] | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  schemaName?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => FileDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => FileDto)\n  @IsNotEmptyObject()\n  logo?: FileDto | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  address?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  primaryPhone?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  primaryEmail?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  name?: string | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => TenantTypeDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => TenantTypeDto)\n  @IsNotEmptyObject()\n  type?: TenantTypeDto | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => [KycDetailsDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => KycDetailsDto)\n  @IsArray()\n  kycSubmissions?: KycDetailsDto[] | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => [UserDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => UserDto)\n  @IsArray()\n  users?: UserDto[] | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => Boolean,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isActive?: boolean;\n\n  // Don't forget to use the class-validator decorators in the DTO properties.\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTenantTable1745086820741.html":{"url":"classes/CreateTenantTable1745086820741.html","title":"class - CreateTenantTable1745086820741","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTenantTable1745086820741\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745086820741-CreateTenantTable.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateTenantTable1745086820741'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745086820741-CreateTenantTable.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745086820741-CreateTenantTable.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745086820741-CreateTenantTable.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateTenantTable1745086820741 implements MigrationInterface {\n  name = 'CreateTenantTable1745086820741';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"tenant\" (\"isActive\" boolean NOT NULL, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT \"PK_da8c6efd67bb301e810e56ac139\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"tenant\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTenantTypeDto.html":{"url":"classes/CreateTenantTypeDto.html","title":"class - CreateTenantTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTenantTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/dto/create-tenant-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                code\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantTypeCode | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, enum: TenantTypeCode})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/dto/create-tenant-type.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/dto/create-tenant-type.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => String})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/dto/create-tenant-type.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  // decorators here\n\n  IsString,\n  IsOptional,\n} from 'class-validator';\n\nimport {\n  // decorators here\n  ApiProperty,\n} from '@nestjs/swagger';\nimport { TenantTypeCode } from '../infrastructure/persistence/relational/entities/tenant-type.entity';\n\nexport class CreateTenantTypeDto {\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  description?: string | null;\n\n  @ApiProperty({\n    required: false,\n    enum: TenantTypeCode,\n  })\n  @IsOptional()\n  code?: TenantTypeCode | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => String,\n  })\n  @IsOptional()\n  @IsString()\n  name?: string | null;\n\n  // Don't forget to use the class-validator decorators in the DTO properties.\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUser1715028537217.html":{"url":"classes/CreateUser1715028537217.html","title":"class - CreateUser1715028537217","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUser1715028537217\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1715028537217-CreateUser.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateUser1715028537217'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1715028537217-CreateUser.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1715028537217-CreateUser.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1715028537217-CreateUser.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUser1715028537217 implements MigrationInterface {\n  name = 'CreateUser1715028537217';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"role\" (\"id\" integer NOT NULL, \"name\" character varying NOT NULL, CONSTRAINT \"PK_b36bcfe02fc8de3c57a8b2391c2\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"status\" (\"id\" integer NOT NULL, \"name\" character varying NOT NULL, CONSTRAINT \"PK_e12743a7086ec826733f54e1d95\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"file\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"path\" character varying NOT NULL, CONSTRAINT \"PK_36b46d232307066b3a2c9ea3a1d\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"user\" (\"id\" SERIAL NOT NULL, \"email\" character varying, \"password\" character varying, \"provider\" character varying NOT NULL DEFAULT 'email', \"socialId\" character varying, \"firstName\" character varying, \"lastName\" character varying, \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"deletedAt\" TIMESTAMP, \"photoId\" uuid, \"roleId\" integer, \"statusId\" integer, CONSTRAINT \"UQ_e12875dfb3b1d92d7d7c5377e22\" UNIQUE (\"email\"), CONSTRAINT \"REL_75e2be4ce11d447ef43be0e374\" UNIQUE (\"photoId\"), CONSTRAINT \"PK_cace4a159ff9f2512dd42373760\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_9bd2fe7a8e694dedc4ec2f666f\" ON \"user\" (\"socialId\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_58e4dbff0e1a32a9bdc861bb29\" ON \"user\" (\"firstName\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_f0e1b4ecdca13b177e2e3a0613\" ON \"user\" (\"lastName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"session\" (\"id\" SERIAL NOT NULL, \"hash\" character varying NOT NULL, \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"deletedAt\" TIMESTAMP, \"userId\" integer, CONSTRAINT \"PK_f55da76ac1c3ac420f444d2ff11\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_3d2f174ef04fb312fdebd0ddc5\" ON \"session\" (\"userId\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\" ADD CONSTRAINT \"FK_75e2be4ce11d447ef43be0e374f\" FOREIGN KEY (\"photoId\") REFERENCES \"file\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\" ADD CONSTRAINT \"FK_c28e52f758e7bbc53828db92194\" FOREIGN KEY (\"roleId\") REFERENCES \"role\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\" ADD CONSTRAINT \"FK_dc18daa696860586ba4667a9d31\" FOREIGN KEY (\"statusId\") REFERENCES \"status\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"session\" ADD CONSTRAINT \"FK_3d2f174ef04fb312fdebd0ddc53\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"session\" DROP CONSTRAINT \"FK_3d2f174ef04fb312fdebd0ddc53\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\" DROP CONSTRAINT \"FK_dc18daa696860586ba4667a9d31\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\" DROP CONSTRAINT \"FK_c28e52f758e7bbc53828db92194\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\" DROP CONSTRAINT \"FK_75e2be4ce11d447ef43be0e374f\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_3d2f174ef04fb312fdebd0ddc5\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"session\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_f0e1b4ecdca13b177e2e3a0613\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_58e4dbff0e1a32a9bdc861bb29\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_9bd2fe7a8e694dedc4ec2f666f\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"user\"`);\n    await queryRunner.query(`DROP TABLE \"file\"`);\n    await queryRunner.query(`DROP TABLE \"status\"`);\n    await queryRunner.query(`DROP TABLE \"role\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                kycSubmissions\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                photo\n                            \n                            \n                                    Optional\n                                provider\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                regions\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                settings\n                            \n                            \n                                    Optional\n                                socialId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                tenant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test1@example.com', type: String})@Transform(lowerCaseTransformer)@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', type: String})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        kycSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KycDetailsDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', type: String})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileDto | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => FileDto})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        regions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RegionDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RoleDto | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: RoleDto})@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SettingsDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, type: () => })@IsOptional()@ValidateNested()@Type(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: StatusDto})@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, type: () => TenantDto})@ValidateNested()@Type(undefined)@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RegionDto } from '../../regions/dto/region.dto';\n\nimport { SettingsDto } from '../../settings/dto/settings.dto';\n\nimport { KycDetailsDto } from '../../kyc-details/dto/kyc-details.dto';\n\nimport { TenantDto } from '../../tenants/dto/tenant.dto';\n\nimport {\n  // decorators here\n  Transform,\n  Type,\n} from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  // decorators here\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  MinLength,\n  ValidateNested,\n  IsNotEmptyObject,\n  IsArray,\n} from 'class-validator';\nimport { FileDto } from '../../files/dto/file.dto';\nimport { RoleDto } from '../../roles/dto/role.dto';\nimport { StatusDto } from '../../statuses/dto/status.dto';\nimport { lowerCaseTransformer } from '../../utils/transformers/lower-case.transformer';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    required: false,\n    type: () => [RegionDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => RegionDto)\n  @IsArray()\n  regions?: RegionDto[] | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => [SettingsDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => SettingsDto)\n  @IsArray()\n  settings?: SettingsDto[] | null;\n\n  @ApiProperty({\n    required: false,\n    type: () => [KycDetailsDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => KycDetailsDto)\n  @IsArray()\n  kycSubmissions?: KycDetailsDto[] | null;\n\n  @ApiProperty({\n    required: true,\n    type: () => TenantDto,\n  })\n  @ValidateNested()\n  @Type(() => TenantDto)\n  @IsNotEmptyObject()\n  tenant: TenantDto;\n\n  @ApiProperty({ example: 'test1@example.com', type: String })\n  @Transform(lowerCaseTransformer)\n  @IsNotEmpty()\n  @IsEmail()\n  email: string | null;\n\n  @ApiProperty()\n  @MinLength(6)\n  password?: string;\n\n  provider?: string;\n\n  socialId?: string | null;\n\n  @ApiProperty({ example: 'John', type: String })\n  @IsNotEmpty()\n  firstName: string | null;\n\n  @ApiProperty({ example: 'Doe', type: String })\n  @IsNotEmpty()\n  lastName: string | null;\n\n  @ApiPropertyOptional({ type: () => FileDto })\n  @IsOptional()\n  photo?: FileDto | null;\n\n  @ApiPropertyOptional({ type: RoleDto })\n  @IsOptional()\n  @Type(() => RoleDto)\n  role?: RoleDto | null;\n\n  @ApiPropertyOptional({ type: StatusDto })\n  @IsOptional()\n  @Type(() => StatusDto)\n  status?: StatusDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserTenantRelationship1745132189825.html":{"url":"classes/CreateUserTenantRelationship1745132189825.html","title":"class - CreateUserTenantRelationship1745132189825","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserTenantRelationship1745132189825\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745132189825-CreateUserTenantRelationship.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CreateUserTenantRelationship1745132189825'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745132189825-CreateUserTenantRelationship.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745132189825-CreateUserTenantRelationship.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745132189825-CreateUserTenantRelationship.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUserTenantRelationship1745132189825\n  implements MigrationInterface\n{\n  name = 'CreateUserTenantRelationship1745132189825';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user\" ADD \"tenantId\" uuid NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"user\" ADD CONSTRAINT \"FK_685bf353c85f23b6f848e4dcded\" FOREIGN KEY (\"tenantId\") REFERENCES \"tenant\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"user\" DROP CONSTRAINT \"FK_685bf353c85f23b6f848e4dcded\"`,\n    );\n    await queryRunner.query(`ALTER TABLE \"user\" DROP COLUMN \"tenantId\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentFilePersistenceModule.html":{"url":"modules/DocumentFilePersistenceModule.html","title":"module - DocumentFilePersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentFilePersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentFilePersistenceModule\n\n\n\ncluster_DocumentFilePersistenceModule_exports\n\n\n\n\nFileRepository \n\nFileRepository \n\n\n\nDocumentFilePersistenceModule\n\nDocumentFilePersistenceModule\n\nFileRepository  -->\n\nDocumentFilePersistenceModule->FileRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/infrastructure/persistence/document/document-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            FileRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FileSchema, FileSchemaClass } from './entities/file.schema';\nimport { FileRepository } from '../file.repository';\nimport { FileDocumentRepository } from './repositories/file.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: FileSchemaClass.name, schema: FileSchema },\n    ]),\n  ],\n  providers: [\n    {\n      provide: FileRepository,\n      useClass: FileDocumentRepository,\n    },\n  ],\n  exports: [FileRepository],\n})\nexport class DocumentFilePersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentKycDetailsPersistenceModule.html":{"url":"modules/DocumentKycDetailsPersistenceModule.html","title":"module - DocumentKycDetailsPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentKycDetailsPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentKycDetailsPersistenceModule\n\n\n\ncluster_DocumentKycDetailsPersistenceModule_exports\n\n\n\n\nKycDetailsRepository \n\nKycDetailsRepository \n\n\n\nDocumentKycDetailsPersistenceModule\n\nDocumentKycDetailsPersistenceModule\n\nKycDetailsRepository  -->\n\nDocumentKycDetailsPersistenceModule->KycDetailsRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/document/document-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            KycDetailsRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  KycDetailsSchema,\n  KycDetailsSchemaClass,\n} from './entities/kyc-details.schema';\nimport { KycDetailsRepository } from '../kyc-details.repository';\nimport { KycDetailsDocumentRepository } from './repositories/kyc-details.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: KycDetailsSchemaClass.name, schema: KycDetailsSchema },\n    ]),\n  ],\n  providers: [\n    {\n      provide: KycDetailsRepository,\n      useClass: KycDetailsDocumentRepository,\n    },\n  ],\n  exports: [KycDetailsRepository],\n})\nexport class DocumentKycDetailsPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentSessionPersistenceModule.html":{"url":"modules/DocumentSessionPersistenceModule.html","title":"module - DocumentSessionPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentSessionPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentSessionPersistenceModule\n\n\n\ncluster_DocumentSessionPersistenceModule_exports\n\n\n\n\nSessionRepository \n\nSessionRepository \n\n\n\nDocumentSessionPersistenceModule\n\nDocumentSessionPersistenceModule\n\nSessionRepository  -->\n\nDocumentSessionPersistenceModule->SessionRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/session/infrastructure/persistence/document/document-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            SessionRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SessionSchema, SessionSchemaClass } from './entities/session.schema';\nimport { SessionRepository } from '../session.repository';\nimport { SessionDocumentRepository } from './repositories/session.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: SessionSchemaClass.name, schema: SessionSchema },\n    ]),\n  ],\n  providers: [\n    {\n      provide: SessionRepository,\n      useClass: SessionDocumentRepository,\n    },\n  ],\n  exports: [SessionRepository],\n})\nexport class DocumentSessionPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentUserPersistenceModule.html":{"url":"modules/DocumentUserPersistenceModule.html","title":"module - DocumentUserPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    DocumentUserPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentUserPersistenceModule\n\n\n\ncluster_DocumentUserPersistenceModule_exports\n\n\n\n\nUserRepository \n\nUserRepository \n\n\n\nDocumentUserPersistenceModule\n\nDocumentUserPersistenceModule\n\nUserRepository  -->\n\nDocumentUserPersistenceModule->UserRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/infrastructure/persistence/document/document-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            UserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema, UserSchemaClass } from './entities/user.schema';\nimport { UserRepository } from '../user.repository';\nimport { UsersDocumentRepository } from './repositories/user.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: UserSchemaClass.name, schema: UserSchema },\n    ]),\n  ],\n  providers: [\n    {\n      provide: UserRepository,\n      useClass: UsersDocumentRepository,\n    },\n  ],\n  exports: [UserRepository],\n})\nexport class DocumentUserPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityDocumentHelper.html":{"url":"classes/EntityDocumentHelper.html","title":"class - EntityDocumentHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityDocumentHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/document-entity-helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(value => , {toPlainOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/document-entity-helper.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\n\nexport class EntityDocumentHelper {\n  @Transform(\n    (value) => {\n      if ('value' in value) {\n        // https://github.com/typestack/class-transformer/issues/879\n        return value.obj[value.key].toString();\n      }\n\n      return 'unknown value';\n    },\n    {\n      toPlainOnly: true,\n    },\n  )\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityRelationalHelper.html":{"url":"classes/EntityRelationalHelper.html","title":"class - EntityRelationalHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityRelationalHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/relational-entity-helper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                __entity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setEntityName\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        __entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/relational-entity-helper.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setEntityName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n                    \n                        \n                            Defined in src/utils/relational-entity-helper.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/relational-entity-helper.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { instanceToPlain } from 'class-transformer';\nimport { AfterLoad, BaseEntity } from 'typeorm';\n\nexport class EntityRelationalHelper extends BaseEntity {\n  __entity?: string;\n\n  @AfterLoad()\n  setEntityName() {\n    this.__entity = this.constructor.name;\n  }\n\n  toJSON() {\n    return instanceToPlain(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator.html":{"url":"classes/EnvironmentVariablesValidator.html","title":"class - EnvironmentVariablesValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/app.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                API_PREFIX\n                            \n                            \n                                    \n                                    \n                                APP_FALLBACK_LANGUAGE\n                            \n                            \n                                    \n                                    \n                                APP_HEADER_LANGUAGE\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                APP_PORT\n                            \n                            \n                                    \n                                    \n                                BACKEND_DOMAIN\n                            \n                            \n                                    \n                                    \n                                FRONTEND_DOMAIN\n                            \n                            \n                                    \n                                    \n                                NODE_ENV\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        API_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        APP_FALLBACK_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        APP_HEADER_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        APP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@Max(65535)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BACKEND_DOMAIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({require_tld: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        FRONTEND_DOMAIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({require_tld: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NODE_ENV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Environment)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/app.config.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\nimport { AppConfig } from './app-config.type';\nimport validateConfig from '.././utils/validate-config';\nimport {\n  IsEnum,\n  IsInt,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Max,\n  Min,\n} from 'class-validator';\n\nenum Environment {\n  Development = 'development',\n  Production = 'production',\n  Test = 'test',\n}\n\nclass EnvironmentVariablesValidator {\n  @IsEnum(Environment)\n  @IsOptional()\n  NODE_ENV: Environment;\n\n  @IsInt()\n  @Min(0)\n  @Max(65535)\n  @IsOptional()\n  APP_PORT: number;\n\n  @IsUrl({ require_tld: false })\n  @IsOptional()\n  FRONTEND_DOMAIN: string;\n\n  @IsUrl({ require_tld: false })\n  @IsOptional()\n  BACKEND_DOMAIN: string;\n\n  @IsString()\n  @IsOptional()\n  API_PREFIX: string;\n\n  @IsString()\n  @IsOptional()\n  APP_FALLBACK_LANGUAGE: string;\n\n  @IsString()\n  @IsOptional()\n  APP_HEADER_LANGUAGE: string;\n}\n\nexport default registerAs('app', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    nodeEnv: process.env.NODE_ENV || 'development',\n    name: process.env.APP_NAME || 'app',\n    workingDirectory: process.env.PWD || process.cwd(),\n    frontendDomain: process.env.FRONTEND_DOMAIN,\n    backendDomain: process.env.BACKEND_DOMAIN ?? 'http://localhost',\n    port: process.env.APP_PORT\n      ? parseInt(process.env.APP_PORT, 10)\n      : process.env.PORT\n        ? parseInt(process.env.PORT, 10)\n        : 3000,\n    apiPrefix: process.env.API_PREFIX || 'api',\n    fallbackLanguage: process.env.APP_FALLBACK_LANGUAGE || 'en',\n    headerLanguage: process.env.APP_HEADER_LANGUAGE || 'x-custom-lang',\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-1.html":{"url":"classes/EnvironmentVariablesValidator-1.html","title":"class - EnvironmentVariablesValidator-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/config/auth.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                AUTH_CONFIRM_EMAIL_SECRET\n                            \n                            \n                                    \n                                AUTH_CONFIRM_EMAIL_TOKEN_EXPIRES_IN\n                            \n                            \n                                    \n                                AUTH_FORGOT_SECRET\n                            \n                            \n                                    \n                                AUTH_FORGOT_TOKEN_EXPIRES_IN\n                            \n                            \n                                    \n                                AUTH_JWT_SECRET\n                            \n                            \n                                    \n                                AUTH_JWT_TOKEN_EXPIRES_IN\n                            \n                            \n                                    \n                                AUTH_REFRESH_SECRET\n                            \n                            \n                                    \n                                AUTH_REFRESH_TOKEN_EXPIRES_IN\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_CONFIRM_EMAIL_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/config/auth.config.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_CONFIRM_EMAIL_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/config/auth.config.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_FORGOT_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/config/auth.config.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_FORGOT_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/config/auth.config.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_JWT_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/config/auth.config.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_JWT_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/config/auth.config.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_REFRESH_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/config/auth.config.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_REFRESH_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/config/auth.config.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nimport { IsString } from 'class-validator';\nimport validateConfig from '../../utils/validate-config';\nimport { AuthConfig } from './auth-config.type';\nimport ms from 'ms';\n\nclass EnvironmentVariablesValidator {\n  @IsString()\n  AUTH_JWT_SECRET: string;\n\n  @IsString()\n  AUTH_JWT_TOKEN_EXPIRES_IN: string;\n\n  @IsString()\n  AUTH_REFRESH_SECRET: string;\n\n  @IsString()\n  AUTH_REFRESH_TOKEN_EXPIRES_IN: string;\n\n  @IsString()\n  AUTH_FORGOT_SECRET: string;\n\n  @IsString()\n  AUTH_FORGOT_TOKEN_EXPIRES_IN: string;\n\n  @IsString()\n  AUTH_CONFIRM_EMAIL_SECRET: string;\n\n  @IsString()\n  AUTH_CONFIRM_EMAIL_TOKEN_EXPIRES_IN: string;\n}\n\nexport default registerAs('auth', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    secret: process.env.AUTH_JWT_SECRET,\n    expires: process.env.AUTH_JWT_TOKEN_EXPIRES_IN as ms.StringValue,\n    refreshSecret: process.env.AUTH_REFRESH_SECRET,\n    refreshExpires: process.env.AUTH_REFRESH_TOKEN_EXPIRES_IN as ms.StringValue,\n    forgotSecret: process.env.AUTH_FORGOT_SECRET,\n    forgotExpires: process.env.AUTH_FORGOT_TOKEN_EXPIRES_IN as ms.StringValue,\n    confirmEmailSecret: process.env.AUTH_CONFIRM_EMAIL_SECRET,\n    confirmEmailExpires: process.env\n      .AUTH_CONFIRM_EMAIL_TOKEN_EXPIRES_IN as ms.StringValue,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-2.html":{"url":"classes/EnvironmentVariablesValidator-2.html","title":"class - EnvironmentVariablesValidator-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-apple/config/apple.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                APPLE_APP_AUDIENCE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        APPLE_APP_AUDIENCE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsJSON()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-apple/config/apple.config.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nimport { IsJSON, IsOptional } from 'class-validator';\nimport validateConfig from '../../utils/validate-config';\nimport { AppleConfig } from './apple-config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsJSON()\n  @IsOptional()\n  APPLE_APP_AUDIENCE: string;\n}\n\nexport default registerAs('apple', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    appAudience: JSON.parse(process.env.APPLE_APP_AUDIENCE ?? '[]'),\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-3.html":{"url":"classes/EnvironmentVariablesValidator-3.html","title":"class - EnvironmentVariablesValidator-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-facebook/config/facebook.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                FACEBOOK_APP_ID\n                            \n                            \n                                    \n                                    \n                                FACEBOOK_APP_SECRET\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        FACEBOOK_APP_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-facebook/config/facebook.config.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        FACEBOOK_APP_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-facebook/config/facebook.config.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nimport { IsOptional, IsString } from 'class-validator';\nimport validateConfig from '../../utils/validate-config';\nimport { FacebookConfig } from './facebook-config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsString()\n  @IsOptional()\n  FACEBOOK_APP_ID: string;\n\n  @IsString()\n  @IsOptional()\n  FACEBOOK_APP_SECRET: string;\n}\n\nexport default registerAs('facebook', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    appId: process.env.FACEBOOK_APP_ID,\n    appSecret: process.env.FACEBOOK_APP_SECRET,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-4.html":{"url":"classes/EnvironmentVariablesValidator-4.html","title":"class - EnvironmentVariablesValidator-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-google/config/google.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                GOOGLE_CLIENT_ID\n                            \n                            \n                                    \n                                    \n                                GOOGLE_CLIENT_SECRET\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        GOOGLE_CLIENT_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-google/config/google.config.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        GOOGLE_CLIENT_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth-google/config/google.config.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nimport { IsOptional, IsString } from 'class-validator';\nimport validateConfig from '../../utils/validate-config';\nimport { GoogleConfig } from './google-config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsString()\n  @IsOptional()\n  GOOGLE_CLIENT_ID: string;\n\n  @IsString()\n  @IsOptional()\n  GOOGLE_CLIENT_SECRET: string;\n}\n\nexport default registerAs('google', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-5.html":{"url":"classes/EnvironmentVariablesValidator-5.html","title":"class - EnvironmentVariablesValidator-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/config/database.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                DATABASE_CA\n                            \n                            \n                                    \n                                    \n                                DATABASE_CERT\n                            \n                            \n                                    \n                                    \n                                DATABASE_HOST\n                            \n                            \n                                    \n                                    \n                                DATABASE_KEY\n                            \n                            \n                                    \n                                    \n                                DATABASE_MAX_CONNECTIONS\n                            \n                            \n                                    \n                                    \n                                DATABASE_NAME\n                            \n                            \n                                    \n                                    \n                                DATABASE_PASSWORD\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                DATABASE_PORT\n                            \n                            \n                                    \n                                    \n                                DATABASE_REJECT_UNAUTHORIZED\n                            \n                            \n                                    \n                                    \n                                DATABASE_SSL_ENABLED\n                            \n                            \n                                    \n                                    \n                                DATABASE_SYNCHRONIZE\n                            \n                            \n                                    \n                                    \n                                DATABASE_TYPE\n                            \n                            \n                                    \n                                    \n                                DATABASE_URL\n                            \n                            \n                                    \n                                    \n                                DATABASE_USERNAME\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_CA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_CERT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_MAX_CONNECTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        DATABASE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsInt()@Min(0)@Max(65535)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_REJECT_UNAUTHORIZED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_SSL_ENABLED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_SYNCHRONIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => envValues.DATABASE_URL)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DATABASE_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/config/database.config.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nimport {\n  IsOptional,\n  IsInt,\n  Min,\n  Max,\n  IsString,\n  ValidateIf,\n  IsBoolean,\n} from 'class-validator';\nimport validateConfig from '../../utils/validate-config';\nimport { DatabaseConfig } from './database-config.type';\n\nclass EnvironmentVariablesValidator {\n  @ValidateIf((envValues) => envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_URL: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_TYPE: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_HOST: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsInt()\n  @Min(0)\n  @Max(65535)\n  DATABASE_PORT: number;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_PASSWORD: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_NAME: string;\n\n  @ValidateIf((envValues) => !envValues.DATABASE_URL)\n  @IsString()\n  DATABASE_USERNAME: string;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_SYNCHRONIZE: boolean;\n\n  @IsInt()\n  @IsOptional()\n  DATABASE_MAX_CONNECTIONS: number;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_SSL_ENABLED: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  DATABASE_REJECT_UNAUTHORIZED: boolean;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_CA: string;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_KEY: string;\n\n  @IsString()\n  @IsOptional()\n  DATABASE_CERT: string;\n}\n\nexport default registerAs('database', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    isDocumentDatabase: ['mongodb'].includes(process.env.DATABASE_TYPE ?? ''),\n    url: process.env.DATABASE_URL,\n    type: process.env.DATABASE_TYPE,\n    host: process.env.DATABASE_HOST,\n    port: process.env.DATABASE_PORT\n      ? parseInt(process.env.DATABASE_PORT, 10)\n      : 5432,\n    password: process.env.DATABASE_PASSWORD,\n    name: process.env.DATABASE_NAME,\n    username: process.env.DATABASE_USERNAME,\n    synchronize: process.env.DATABASE_SYNCHRONIZE === 'true',\n    maxConnections: process.env.DATABASE_MAX_CONNECTIONS\n      ? parseInt(process.env.DATABASE_MAX_CONNECTIONS, 10)\n      : 100,\n    sslEnabled: process.env.DATABASE_SSL_ENABLED === 'true',\n    rejectUnauthorized: process.env.DATABASE_REJECT_UNAUTHORIZED === 'true',\n    ca: process.env.DATABASE_CA,\n    key: process.env.DATABASE_KEY,\n    cert: process.env.DATABASE_CERT,\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-6.html":{"url":"classes/EnvironmentVariablesValidator-6.html","title":"class - EnvironmentVariablesValidator-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/config/file.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                ACCESS_KEY_ID\n                            \n                            \n                                    \n                                    \n                                AWS_DEFAULT_S3_BUCKET\n                            \n                            \n                                    \n                                    \n                                AWS_S3_REGION\n                            \n                            \n                                    \n                                FILE_DRIVER\n                            \n                            \n                                    \n                                    \n                                SECRET_ACCESS_KEY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ACCESS_KEY_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/config/file.config.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AWS_DEFAULT_S3_BUCKET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/config/file.config.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AWS_S3_REGION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/config/file.config.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        FILE_DRIVER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileDriver\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FileDriver)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/config/file.config.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SECRET_ACCESS_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(envValues => )@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/config/file.config.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nimport { IsEnum, IsString, ValidateIf } from 'class-validator';\nimport validateConfig from '../../utils/validate-config';\nimport { FileDriver, FileConfig } from './file-config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsEnum(FileDriver)\n  FILE_DRIVER: FileDriver;\n\n  @ValidateIf((envValues) =>\n    [FileDriver.S3, FileDriver.S3_PRESIGNED].includes(envValues.FILE_DRIVER),\n  )\n  @IsString()\n  ACCESS_KEY_ID: string;\n\n  @ValidateIf((envValues) =>\n    [FileDriver.S3, FileDriver.S3_PRESIGNED].includes(envValues.FILE_DRIVER),\n  )\n  @IsString()\n  SECRET_ACCESS_KEY: string;\n\n  @ValidateIf((envValues) =>\n    [FileDriver.S3, FileDriver.S3_PRESIGNED].includes(envValues.FILE_DRIVER),\n  )\n  @IsString()\n  AWS_DEFAULT_S3_BUCKET: string;\n\n  @ValidateIf((envValues) =>\n    [FileDriver.S3, FileDriver.S3_PRESIGNED].includes(envValues.FILE_DRIVER),\n  )\n  @IsString()\n  AWS_S3_REGION: string;\n}\n\nexport default registerAs('file', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    driver:\n      (process.env.FILE_DRIVER as FileDriver | undefined) ?? FileDriver.LOCAL,\n    accessKeyId: process.env.ACCESS_KEY_ID,\n    secretAccessKey: process.env.SECRET_ACCESS_KEY,\n    awsDefaultS3Bucket: process.env.AWS_DEFAULT_S3_BUCKET,\n    awsS3Region: process.env.AWS_S3_REGION,\n    maxFileSize: 5242880, // 5mb\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator-7.html":{"url":"classes/EnvironmentVariablesValidator-7.html","title":"class - EnvironmentVariablesValidator-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/config/mail.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                MAIL_DEFAULT_EMAIL\n                            \n                            \n                                    \n                                MAIL_DEFAULT_NAME\n                            \n                            \n                                    \n                                MAIL_HOST\n                            \n                            \n                                    \n                                MAIL_IGNORE_TLS\n                            \n                            \n                                    \n                                    \n                                MAIL_PASSWORD\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                MAIL_PORT\n                            \n                            \n                                    \n                                MAIL_REQUIRE_TLS\n                            \n                            \n                                    \n                                MAIL_SECURE\n                            \n                            \n                                    \n                                    \n                                MAIL_USER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MAIL_DEFAULT_EMAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MAIL_DEFAULT_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MAIL_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MAIL_IGNORE_TLS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        MAIL_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        MAIL_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@Max(65535)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MAIL_REQUIRE_TLS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        MAIL_SECURE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        MAIL_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mail/config/mail.config.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\n\nimport {\n  IsString,\n  IsInt,\n  Min,\n  Max,\n  IsOptional,\n  IsBoolean,\n  IsEmail,\n} from 'class-validator';\nimport validateConfig from '../../utils/validate-config';\nimport { MailConfig } from './mail-config.type';\n\nclass EnvironmentVariablesValidator {\n  @IsInt()\n  @Min(0)\n  @Max(65535)\n  @IsOptional()\n  MAIL_PORT: number;\n\n  @IsString()\n  MAIL_HOST: string;\n\n  @IsString()\n  @IsOptional()\n  MAIL_USER: string;\n\n  @IsString()\n  @IsOptional()\n  MAIL_PASSWORD: string;\n\n  @IsEmail()\n  MAIL_DEFAULT_EMAIL: string;\n\n  @IsString()\n  MAIL_DEFAULT_NAME: string;\n\n  @IsBoolean()\n  MAIL_IGNORE_TLS: boolean;\n\n  @IsBoolean()\n  MAIL_SECURE: boolean;\n\n  @IsBoolean()\n  MAIL_REQUIRE_TLS: boolean;\n}\n\nexport default registerAs('mail', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n\n  return {\n    port: process.env.MAIL_PORT ? parseInt(process.env.MAIL_PORT, 10) : 587,\n    host: process.env.MAIL_HOST,\n    user: process.env.MAIL_USER,\n    password: process.env.MAIL_PASSWORD,\n    defaultEmail: process.env.MAIL_DEFAULT_EMAIL,\n    defaultName: process.env.MAIL_DEFAULT_NAME,\n    ignoreTLS: process.env.MAIL_IGNORE_TLS === 'true',\n    secure: process.env.MAIL_SECURE === 'true',\n    requireTLS: process.env.MAIL_REQUIRE_TLS === 'true',\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FacebookInterface.html":{"url":"interfaces/FacebookInterface.html","title":"interface - FacebookInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FacebookInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth-facebook/interfaces/facebook.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FacebookInterface {\n  id: string;\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileDocumentRepository.html":{"url":"injectables/FileDocumentRepository.html","title":"injectable - FileDocumentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileDocumentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/document/repositories/file.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/files/infrastructure/persistence/document/repositories/file.repository.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/document/repositories/file.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: FileType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/document/repositories/file.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            FileType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/document/repositories/file.repository.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { FileRepository } from '../../file.repository';\nimport { FileSchemaClass } from '../entities/file.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { FileType } from '../../../../domain/file';\n\nimport { FileMapper } from '../mappers/file.mapper';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\n\n@Injectable()\nexport class FileDocumentRepository implements FileRepository {\n  constructor(\n    @InjectModel(FileSchemaClass.name)\n    private fileModel: Model,\n  ) {}\n\n  async create(data: Omit): Promise {\n    const createdFile = new this.fileModel(data);\n    const fileObject = await createdFile.save();\n    return FileMapper.toDomain(fileObject);\n  }\n\n  async findById(id: FileType['id']): Promise> {\n    const fileObject = await this.fileModel.findById(id);\n    return fileObject ? FileMapper.toDomain(fileObject) : null;\n  }\n\n  async findByIds(ids: FileType['id'][]): Promise {\n    const fileObjects = await this.fileModel.find({ _id: { $in: ids } });\n    return fileObjects.map((fileObject) => FileMapper.toDomain(fileObject));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileDto.html":{"url":"classes/FileDto.html","title":"class - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/dto/file.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/files/dto/file.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class FileDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  path: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/relational/entities/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/persistence/relational/entities/file.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/persistence/relational/entities/file.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  // typeorm decorators here\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\n\n@Entity({ name: 'file' })\nexport class FileEntity extends EntityRelationalHelper {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  path: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileMapper.html":{"url":"classes/FileMapper.html","title":"class - FileMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/document/mappers/file.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: FileSchemaClass)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/document/mappers/file.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            FileSchemaClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: FileType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/document/mappers/file.mapper.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            FileType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileSchemaClass\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileType } from '../../../../domain/file';\nimport { FileSchemaClass } from '../entities/file.schema';\n\nexport class FileMapper {\n  static toDomain(raw: FileSchemaClass): FileType {\n    const domainEntity = new FileType();\n    domainEntity.id = raw._id.toString();\n    domainEntity.path = raw.path;\n    return domainEntity;\n  }\n  static toPersistence(domainEntity: FileType): FileSchemaClass {\n    const persistenceSchema = new FileSchemaClass();\n    if (domainEntity.id) {\n      persistenceSchema._id = domainEntity.id;\n    }\n    persistenceSchema.path = domainEntity.path;\n    return persistenceSchema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileMapper-1.html":{"url":"classes/FileMapper-1.html","title":"class - FileMapper-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/relational/mappers/file.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: FileEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/relational/mappers/file.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            FileEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: FileType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/relational/mappers/file.mapper.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            FileType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FileEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileType } from '../../../../domain/file';\nimport { FileEntity } from '../entities/file.entity';\n\nexport class FileMapper {\n  static toDomain(raw: FileEntity): FileType {\n    const domainEntity = new FileType();\n    domainEntity.id = raw.id;\n    domainEntity.path = raw.path;\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: FileType): FileEntity {\n    const persistenceEntity = new FileEntity();\n    persistenceEntity.id = domainEntity.id;\n    persistenceEntity.path = domainEntity.path;\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileRelationalRepository.html":{"url":"injectables/FileRelationalRepository.html","title":"injectable - FileRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/relational/repositories/file.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/files/infrastructure/persistence/relational/repositories/file.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: FileType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/relational/repositories/file.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            FileType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: FileType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/relational/repositories/file.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            FileType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/relational/repositories/file.repository.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FileEntity } from '../entities/file.entity';\nimport { In, Repository } from 'typeorm';\nimport { FileRepository } from '../../file.repository';\n\nimport { FileMapper } from '../mappers/file.mapper';\nimport { FileType } from '../../../../domain/file';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\n\n@Injectable()\nexport class FileRelationalRepository implements FileRepository {\n  constructor(\n    @InjectRepository(FileEntity)\n    private readonly fileRepository: Repository,\n  ) {}\n\n  async create(data: FileType): Promise {\n    const persistenceModel = FileMapper.toPersistence(data);\n    return this.fileRepository.save(\n      this.fileRepository.create(persistenceModel),\n    );\n  }\n\n  async findById(id: FileType['id']): Promise> {\n    const entity = await this.fileRepository.findOne({\n      where: {\n        id: id,\n      },\n    });\n\n    return entity ? FileMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: FileType['id'][]): Promise {\n    const entities = await this.fileRepository.find({\n      where: {\n        id: In(ids),\n      },\n    });\n\n    return entities.map((entity) => FileMapper.toDomain(entity));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileRepository.html":{"url":"classes/FileRepository.html","title":"class - FileRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/file.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/file.repository.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: FileType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/file.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            FileType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/persistence/file.repository.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NullableType } from '../../../utils/types/nullable.type';\nimport { FileType } from '../../domain/file';\n\nexport abstract class FileRepository {\n  abstract create(data: Omit): Promise;\n\n  abstract findById(id: FileType['id']): Promise>;\n\n  abstract findByIds(ids: FileType['id'][]): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileResponseDto.html":{"url":"classes/FileResponseDto.html","title":"class - FileResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/local/dto/file-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => FileType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/uploader/local/dto/file-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { FileType } from '../../../../domain/file';\n\nexport class FileResponseDto {\n  @ApiProperty({\n    type: () => FileType,\n  })\n  file: FileType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileResponseDto-1.html":{"url":"classes/FileResponseDto-1.html","title":"class - FileResponseDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3/dto/file-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => FileType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/uploader/s3/dto/file-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { FileType } from '../../../../domain/file';\n\nexport class FileResponseDto {\n  @ApiProperty({\n    type: () => FileType,\n  })\n  file: FileType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileResponseDto-2.html":{"url":"classes/FileResponseDto-2.html","title":"class - FileResponseDto-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3-presigned/dto/file-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                file\n                            \n                            \n                                    \n                                uploadSignedUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => FileType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/uploader/s3-presigned/dto/file-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uploadSignedUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/uploader/s3-presigned/dto/file-response.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { FileType } from '../../../../domain/file';\n\nexport class FileResponseDto {\n  @ApiProperty({\n    type: () => FileType,\n  })\n  file: FileType;\n\n  @ApiProperty({\n    type: String,\n  })\n  uploadSignedUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileSchemaClass.html":{"url":"classes/FileSchemaClass.html","title":"class - FileSchemaClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileSchemaClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/persistence/document/entities/file.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/persistence/document/entities/file.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\nimport { EntityDocumentHelper } from '../../../../../utils/document-entity-helper';\n\nexport type FileSchemaDocument = HydratedDocument;\n\n@Schema({\n  toJSON: {\n    virtuals: true,\n    getters: true,\n  },\n})\nexport class FileSchemaClass extends EntityDocumentHelper {\n  @Prop()\n  path: string;\n}\n\nexport const FileSchema = SchemaFactory.createForClass(FileSchemaClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileType.html":{"url":"classes/FileType.html","title":"class - FileType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/domain/file.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'cbcfa8b8-3a25-4adb-a9c6-e325f0d0f3ae'})@Allow()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/file.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'https://example.com/path/to/file.jpg'})@Transform( => , {toPlainOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/domain/file.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Allow } from 'class-validator';\nimport { Transform } from 'class-transformer';\nimport fileConfig from '../config/file.config';\nimport { FileConfig, FileDriver } from '../config/file-config.type';\n\nimport { GetObjectCommand, S3Client } from '@aws-sdk/client-s3';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport { AppConfig } from '../../config/app-config.type';\nimport appConfig from '../../config/app.config';\n\nexport class FileType {\n  @ApiProperty({\n    type: String,\n    example: 'cbcfa8b8-3a25-4adb-a9c6-e325f0d0f3ae',\n  })\n  @Allow()\n  id: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'https://example.com/path/to/file.jpg',\n  })\n  @Transform(\n    ({ value }) => {\n      if ((fileConfig() as FileConfig).driver === FileDriver.LOCAL) {\n        return (appConfig() as AppConfig).backendDomain + value;\n      } else if (\n        [FileDriver.S3_PRESIGNED, FileDriver.S3].includes(\n          (fileConfig() as FileConfig).driver,\n        )\n      ) {\n        const s3 = new S3Client({\n          region: (fileConfig() as FileConfig).awsS3Region ?? '',\n          credentials: {\n            accessKeyId: (fileConfig() as FileConfig).accessKeyId ?? '',\n            secretAccessKey: (fileConfig() as FileConfig).secretAccessKey ?? '',\n          },\n        });\n\n        const command = new GetObjectCommand({\n          Bucket: (fileConfig() as FileConfig).awsDefaultS3Bucket ?? '',\n          Key: value,\n        });\n\n        return getSignedUrl(s3, command, { expiresIn: 3600 });\n      }\n\n      return value;\n    },\n    {\n      toPlainOnly: true,\n    },\n  )\n  path: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUploadDto.html":{"url":"classes/FileUploadDto.html","title":"class - FileUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3-presigned/dto/file.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                fileName\n                            \n                            \n                                    \n                                    \n                                fileSize\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'image.jpg'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/uploader/s3-presigned/dto/file.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fileSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 138723})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/uploader/s3-presigned/dto/file.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class FileUploadDto {\n  @ApiProperty({ example: 'image.jpg' })\n  @IsString()\n  fileName: string;\n\n  @ApiProperty({ example: 138723 })\n  @IsNumber()\n  fileSize: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesLocalController.html":{"url":"controllers/FilesLocalController.html","title":"controller - FilesLocalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesLocalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/local/files.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                download\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        download\n                        \n                    \n                \n            \n            \n                \n                        \n                    download(path, response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':path')@ApiExcludeEndpoint()\n                \n            \n\n                    \n                        \n                            Defined in src/files/infrastructure/uploader/local/files.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({type: FileResponseDto})@ApiBearerAuth()@UseGuards(undefined)@Post('upload')@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/infrastructure/uploader/local/files.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Post,\n  Response,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiConsumes,\n  ApiCreatedResponse,\n  ApiExcludeEndpoint,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { FilesLocalService } from './files.service';\nimport { FileResponseDto } from './dto/file-response.dto';\n\n@ApiTags('Files')\n@Controller({\n  path: 'files',\n  version: '1',\n})\nexport class FilesLocalController {\n  constructor(private readonly filesService: FilesLocalService) {}\n\n  @ApiCreatedResponse({\n    type: FileResponseDto,\n  })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('jwt'))\n  @Post('upload')\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadFile(\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this.filesService.create(file);\n  }\n\n  @Get(':path')\n  @ApiExcludeEndpoint()\n  download(@Param('path') path, @Response() response) {\n    return response.sendFile(path, { root: './files' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesLocalModule.html":{"url":"modules/FilesLocalModule.html","title":"module - FilesLocalModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesLocalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesLocalModule\n\n\n\ncluster_FilesLocalModule_exports\n\n\n\ncluster_FilesLocalModule_providers\n\n\n\n\nFilesLocalService \n\nFilesLocalService \n\n\n\nFilesLocalModule\n\nFilesLocalModule\n\nFilesLocalService  -->\n\nFilesLocalModule->FilesLocalService \n\n\n\n\n\nFilesLocalService\n\nFilesLocalService\n\nFilesLocalModule -->\n\nFilesLocalService->FilesLocalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/infrastructure/uploader/local/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesLocalService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesLocalController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesLocalService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Module,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { FilesLocalController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { diskStorage } from 'multer';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\n\nimport { FilesLocalService } from './files.service';\n\nimport { DocumentFilePersistenceModule } from '../../persistence/document/document-persistence.module';\nimport { RelationalFilePersistenceModule } from '../../persistence/relational/relational-persistence.module';\nimport { AllConfigType } from '../../../../config/config.type';\nimport { DatabaseConfig } from '../../../../database/config/database-config.type';\nimport databaseConfig from '../../../../database/config/database.config';\n\n// \nconst infrastructurePersistenceModule = (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentFilePersistenceModule\n  : RelationalFilePersistenceModule;\n// \n\n@Module({\n  imports: [\n    infrastructurePersistenceModule,\n    MulterModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          fileFilter: (request, file, callback) => {\n            if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n              return callback(\n                new UnprocessableEntityException({\n                  status: HttpStatus.UNPROCESSABLE_ENTITY,\n                  errors: {\n                    file: `cantUploadFileType`,\n                  },\n                }),\n                false,\n              );\n            }\n\n            callback(null, true);\n          },\n          storage: diskStorage({\n            destination: './files',\n            filename: (request, file, callback) => {\n              callback(\n                null,\n                `${randomStringGenerator()}.${file.originalname\n                  .split('.')\n                  .pop()\n                  ?.toLowerCase()}`,\n              );\n            },\n          }),\n          limits: {\n            fileSize: configService.get('file.maxFileSize', { infer: true }),\n          },\n        };\n      },\n    }),\n  ],\n  controllers: [FilesLocalController],\n  providers: [ConfigModule, ConfigService, FilesLocalService],\n  exports: [FilesLocalService],\n})\nexport class FilesLocalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesLocalService.html":{"url":"injectables/FilesLocalService.html","title":"injectable - FilesLocalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesLocalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/local/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, fileRepository: FileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/files/infrastructure/uploader/local/files.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/uploader/local/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { FileRepository } from '../../persistence/file.repository';\nimport { AllConfigType } from '../../../../config/config.type';\nimport { FileType } from '../../../domain/file';\n\n@Injectable()\nexport class FilesLocalService {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly fileRepository: FileRepository,\n  ) {}\n\n  async create(file: Express.Multer.File): Promise {\n    if (!file) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          file: 'selectFile',\n        },\n      });\n    }\n\n    return {\n      file: await this.fileRepository.create({\n        path: `/${this.configService.get('app.apiPrefix', {\n          infer: true,\n        })}/v1/${file.path}`,\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService \n\nFilesService \n\n\n\nFilesModule\n\nFilesModule\n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  // common\n  Module,\n} from '@nestjs/common';\n\nimport { DocumentFilePersistenceModule } from './infrastructure/persistence/document/document-persistence.module';\nimport { RelationalFilePersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\nimport { FilesService } from './files.service';\nimport fileConfig from './config/file.config';\nimport { FileConfig, FileDriver } from './config/file-config.type';\nimport { FilesLocalModule } from './infrastructure/uploader/local/files.module';\nimport { FilesS3Module } from './infrastructure/uploader/s3/files.module';\nimport { FilesS3PresignedModule } from './infrastructure/uploader/s3-presigned/files.module';\nimport { DatabaseConfig } from '../database/config/database-config.type';\nimport databaseConfig from '../database/config/database.config';\n\n// \nconst infrastructurePersistenceModule = (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentFilePersistenceModule\n  : RelationalFilePersistenceModule;\n// \n\nconst infrastructureUploaderModule =\n  (fileConfig() as FileConfig).driver === FileDriver.LOCAL\n    ? FilesLocalModule\n    : (fileConfig() as FileConfig).driver === FileDriver.S3\n      ? FilesS3Module\n      : FilesS3PresignedModule;\n\n@Module({\n  imports: [\n    // import modules, etc.\n    infrastructurePersistenceModule,\n    infrastructureUploaderModule,\n  ],\n  providers: [FilesService],\n  exports: [FilesService, infrastructurePersistenceModule],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesS3Controller.html":{"url":"controllers/FilesS3Controller.html","title":"controller - FilesS3Controller","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesS3Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3/files.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.MulterS3.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({type: FileResponseDto})@ApiBearerAuth()@UseGuards(undefined)@Post('upload')@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/infrastructure/uploader/s3/files.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.MulterS3.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiConsumes,\n  ApiCreatedResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { FilesS3Service } from './files.service';\nimport { FileResponseDto } from './dto/file-response.dto';\n\n@ApiTags('Files')\n@Controller({\n  path: 'files',\n  version: '1',\n})\nexport class FilesS3Controller {\n  constructor(private readonly filesService: FilesS3Service) {}\n\n  @ApiCreatedResponse({\n    type: FileResponseDto,\n  })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('jwt'))\n  @Post('upload')\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadFile(\n    @UploadedFile() file: Express.MulterS3.File,\n  ): Promise {\n    return this.filesService.create(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesS3Module.html":{"url":"modules/FilesS3Module.html","title":"module - FilesS3Module","body":"\n                   \n\n\n\n\n    Modules\n    FilesS3Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesS3Module\n\n\n\ncluster_FilesS3Module_exports\n\n\n\ncluster_FilesS3Module_providers\n\n\n\n\nFilesS3Service \n\nFilesS3Service \n\n\n\nFilesS3Module\n\nFilesS3Module\n\nFilesS3Service  -->\n\nFilesS3Module->FilesS3Service \n\n\n\n\n\nFilesS3Service\n\nFilesS3Service\n\nFilesS3Module -->\n\nFilesS3Service->FilesS3Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesS3Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesS3Controller\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesS3Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Module,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { FilesS3Controller } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport { S3Client } from '@aws-sdk/client-s3';\nimport multerS3 from 'multer-s3';\n\nimport { FilesS3Service } from './files.service';\n\nimport { DocumentFilePersistenceModule } from '../../persistence/document/document-persistence.module';\nimport { RelationalFilePersistenceModule } from '../../persistence/relational/relational-persistence.module';\nimport { AllConfigType } from '../../../../config/config.type';\nimport { DatabaseConfig } from '../../../../database/config/database-config.type';\nimport databaseConfig from '../../../../database/config/database.config';\n\n// \nconst infrastructurePersistenceModule = (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentFilePersistenceModule\n  : RelationalFilePersistenceModule;\n// \n\n@Module({\n  imports: [\n    infrastructurePersistenceModule,\n    MulterModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        const s3 = new S3Client({\n          region: configService.get('file.awsS3Region', { infer: true }),\n          credentials: {\n            accessKeyId: configService.getOrThrow('file.accessKeyId', {\n              infer: true,\n            }),\n            secretAccessKey: configService.getOrThrow('file.secretAccessKey', {\n              infer: true,\n            }),\n          },\n        });\n\n        return {\n          fileFilter: (request, file, callback) => {\n            if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n              return callback(\n                new UnprocessableEntityException({\n                  status: HttpStatus.UNPROCESSABLE_ENTITY,\n                  errors: {\n                    file: `cantUploadFileType`,\n                  },\n                }),\n                false,\n              );\n            }\n\n            callback(null, true);\n          },\n          storage: multerS3({\n            s3: s3,\n            bucket: configService.getOrThrow('file.awsDefaultS3Bucket', {\n              infer: true,\n            }),\n            contentType: multerS3.AUTO_CONTENT_TYPE,\n            key: (request, file, callback) => {\n              callback(\n                null,\n                `${randomStringGenerator()}.${file.originalname\n                  .split('.')\n                  .pop()\n                  ?.toLowerCase()}`,\n              );\n            },\n          }),\n          limits: {\n            fileSize: configService.get('file.maxFileSize', { infer: true }),\n          },\n        };\n      },\n    }),\n  ],\n  controllers: [FilesS3Controller],\n  providers: [FilesS3Service],\n  exports: [FilesS3Service],\n})\nexport class FilesS3Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesS3PresignedController.html":{"url":"controllers/FilesS3PresignedController.html","title":"controller - FilesS3PresignedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesS3PresignedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3-presigned/files.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: FileUploadDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({type: FileResponseDto})@ApiBearerAuth()@UseGuards(undefined)@Post('upload')\n                \n            \n\n                    \n                        \n                            Defined in src/files/infrastructure/uploader/s3-presigned/files.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileUploadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiCreatedResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { FilesS3PresignedService } from './files.service';\nimport { FileUploadDto } from './dto/file.dto';\nimport { FileResponseDto } from './dto/file-response.dto';\n\n@ApiTags('Files')\n@Controller({\n  path: 'files',\n  version: '1',\n})\nexport class FilesS3PresignedController {\n  constructor(private readonly filesService: FilesS3PresignedService) {}\n\n  @ApiCreatedResponse({\n    type: FileResponseDto,\n  })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('jwt'))\n  @Post('upload')\n  async uploadFile(@Body() file: FileUploadDto) {\n    return this.filesService.create(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesS3PresignedModule.html":{"url":"modules/FilesS3PresignedModule.html","title":"module - FilesS3PresignedModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesS3PresignedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesS3PresignedModule\n\n\n\ncluster_FilesS3PresignedModule_exports\n\n\n\ncluster_FilesS3PresignedModule_providers\n\n\n\n\nFilesS3PresignedService \n\nFilesS3PresignedService \n\n\n\nFilesS3PresignedModule\n\nFilesS3PresignedModule\n\nFilesS3PresignedService  -->\n\nFilesS3PresignedModule->FilesS3PresignedService \n\n\n\n\n\nFilesS3PresignedService\n\nFilesS3PresignedService\n\nFilesS3PresignedModule -->\n\nFilesS3PresignedService->FilesS3PresignedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3-presigned/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesS3PresignedService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesS3PresignedController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilesS3PresignedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Module,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { FilesS3PresignedController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport { S3Client } from '@aws-sdk/client-s3';\nimport multerS3 from 'multer-s3';\n\nimport { FilesS3PresignedService } from './files.service';\n\nimport { DocumentFilePersistenceModule } from '../../persistence/document/document-persistence.module';\nimport { RelationalFilePersistenceModule } from '../../persistence/relational/relational-persistence.module';\nimport { AllConfigType } from '../../../../config/config.type';\nimport { DatabaseConfig } from '../../../../database/config/database-config.type';\nimport databaseConfig from '../../../../database/config/database.config';\n\n// \nconst infrastructurePersistenceModule = (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentFilePersistenceModule\n  : RelationalFilePersistenceModule;\n// \n\n@Module({\n  imports: [\n    infrastructurePersistenceModule,\n    MulterModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        const s3 = new S3Client({\n          region: configService.get('file.awsS3Region', { infer: true }),\n          credentials: {\n            accessKeyId: configService.getOrThrow('file.accessKeyId', {\n              infer: true,\n            }),\n            secretAccessKey: configService.getOrThrow('file.secretAccessKey', {\n              infer: true,\n            }),\n          },\n        });\n\n        return {\n          fileFilter: (request, file, callback) => {\n            if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n              return callback(\n                new UnprocessableEntityException({\n                  status: HttpStatus.UNPROCESSABLE_ENTITY,\n                  errors: {\n                    file: `cantUploadFileType`,\n                  },\n                }),\n                false,\n              );\n            }\n\n            callback(null, true);\n          },\n          storage: multerS3({\n            s3: s3,\n            bucket: '',\n            acl: 'public-read',\n            contentType: multerS3.AUTO_CONTENT_TYPE,\n            key: (request, file, callback) => {\n              callback(\n                null,\n                `${randomStringGenerator()}.${file.originalname\n                  .split('.')\n                  .pop()\n                  ?.toLowerCase()}`,\n              );\n            },\n          }),\n          limits: {\n            fileSize: configService.get('file.maxFileSize', { infer: true }),\n          },\n        };\n      },\n    }),\n  ],\n  controllers: [FilesS3PresignedController],\n  providers: [ConfigModule, ConfigService, FilesS3PresignedService],\n  exports: [FilesS3PresignedService],\n})\nexport class FilesS3PresignedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesS3PresignedService.html":{"url":"injectables/FilesS3PresignedService.html","title":"injectable - FilesS3PresignedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesS3PresignedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3-presigned/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: FileRepository, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/files/infrastructure/uploader/s3-presigned/files.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(file: FileUploadDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/uploader/s3-presigned/files.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileUploadDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        s3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/files/infrastructure/uploader/s3-presigned/files.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  PayloadTooLargeException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { FileRepository } from '../../persistence/file.repository';\n\nimport { FileUploadDto } from './dto/file.dto';\nimport { PutObjectCommand, S3Client } from '@aws-sdk/client-s3';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport { randomStringGenerator } from '@nestjs/common/utils/random-string-generator.util';\nimport { ConfigService } from '@nestjs/config';\nimport { FileType } from '../../../domain/file';\nimport { AllConfigType } from '../../../../config/config.type';\n\n@Injectable()\nexport class FilesS3PresignedService {\n  private s3: S3Client;\n\n  constructor(\n    private readonly fileRepository: FileRepository,\n    private readonly configService: ConfigService,\n  ) {\n    this.s3 = new S3Client({\n      region: configService.get('file.awsS3Region', { infer: true }),\n      credentials: {\n        accessKeyId: configService.getOrThrow('file.accessKeyId', {\n          infer: true,\n        }),\n        secretAccessKey: configService.getOrThrow('file.secretAccessKey', {\n          infer: true,\n        }),\n      },\n    });\n  }\n\n  async create(\n    file: FileUploadDto,\n  ): Promise {\n    if (!file) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          file: 'selectFile',\n        },\n      });\n    }\n\n    if (!file.fileName.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          file: `cantUploadFileType`,\n        },\n      });\n    }\n\n    if (\n      file.fileSize >\n      (this.configService.get('file.maxFileSize', {\n        infer: true,\n      }) || 0)\n    ) {\n      throw new PayloadTooLargeException({\n        statusCode: HttpStatus.PAYLOAD_TOO_LARGE,\n        error: 'Payload Too Large',\n        message: 'File too large',\n      });\n    }\n\n    const key = `${randomStringGenerator()}.${file.fileName\n      .split('.')\n      .pop()\n      ?.toLowerCase()}`;\n\n    const command = new PutObjectCommand({\n      Bucket: this.configService.getOrThrow('file.awsDefaultS3Bucket', {\n        infer: true,\n      }),\n      Key: key,\n      ContentLength: file.fileSize,\n    });\n    const signedUrl = await getSignedUrl(this.s3, command, { expiresIn: 3600 });\n    const data = await this.fileRepository.create({\n      path: key,\n    });\n\n    return {\n      file: data,\n      uploadSignedUrl: signedUrl,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesS3Service.html":{"url":"injectables/FilesS3Service.html","title":"injectable - FilesS3Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesS3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/infrastructure/uploader/s3/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: FileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/files/infrastructure/uploader/s3/files.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(file: Express.MulterS3.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/infrastructure/uploader/s3/files.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.MulterS3.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpStatus,\n  Injectable,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { FileRepository } from '../../persistence/file.repository';\nimport { FileType } from '../../../domain/file';\n\n@Injectable()\nexport class FilesS3Service {\n  constructor(private readonly fileRepository: FileRepository) {}\n\n  async create(file: Express.MulterS3.File): Promise {\n    if (!file) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          file: 'selectFile',\n        },\n      });\n    }\n\n    return {\n      file: await this.fileRepository.create({\n        path: file.key,\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: FileRepository)\n                    \n                \n                        \n                            \n                                Defined in src/files/files.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        FileRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: FileType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            FileType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { FileRepository } from './infrastructure/persistence/file.repository';\nimport { FileType } from './domain/file';\nimport { NullableType } from '../utils/types/nullable.type';\n\n@Injectable()\nexport class FilesService {\n  constructor(private readonly fileRepository: FileRepository) {}\n\n  findById(id: FileType['id']): Promise> {\n    return this.fileRepository.findById(id);\n  }\n\n  findByIds(ids: FileType['id'][]): Promise {\n    return this.fileRepository.findByIds(ids);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterUserDto.html":{"url":"classes/FilterUserDto.html","title":"class - FilterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/query-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RoleDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: RoleDto})@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/query-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Transform, Type, plainToInstance } from 'class-transformer';\nimport { User } from '../domain/user';\nimport { RoleDto } from '../../roles/dto/role.dto';\n\nexport class FilterUserDto {\n  @ApiPropertyOptional({ type: RoleDto })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => RoleDto)\n  roles?: RoleDto[] | null;\n}\n\nexport class SortUserDto {\n  @ApiProperty()\n  @Type(() => String)\n  @IsString()\n  orderBy: keyof User;\n\n  @ApiProperty()\n  @IsString()\n  order: string;\n}\n\nexport class QueryUserDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n\n  @ApiPropertyOptional({ type: String })\n  @IsOptional()\n  @Transform(({ value }) =>\n    value ? plainToInstance(FilterUserDto, JSON.parse(value)) : undefined,\n  )\n  @ValidateNested()\n  @Type(() => FilterUserDto)\n  filters?: FilterUserDto | null;\n\n  @ApiPropertyOptional({ type: String })\n  @IsOptional()\n  @Transform(({ value }) => {\n    return value ? plainToInstance(SortUserDto, JSON.parse(value)) : undefined;\n  })\n  @ValidateNested({ each: true })\n  @Type(() => SortUserDto)\n  sort?: SortUserDto[] | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllAccountsDto.html":{"url":"classes/FindAllAccountsDto.html","title":"class - FindAllAccountsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllAccountsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/find-all-accounts.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/find-all-accounts.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/accounts/dto/find-all-accounts.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class FindAllAccountsDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllKycDetailsDto.html":{"url":"classes/FindAllKycDetailsDto.html","title":"class - FindAllKycDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllKycDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/dto/find-all-kyc-details.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/find-all-kyc-details.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/find-all-kyc-details.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class FindAllKycDetailsDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllRegionsDto.html":{"url":"classes/FindAllRegionsDto.html","title":"class - FindAllRegionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllRegionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/dto/find-all-regions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/find-all-regions.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/find-all-regions.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class FindAllRegionsDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllResidencesDto.html":{"url":"classes/FindAllResidencesDto.html","title":"class - FindAllResidencesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllResidencesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/dto/find-all-residences.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/find-all-residences.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/find-all-residences.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class FindAllResidencesDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllSettingsDto.html":{"url":"classes/FindAllSettingsDto.html","title":"class - FindAllSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/dto/find-all-settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/find-all-settings.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/find-all-settings.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class FindAllSettingsDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllTenantTypesDto.html":{"url":"classes/FindAllTenantTypesDto.html","title":"class - FindAllTenantTypesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllTenantTypesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/dto/find-all-tenant-types.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/dto/find-all-tenant-types.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/dto/find-all-tenant-types.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class FindAllTenantTypesDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllTenantsDto.html":{"url":"classes/FindAllTenantsDto.html","title":"class - FindAllTenantsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllTenantsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/dto/find-all-tenants.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/find-all-tenants.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/find-all-tenants.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional } from 'class-validator';\nimport { Transform } from 'class-transformer';\n\nexport class FindAllTenantsDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HomeController.html":{"url":"controllers/HomeController.html","title":"controller - HomeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HomeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/home/home.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    appInfo()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/home/home.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { HomeService } from './home.service';\n\n@ApiTags('Home')\n@Controller()\nexport class HomeController {\n  constructor(private service: HomeService) {}\n\n  @Get()\n  appInfo() {\n    return this.service.appInfo();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_providers\n\n\n\n\nHomeService\n\nHomeService\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeService->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HomeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HomeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HomeService } from './home.service';\nimport { HomeController } from './home.controller';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule],\n  controllers: [HomeController],\n  providers: [HomeService],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HomeService.html":{"url":"injectables/HomeService.html","title":"injectable - HomeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HomeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/home/home.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/home/home.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        appInfo\n                        \n                    \n                \n            \n            \n                \nappInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/home/home.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { name: any; }\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AllConfigType } from '../config/config.type';\n\n@Injectable()\nexport class HomeService {\n  constructor(private configService: ConfigService) {}\n\n  appInfo() {\n    return { name: this.configService.get('app.name', { infer: true }) };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPaginationOptions.html":{"url":"interfaces/IPaginationOptions.html","title":"interface - IPaginationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPaginationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/pagination-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPaginationOptions {\n  page: number;\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InfinityPaginationResponseDto.html":{"url":"classes/InfinityPaginationResponseDto.html","title":"class - InfinityPaginationResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InfinityPaginationResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/dto/infinity-pagination-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hasNextPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/dto/infinity-pagination-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/dto/infinity-pagination-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class InfinityPaginationResponseDto {\n  data: T[];\n  hasNextPage: boolean;\n}\n\nexport function InfinityPaginationResponse(classReference: Type) {\n  abstract class Pagination {\n    @ApiProperty({ type: [classReference] })\n    data!: T[];\n\n    @ApiProperty({\n      type: Boolean,\n      example: true,\n    })\n    hasNextPage: boolean;\n  }\n\n  Object.defineProperty(Pagination, 'name', {\n    writable: false,\n    value: `InfinityPagination${classReference.name}ResponseDto`,\n  });\n\n  return Pagination;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshStrategy.html":{"url":"injectables/JwtRefreshStrategy.html","title":"injectable - JwtRefreshStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-refresh.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-refresh.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: JwtRefreshPayloadType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt-refresh.strategy.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtRefreshPayloadType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     OrNeverType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtRefreshPayloadType } from './types/jwt-refresh-payload.type';\nimport { OrNeverType } from '../../utils/types/or-never.type';\nimport { AllConfigType } from '../../config/config.type';\n\n@Injectable()\nexport class JwtRefreshStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n) {\n  constructor(configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.getOrThrow('auth.refreshSecret', {\n        infer: true,\n      }),\n    });\n  }\n\n  public validate(\n    payload: JwtRefreshPayloadType,\n  ): OrNeverType {\n    if (!payload.sessionId) {\n      throw new UnauthorizedException();\n    }\n\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: JwtPayloadType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtPayloadType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     OrNeverType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ConfigService } from '@nestjs/config';\nimport { OrNeverType } from '../../utils/types/or-never.type';\nimport { JwtPayloadType } from './types/jwt-payload.type';\nimport { AllConfigType } from '../../config/config.type';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.getOrThrow('auth.secret', { infer: true }),\n    });\n  }\n\n  // Why we don't check if the user exists in the database:\n  // https://github.com/brocoders/nestjs-boilerplate/blob/main/docs/auth.md#about-jwt-strategy\n  public validate(payload: JwtPayloadType): OrNeverType {\n    if (!payload.id) {\n      throw new UnauthorizedException();\n    }\n\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KycDetailSeedModule.html":{"url":"modules/KycDetailSeedModule.html","title":"module - KycDetailSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    KycDetailSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KycDetailSeedModule\n\n\n\ncluster_KycDetailSeedModule_exports\n\n\n\ncluster_KycDetailSeedModule_providers\n\n\n\n\nKycDetailSeedService \n\nKycDetailSeedService \n\n\n\nKycDetailSeedModule\n\nKycDetailSeedModule\n\nKycDetailSeedService  -->\n\nKycDetailSeedModule->KycDetailSeedService \n\n\n\n\n\nKycDetailSeedService\n\nKycDetailSeedService\n\nKycDetailSeedModule -->\n\nKycDetailSeedService->KycDetailSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/kyc-detail/kyc-detail-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KycDetailSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KycDetailSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { KycDetailSeedService } from './kyc-detail-seed.service';\nimport { KycDetailsEntity } from 'src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity';\nimport { UserEntity } from 'src/users/infrastructure/persistence/relational/entities/user.entity';\nimport { TenantEntity } from 'src/tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([KycDetailsEntity, UserEntity, TenantEntity]),\n  ],\n  providers: [KycDetailSeedService],\n  exports: [KycDetailSeedService],\n})\nexport class KycDetailSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KycDetailSeedService.html":{"url":"injectables/KycDetailSeedService.html","title":"injectable - KycDetailSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KycDetailSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/kyc-detail/kyc-detail-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kycRepository: Repository, tenantRepository: Repository, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/kyc-detail/kyc-detail-seed.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kycRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/kyc-detail/kyc-detail-seed.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport {\n  KycDetailsEntity,\n  KycStatus,\n  KycSubjectType,\n} from 'src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity';\nimport { Repository } from 'typeorm';\nimport { TenantEntity } from 'src/tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { UserEntity } from 'src/users/infrastructure/persistence/relational/entities/user.entity';\n\n@Injectable()\nexport class KycDetailSeedService {\n  constructor(\n    @InjectRepository(KycDetailsEntity)\n    private readonly kycRepository: Repository,\n    @InjectRepository(TenantEntity)\n    private readonly tenantRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n  ) {}\n\n  async run() {\n    // Create KYC records for all users (individual verification)\n    const users = await this.userRepository.find({\n      relations: ['tenant'],\n    });\n\n    for (const user of users) {\n      const existingKyc = await this.kycRepository.findOne({\n        where: {\n          user: { id: user.id },\n          subjectType: KycSubjectType.USER,\n        },\n      });\n\n      if (!existingKyc) {\n        await this.kycRepository.save(\n          this.kycRepository.create({\n            subjectType: KycSubjectType.USER,\n            status: KycStatus.PENDING,\n            tenant: user.tenant,\n            user: user,\n          }),\n        );\n      }\n    }\n\n    // Create KYC records for all tenants (organization verification)\n    const tenants = await this.tenantRepository.find({\n      relations: ['users'],\n    });\n\n    for (const tenant of tenants) {\n      // Use the first user in the tenant as the submitting user\n      const submittingUser = tenant.users?.[0];\n\n      if (submittingUser) {\n        const existingKyc = await this.kycRepository.findOne({\n          where: {\n            tenant: { id: tenant.id },\n            subjectType: KycSubjectType.TENANT,\n          },\n        });\n\n        if (!existingKyc) {\n          await this.kycRepository.save(\n            this.kycRepository.create({\n              subjectType: KycSubjectType.TENANT,\n              status: KycStatus.PENDING,\n              tenant: tenant,\n              user: submittingUser,\n            }),\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KycDetails.html":{"url":"classes/KycDetails.html","title":"class - KycDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KycDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/domain/kyc-details.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                documentData\n                            \n                            \n                                    \n                                    Optional\n                                documentNumber\n                            \n                            \n                                    \n                                    Optional\n                                documentType\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                subjectType\n                            \n                            \n                                    \n                                    Optional\n                                submittedAt\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                    Optional\n                                verifiedAt\n                            \n                            \n                                    \n                                    Optional\n                                verifiedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        documentData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Object, nullable: true, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        documentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        documentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: KycStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subjectType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycSubjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: KycSubjectType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        submittedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tenant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tenant, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        verifiedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Date, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        verifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Number, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/domain/kyc-details.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Tenant } from '../../tenants/domain/tenant';\nimport { User } from '../../users/domain/user';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  KycStatus,\n  KycSubjectType,\n} from '../infrastructure/persistence/relational/entities/kyc-details.entity';\n\nexport class KycDetails {\n  @ApiProperty({\n    type: () => Number,\n    nullable: true,\n  })\n  verifiedBy?: number | null;\n\n  @ApiProperty({\n    type: () => Date,\n    nullable: true,\n  })\n  verifiedAt?: Date | null;\n\n  @ApiProperty({\n    type: () => Date,\n    nullable: true,\n  })\n  submittedAt?: Date | null;\n\n  @ApiProperty({\n    enum: KycStatus,\n    default: KycStatus.PENDING,\n  })\n  status: KycStatus;\n\n  @ApiProperty({\n    type: () => Object,\n    nullable: true,\n    example: {\n      frontUrl: 'https://example.com/front.jpg',\n      backUrl: 'https://example.com/back.jpg',\n      expiryDate: '2023-12-31',\n    },\n  })\n  documentData?: {\n    frontUrl?: string;\n    backUrl?: string;\n    expiryDate?: Date;\n  };\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  documentNumber?: string | null;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  documentType?: string | null;\n\n  @ApiProperty({\n    enum: KycSubjectType,\n  })\n  subjectType: KycSubjectType;\n\n  @ApiProperty({\n    type: () => Tenant,\n    nullable: false,\n  })\n  tenant: Tenant;\n\n  @ApiProperty({\n    type: () => User,\n    nullable: false,\n  })\n  user: User;\n\n  @ApiProperty({\n    type: String,\n  })\n  id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KycDetailsController.html":{"url":"controllers/KycDetailsController.html","title":"controller - KycDetailsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KycDetailsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/kyc-details.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createKycDetailsDto: CreateKycDetailsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: KycDetails})\n                \n            \n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createKycDetailsDto\n                                            \n                                                            CreateKycDetailsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: FindAllKycDetailsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            FindAllKycDetailsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: KycDetails})\n                \n            \n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateKycDetailsDto: UpdateKycDetailsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: KycDetails})\n                \n            \n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateKycDetailsDto\n                                            \n                                                            UpdateKycDetailsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { KycDetailsService } from './kyc-details.service';\nimport { CreateKycDetailsDto } from './dto/create-kyc-details.dto';\nimport { UpdateKycDetailsDto } from './dto/update-kyc-details.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { KycDetails } from './domain/kyc-details';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  InfinityPaginationResponse,\n  InfinityPaginationResponseDto,\n} from '../utils/dto/infinity-pagination-response.dto';\nimport { infinityPagination } from '../utils/infinity-pagination';\nimport { FindAllKycDetailsDto } from './dto/find-all-kyc-details.dto';\n\n@ApiTags('Kycdetails')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@Controller({\n  path: 'kyc-details',\n  version: '1',\n})\nexport class KycDetailsController {\n  constructor(private readonly kycDetailsService: KycDetailsService) {}\n\n  @Post()\n  @ApiCreatedResponse({\n    type: KycDetails,\n  })\n  create(@Body() createKycDetailsDto: CreateKycDetailsDto) {\n    return this.kycDetailsService.create(createKycDetailsDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    type: InfinityPaginationResponse(KycDetails),\n  })\n  async findAll(\n    @Query() query: FindAllKycDetailsDto,\n  ): Promise> {\n    const page = query?.page ?? 1;\n    let limit = query?.limit ?? 10;\n    if (limit > 50) {\n      limit = 50;\n    }\n\n    return infinityPagination(\n      await this.kycDetailsService.findAllWithPagination({\n        paginationOptions: {\n          page,\n          limit,\n        },\n      }),\n      { page, limit },\n    );\n  }\n\n  @Get(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: KycDetails,\n  })\n  findById(@Param('id') id: string) {\n    return this.kycDetailsService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: KycDetails,\n  })\n  update(\n    @Param('id') id: string,\n    @Body() updateKycDetailsDto: UpdateKycDetailsDto,\n  ) {\n    return this.kycDetailsService.update(id, updateKycDetailsDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  remove(@Param('id') id: string) {\n    return this.kycDetailsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KycDetailsDocumentRepository.html":{"url":"injectables/KycDetailsDocumentRepository.html","title":"injectable - KycDetailsDocumentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KycDetailsDocumentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/document/repositories/kyc-details.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kycDetailsModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/kyc-details/infrastructure/persistence/document/repositories/kyc-details.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kycDetailsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/document/repositories/kyc-details.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/document/repositories/kyc-details.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/document/repositories/kyc-details.repository.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/document/repositories/kyc-details.repository.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/document/repositories/kyc-details.repository.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: KycDetails, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/document/repositories/kyc-details.repository.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { KycDetailsSchemaClass } from '../entities/kyc-details.schema';\nimport { KycDetailsRepository } from '../../kyc-details.repository';\nimport { KycDetails } from '../../../../domain/kyc-details';\nimport { KycDetailsMapper } from '../mappers/kyc-details.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class KycDetailsDocumentRepository implements KycDetailsRepository {\n  constructor(\n    @InjectModel(KycDetailsSchemaClass.name)\n    private readonly kycDetailsModel: Model,\n  ) {}\n\n  async create(data: KycDetails): Promise {\n    const persistenceModel = KycDetailsMapper.toPersistence(data);\n    const createdEntity = new this.kycDetailsModel(persistenceModel);\n    const entityObject = await createdEntity.save();\n    return KycDetailsMapper.toDomain(entityObject);\n  }\n\n  async findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const entityObjects = await this.kycDetailsModel\n      .find()\n      .skip((paginationOptions.page - 1) * paginationOptions.limit)\n      .limit(paginationOptions.limit);\n\n    return entityObjects.map((entityObject) =>\n      KycDetailsMapper.toDomain(entityObject),\n    );\n  }\n\n  async findById(id: KycDetails['id']): Promise> {\n    const entityObject = await this.kycDetailsModel.findById(id);\n    return entityObject ? KycDetailsMapper.toDomain(entityObject) : null;\n  }\n\n  async findByIds(ids: KycDetails['id'][]): Promise {\n    const entityObjects = await this.kycDetailsModel.find({\n      _id: { $in: ids },\n    });\n    return entityObjects.map((entityObject) =>\n      KycDetailsMapper.toDomain(entityObject),\n    );\n  }\n\n  async update(\n    id: KycDetails['id'],\n    payload: Partial,\n  ): Promise> {\n    const clonedPayload = { ...payload };\n    delete clonedPayload.id;\n\n    const filter = { _id: id.toString() };\n    const entity = await this.kycDetailsModel.findOne(filter);\n\n    if (!entity) {\n      throw new Error('Record not found');\n    }\n\n    const entityObject = await this.kycDetailsModel.findOneAndUpdate(\n      filter,\n      KycDetailsMapper.toPersistence({\n        ...KycDetailsMapper.toDomain(entity),\n        ...clonedPayload,\n      }),\n      { new: true },\n    );\n\n    return entityObject ? KycDetailsMapper.toDomain(entityObject) : null;\n  }\n\n  async remove(id: KycDetails['id']): Promise {\n    await this.kycDetailsModel.deleteOne({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KycDetailsDto.html":{"url":"classes/KycDetailsDto.html","title":"class - KycDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KycDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/dto/kyc-details.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/dto/kyc-details.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class KycDetailsDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/KycDetailsEntity.html":{"url":"entities/KycDetailsEntity.html","title":"entity - KycDetailsEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  KycDetailsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                documentData\n                            \n                            \n                                    \n                                    Optional\n                                documentNumber\n                            \n                            \n                                    \n                                    Optional\n                                documentType\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                subjectType\n                            \n                            \n                                    \n                                    Optional\n                                submittedAt\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                    Optional\n                                verifiedAt\n                            \n                            \n                                    \n                                    Optional\n                                verifiedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        documentData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        documentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        documentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: KycStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subjectType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycSubjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: KycSubjectType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        submittedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, parentEntity => parentEntity.kycSubmissions, {eager: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, parentEntity => parentEntity.kycSubmissions, {eager: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        verifiedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        verifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { TenantEntity } from '../../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\nimport { UserEntity } from '../../../../../users/infrastructure/persistence/relational/entities/user.entity';\n\nimport {\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  Column,\n} from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\n\nexport enum KycSubjectType {\n  USER = 'user',\n  TENANT = 'tenant',\n}\n\nexport enum KycStatus {\n  PENDING = 'pending',\n  VERIFIED = 'verified',\n  REJECTED = 'rejected',\n}\n@Entity({\n  name: 'kyc_details',\n})\nexport class KycDetailsEntity extends EntityRelationalHelper {\n  @Column({\n    nullable: true,\n    type: Number,\n  })\n  verifiedBy?: number | null;\n\n  @Column({\n    nullable: true,\n    type: Date,\n  })\n  verifiedAt?: Date | null;\n\n  @Column({\n    nullable: true,\n    type: Date,\n  })\n  submittedAt?: Date | null;\n\n  @Column({\n    type: 'enum',\n    enum: KycStatus,\n    default: KycStatus.PENDING,\n  })\n  status: KycStatus;\n\n  @Column({ type: 'jsonb', nullable: true })\n  documentData: {\n    frontUrl?: string;\n    backUrl?: string;\n    expiryDate?: Date;\n  };\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  documentNumber?: string | null;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  documentType?: string | null;\n\n  @Column({\n    type: 'enum',\n    enum: KycSubjectType,\n  })\n  subjectType: KycSubjectType;\n\n  @ManyToOne(\n    () => TenantEntity,\n    (parentEntity) => parentEntity.kycSubmissions,\n    { eager: false, nullable: false },\n  )\n  tenant: TenantEntity;\n\n  @ManyToOne(() => UserEntity, (parentEntity) => parentEntity.kycSubmissions, {\n    eager: false,\n    nullable: false,\n  })\n  user: UserEntity;\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KycDetailsMapper.html":{"url":"classes/KycDetailsMapper.html","title":"class - KycDetailsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KycDetailsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/document/mappers/kyc-details.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: KycDetailsSchemaClass)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/document/mappers/kyc-details.mapper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            KycDetailsSchemaClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         KycDetails\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/document/mappers/kyc-details.mapper.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         KycDetailsSchemaClass\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { KycDetails } from '../../../../domain/kyc-details';\nimport { KycDetailsSchemaClass } from '../entities/kyc-details.schema';\n\nexport class KycDetailsMapper {\n  public static toDomain(raw: KycDetailsSchemaClass): KycDetails {\n    const domainEntity = new KycDetails();\n    domainEntity.id = raw._id.toString();\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  public static toPersistence(domainEntity: KycDetails): KycDetailsSchemaClass {\n    const persistenceSchema = new KycDetailsSchemaClass();\n    if (domainEntity.id) {\n      persistenceSchema._id = domainEntity.id;\n    }\n    persistenceSchema.createdAt = domainEntity.createdAt;\n    persistenceSchema.updatedAt = domainEntity.updatedAt;\n\n    return persistenceSchema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KycDetailsMapper-1.html":{"url":"classes/KycDetailsMapper-1.html","title":"class - KycDetailsMapper-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KycDetailsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/relational/mappers/kyc-details.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: KycDetailsEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/relational/mappers/kyc-details.mapper.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            KycDetailsEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         KycDetails\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/relational/mappers/kyc-details.mapper.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         KycDetailsEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { KycDetails } from '../../../../domain/kyc-details';\n\nimport { TenantMapper } from '../../../../../tenants/infrastructure/persistence/relational/mappers/tenant.mapper';\n\nimport { UserMapper } from '../../../../../users/infrastructure/persistence/relational/mappers/user.mapper';\n\nimport {\n  KycDetailsEntity,\n  KycStatus,\n  KycSubjectType,\n} from '../entities/kyc-details.entity';\n\nexport class KycDetailsMapper {\n  static toDomain(raw: KycDetailsEntity): KycDetails {\n    const domainEntity = new KycDetails();\n    domainEntity.verifiedBy = raw.verifiedBy;\n\n    domainEntity.verifiedAt = raw.verifiedAt;\n\n    domainEntity.submittedAt = raw.submittedAt;\n\n    domainEntity.status = raw.status;\n\n    domainEntity.documentData = raw.documentData\n      ? typeof raw.documentData === 'string'\n        ? JSON.parse(raw.documentData)\n        : raw.documentData\n      : undefined;\n\n    domainEntity.documentNumber = raw.documentNumber;\n\n    domainEntity.documentType = raw.documentType;\n\n    domainEntity.subjectType = raw.subjectType;\n\n    if (raw.tenant) {\n      domainEntity.tenant = TenantMapper.toDomain(raw.tenant);\n    }\n\n    if (raw.user) {\n      domainEntity.user = UserMapper.toDomain(raw.user);\n    }\n\n    domainEntity.id = raw.id;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: KycDetails): KycDetailsEntity {\n    const persistenceEntity = new KycDetailsEntity();\n    persistenceEntity.verifiedBy = domainEntity.verifiedBy;\n\n    persistenceEntity.verifiedAt = domainEntity.verifiedAt;\n\n    persistenceEntity.submittedAt = domainEntity.submittedAt;\n\n    persistenceEntity.status =\n      (domainEntity.status as KycStatus) ?? KycStatus.PENDING;\n\n    persistenceEntity.documentData = domainEntity.documentData\n      ? JSON.parse(\n          typeof domainEntity.documentData === 'string'\n            ? domainEntity.documentData\n            : '{}',\n        )\n      : { frontUrl: undefined, backUrl: undefined, expiryDate: undefined };\n\n    persistenceEntity.documentNumber = domainEntity.documentNumber;\n\n    persistenceEntity.documentType = domainEntity.documentType;\n\n    persistenceEntity.subjectType =\n      (domainEntity.subjectType as KycSubjectType) ?? KycSubjectType.USER;\n\n    if (domainEntity.tenant) {\n      persistenceEntity.tenant = TenantMapper.toPersistence(\n        domainEntity.tenant,\n      );\n    }\n\n    if (domainEntity.user) {\n      persistenceEntity.user = UserMapper.toPersistence(domainEntity.user);\n    }\n\n    if (domainEntity.id) {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KycDetailsModule.html":{"url":"modules/KycDetailsModule.html","title":"module - KycDetailsModule","body":"\n                   \n\n\n\n\n    Modules\n    KycDetailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KycDetailsModule\n\n\n\ncluster_KycDetailsModule_exports\n\n\n\ncluster_KycDetailsModule_providers\n\n\n\n\nKycDetailsService \n\nKycDetailsService \n\n\n\nKycDetailsModule\n\nKycDetailsModule\n\nKycDetailsService  -->\n\nKycDetailsModule->KycDetailsService \n\n\n\n\n\nKycDetailsService\n\nKycDetailsService\n\nKycDetailsModule -->\n\nKycDetailsService->KycDetailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/kyc-details/kyc-details.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KycDetailsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KycDetailsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KycDetailsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TenantsModule } from '../tenants/tenants.module';\nimport { UsersModule } from '../users/users.module';\nimport {\n  // common\n  Module,\n  forwardRef,\n} from '@nestjs/common';\nimport { KycDetailsService } from './kyc-details.service';\nimport { KycDetailsController } from './kyc-details.controller';\nimport { RelationalKycDetailsPersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\nimport databaseConfig from '../database/config/database.config';\nimport { DatabaseConfig } from '../database/config/database-config.type';\nimport { DocumentKycDetailsPersistenceModule } from './infrastructure/persistence/document/document-persistence.module';\n\nconst infrastructurePersistenceModule = (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentKycDetailsPersistenceModule\n  : RelationalKycDetailsPersistenceModule;\n\n@Module({\n  imports: [\n    forwardRef(() => TenantsModule),\n\n    forwardRef(() => UsersModule),\n\n    // import modules, etc.\n    infrastructurePersistenceModule,\n  ],\n  controllers: [KycDetailsController],\n  providers: [KycDetailsService],\n  exports: [KycDetailsService, infrastructurePersistenceModule],\n})\nexport class KycDetailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KycDetailsRelationalRepository.html":{"url":"injectables/KycDetailsRelationalRepository.html","title":"injectable - KycDetailsRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KycDetailsRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/relational/repositories/kyc-details.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kycDetailsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/kyc-details/infrastructure/persistence/relational/repositories/kyc-details.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kycDetailsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/relational/repositories/kyc-details.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/relational/repositories/kyc-details.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/relational/repositories/kyc-details.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/relational/repositories/kyc-details.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/relational/repositories/kyc-details.repository.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: KycDetails, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/relational/repositories/kyc-details.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, In } from 'typeorm';\nimport { KycDetailsEntity } from '../entities/kyc-details.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { KycDetails } from '../../../../domain/kyc-details';\nimport { KycDetailsRepository } from '../../kyc-details.repository';\nimport { KycDetailsMapper } from '../mappers/kyc-details.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class KycDetailsRelationalRepository implements KycDetailsRepository {\n  constructor(\n    @InjectRepository(KycDetailsEntity)\n    private readonly kycDetailsRepository: Repository,\n  ) {}\n\n  async create(data: KycDetails): Promise {\n    const persistenceModel = KycDetailsMapper.toPersistence(data);\n    const newEntity = await this.kycDetailsRepository.save(\n      this.kycDetailsRepository.create(persistenceModel),\n    );\n    return KycDetailsMapper.toDomain(newEntity);\n  }\n\n  async findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const entities = await this.kycDetailsRepository.find({\n      skip: (paginationOptions.page - 1) * paginationOptions.limit,\n      take: paginationOptions.limit,\n    });\n\n    return entities.map((entity) => KycDetailsMapper.toDomain(entity));\n  }\n\n  async findById(id: KycDetails['id']): Promise> {\n    const entity = await this.kycDetailsRepository.findOne({\n      where: { id },\n    });\n\n    return entity ? KycDetailsMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: KycDetails['id'][]): Promise {\n    const entities = await this.kycDetailsRepository.find({\n      where: { id: In(ids) },\n    });\n\n    return entities.map((entity) => KycDetailsMapper.toDomain(entity));\n  }\n\n  async update(\n    id: KycDetails['id'],\n    payload: Partial,\n  ): Promise {\n    const entity = await this.kycDetailsRepository.findOne({\n      where: { id },\n    });\n\n    if (!entity) {\n      throw new Error('Record not found');\n    }\n\n    const updatedEntity = await this.kycDetailsRepository.save(\n      this.kycDetailsRepository.create(\n        KycDetailsMapper.toPersistence({\n          ...KycDetailsMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return KycDetailsMapper.toDomain(updatedEntity);\n  }\n\n  async remove(id: KycDetails['id']): Promise {\n    await this.kycDetailsRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KycDetailsRepository.html":{"url":"classes/KycDetailsRepository.html","title":"class - KycDetailsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KycDetailsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/kyc-details.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findAllWithPagination\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/kyc-details.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/kyc-details.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/kyc-details.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/kyc-details.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/kyc-details.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: KycDetails, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/infrastructure/persistence/kyc-details.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from '../../../utils/types/deep-partial.type';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { IPaginationOptions } from '../../../utils/types/pagination-options';\nimport { KycDetails } from '../../domain/kyc-details';\n\nexport abstract class KycDetailsRepository {\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise;\n\n  abstract findById(id: KycDetails['id']): Promise>;\n\n  abstract findByIds(ids: KycDetails['id'][]): Promise;\n\n  abstract update(\n    id: KycDetails['id'],\n    payload: DeepPartial,\n  ): Promise;\n\n  abstract remove(id: KycDetails['id']): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KycDetailsSchemaClass.html":{"url":"classes/KycDetailsSchemaClass.html","title":"class - KycDetailsSchemaClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KycDetailsSchemaClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/document/entities/kyc-details.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: now})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/document/entities/kyc-details.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: now})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/kyc-details/infrastructure/persistence/document/entities/kyc-details.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { now, HydratedDocument } from 'mongoose';\nimport { EntityDocumentHelper } from '../../../../../utils/document-entity-helper';\n\nexport type KycDetailsSchemaDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    getters: true,\n  },\n})\nexport class KycDetailsSchemaClass extends EntityDocumentHelper {\n  @Prop({ default: now })\n  createdAt: Date;\n\n  @Prop({ default: now })\n  updatedAt: Date;\n}\n\nexport const KycDetailsSchema = SchemaFactory.createForClass(\n  KycDetailsSchemaClass,\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KycDetailsService.html":{"url":"injectables/KycDetailsService.html","title":"injectable - KycDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KycDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/kyc-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAllWithPagination\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tenantService: TenantsService, userService: UsersService, kycDetailsRepository: KycDetailsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/kyc-details/kyc-details.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tenantService\n                                                  \n                                                        \n                                                                        TenantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        kycDetailsRepository\n                                                  \n                                                        \n                                                                        KycDetailsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createKycDetailsDto: CreateKycDetailsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createKycDetailsDto\n                                            \n                                                            CreateKycDetailsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \nfindAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: KycDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: KycDetails, updateKycDetailsDto: UpdateKycDetailsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/kyc-details/kyc-details.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            KycDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateKycDetailsDto\n                                            \n                                                            UpdateKycDetailsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TenantsService } from '../tenants/tenants.service';\nimport { Tenant } from '../tenants/domain/tenant';\n\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/domain/user';\n\nimport {\n  // common\n  Injectable,\n  HttpStatus,\n  UnprocessableEntityException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateKycDetailsDto } from './dto/create-kyc-details.dto';\nimport { UpdateKycDetailsDto } from './dto/update-kyc-details.dto';\nimport { KycDetailsRepository } from './infrastructure/persistence/kyc-details.repository';\nimport { IPaginationOptions } from '../utils/types/pagination-options';\nimport { KycDetails } from './domain/kyc-details';\nimport { KycStatus } from './infrastructure/persistence/relational/entities/kyc-details.entity';\n\n@Injectable()\nexport class KycDetailsService {\n  constructor(\n    @Inject(forwardRef(() => TenantsService))\n    private readonly tenantService: TenantsService,\n\n    @Inject(forwardRef(() => UsersService))\n    private readonly userService: UsersService,\n\n    // Dependencies here\n    private readonly kycDetailsRepository: KycDetailsRepository,\n  ) {}\n\n  async create(createKycDetailsDto: CreateKycDetailsDto) {\n    // Do not remove comment below.\n    // \n\n    const tenantObject = await this.tenantService.findById(\n      createKycDetailsDto.tenant.id,\n    );\n    if (!tenantObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          tenant: 'notExists',\n        },\n      });\n    }\n    const tenant = tenantObject;\n\n    const userObject = await this.userService.findById(\n      createKycDetailsDto.user.id,\n    );\n    if (!userObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          user: 'notExists',\n        },\n      });\n    }\n    const user = userObject;\n\n    return this.kycDetailsRepository.create({\n      // Do not remove comment below.\n      // \n      verifiedBy: createKycDetailsDto.verifiedBy,\n\n      verifiedAt: createKycDetailsDto.verifiedAt,\n\n      submittedAt: createKycDetailsDto.submittedAt,\n\n      status: createKycDetailsDto.status ?? KycStatus.PENDING,\n\n      documentData: createKycDetailsDto.documentData,\n\n      documentNumber: createKycDetailsDto.documentNumber,\n\n      documentType: createKycDetailsDto.documentType,\n\n      subjectType: createKycDetailsDto.subjectType,\n\n      tenant,\n\n      user,\n    });\n  }\n\n  findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }) {\n    return this.kycDetailsRepository.findAllWithPagination({\n      paginationOptions: {\n        page: paginationOptions.page,\n        limit: paginationOptions.limit,\n      },\n    });\n  }\n\n  findById(id: KycDetails['id']) {\n    return this.kycDetailsRepository.findById(id);\n  }\n\n  findByIds(ids: KycDetails['id'][]) {\n    return this.kycDetailsRepository.findByIds(ids);\n  }\n\n  async update(\n    id: KycDetails['id'],\n\n    updateKycDetailsDto: UpdateKycDetailsDto,\n  ) {\n    // Do not remove comment below.\n    // \n\n    let tenant: Tenant | undefined = undefined;\n\n    if (updateKycDetailsDto.tenant) {\n      const tenantObject = await this.tenantService.findById(\n        updateKycDetailsDto.tenant.id,\n      );\n      if (!tenantObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            tenant: 'notExists',\n          },\n        });\n      }\n      tenant = tenantObject;\n    }\n\n    let user: User | undefined = undefined;\n\n    if (updateKycDetailsDto.user) {\n      const userObject = await this.userService.findById(\n        updateKycDetailsDto.user.id,\n      );\n      if (!userObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            user: 'notExists',\n          },\n        });\n      }\n      user = userObject;\n    }\n\n    return this.kycDetailsRepository.update(id, {\n      // Do not remove comment below.\n      // \n      verifiedBy: updateKycDetailsDto.verifiedBy,\n\n      verifiedAt: updateKycDetailsDto.verifiedAt,\n\n      submittedAt: updateKycDetailsDto.submittedAt,\n\n      status: updateKycDetailsDto.status,\n\n      documentData: updateKycDetailsDto.documentData,\n\n      documentNumber: updateKycDetailsDto.documentNumber,\n\n      documentType: updateKycDetailsDto.documentType,\n\n      subjectType: updateKycDetailsDto.subjectType,\n\n      tenant,\n\n      user,\n    });\n  }\n\n  remove(id: KycDetails['id']) {\n    return this.kycDetailsRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LatestChanges1745163536016.html":{"url":"classes/LatestChanges1745163536016.html","title":"class - LatestChanges1745163536016","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LatestChanges1745163536016\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1745163536016-LatestChanges.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'LatestChanges1745163536016'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1745163536016-LatestChanges.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745163536016-LatestChanges.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1745163536016-LatestChanges.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class LatestChanges1745163536016 implements MigrationInterface {\n  name = 'LatestChanges1745163536016';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    // First enable PostGIS extension\n    //TODO\n    await queryRunner.query('CREATE EXTENSION IF NOT EXISTS postgis');\n\n    // Then proceed with other changes\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"kyc_details_status_enum\" AS ENUM('pending', 'verified', 'rejected')`,\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"kyc_details_subjecttype_enum\" AS ENUM('user', 'tenant')`,\n    );\n    // await queryRunner.query(\n    //   `CREATE TYPE \"public\".\"kyc_details_status_enum\" AS ENUM('pending', 'verified', 'rejected')`,\n    // );\n    // await queryRunner.query(\n    //   `CREATE TYPE \"public\".\"kyc_details_subjecttype_enum\" AS ENUM('user', 'tenant')`,\n    // );\n    await queryRunner.query(\n      `CREATE TABLE \"kyc_details\" (\"verifiedBy\" integer, \"verifiedAt\" TIMESTAMP, \"submittedAt\" TIMESTAMP, \"status\" \"public\".\"kyc_details_status_enum\" NOT NULL DEFAULT 'pending', \"documentData\" jsonb, \"documentNumber\" character varying, \"documentType\" character varying, \"subjectType\" \"public\".\"kyc_details_subjecttype_enum\" NOT NULL, \"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"tenantId\" uuid NOT NULL, \"userId\" integer NOT NULL, CONSTRAINT \"PK_83983b321401e4ca9ebcc3317db\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(`ALTER TABLE \"role\" ADD \"tenantId\" uuid NOT NULL`);\n    await queryRunner.query(\n      `ALTER TABLE \"tenant\" ADD \"domain\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"tenant_type_code_enum\" RENAME TO \"tenant_type_code_enum_old\"`,\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"tenant_type_code_enum\" AS ENUM('platform_owner', 'community_group', 'recycling_company', 'collection_agency', 'municipality', 'enterprise', 'educational_institution', 'healthcare_provider', 'non_profit_organization', 'government_agency', 'technology_company', 'retail_business', 'manufacturing_company', 'transportation_service', 'financial_institution', 'agricultural_business', 'energy_provider', 'construction_company', 'hospitality_business', 'generic')`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant_type\" ALTER COLUMN \"code\" TYPE \"public\".\"tenant_type_code_enum\" USING \"code\"::\"text\"::\"public\".\"tenant_type_code_enum\"`,\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"tenant_type_code_enum_old\"`);\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"zipCodes\"`);\n    await queryRunner.query(`ALTER TABLE \"region\" ADD \"zipCodes\" text array`);\n    await queryRunner.query(\n      `ALTER TABLE \"region\" DROP COLUMN \"operatingHours\"`,\n    );\n    await queryRunner.query(`ALTER TABLE \"region\" ADD \"operatingHours\" jsonb`);\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"serviceTypes\"`);\n    await queryRunner.query(`ALTER TABLE \"region\" ADD \"serviceTypes\" jsonb`);\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"centroidLat\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD \"centroidLat\" numeric(9,6)`,\n    );\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"centroidLon\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD \"centroidLon\" numeric(9,6)`,\n    );\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"boundary\"`);\n    //TODO\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD \"boundary\" geometry(Polygon,4326)`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"kyc_details\" ADD CONSTRAINT \"FK_78f4992112d203106339e1b20e6\" FOREIGN KEY (\"tenantId\") REFERENCES \"tenant\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"kyc_details\" ADD CONSTRAINT \"FK_295d21c339b0985283e10f683ae\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role\" ADD CONSTRAINT \"FK_1751a572e91385a09d41c624714\" FOREIGN KEY (\"tenantId\") REFERENCES \"tenant\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"role\" DROP CONSTRAINT \"FK_1751a572e91385a09d41c624714\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"kyc_details\" DROP CONSTRAINT \"FK_295d21c339b0985283e10f683ae\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"kyc_details\" DROP CONSTRAINT \"FK_78f4992112d203106339e1b20e6\"`,\n    );\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"boundary\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD \"boundary\" character varying`,\n    );\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"centroidLon\"`);\n    await queryRunner.query(`ALTER TABLE \"region\" ADD \"centroidLon\" integer`);\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"centroidLat\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD \"centroidLat\" character varying`,\n    );\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"serviceTypes\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD \"serviceTypes\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"region\" DROP COLUMN \"operatingHours\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD \"operatingHours\" character varying`,\n    );\n    await queryRunner.query(`ALTER TABLE \"region\" DROP COLUMN \"zipCodes\"`);\n    await queryRunner.query(\n      `ALTER TABLE \"region\" ADD \"zipCodes\" character varying`,\n    );\n    await queryRunner.query(\n      `CREATE TYPE \"public\".\"tenant_type_code_enum_old\" AS ENUM('community_group', 'recycling_company', 'collection_agency', 'municipality', 'enterprise', 'educational_institution', 'healthcare_provider', 'non_profit_organization', 'government_agency', 'technology_company', 'retail_business', 'manufacturing_company', 'transportation_service', 'financial_institution', 'agricultural_business', 'energy_provider', 'construction_company', 'hospitality_business', 'generic')`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"tenant_type\" ALTER COLUMN \"code\" TYPE \"public\".\"tenant_type_code_enum_old\" USING \"code\"::\"text\"::\"public\".\"tenant_type_code_enum_old\"`,\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"tenant_type_code_enum\"`);\n    await queryRunner.query(\n      `ALTER TYPE \"public\".\"tenant_type_code_enum_old\" RENAME TO \"tenant_type_code_enum\"`,\n    );\n    await queryRunner.query(`ALTER TABLE \"tenant\" DROP COLUMN \"domain\"`);\n    await queryRunner.query(`ALTER TABLE \"role\" DROP COLUMN \"tenantId\"`);\n    await queryRunner.query(`DROP TABLE \"kyc_details\"`);\n    await queryRunner.query(\n      `DROP TYPE \"public\".\"kyc_details_subjecttype_enum\"`,\n    );\n    await queryRunner.query(`DROP TYPE \"public\".\"kyc_details_status_enum\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                token\n                            \n                            \n                                    \n                                tokenExpires\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenExpires\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from '../../users/domain/user';\n\nexport class LoginResponseDto {\n  @ApiProperty()\n  token: string;\n\n  @ApiProperty()\n  refreshToken: string;\n\n  @ApiProperty()\n  tokenExpires: number;\n\n  @ApiProperty({\n    type: () => User,\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailData.html":{"url":"interfaces/MailData.html","title":"interface - MailData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/interfaces/mail-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MailData {\n  to: string;\n  data: T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_imports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailerModule\n\nMailerModule\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailerModule->MailModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MailService } from './mail.service';\nimport { MailerModule } from '../mailer/mailer.module';\n\n@Module({\n  imports: [ConfigModule, MailerModule],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmNewEmail\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                userSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmNewEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmNewEmail(mailData: MailData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mailData\n                                            \n                                                            MailData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPassword(mailData: MailData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mailData\n                                            \n                                                            MailData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    userSignUp(mailData: MailData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mailData\n                                            \n                                                            MailData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { I18nContext } from 'nestjs-i18n';\nimport { MailData } from './interfaces/mail-data.interface';\n\nimport { MaybeType } from '../utils/types/maybe.type';\nimport { MailerService } from '../mailer/mailer.service';\nimport path from 'path';\nimport { AllConfigType } from '../config/config.type';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private readonly mailerService: MailerService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  async userSignUp(mailData: MailData): Promise {\n    const i18n = I18nContext.current();\n    let emailConfirmTitle: MaybeType;\n    let text1: MaybeType;\n    let text2: MaybeType;\n    let text3: MaybeType;\n\n    if (i18n) {\n      [emailConfirmTitle, text1, text2, text3] = await Promise.all([\n        i18n.t('common.confirmEmail'),\n        i18n.t('confirm-email.text1'),\n        i18n.t('confirm-email.text2'),\n        i18n.t('confirm-email.text3'),\n      ]);\n    }\n\n    const url = new URL(\n      this.configService.getOrThrow('app.frontendDomain', {\n        infer: true,\n      }) + '/confirm-email',\n    );\n    url.searchParams.set('hash', mailData.data.hash);\n\n    await this.mailerService.sendMail({\n      to: mailData.to,\n      subject: emailConfirmTitle,\n      text: `${url.toString()} ${emailConfirmTitle}`,\n      templatePath: path.join(\n        this.configService.getOrThrow('app.workingDirectory', {\n          infer: true,\n        }),\n        'src',\n        'mail',\n        'mail-templates',\n        'activation.hbs',\n      ),\n      context: {\n        title: emailConfirmTitle,\n        url: url.toString(),\n        actionTitle: emailConfirmTitle,\n        app_name: this.configService.get('app.name', { infer: true }),\n        text1,\n        text2,\n        text3,\n      },\n    });\n  }\n\n  async forgotPassword(\n    mailData: MailData,\n  ): Promise {\n    const i18n = I18nContext.current();\n    let resetPasswordTitle: MaybeType;\n    let text1: MaybeType;\n    let text2: MaybeType;\n    let text3: MaybeType;\n    let text4: MaybeType;\n\n    if (i18n) {\n      [resetPasswordTitle, text1, text2, text3, text4] = await Promise.all([\n        i18n.t('common.resetPassword'),\n        i18n.t('reset-password.text1'),\n        i18n.t('reset-password.text2'),\n        i18n.t('reset-password.text3'),\n        i18n.t('reset-password.text4'),\n      ]);\n    }\n\n    const url = new URL(\n      this.configService.getOrThrow('app.frontendDomain', {\n        infer: true,\n      }) + '/password-change',\n    );\n    url.searchParams.set('hash', mailData.data.hash);\n    url.searchParams.set('expires', mailData.data.tokenExpires.toString());\n\n    await this.mailerService.sendMail({\n      to: mailData.to,\n      subject: resetPasswordTitle,\n      text: `${url.toString()} ${resetPasswordTitle}`,\n      templatePath: path.join(\n        this.configService.getOrThrow('app.workingDirectory', {\n          infer: true,\n        }),\n        'src',\n        'mail',\n        'mail-templates',\n        'reset-password.hbs',\n      ),\n      context: {\n        title: resetPasswordTitle,\n        url: url.toString(),\n        actionTitle: resetPasswordTitle,\n        app_name: this.configService.get('app.name', {\n          infer: true,\n        }),\n        text1,\n        text2,\n        text3,\n        text4,\n      },\n    });\n  }\n\n  async confirmNewEmail(mailData: MailData): Promise {\n    const i18n = I18nContext.current();\n    let emailConfirmTitle: MaybeType;\n    let text1: MaybeType;\n    let text2: MaybeType;\n    let text3: MaybeType;\n\n    if (i18n) {\n      [emailConfirmTitle, text1, text2, text3] = await Promise.all([\n        i18n.t('common.confirmEmail'),\n        i18n.t('confirm-new-email.text1'),\n        i18n.t('confirm-new-email.text2'),\n        i18n.t('confirm-new-email.text3'),\n      ]);\n    }\n\n    const url = new URL(\n      this.configService.getOrThrow('app.frontendDomain', {\n        infer: true,\n      }) + '/confirm-new-email',\n    );\n    url.searchParams.set('hash', mailData.data.hash);\n\n    await this.mailerService.sendMail({\n      to: mailData.to,\n      subject: emailConfirmTitle,\n      text: `${url.toString()} ${emailConfirmTitle}`,\n      templatePath: path.join(\n        this.configService.getOrThrow('app.workingDirectory', {\n          infer: true,\n        }),\n        'src',\n        'mail',\n        'mail-templates',\n        'confirm-new-email.hbs',\n      ),\n      context: {\n        title: emailConfirmTitle,\n        url: url.toString(),\n        actionTitle: emailConfirmTitle,\n        app_name: this.configService.get('app.name', { infer: true }),\n        text1,\n        text2,\n        text3,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mailer/mailer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailerService } from './mailer.service';\n\n@Module({\n  providers: [MailerService],\n  exports: [MailerService],\n})\nexport class MailerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailer/mailer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mailer/mailer.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mailer/mailer.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     nodemailer.Transporter\n\n                    \n                \n                    \n                        \n                                Defined in src/mailer/mailer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport fs from 'node:fs/promises';\nimport { ConfigService } from '@nestjs/config';\nimport nodemailer from 'nodemailer';\nimport Handlebars from 'handlebars';\nimport { AllConfigType } from '../config/config.type';\n\n@Injectable()\nexport class MailerService {\n  private readonly transporter: nodemailer.Transporter;\n  constructor(private readonly configService: ConfigService) {\n    this.transporter = nodemailer.createTransport({\n      host: configService.get('mail.host', { infer: true }),\n      port: configService.get('mail.port', { infer: true }),\n      ignoreTLS: configService.get('mail.ignoreTLS', { infer: true }),\n      secure: configService.get('mail.secure', { infer: true }),\n      requireTLS: configService.get('mail.requireTLS', { infer: true }),\n      auth: {\n        user: configService.get('mail.user', { infer: true }),\n        pass: configService.get('mail.password', { infer: true }),\n      },\n    });\n  }\n\n  async sendMail({\n    templatePath,\n    context,\n    ...mailOptions\n  }: nodemailer.SendMailOptions & {\n    templatePath: string;\n    context: Record;\n  }): Promise {\n    let html: string | undefined;\n    if (templatePath) {\n      const template = await fs.readFile(templatePath, 'utf-8');\n      html = Handlebars.compile(template, {\n        strict: true,\n      })(context);\n    }\n\n    await this.transporter.sendMail({\n      ...mailOptions,\n      from: mailOptions.from\n        ? mailOptions.from\n        : `\"${this.configService.get('mail.defaultName', {\n            infer: true,\n          })}\" `,\n      html: mailOptions.html ? mailOptions.html : html,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/mongoose-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/database/mongoose-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMongooseOptions\n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/mongoose-config.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MongooseModuleOptions\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\nimport { AllConfigType } from '../config/config.type';\nimport mongooseAutoPopulate from 'mongoose-autopopulate';\n\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('database.url', { infer: true }),\n      dbName: this.configService.get('database.name', { infer: true }),\n      user: this.configService.get('database.username', { infer: true }),\n      pass: this.configService.get('database.password', { infer: true }),\n      connectionFactory(connection) {\n        connection.plugin(mongooseAutoPopulate);\n        return connection;\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryUserDto.html":{"url":"classes/QueryUserDto.html","title":"class - QueryUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/query-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                filters\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FilterUserDto | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsOptional()@Transform( => )@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/query-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/query-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@Transform( => )@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/query-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SortUserDto[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: String})@IsOptional()@Transform( => )@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/query-user.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Transform, Type, plainToInstance } from 'class-transformer';\nimport { User } from '../domain/user';\nimport { RoleDto } from '../../roles/dto/role.dto';\n\nexport class FilterUserDto {\n  @ApiPropertyOptional({ type: RoleDto })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => RoleDto)\n  roles?: RoleDto[] | null;\n}\n\nexport class SortUserDto {\n  @ApiProperty()\n  @Type(() => String)\n  @IsString()\n  orderBy: keyof User;\n\n  @ApiProperty()\n  @IsString()\n  order: string;\n}\n\nexport class QueryUserDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n\n  @ApiPropertyOptional({ type: String })\n  @IsOptional()\n  @Transform(({ value }) =>\n    value ? plainToInstance(FilterUserDto, JSON.parse(value)) : undefined,\n  )\n  @ValidateNested()\n  @Type(() => FilterUserDto)\n  filters?: FilterUserDto | null;\n\n  @ApiPropertyOptional({ type: String })\n  @IsOptional()\n  @Transform(({ value }) => {\n    return value ? plainToInstance(SortUserDto, JSON.parse(value)) : undefined;\n  })\n  @ValidateNested({ each: true })\n  @Type(() => SortUserDto)\n  sort?: SortUserDto[] | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshResponseDto.html":{"url":"classes/RefreshResponseDto.html","title":"class - RefreshResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/refresh-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                token\n                            \n                            \n                                    \n                                tokenExpires\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenExpires\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class RefreshResponseDto {\n  @ApiProperty()\n  token: string;\n\n  @ApiProperty()\n  refreshToken: string;\n\n  @ApiProperty()\n  tokenExpires: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Region.html":{"url":"classes/Region.html","title":"class - Region","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Region\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/domain/region.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                boundary\n                            \n                            \n                                    \n                                    Optional\n                                centroidLat\n                            \n                            \n                                    \n                                    Optional\n                                centroidLon\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    Optional\n                                operatingHours\n                            \n                            \n                                    \n                                    Optional\n                                serviceTypes\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                zipCodes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        boundary\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Polygon\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, example: undefined, description: 'GeoJSON polygon defining region boundaries'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        centroidLat\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Number, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        centroidLon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Number, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        operatingHours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, example: undefined, description: 'Operating hours for waste collection'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        serviceTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, example: undefined, description: 'Supported service types in this region'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tenant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tenant, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        zipCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, example: undefined, description: 'ZIP codes covered by this region'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/domain/region.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Tenant } from '../../tenants/domain/tenant';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Polygon } from 'geojson';\nexport class Region {\n  @ApiProperty({\n    type: [String],\n    example: ['00100', '00101'],\n    description: 'ZIP codes covered by this region',\n  })\n  zipCodes?: string[];\n\n  @ApiProperty({\n    type: Object,\n    example: {\n      days: ['mon', 'wed', 'fri'],\n      startTime: '08:00',\n      endTime: '17:00',\n    },\n    description: 'Operating hours for waste collection',\n  })\n  operatingHours?: {\n    days?: string[];\n    startTime?: string;\n    endTime?: string;\n  };\n\n  @ApiProperty({\n    type: [String],\n    example: ['residential', 'commercial'],\n    description: 'Supported service types in this region',\n  })\n  serviceTypes?: string[];\n\n  @ApiProperty({\n    type: () => Number,\n    nullable: true,\n  })\n  centroidLon?: number | null;\n\n  @ApiProperty({\n    type: () => Number,\n    nullable: true,\n  })\n  centroidLat?: number | null;\n\n  @ApiProperty({\n    type: Object,\n    example: {\n      type: 'Polygon',\n      coordinates: [\n        [\n          [36.8219, -1.2921],\n          [36.895, -1.2921],\n          [36.895, -1.2335],\n          [36.8219, -1.2335],\n          [36.8219, -1.2921],\n        ],\n      ],\n    },\n    description: 'GeoJSON polygon defining region boundaries',\n  })\n  boundary?: Polygon;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  name?: string | null;\n\n  @ApiProperty({\n    type: () => Tenant,\n    nullable: false,\n  })\n  tenant: Tenant;\n\n  @ApiProperty({\n    type: String,\n  })\n  id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegionDto.html":{"url":"classes/RegionDto.html","title":"class - RegionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/dto/region.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/dto/region.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class RegionDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RegionEntity.html":{"url":"entities/RegionEntity.html","title":"entity - RegionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RegionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/infrastructure/persistence/relational/entities/region.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                boundary\n                            \n                            \n                                    \n                                    Optional\n                                centroidLat\n                            \n                            \n                                    \n                                    Optional\n                                centroidLon\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    Optional\n                                operatingHours\n                            \n                            \n                                    \n                                    Optional\n                                serviceTypes\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                users\n                            \n                            \n                                    \n                                    Optional\n                                zipCodes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        boundary\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Polygon\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'geometry', spatialFeatureType: 'Polygon', srid: 4326, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        centroidLat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 9, scale: 6, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        centroidLon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 9, scale: 6, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        operatingHours\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        serviceTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, parentEntity => parentEntity.regions, {eager: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.regions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        zipCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', array: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/regions/infrastructure/persistence/relational/entities/region.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { TenantEntity } from '../../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\nimport {\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  ManyToMany,\n  Column,\n} from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\nimport { UserEntity } from 'src/users/infrastructure/persistence/relational/entities/user.entity';\nimport { Polygon } from 'geojson';\n@Entity({\n  name: 'region',\n})\nexport class RegionEntity extends EntityRelationalHelper {\n  @Column({ type: 'text', array: true, nullable: true })\n  zipCodes?: string[];\n\n  @Column({ type: 'jsonb', nullable: true })\n  operatingHours?: {\n    days?: string[];\n    startTime?: string;\n    endTime?: string;\n  };\n\n  @Column({ type: 'jsonb', nullable: true })\n  serviceTypes?: string[]; // ['residential', 'commercial', 'industrial']\n\n  @Column({ type: 'decimal', precision: 9, scale: 6, nullable: true })\n  centroidLat?: number;\n\n  @Column({ type: 'decimal', precision: 9, scale: 6, nullable: true })\n  centroidLon?: number;\n\n  @Column({\n    type: 'geometry',\n    spatialFeatureType: 'Polygon',\n    srid: 4326,\n    nullable: true,\n  })\n  boundary?: Polygon;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  name?: string | null;\n\n  @ManyToOne(() => TenantEntity, (parentEntity) => parentEntity.regions, {\n    eager: false,\n    nullable: false,\n  })\n  tenant: TenantEntity;\n\n  @ManyToMany(() => UserEntity, (user) => user.regions)\n  users: UserEntity[];\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegionMapper.html":{"url":"classes/RegionMapper.html","title":"class - RegionMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegionMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/infrastructure/persistence/relational/mappers/region.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: RegionEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/relational/mappers/region.mapper.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            RegionEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Region\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: Region)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/relational/mappers/region.mapper.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RegionEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Region } from '../../../../domain/region';\n\nimport { TenantMapper } from '../../../../../tenants/infrastructure/persistence/relational/mappers/tenant.mapper';\n\nimport { RegionEntity } from '../entities/region.entity';\n\nexport class RegionMapper {\n  static toDomain(raw: RegionEntity): Region {\n    const domainEntity = new Region();\n    domainEntity.zipCodes = raw.zipCodes;\n\n    domainEntity.operatingHours = raw.operatingHours;\n\n    domainEntity.serviceTypes = raw.serviceTypes;\n\n    domainEntity.centroidLon = raw.centroidLon;\n\n    domainEntity.centroidLat = raw.centroidLat;\n\n    domainEntity.boundary = raw.boundary;\n\n    domainEntity.name = raw.name;\n\n    if (raw.tenant) {\n      domainEntity.tenant = TenantMapper.toDomain(raw.tenant);\n    }\n\n    domainEntity.id = raw.id;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: Region): RegionEntity {\n    const persistenceEntity = new RegionEntity();\n    persistenceEntity.zipCodes = domainEntity.zipCodes;\n\n    persistenceEntity.operatingHours = domainEntity.operatingHours;\n\n    persistenceEntity.serviceTypes = domainEntity.serviceTypes;\n\n    persistenceEntity.centroidLon = domainEntity.centroidLon || 0.0;\n\n    persistenceEntity.centroidLat = domainEntity.centroidLat || 0.0;\n\n    persistenceEntity.boundary = domainEntity.boundary;\n\n    persistenceEntity.name = domainEntity.name;\n\n    if (domainEntity.tenant) {\n      persistenceEntity.tenant = TenantMapper.toPersistence(\n        domainEntity.tenant,\n      );\n    }\n\n    if (domainEntity.id) {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegionRelationalRepository.html":{"url":"injectables/RegionRelationalRepository.html","title":"injectable - RegionRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegionRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/infrastructure/persistence/relational/repositories/region.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(regionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Region)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Region)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Region)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Region, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/relational/repositories/region.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, In } from 'typeorm';\nimport { RegionEntity } from '../entities/region.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { Region } from '../../../../domain/region';\nimport { RegionRepository } from '../../region.repository';\nimport { RegionMapper } from '../mappers/region.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class RegionRelationalRepository implements RegionRepository {\n  constructor(\n    @InjectRepository(RegionEntity)\n    private readonly regionRepository: Repository,\n  ) {}\n\n  async create(data: Region): Promise {\n    const persistenceModel = RegionMapper.toPersistence(data);\n    const newEntity = await this.regionRepository.save(\n      this.regionRepository.create(persistenceModel),\n    );\n    return RegionMapper.toDomain(newEntity);\n  }\n\n  async findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const entities = await this.regionRepository.find({\n      skip: (paginationOptions.page - 1) * paginationOptions.limit,\n      take: paginationOptions.limit,\n    });\n\n    return entities.map((entity) => RegionMapper.toDomain(entity));\n  }\n\n  async findById(id: Region['id']): Promise> {\n    const entity = await this.regionRepository.findOne({\n      where: { id },\n    });\n\n    return entity ? RegionMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: Region['id'][]): Promise {\n    const entities = await this.regionRepository.find({\n      where: { id: In(ids) },\n    });\n\n    return entities.map((entity) => RegionMapper.toDomain(entity));\n  }\n\n  async update(id: Region['id'], payload: Partial): Promise {\n    const entity = await this.regionRepository.findOne({\n      where: { id },\n    });\n\n    if (!entity) {\n      throw new Error('Record not found');\n    }\n\n    const updatedEntity = await this.regionRepository.save(\n      this.regionRepository.create(\n        RegionMapper.toPersistence({\n          ...RegionMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return RegionMapper.toDomain(updatedEntity);\n  }\n\n  async remove(id: Region['id']): Promise {\n    await this.regionRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegionRepository.html":{"url":"classes/RegionRepository.html","title":"class - RegionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/infrastructure/persistence/region.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findAllWithPagination\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/region.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/region.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Region)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/region.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/region.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Region)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/region.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Region, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/infrastructure/persistence/region.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from '../../../utils/types/deep-partial.type';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { IPaginationOptions } from '../../../utils/types/pagination-options';\nimport { Region } from '../../domain/region';\n\nexport abstract class RegionRepository {\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise;\n\n  abstract findById(id: Region['id']): Promise>;\n\n  abstract findByIds(ids: Region['id'][]): Promise;\n\n  abstract update(\n    id: Region['id'],\n    payload: DeepPartial,\n  ): Promise;\n\n  abstract remove(id: Region['id']): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegionSeedModule.html":{"url":"modules/RegionSeedModule.html","title":"module - RegionSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    RegionSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegionSeedModule\n\n\n\ncluster_RegionSeedModule_exports\n\n\n\ncluster_RegionSeedModule_providers\n\n\n\n\nRegionSeedService \n\nRegionSeedService \n\n\n\nRegionSeedModule\n\nRegionSeedModule\n\nRegionSeedService  -->\n\nRegionSeedModule->RegionSeedService \n\n\n\n\n\nRegionSeedService\n\nRegionSeedService\n\nRegionSeedModule -->\n\nRegionSeedService->RegionSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/region/region-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RegionSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegionSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RegionEntity } from '../../../../regions/infrastructure/persistence/relational/entities/region.entity';\nimport { RegionSeedService } from './region-seed.service';\nimport { TenantEntity } from 'src/tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([RegionEntity, TenantEntity])],\n  providers: [RegionSeedService],\n  exports: [RegionSeedService],\n})\nexport class RegionSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegionSeedService.html":{"url":"injectables/RegionSeedService.html","title":"injectable - RegionSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegionSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/region/region-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createRegionForTenant\n                            \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(regionRepository: Repository, tenantRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/region/region-seed.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createRegionForTenant\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRegionForTenant(tenant: TenantEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/region/region-seed.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tenant\n                                            \n                                                            TenantEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         RegionEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/region/region-seed.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(RegionSeedService.name)\n                    \n                \n                    \n                        \n                                Defined in src/database/seeds/relational/region/region-seed.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { RegionEntity } from '../../../../regions/infrastructure/persistence/relational/entities/region.entity';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\n@Injectable()\nexport class RegionSeedService {\n  private readonly logger = new Logger(RegionSeedService.name);\n\n  constructor(\n    @InjectRepository(RegionEntity)\n    private readonly regionRepository: Repository,\n    @InjectRepository(TenantEntity)\n    private readonly tenantRepository: Repository,\n  ) {}\n\n  async run() {\n    const tenants = await this.tenantRepository.find();\n\n    if (tenants.length === 0) {\n      this.logger.warn('No tenants found - skipping region seeding');\n      return;\n    }\n    const regionsToCreate = tenants.map((tenant) =>\n      this.createRegionForTenant(tenant),\n    );\n\n    try {\n      await this.regionRepository.save(regionsToCreate);\n      this.logger.log(\n        `Successfully seeded regions for ${tenants.length} tenants`,\n      );\n    } catch (error) {\n      this.logger.error('Failed to seed regions:', error.message);\n    }\n  }\n\n  private createRegionForTenant(tenant: TenantEntity): RegionEntity {\n    return this.regionRepository.create({\n      name: `${tenant.name} Region`,\n      boundary: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [36.8219, -1.2921],\n            [36.895, -1.2921],\n            [36.895, -1.2335],\n            [36.8219, -1.2335],\n            [36.8219, -1.2921],\n          ],\n        ],\n      },\n      centroidLat: -1.2628,\n      centroidLon: 36.8584,\n      serviceTypes: ['residential', 'commercial'],\n      operatingHours: {\n        days: ['mon-fri'],\n        startTime: '08:00',\n        endTime: '17:00',\n      },\n      zipCodes: ['00100', '00101'],\n      tenant: tenant,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RegionsController.html":{"url":"controllers/RegionsController.html","title":"controller - RegionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RegionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/regions.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRegionDto: CreateRegionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Region})\n                \n            \n\n                    \n                        \n                            Defined in src/regions/regions.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRegionDto\n                                            \n                                                            CreateRegionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: FindAllRegionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/regions/regions.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            FindAllRegionsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Region})\n                \n            \n\n                    \n                        \n                            Defined in src/regions/regions.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/regions/regions.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRegionDto: UpdateRegionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Region})\n                \n            \n\n                    \n                        \n                            Defined in src/regions/regions.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRegionDto\n                                            \n                                                            UpdateRegionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { RegionsService } from './regions.service';\nimport { CreateRegionDto } from './dto/create-region.dto';\nimport { UpdateRegionDto } from './dto/update-region.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Region } from './domain/region';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  InfinityPaginationResponse,\n  InfinityPaginationResponseDto,\n} from '../utils/dto/infinity-pagination-response.dto';\nimport { infinityPagination } from '../utils/infinity-pagination';\nimport { FindAllRegionsDto } from './dto/find-all-regions.dto';\n\n@ApiTags('Regions')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@Controller({\n  path: 'regions',\n  version: '1',\n})\nexport class RegionsController {\n  constructor(private readonly regionsService: RegionsService) {}\n\n  @Post()\n  @ApiCreatedResponse({\n    type: Region,\n  })\n  create(@Body() createRegionDto: CreateRegionDto) {\n    return this.regionsService.create(createRegionDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    type: InfinityPaginationResponse(Region),\n  })\n  async findAll(\n    @Query() query: FindAllRegionsDto,\n  ): Promise> {\n    const page = query?.page ?? 1;\n    let limit = query?.limit ?? 10;\n    if (limit > 50) {\n      limit = 50;\n    }\n\n    return infinityPagination(\n      await this.regionsService.findAllWithPagination({\n        paginationOptions: {\n          page,\n          limit,\n        },\n      }),\n      { page, limit },\n    );\n  }\n\n  @Get(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Region,\n  })\n  findById(@Param('id') id: string) {\n    return this.regionsService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Region,\n  })\n  update(@Param('id') id: string, @Body() updateRegionDto: UpdateRegionDto) {\n    return this.regionsService.update(id, updateRegionDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  remove(@Param('id') id: string) {\n    return this.regionsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegionsModule.html":{"url":"modules/RegionsModule.html","title":"module - RegionsModule","body":"\n                   \n\n\n\n\n    Modules\n    RegionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegionsModule\n\n\n\ncluster_RegionsModule_exports\n\n\n\ncluster_RegionsModule_imports\n\n\n\ncluster_RegionsModule_providers\n\n\n\n\nRelationalRegionPersistenceModule\n\nRelationalRegionPersistenceModule\n\n\n\nRegionsModule\n\nRegionsModule\n\nRegionsModule -->\n\nRelationalRegionPersistenceModule->RegionsModule\n\n\n\n\n\nRegionsService \n\nRegionsService \n\nRegionsService  -->\n\nRegionsModule->RegionsService \n\n\n\n\n\nRelationalRegionPersistenceModule \n\nRelationalRegionPersistenceModule \n\nRelationalRegionPersistenceModule  -->\n\nRegionsModule->RelationalRegionPersistenceModule \n\n\n\n\n\nRegionsService\n\nRegionsService\n\nRegionsModule -->\n\nRegionsService->RegionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/regions/regions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RegionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RegionsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RelationalRegionPersistenceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegionsService\n                        \n                        \n                            RelationalRegionPersistenceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TenantsModule } from '../tenants/tenants.module';\nimport {\n  // common\n  Module,\n  forwardRef,\n} from '@nestjs/common';\nimport { RegionsService } from './regions.service';\nimport { RegionsController } from './regions.controller';\nimport { RelationalRegionPersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\n\n@Module({\n  imports: [\n    forwardRef(() => TenantsModule),\n\n    // import modules, etc.\n    RelationalRegionPersistenceModule,\n  ],\n  controllers: [RegionsController],\n  providers: [RegionsService],\n  exports: [RegionsService, RelationalRegionPersistenceModule],\n})\nexport class RegionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegionsService.html":{"url":"injectables/RegionsService.html","title":"injectable - RegionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/regions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAllWithPagination\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tenantService: TenantsService, regionRepository: RegionRepository)\n                    \n                \n                        \n                            \n                                Defined in src/regions/regions.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tenantService\n                                                  \n                                                        \n                                                                        TenantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionRepository\n                                                  \n                                                        \n                                                                        RegionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRegionDto: CreateRegionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/regions.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRegionDto\n                                            \n                                                            CreateRegionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \nfindAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/regions.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Region)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/regions.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/regions.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: Region)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/regions.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Region, updateRegionDto: UpdateRegionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/regions/regions.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Region\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRegionDto\n                                            \n                                                            UpdateRegionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TenantsService } from '../tenants/tenants.service';\nimport { Tenant } from '../tenants/domain/tenant';\n\nimport {\n  // common\n  Injectable,\n  HttpStatus,\n  UnprocessableEntityException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateRegionDto } from './dto/create-region.dto';\nimport { UpdateRegionDto } from './dto/update-region.dto';\nimport { RegionRepository } from './infrastructure/persistence/region.repository';\nimport { IPaginationOptions } from '../utils/types/pagination-options';\nimport { Region } from './domain/region';\n\n@Injectable()\nexport class RegionsService {\n  constructor(\n    @Inject(forwardRef(() => TenantsService))\n    private readonly tenantService: TenantsService,\n\n    // Dependencies here\n    private readonly regionRepository: RegionRepository,\n  ) {}\n\n  async create(createRegionDto: CreateRegionDto) {\n    // Do not remove comment below.\n    // \n\n    const tenantObject = await this.tenantService.findById(\n      createRegionDto.tenant.id,\n    );\n    if (!tenantObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          tenant: 'notExists',\n        },\n      });\n    }\n    const tenant = tenantObject;\n\n    return this.regionRepository.create({\n      // Do not remove comment below.\n      // \n      zipCodes: createRegionDto.zipCodes,\n\n      operatingHours: createRegionDto.operatingHours,\n\n      serviceTypes: createRegionDto.serviceTypes,\n\n      centroidLon: createRegionDto.centroidLon,\n\n      centroidLat: createRegionDto.centroidLat,\n\n      boundary: createRegionDto.boundary,\n\n      name: createRegionDto.name,\n\n      tenant,\n    });\n  }\n\n  findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }) {\n    return this.regionRepository.findAllWithPagination({\n      paginationOptions: {\n        page: paginationOptions.page,\n        limit: paginationOptions.limit,\n      },\n    });\n  }\n\n  findById(id: Region['id']) {\n    return this.regionRepository.findById(id);\n  }\n\n  findByIds(ids: Region['id'][]) {\n    return this.regionRepository.findByIds(ids);\n  }\n\n  async update(\n    id: Region['id'],\n\n    updateRegionDto: UpdateRegionDto,\n  ) {\n    // Do not remove comment below.\n    // \n\n    let tenant: Tenant | undefined = undefined;\n\n    if (updateRegionDto.tenant) {\n      const tenantObject = await this.tenantService.findById(\n        updateRegionDto.tenant.id,\n      );\n      if (!tenantObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            tenant: 'notExists',\n          },\n        });\n      }\n      tenant = tenantObject;\n    }\n\n    return this.regionRepository.update(id, {\n      // Do not remove comment below.\n      // \n      zipCodes: updateRegionDto.zipCodes,\n\n      operatingHours: updateRegionDto.operatingHours,\n\n      serviceTypes: updateRegionDto.serviceTypes,\n\n      centroidLon: updateRegionDto.centroidLon,\n\n      centroidLat: updateRegionDto.centroidLat,\n\n      boundary: updateRegionDto.boundary,\n\n      name: updateRegionDto.name,\n\n      tenant,\n    });\n  }\n\n  remove(id: Region['id']) {\n    return this.regionRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalAccountPersistenceModule.html":{"url":"modules/RelationalAccountPersistenceModule.html","title":"module - RelationalAccountPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalAccountPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalAccountPersistenceModule\n\n\n\ncluster_RelationalAccountPersistenceModule_exports\n\n\n\n\nAccountRepository \n\nAccountRepository \n\n\n\nRelationalAccountPersistenceModule\n\nRelationalAccountPersistenceModule\n\nAccountRepository  -->\n\nRelationalAccountPersistenceModule->AccountRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/accounts/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            AccountRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AccountRepository } from '../account.repository';\nimport { AccountRelationalRepository } from './repositories/account.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AccountEntity } from './entities/account.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([AccountEntity])],\n  providers: [\n    {\n      provide: AccountRepository,\n      useClass: AccountRelationalRepository,\n    },\n  ],\n  exports: [AccountRepository],\n})\nexport class RelationalAccountPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalFilePersistenceModule.html":{"url":"modules/RelationalFilePersistenceModule.html","title":"module - RelationalFilePersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalFilePersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalFilePersistenceModule\n\n\n\ncluster_RelationalFilePersistenceModule_exports\n\n\n\n\nFileRepository \n\nFileRepository \n\n\n\nRelationalFilePersistenceModule\n\nRelationalFilePersistenceModule\n\nFileRepository  -->\n\nRelationalFilePersistenceModule->FileRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            FileRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FileEntity } from './entities/file.entity';\nimport { FileRepository } from '../file.repository';\nimport { FileRelationalRepository } from './repositories/file.repository';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([FileEntity])],\n  providers: [\n    {\n      provide: FileRepository,\n      useClass: FileRelationalRepository,\n    },\n  ],\n  exports: [FileRepository],\n})\nexport class RelationalFilePersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalKycDetailsPersistenceModule.html":{"url":"modules/RelationalKycDetailsPersistenceModule.html","title":"module - RelationalKycDetailsPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalKycDetailsPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalKycDetailsPersistenceModule\n\n\n\ncluster_RelationalKycDetailsPersistenceModule_exports\n\n\n\n\nKycDetailsRepository \n\nKycDetailsRepository \n\n\n\nRelationalKycDetailsPersistenceModule\n\nRelationalKycDetailsPersistenceModule\n\nKycDetailsRepository  -->\n\nRelationalKycDetailsPersistenceModule->KycDetailsRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/kyc-details/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            KycDetailsRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { KycDetailsRepository } from '../kyc-details.repository';\nimport { KycDetailsRelationalRepository } from './repositories/kyc-details.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { KycDetailsEntity } from './entities/kyc-details.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([KycDetailsEntity])],\n  providers: [\n    {\n      provide: KycDetailsRepository,\n      useClass: KycDetailsRelationalRepository,\n    },\n  ],\n  exports: [KycDetailsRepository],\n})\nexport class RelationalKycDetailsPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalRegionPersistenceModule.html":{"url":"modules/RelationalRegionPersistenceModule.html","title":"module - RelationalRegionPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalRegionPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalRegionPersistenceModule\n\n\n\ncluster_RelationalRegionPersistenceModule_exports\n\n\n\n\nRegionRepository \n\nRegionRepository \n\n\n\nRelationalRegionPersistenceModule\n\nRelationalRegionPersistenceModule\n\nRegionRepository  -->\n\nRelationalRegionPersistenceModule->RegionRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/regions/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            RegionRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RegionRepository } from '../region.repository';\nimport { RegionRelationalRepository } from './repositories/region.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RegionEntity } from './entities/region.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([RegionEntity])],\n  providers: [\n    {\n      provide: RegionRepository,\n      useClass: RegionRelationalRepository,\n    },\n  ],\n  exports: [RegionRepository],\n})\nexport class RelationalRegionPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalResidencePersistenceModule.html":{"url":"modules/RelationalResidencePersistenceModule.html","title":"module - RelationalResidencePersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalResidencePersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalResidencePersistenceModule\n\n\n\ncluster_RelationalResidencePersistenceModule_exports\n\n\n\n\nResidenceRepository \n\nResidenceRepository \n\n\n\nRelationalResidencePersistenceModule\n\nRelationalResidencePersistenceModule\n\nResidenceRepository  -->\n\nRelationalResidencePersistenceModule->ResidenceRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/residences/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ResidenceRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResidenceRepository } from '../residence.repository';\nimport { ResidenceRelationalRepository } from './repositories/residence.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ResidenceEntity } from './entities/residence.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ResidenceEntity])],\n  providers: [\n    {\n      provide: ResidenceRepository,\n      useClass: ResidenceRelationalRepository,\n    },\n  ],\n  exports: [ResidenceRepository],\n})\nexport class RelationalResidencePersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalSessionPersistenceModule.html":{"url":"modules/RelationalSessionPersistenceModule.html","title":"module - RelationalSessionPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalSessionPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalSessionPersistenceModule\n\n\n\ncluster_RelationalSessionPersistenceModule_exports\n\n\n\n\nSessionRepository \n\nSessionRepository \n\n\n\nRelationalSessionPersistenceModule\n\nRelationalSessionPersistenceModule\n\nSessionRepository  -->\n\nRelationalSessionPersistenceModule->SessionRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/session/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            SessionRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SessionRepository } from '../session.repository';\nimport { SessionRelationalRepository } from './repositories/session.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SessionEntity } from './entities/session.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([SessionEntity])],\n  providers: [\n    {\n      provide: SessionRepository,\n      useClass: SessionRelationalRepository,\n    },\n  ],\n  exports: [SessionRepository],\n})\nexport class RelationalSessionPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalSettingsPersistenceModule.html":{"url":"modules/RelationalSettingsPersistenceModule.html","title":"module - RelationalSettingsPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalSettingsPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalSettingsPersistenceModule\n\n\n\ncluster_RelationalSettingsPersistenceModule_exports\n\n\n\n\nSettingsRepository \n\nSettingsRepository \n\n\n\nRelationalSettingsPersistenceModule\n\nRelationalSettingsPersistenceModule\n\nSettingsRepository  -->\n\nRelationalSettingsPersistenceModule->SettingsRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            SettingsRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SettingsRepository } from '../settings.repository';\nimport { SettingsRelationalRepository } from './repositories/settings.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SettingsEntity } from './entities/settings.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([SettingsEntity])],\n  providers: [\n    {\n      provide: SettingsRepository,\n      useClass: SettingsRelationalRepository,\n    },\n  ],\n  exports: [SettingsRepository],\n})\nexport class RelationalSettingsPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalTenantPersistenceModule.html":{"url":"modules/RelationalTenantPersistenceModule.html","title":"module - RelationalTenantPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalTenantPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalTenantPersistenceModule\n\n\n\ncluster_RelationalTenantPersistenceModule_exports\n\n\n\n\nTenantRepository \n\nTenantRepository \n\n\n\nRelationalTenantPersistenceModule\n\nRelationalTenantPersistenceModule\n\nTenantRepository  -->\n\nRelationalTenantPersistenceModule->TenantRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tenants/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            TenantRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TenantRepository } from '../tenant.repository';\nimport { TenantRelationalRepository } from './repositories/tenant.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TenantEntity } from './entities/tenant.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TenantEntity])],\n  providers: [\n    {\n      provide: TenantRepository,\n      useClass: TenantRelationalRepository,\n    },\n  ],\n  exports: [TenantRepository],\n})\nexport class RelationalTenantPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalTenantTypePersistenceModule.html":{"url":"modules/RelationalTenantTypePersistenceModule.html","title":"module - RelationalTenantTypePersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalTenantTypePersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalTenantTypePersistenceModule\n\n\n\ncluster_RelationalTenantTypePersistenceModule_exports\n\n\n\n\nTenantTypeRepository \n\nTenantTypeRepository \n\n\n\nRelationalTenantTypePersistenceModule\n\nRelationalTenantTypePersistenceModule\n\nTenantTypeRepository  -->\n\nRelationalTenantTypePersistenceModule->TenantTypeRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tenant-types/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            TenantTypeRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TenantTypeRepository } from '../tenant-type.repository';\nimport { TenantTypeRelationalRepository } from './repositories/tenant-type.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TenantTypeEntity } from './entities/tenant-type.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TenantTypeEntity])],\n  providers: [\n    {\n      provide: TenantTypeRepository,\n      useClass: TenantTypeRelationalRepository,\n    },\n  ],\n  exports: [TenantTypeRepository],\n})\nexport class RelationalTenantTypePersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelationalUserPersistenceModule.html":{"url":"modules/RelationalUserPersistenceModule.html","title":"module - RelationalUserPersistenceModule","body":"\n                   \n\n\n\n\n    Modules\n    RelationalUserPersistenceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelationalUserPersistenceModule\n\n\n\ncluster_RelationalUserPersistenceModule_exports\n\n\n\n\nUserRepository \n\nUserRepository \n\n\n\nRelationalUserPersistenceModule\n\nRelationalUserPersistenceModule\n\nUserRepository  -->\n\nRelationalUserPersistenceModule->UserRepository \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/infrastructure/persistence/relational/relational-persistence.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            UserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserRepository } from '../user.repository';\nimport { UsersRelationalRepository } from './repositories/user.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  providers: [\n    {\n      provide: UserRepository,\n      useClass: UsersRelationalRepository,\n    },\n  ],\n  exports: [UserRepository],\n})\nexport class RelationalUserPersistenceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Residence.html":{"url":"classes/Residence.html","title":"class - Residence","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Residence\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/domain/residence.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                charge\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    Optional\n                                occupants\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        charge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Number, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Boolean, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        occupants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Region\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Region, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tenant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tenant, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResidenceTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: ResidenceTypeEnum, enumName: 'ResidenceType', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/domain/residence.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../users/domain/user';\nimport { Region } from '../../regions/domain/region';\nimport { Tenant } from '../../tenants/domain/tenant';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ResidenceTypeEnum } from '../../utils/enum/residence-type.enum';\n\nexport class Residence {\n  @ApiProperty({\n    enum: ResidenceTypeEnum,\n    enumName: 'ResidenceType',\n    nullable: false,\n  })\n  type: ResidenceTypeEnum;\n\n  @ApiProperty({\n    type: () => [User],\n    nullable: true,\n  })\n  occupants?: User[] | null;\n\n  @ApiProperty({\n    type: () => Region,\n    nullable: false,\n  })\n  region: Region;\n\n  @ApiProperty({\n    type: () => Tenant,\n    nullable: false,\n  })\n  tenant: Tenant;\n\n  @ApiProperty({\n    type: () => Boolean,\n    nullable: false,\n  })\n  isActive: boolean;\n\n  @ApiProperty({\n    type: () => Number,\n    nullable: false,\n  })\n  charge: number;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: false,\n  })\n  name: string;\n\n  @ApiProperty({\n    type: String,\n  })\n  id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidenceDto.html":{"url":"classes/ResidenceDto.html","title":"class - ResidenceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidenceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/dto/residence.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/dto/residence.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class ResidenceDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ResidenceEntity.html":{"url":"entities/ResidenceEntity.html","title":"entity - ResidenceEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ResidenceEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/infrastructure/persistence/relational/entities/residence.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                charge\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                occupants\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        charge\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        occupants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {eager: true, nullable: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegionEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResidenceTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ResidenceTypeEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/residences/infrastructure/persistence/relational/entities/residence.entity.ts:66\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { UserEntity } from '../../../../../users/infrastructure/persistence/relational/entities/user.entity';\n\nimport { RegionEntity } from '../../../../../regions/infrastructure/persistence/relational/entities/region.entity';\n\nimport { TenantEntity } from '../../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\nimport {\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  Column,\n  ManyToOne,\n  JoinTable,\n  ManyToMany,\n} from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\nimport { ResidenceTypeEnum } from '../../../../../utils/enum/residence-type.enum';\n\n@Entity({\n  name: 'residence',\n})\nexport class ResidenceEntity extends EntityRelationalHelper {\n  @Column({\n    type: 'enum',\n    enum: ResidenceTypeEnum,\n    default: ResidenceTypeEnum.OTHER,\n  })\n  type: ResidenceTypeEnum;\n\n  @ManyToMany(() => UserEntity, { eager: true, nullable: true })\n  @JoinTable()\n  occupants?: UserEntity[] | null;\n\n  @ManyToOne(() => RegionEntity, { eager: true, nullable: false })\n  region: RegionEntity;\n\n  @ManyToOne(() => TenantEntity, { eager: true, nullable: false })\n  tenant: TenantEntity;\n\n  @Column({\n    nullable: false,\n    type: Boolean,\n  })\n  isActive: boolean;\n\n  @Column({\n    nullable: false,\n    type: Number,\n  })\n  charge: number;\n\n  @Column({\n    nullable: false,\n    type: String,\n  })\n  name: string;\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidenceMapper.html":{"url":"classes/ResidenceMapper.html","title":"class - ResidenceMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidenceMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/infrastructure/persistence/relational/mappers/residence.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: ResidenceEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/relational/mappers/residence.mapper.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            ResidenceEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Residence\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: Residence)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/relational/mappers/residence.mapper.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ResidenceEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Residence } from '../../../../domain/residence';\n\nimport { UserMapper } from '../../../../../users/infrastructure/persistence/relational/mappers/user.mapper';\n\nimport { RegionMapper } from '../../../../../regions/infrastructure/persistence/relational/mappers/region.mapper';\n\nimport { TenantMapper } from '../../../../../tenants/infrastructure/persistence/relational/mappers/tenant.mapper';\n\nimport { ResidenceEntity } from '../entities/residence.entity';\n\nexport class ResidenceMapper {\n  static toDomain(raw: ResidenceEntity): Residence {\n    const domainEntity = new Residence();\n    domainEntity.type = raw.type;\n\n    if (raw.occupants) {\n      domainEntity.occupants = raw.occupants.map((item) =>\n        UserMapper.toDomain(item),\n      );\n    } else if (raw.occupants === null) {\n      domainEntity.occupants = null;\n    }\n\n    if (raw.region) {\n      domainEntity.region = RegionMapper.toDomain(raw.region);\n    }\n\n    if (raw.tenant) {\n      domainEntity.tenant = TenantMapper.toDomain(raw.tenant);\n    }\n\n    domainEntity.isActive = raw.isActive;\n\n    domainEntity.charge = raw.charge;\n\n    domainEntity.name = raw.name;\n\n    domainEntity.id = raw.id;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: Residence): ResidenceEntity {\n    const persistenceEntity = new ResidenceEntity();\n    persistenceEntity.type = domainEntity.type;\n\n    if (domainEntity.occupants) {\n      persistenceEntity.occupants = domainEntity.occupants.map((item) =>\n        UserMapper.toPersistence(item),\n      );\n    } else if (domainEntity.occupants === null) {\n      persistenceEntity.occupants = null;\n    }\n\n    if (domainEntity.region) {\n      persistenceEntity.region = RegionMapper.toPersistence(\n        domainEntity.region,\n      );\n    }\n\n    if (domainEntity.tenant) {\n      persistenceEntity.tenant = TenantMapper.toPersistence(\n        domainEntity.tenant,\n      );\n    }\n\n    persistenceEntity.isActive = domainEntity.isActive;\n\n    persistenceEntity.charge = domainEntity.charge;\n\n    persistenceEntity.name = domainEntity.name;\n\n    if (domainEntity.id) {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResidenceRelationalRepository.html":{"url":"injectables/ResidenceRelationalRepository.html","title":"injectable - ResidenceRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResidenceRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(residenceRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        residenceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Residence)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Residence)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Residence)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Residence, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/relational/repositories/residence.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, In } from 'typeorm';\nimport { ResidenceEntity } from '../entities/residence.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { Residence } from '../../../../domain/residence';\nimport { ResidenceRepository } from '../../residence.repository';\nimport { ResidenceMapper } from '../mappers/residence.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class ResidenceRelationalRepository implements ResidenceRepository {\n  constructor(\n    @InjectRepository(ResidenceEntity)\n    private readonly residenceRepository: Repository,\n  ) {}\n\n  async create(data: Residence): Promise {\n    const persistenceModel = ResidenceMapper.toPersistence(data);\n    const newEntity = await this.residenceRepository.save(\n      this.residenceRepository.create(persistenceModel),\n    );\n    return ResidenceMapper.toDomain(newEntity);\n  }\n\n  async findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const entities = await this.residenceRepository.find({\n      skip: (paginationOptions.page - 1) * paginationOptions.limit,\n      take: paginationOptions.limit,\n    });\n\n    return entities.map((entity) => ResidenceMapper.toDomain(entity));\n  }\n\n  async findById(id: Residence['id']): Promise> {\n    const entity = await this.residenceRepository.findOne({\n      where: { id },\n    });\n\n    return entity ? ResidenceMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: Residence['id'][]): Promise {\n    const entities = await this.residenceRepository.find({\n      where: { id: In(ids) },\n    });\n\n    return entities.map((entity) => ResidenceMapper.toDomain(entity));\n  }\n\n  async update(\n    id: Residence['id'],\n    payload: Partial,\n  ): Promise {\n    const entity = await this.residenceRepository.findOne({\n      where: { id },\n    });\n\n    if (!entity) {\n      throw new Error('Record not found');\n    }\n\n    const updatedEntity = await this.residenceRepository.save(\n      this.residenceRepository.create(\n        ResidenceMapper.toPersistence({\n          ...ResidenceMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return ResidenceMapper.toDomain(updatedEntity);\n  }\n\n  async remove(id: Residence['id']): Promise {\n    await this.residenceRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResidenceRepository.html":{"url":"classes/ResidenceRepository.html","title":"class - ResidenceRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResidenceRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/infrastructure/persistence/residence.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findAllWithPagination\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/residence.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/residence.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Residence)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/residence.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/residence.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Residence)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/residence.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Residence, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/infrastructure/persistence/residence.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from '../../../utils/types/deep-partial.type';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { IPaginationOptions } from '../../../utils/types/pagination-options';\nimport { Residence } from '../../domain/residence';\n\nexport abstract class ResidenceRepository {\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise;\n\n  abstract findById(id: Residence['id']): Promise>;\n\n  abstract findByIds(ids: Residence['id'][]): Promise;\n\n  abstract update(\n    id: Residence['id'],\n    payload: DeepPartial,\n  ): Promise;\n\n  abstract remove(id: Residence['id']): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResidenceSeedModule.html":{"url":"modules/ResidenceSeedModule.html","title":"module - ResidenceSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    ResidenceSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResidenceSeedModule\n\n\n\ncluster_ResidenceSeedModule_exports\n\n\n\ncluster_ResidenceSeedModule_providers\n\n\n\n\nResidenceSeedService \n\nResidenceSeedService \n\n\n\nResidenceSeedModule\n\nResidenceSeedModule\n\nResidenceSeedService  -->\n\nResidenceSeedModule->ResidenceSeedService \n\n\n\n\n\nResidenceSeedService\n\nResidenceSeedService\n\nResidenceSeedModule -->\n\nResidenceSeedService->ResidenceSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/residence/residence-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResidenceSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResidenceSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ResidenceEntity } from '../../../../residences/infrastructure/persistence/relational/entities/residence.entity';\nimport { ResidenceSeedService } from './residence-seed.service';\nimport { RegionEntity } from '../../../../regions/infrastructure/persistence/relational/entities/region.entity';\nimport { RoleEntity } from '../../../../roles/infrastructure/persistence/relational/entities/role.entity';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { UserEntity } from '../../../../users/infrastructure/persistence/relational/entities/user.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      ResidenceEntity,\n      TenantEntity,\n      RegionEntity,\n      UserEntity,\n      RoleEntity,\n    ]),\n  ],\n  providers: [ResidenceSeedService],\n  exports: [ResidenceSeedService],\n})\nexport class ResidenceSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResidenceSeedService.html":{"url":"injectables/ResidenceSeedService.html","title":"injectable - ResidenceSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResidenceSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/residence/residence-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(residenceRepository: Repository, tenantRepository: Repository, regionRepository: Repository, userRepository: Repository, roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/residence/residence-seed.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        residenceRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/residence/residence-seed.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ResidenceSeedService.name)\n                    \n                \n                    \n                        \n                                Defined in src/database/seeds/relational/residence/residence-seed.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { ResidenceEntity } from '../../../../residences/infrastructure/persistence/relational/entities/residence.entity';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { RegionEntity } from '../../../../regions/infrastructure/persistence/relational/entities/region.entity';\nimport { UserEntity } from '../../../../users/infrastructure/persistence/relational/entities/user.entity';\nimport { RoleEntity } from '../../../../roles/infrastructure/persistence/relational/entities/role.entity';\nimport { ResidenceTypeEnum } from '../../../../utils/enum/residence-type.enum';\n\n@Injectable()\nexport class ResidenceSeedService {\n  private readonly logger = new Logger(ResidenceSeedService.name);\n\n  constructor(\n    @InjectRepository(ResidenceEntity)\n    private readonly residenceRepository: Repository,\n    @InjectRepository(TenantEntity)\n    private readonly tenantRepository: Repository,\n    @InjectRepository(RegionEntity)\n    private readonly regionRepository: Repository,\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(RoleEntity)\n    private readonly roleRepository: Repository,\n  ) {}\n\n  async run() {\n    const tenants = await this.tenantRepository.find();\n    if (!tenants.length) {\n      this.logger.warn('No tenants found. Skipping residence seeding.');\n      return;\n    }\n\n    for (const tenant of tenants) {\n      const regions = await this.regionRepository.find({\n        where: { tenant: { id: tenant.id } },\n      });\n\n      if (!regions.length) {\n        this.logger.warn(`No regions found for tenant: ${tenant.name}`);\n        continue;\n      }\n\n      const customerRole = await this.roleRepository.findOne({\n        where: {\n          name: 'Customer',\n          tenant: { id: tenant.id },\n        },\n      });\n\n      if (!customerRole) {\n        this.logger.warn(`No 'Customer' role found for tenant: ${tenant.name}`);\n        continue;\n      }\n\n      const customers = await this.userRepository.find({\n        where: {\n          tenant: { id: tenant.id },\n          role: { id: customerRole.id },\n        },\n        relations: ['role'], // Required if lazy loading or role not eager\n      });\n\n      if (!customers.length) {\n        this.logger.warn(`No customers found for tenant: ${tenant.name}`);\n      }\n\n      for (const region of regions) {\n        const existingResidences = await this.residenceRepository.find({\n          where: {\n            tenant: { id: tenant.id },\n            region: { id: region.id },\n          },\n        });\n\n        if (existingResidences.length === 0) {\n          const residence = this.residenceRepository.create({\n            name: `${region.name} Main Residence`,\n            type: ResidenceTypeEnum.OTHER,\n            charge: 1000,\n            isActive: true,\n            region,\n            tenant,\n            occupants: customers,\n          });\n\n          await this.residenceRepository.save(residence);\n          this.logger.log(\n            `Seeded residence '${residence.name}' for tenant '${tenant.name}' in region '${region.name}' with ${customers.length} occupants.`,\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResidencesController.html":{"url":"controllers/ResidencesController.html","title":"controller - ResidencesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResidencesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/residences.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResidenceDto: CreateResidenceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Residence})\n                \n            \n\n                    \n                        \n                            Defined in src/residences/residences.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResidenceDto\n                                            \n                                                            CreateResidenceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: FindAllResidencesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/residences/residences.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            FindAllResidencesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Residence})\n                \n            \n\n                    \n                        \n                            Defined in src/residences/residences.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/residences/residences.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResidenceDto: UpdateResidenceDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Residence})\n                \n            \n\n                    \n                        \n                            Defined in src/residences/residences.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResidenceDto\n                                            \n                                                            UpdateResidenceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { ResidencesService } from './residences.service';\nimport { CreateResidenceDto } from './dto/create-residence.dto';\nimport { UpdateResidenceDto } from './dto/update-residence.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Residence } from './domain/residence';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  InfinityPaginationResponse,\n  InfinityPaginationResponseDto,\n} from '../utils/dto/infinity-pagination-response.dto';\nimport { infinityPagination } from '../utils/infinity-pagination';\nimport { FindAllResidencesDto } from './dto/find-all-residences.dto';\n\n@ApiTags('Residences')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@Controller({\n  path: 'residences',\n  version: '1',\n})\nexport class ResidencesController {\n  constructor(private readonly residencesService: ResidencesService) {}\n\n  @Post()\n  @ApiCreatedResponse({\n    type: Residence,\n  })\n  create(@Body() createResidenceDto: CreateResidenceDto) {\n    return this.residencesService.create(createResidenceDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    type: InfinityPaginationResponse(Residence),\n  })\n  async findAll(\n    @Query() query: FindAllResidencesDto,\n  ): Promise> {\n    const page = query?.page ?? 1;\n    let limit = query?.limit ?? 10;\n    if (limit > 50) {\n      limit = 50;\n    }\n\n    return infinityPagination(\n      await this.residencesService.findAllWithPagination({\n        paginationOptions: {\n          page,\n          limit,\n        },\n      }),\n      { page, limit },\n    );\n  }\n\n  @Get(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Residence,\n  })\n  findById(@Param('id') id: string) {\n    return this.residencesService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Residence,\n  })\n  update(\n    @Param('id') id: string,\n    @Body() updateResidenceDto: UpdateResidenceDto,\n  ) {\n    return this.residencesService.update(id, updateResidenceDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  remove(@Param('id') id: string) {\n    return this.residencesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResidencesModule.html":{"url":"modules/ResidencesModule.html","title":"module - ResidencesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResidencesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResidencesModule\n\n\n\ncluster_ResidencesModule_providers\n\n\n\ncluster_ResidencesModule_exports\n\n\n\ncluster_ResidencesModule_imports\n\n\n\n\nRegionsModule\n\nRegionsModule\n\n\n\nResidencesModule\n\nResidencesModule\n\nResidencesModule -->\n\nRegionsModule->ResidencesModule\n\n\n\n\n\nRelationalResidencePersistenceModule\n\nRelationalResidencePersistenceModule\n\nResidencesModule -->\n\nRelationalResidencePersistenceModule->ResidencesModule\n\n\n\n\n\nTenantsModule\n\nTenantsModule\n\nResidencesModule -->\n\nTenantsModule->ResidencesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nResidencesModule -->\n\nUsersModule->ResidencesModule\n\n\n\n\n\nRelationalResidencePersistenceModule \n\nRelationalResidencePersistenceModule \n\nRelationalResidencePersistenceModule  -->\n\nResidencesModule->RelationalResidencePersistenceModule \n\n\n\n\n\nResidencesService \n\nResidencesService \n\nResidencesService  -->\n\nResidencesModule->ResidencesService \n\n\n\n\n\nResidencesService\n\nResidencesService\n\nResidencesModule -->\n\nResidencesService->ResidencesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/residences/residences.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResidencesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResidencesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegionsModule\n                        \n                        \n                            RelationalResidencePersistenceModule\n                        \n                        \n                            TenantsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RelationalResidencePersistenceModule\n                        \n                        \n                            ResidencesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UsersModule } from '../users/users.module';\nimport { RegionsModule } from '../regions/regions.module';\nimport { TenantsModule } from '../tenants/tenants.module';\nimport {\n  // common\n  Module,\n} from '@nestjs/common';\nimport { ResidencesService } from './residences.service';\nimport { ResidencesController } from './residences.controller';\nimport { RelationalResidencePersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\n\n@Module({\n  imports: [\n    UsersModule,\n\n    RegionsModule,\n\n    TenantsModule,\n\n    // import modules, etc.\n    RelationalResidencePersistenceModule,\n  ],\n  controllers: [ResidencesController],\n  providers: [ResidencesService],\n  exports: [ResidencesService, RelationalResidencePersistenceModule],\n})\nexport class ResidencesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResidencesService.html":{"url":"injectables/ResidencesService.html","title":"injectable - ResidencesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResidencesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/residences.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAllWithPagination\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, regionService: RegionsService, tenantService: TenantsService, residenceRepository: ResidenceRepository)\n                    \n                \n                        \n                            \n                                Defined in src/residences/residences.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionService\n                                                  \n                                                        \n                                                                        RegionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantService\n                                                  \n                                                        \n                                                                        TenantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        residenceRepository\n                                                  \n                                                        \n                                                                        ResidenceRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResidenceDto: CreateResidenceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/residences.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResidenceDto\n                                            \n                                                            CreateResidenceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \nfindAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/residences.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Residence)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/residences.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/residences.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: Residence)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/residences.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Residence, updateResidenceDto: UpdateResidenceDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/residences/residences.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Residence\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResidenceDto\n                                            \n                                                            UpdateResidenceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UsersService } from '../users/users.service';\nimport { User } from '../users/domain/user';\n\nimport { RegionsService } from '../regions/regions.service';\nimport { Region } from '../regions/domain/region';\n\nimport { TenantsService } from '../tenants/tenants.service';\nimport { Tenant } from '../tenants/domain/tenant';\n\nimport {\n  // common\n  Injectable,\n  HttpStatus,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { CreateResidenceDto } from './dto/create-residence.dto';\nimport { UpdateResidenceDto } from './dto/update-residence.dto';\nimport { ResidenceRepository } from './infrastructure/persistence/residence.repository';\nimport { IPaginationOptions } from '../utils/types/pagination-options';\nimport { Residence } from './domain/residence';\n\n@Injectable()\nexport class ResidencesService {\n  constructor(\n    private readonly userService: UsersService,\n\n    private readonly regionService: RegionsService,\n\n    private readonly tenantService: TenantsService,\n\n    // Dependencies here\n    private readonly residenceRepository: ResidenceRepository,\n  ) {}\n\n  async create(createResidenceDto: CreateResidenceDto) {\n    // Do not remove comment below.\n    // \n\n    let occupants: User[] | null | undefined = undefined;\n\n    if (createResidenceDto.occupants) {\n      const occupantsObjects = await this.userService.findByIds(\n        createResidenceDto.occupants.map((entity) => entity.id),\n      );\n      if (occupantsObjects.length !== createResidenceDto.occupants.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            occupants: 'notExists',\n          },\n        });\n      }\n      occupants = occupantsObjects;\n    } else if (createResidenceDto.occupants === null) {\n      occupants = null;\n    }\n\n    const regionObject = await this.regionService.findById(\n      createResidenceDto.region.id,\n    );\n    if (!regionObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          region: 'notExists',\n        },\n      });\n    }\n    const region = regionObject;\n\n    const tenantObject = await this.tenantService.findById(\n      createResidenceDto.tenant.id,\n    );\n    if (!tenantObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          tenant: 'notExists',\n        },\n      });\n    }\n    const tenant = tenantObject;\n\n    return this.residenceRepository.create({\n      // Do not remove comment below.\n      // \n      type: createResidenceDto.type,\n\n      occupants,\n\n      region,\n\n      tenant,\n\n      isActive: createResidenceDto.isActive,\n\n      charge: createResidenceDto.charge,\n\n      name: createResidenceDto.name,\n    });\n  }\n\n  findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }) {\n    return this.residenceRepository.findAllWithPagination({\n      paginationOptions: {\n        page: paginationOptions.page,\n        limit: paginationOptions.limit,\n      },\n    });\n  }\n\n  findById(id: Residence['id']) {\n    return this.residenceRepository.findById(id);\n  }\n\n  findByIds(ids: Residence['id'][]) {\n    return this.residenceRepository.findByIds(ids);\n  }\n\n  async update(\n    id: Residence['id'],\n\n    updateResidenceDto: UpdateResidenceDto,\n  ) {\n    // Do not remove comment below.\n    // \n\n    let occupants: User[] | null | undefined = undefined;\n\n    if (updateResidenceDto.occupants) {\n      const occupantsObjects = await this.userService.findByIds(\n        updateResidenceDto.occupants.map((entity) => entity.id),\n      );\n      if (occupantsObjects.length !== updateResidenceDto.occupants.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            occupants: 'notExists',\n          },\n        });\n      }\n      occupants = occupantsObjects;\n    } else if (updateResidenceDto.occupants === null) {\n      occupants = null;\n    }\n\n    let region: Region | undefined = undefined;\n\n    if (updateResidenceDto.region) {\n      const regionObject = await this.regionService.findById(\n        updateResidenceDto.region.id,\n      );\n      if (!regionObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            region: 'notExists',\n          },\n        });\n      }\n      region = regionObject;\n    }\n\n    let tenant: Tenant | undefined = undefined;\n\n    if (updateResidenceDto.tenant) {\n      const tenantObject = await this.tenantService.findById(\n        updateResidenceDto.tenant.id,\n      );\n      if (!tenantObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            tenant: 'notExists',\n          },\n        });\n      }\n      tenant = tenantObject;\n    }\n\n    return this.residenceRepository.update(id, {\n      // Do not remove comment below.\n      // \n      type: updateResidenceDto.type,\n\n      occupants,\n\n      region,\n\n      tenant,\n\n      isActive: updateResidenceDto.isActive,\n\n      charge: updateResidenceDto.charge,\n\n      name: updateResidenceDto.name,\n    });\n  }\n\n  remove(id: Residence['id']) {\n    return this.residenceRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResolvePromisesInterceptor.html":{"url":"injectables/ResolvePromisesInterceptor.html","title":"injectable - ResolvePromisesInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResolvePromisesInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/serializer.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/serializer.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport deepResolvePromises from './deep-resolver';\n\n@Injectable()\nexport class ResolvePromisesInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(map((data) => deepResolvePromises(data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/domain/role.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    Optional\n                                tenant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Allow()@ApiProperty({type: idType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/domain/role.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Allow()@ApiProperty({type: String, example: 'admin'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/domain/role.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tenant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tenant, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/domain/role.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Tenant } from '../../tenants/domain/tenant';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Allow } from 'class-validator';\nimport databaseConfig from '../../database/config/database.config';\nimport { DatabaseConfig } from '../../database/config/database-config.type';\n\n// \nconst idType = (databaseConfig() as DatabaseConfig).isDocumentDatabase\n  ? String\n  : Number;\n// \n\nexport class Role {\n  @ApiProperty({\n    type: () => Tenant,\n    nullable: true,\n  })\n  tenant?: Tenant;\n\n  @Allow()\n  @ApiProperty({\n    type: idType,\n  })\n  id: number | string;\n\n  @Allow()\n  @ApiProperty({\n    type: String,\n    example: 'admin',\n  })\n  name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleDto.html":{"url":"classes/RoleDto.html","title":"class - RoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber } from 'class-validator';\n\nexport class RoleDto {\n  @ApiProperty()\n  @IsNumber()\n  id: number | string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RoleEntity.html":{"url":"entities/RoleEntity.html","title":"entity - RoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/infrastructure/persistence/relational/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                tenant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/infrastructure/persistence/relational/entities/role.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/infrastructure/persistence/relational/entities/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, parentEntity => parentEntity.roles, {eager: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/infrastructure/persistence/relational/entities/role.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { TenantEntity } from '../../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\nimport { Column, Entity, ManyToOne, PrimaryColumn } from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\n\n@Entity({\n  name: 'role',\n})\nexport class RoleEntity extends EntityRelationalHelper {\n  @PrimaryColumn()\n  id: number;\n  @ManyToOne(() => TenantEntity, (parentEntity) => parentEntity.roles, {\n    eager: false,\n    nullable: false,\n  })\n  tenant: TenantEntity;\n\n  @Column()\n  name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleSchema.html":{"url":"classes/RoleSchema.html","title":"class - RoleSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/infrastructure/persistence/document/entities/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/roles/infrastructure/persistence/document/entities/role.schema.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/roles/infrastructure/persistence/document/entities/role.schema.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RoleSchema {\n  _id: string;\n\n  name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleSeedModule.html":{"url":"modules/RoleSeedModule.html","title":"module - RoleSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleSeedModule\n\n\n\ncluster_RoleSeedModule_providers\n\n\n\ncluster_RoleSeedModule_exports\n\n\n\n\nRoleSeedService \n\nRoleSeedService \n\n\n\nRoleSeedModule\n\nRoleSeedModule\n\nRoleSeedService  -->\n\nRoleSeedModule->RoleSeedService \n\n\n\n\n\nRoleSeedService\n\nRoleSeedService\n\nRoleSeedModule -->\n\nRoleSeedService->RoleSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/role/role-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { RoleSeedService } from './role-seed.service';\nimport { RoleEntity } from '../../../../roles/infrastructure/persistence/relational/entities/role.entity';\nimport { TenantEntity } from 'src/tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([RoleEntity, TenantEntity])],\n  providers: [RoleSeedService],\n  exports: [RoleSeedService],\n})\nexport class RoleSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleSeedService.html":{"url":"injectables/RoleSeedService.html","title":"injectable - RoleSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/role/role-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Repository, tenantRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/role/role-seed.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/role/role-seed.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { RoleEntity } from '../../../../roles/infrastructure/persistence/relational/entities/role.entity';\nimport { RoleEnum } from '../../../../roles/roles.enum';\nimport { TenantEntity } from 'src/tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\n@Injectable()\nexport class RoleSeedService {\n  constructor(\n    @InjectRepository(RoleEntity)\n    private readonly roleRepository: Repository,\n    @InjectRepository(TenantEntity)\n    private readonly tenantRepository: Repository,\n  ) {}\n\n  async run() {\n    const rolesToSeed = [\n      { code: RoleEnum.platform_owner, name: 'Platform Owner' },\n      { code: RoleEnum.admin, name: 'Admin' },\n      { code: RoleEnum.agent, name: 'Agent' },\n      { code: RoleEnum.customer, name: 'Customer' },\n      { code: RoleEnum.manager, name: 'Manager' },\n      { code: RoleEnum.finance, name: 'Finance' },\n      { code: RoleEnum.guest, name: 'Guest' },\n      { code: RoleEnum.user, name: 'User' },\n    ];\n\n    const tenants = await this.tenantRepository.find();\n\n    for (const tenant of tenants) {\n      for (const roleDef of rolesToSeed) {\n        const existingRole = await this.roleRepository.findOne({\n          where: {\n            id: roleDef.code,\n            tenant: { id: tenant.id },\n          },\n        });\n\n        if (!existingRole) {\n          await this.roleRepository.save(\n            this.roleRepository.create({\n              id: roleDef.code,\n              name: roleDef.name,\n              tenant,\n            }),\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/roles/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.guard.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.getAllAndOverride(\n      'roles',\n      [context.getClass(), context.getHandler()],\n    );\n    if (!roles.length) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n\n    return roles.map(String).includes(String(request.user?.role?.id));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeedModule.html":{"url":"modules/SeedModule.html","title":"module - SeedModule","body":"\n                   \n\n\n\n\n    Modules\n    SeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeedModule\n\n\n\ncluster_SeedModule_imports\n\n\n\n\nUserSeedModule\n\nUserSeedModule\n\n\n\nSeedModule\n\nSeedModule\n\nSeedModule -->\n\nUserSeedModule->SeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/document/seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UserSeedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { UserSeedModule } from './user/user-seed.module';\nimport appConfig from '../../../config/app.config';\nimport databaseConfig from '../../config/database.config';\nimport { MongooseConfigService } from '../../mongoose-config.service';\n\n@Module({\n  imports: [\n    UserSeedModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [databaseConfig, appConfig],\n      envFilePath: ['.env'],\n    }),\n    MongooseModule.forRootAsync({\n      useClass: MongooseConfigService,\n    }),\n  ],\n})\nexport class SeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Session.html":{"url":"classes/Session.html","title":"class - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/domain/session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                hash\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/session/domain/session.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/session/domain/session.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/session/domain/session.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                    \n                        \n                                Defined in src/session/domain/session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/session/domain/session.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/session/domain/session.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../users/domain/user';\n\nexport class Session {\n  id: number | string;\n  user: User;\n  hash: string;\n  createdAt: Date;\n  updatedAt: Date;\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionDocumentRepository.html":{"url":"injectables/SessionDocumentRepository.html","title":"injectable - SessionDocumentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionDocumentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/infrastructure/persistence/document/repositories/session.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                deleteByUserId\n                            \n                            \n                                    Async\n                                deleteByUserIdWithExclude\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/session/infrastructure/persistence/document/repositories/session.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/document/repositories/session.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(id: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/document/repositories/session.repository.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteByUserId(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/document/repositories/session.repository.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteByUserIdWithExclude\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteByUserIdWithExclude(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/document/repositories/session.repository.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/document/repositories/session.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Session, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/document/repositories/session.repository.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { SessionRepository } from '../../session.repository';\nimport { Session } from '../../../../domain/session';\nimport { SessionSchemaClass } from '../entities/session.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SessionMapper } from '../mappers/session.mapper';\nimport { User } from '../../../../../users/domain/user';\n\n@Injectable()\nexport class SessionDocumentRepository implements SessionRepository {\n  constructor(\n    @InjectModel(SessionSchemaClass.name)\n    private sessionModel: Model,\n  ) {}\n\n  async findById(id: Session['id']): Promise> {\n    const sessionObject = await this.sessionModel.findById(id);\n    return sessionObject ? SessionMapper.toDomain(sessionObject) : null;\n  }\n\n  async create(data: Session): Promise {\n    const persistenceModel = SessionMapper.toPersistence(data);\n    const createdSession = new this.sessionModel(persistenceModel);\n    const sessionObject = await createdSession.save();\n    return SessionMapper.toDomain(sessionObject);\n  }\n\n  async update(\n    id: Session['id'],\n    payload: Partial,\n  ): Promise {\n    const clonedPayload = { ...payload };\n    delete clonedPayload.id;\n    delete clonedPayload.createdAt;\n    delete clonedPayload.updatedAt;\n    delete clonedPayload.deletedAt;\n\n    const filter = { _id: id.toString() };\n    const session = await this.sessionModel.findOne(filter);\n\n    if (!session) {\n      return null;\n    }\n\n    const sessionObject = await this.sessionModel.findOneAndUpdate(\n      filter,\n      SessionMapper.toPersistence({\n        ...SessionMapper.toDomain(session),\n        ...clonedPayload,\n      }),\n      { new: true },\n    );\n\n    return sessionObject ? SessionMapper.toDomain(sessionObject) : null;\n  }\n\n  async deleteById(id: Session['id']): Promise {\n    await this.sessionModel.deleteOne({ _id: id.toString() });\n  }\n\n  async deleteByUserId({ userId }: { userId: User['id'] }): Promise {\n    await this.sessionModel.deleteMany({ user: userId.toString() });\n  }\n\n  async deleteByUserIdWithExclude({\n    userId,\n    excludeSessionId,\n  }: {\n    userId: User['id'];\n    excludeSessionId: Session['id'];\n  }): Promise {\n    const transformedCriteria = {\n      user: userId.toString(),\n      _id: { $not: { $eq: excludeSessionId.toString() } },\n    };\n    await this.sessionModel.deleteMany(transformedCriteria);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SessionEntity.html":{"url":"entities/SessionEntity.html","title":"entity - SessionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SessionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/infrastructure/persistence/relational/entities/session.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/relational/entities/session.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/relational/entities/session.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/relational/entities/session.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/relational/entities/session.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/relational/entities/session.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/relational/entities/session.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  DeleteDateColumn,\n  Column,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { UserEntity } from '../../../../../users/infrastructure/persistence/relational/entities/user.entity';\n\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\n\n@Entity({\n  name: 'session',\n})\nexport class SessionEntity extends EntityRelationalHelper {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(() => UserEntity, {\n    eager: true,\n  })\n  @Index()\n  user: UserEntity;\n\n  @Column()\n  hash: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionMapper.html":{"url":"classes/SessionMapper.html","title":"class - SessionMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/infrastructure/persistence/document/mappers/session.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: SessionSchemaClass)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/document/mappers/session.mapper.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            SessionSchemaClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Session\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/document/mappers/session.mapper.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SessionSchemaClass\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserSchemaClass } from '../../../../../users/infrastructure/persistence/document/entities/user.schema';\nimport { UserMapper } from '../../../../../users/infrastructure/persistence/document/mappers/user.mapper';\nimport { Session } from '../../../../domain/session';\nimport { SessionSchemaClass } from '../entities/session.schema';\n\nexport class SessionMapper {\n  static toDomain(raw: SessionSchemaClass): Session {\n    const domainEntity = new Session();\n    domainEntity.id = raw._id.toString();\n\n    if (raw.user) {\n      domainEntity.user = UserMapper.toDomain(raw.user);\n    }\n\n    domainEntity.hash = raw.hash;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n    domainEntity.deletedAt = raw.deletedAt;\n    return domainEntity;\n  }\n  static toPersistence(domainEntity: Session): SessionSchemaClass {\n    const persistenceSchema = new UserSchemaClass();\n    persistenceSchema._id = domainEntity.user.id.toString();\n    const sessionEntity = new SessionSchemaClass();\n    if (domainEntity.id && typeof domainEntity.id === 'string') {\n      sessionEntity._id = domainEntity.id;\n    }\n    sessionEntity.user = persistenceSchema;\n    sessionEntity.hash = domainEntity.hash;\n    sessionEntity.createdAt = domainEntity.createdAt;\n    sessionEntity.updatedAt = domainEntity.updatedAt;\n    sessionEntity.deletedAt = domainEntity.deletedAt;\n    return sessionEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionMapper-1.html":{"url":"classes/SessionMapper-1.html","title":"class - SessionMapper-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/infrastructure/persistence/relational/mappers/session.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: SessionEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/relational/mappers/session.mapper.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            SessionEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Session\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/relational/mappers/session.mapper.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SessionEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '../../../../../users/infrastructure/persistence/relational/entities/user.entity';\nimport { UserMapper } from '../../../../../users/infrastructure/persistence/relational/mappers/user.mapper';\nimport { Session } from '../../../../domain/session';\nimport { SessionEntity } from '../entities/session.entity';\n\nexport class SessionMapper {\n  static toDomain(raw: SessionEntity): Session {\n    const domainEntity = new Session();\n    domainEntity.id = raw.id;\n    if (raw.user) {\n      domainEntity.user = UserMapper.toDomain(raw.user);\n    }\n    domainEntity.hash = raw.hash;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n    domainEntity.deletedAt = raw.deletedAt;\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: Session): SessionEntity {\n    const user = new UserEntity();\n    user.id = Number(domainEntity.user.id);\n\n    const persistenceEntity = new SessionEntity();\n    if (domainEntity.id && typeof domainEntity.id === 'number') {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.hash = domainEntity.hash;\n    persistenceEntity.user = user;\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n    persistenceEntity.deletedAt = domainEntity.deletedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionModule.html":{"url":"modules/SessionModule.html","title":"module - SessionModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_exports\n\n\n\ncluster_SessionModule_providers\n\n\n\n\nSessionService \n\nSessionService \n\n\n\nSessionModule\n\nSessionModule\n\nSessionService  -->\n\nSessionModule->SessionService \n\n\n\n\n\nSessionService\n\nSessionService\n\nSessionModule -->\n\nSessionService->SessionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/session/session.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SessionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SessionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  // common\n  Module,\n} from '@nestjs/common';\n\nimport { DocumentSessionPersistenceModule } from './infrastructure/persistence/document/document-persistence.module';\nimport { RelationalSessionPersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\nimport { SessionService } from './session.service';\nimport { DatabaseConfig } from '../database/config/database-config.type';\nimport databaseConfig from '../database/config/database.config';\n\n// \nconst infrastructurePersistenceModule = (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentSessionPersistenceModule\n  : RelationalSessionPersistenceModule;\n// \n\n@Module({\n  imports: [infrastructurePersistenceModule],\n  providers: [SessionService],\n  exports: [SessionService, infrastructurePersistenceModule],\n})\nexport class SessionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionRelationalRepository.html":{"url":"injectables/SessionRelationalRepository.html","title":"injectable - SessionRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/infrastructure/persistence/relational/repositories/session.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                deleteByUserId\n                            \n                            \n                                    Async\n                                deleteByUserIdWithExclude\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/session/infrastructure/persistence/relational/repositories/session.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/relational/repositories/session.repository.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(id: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/relational/repositories/session.repository.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteByUserId(conditions: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/relational/repositories/session.repository.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                conditions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteByUserIdWithExclude\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteByUserIdWithExclude(conditions: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/relational/repositories/session.repository.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                conditions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/relational/repositories/session.repository.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Session, payload: Partial>)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/relational/repositories/session.repository.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Not, Repository } from 'typeorm';\nimport { SessionEntity } from '../entities/session.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\n\nimport { SessionRepository } from '../../session.repository';\nimport { Session } from '../../../../domain/session';\n\nimport { SessionMapper } from '../mappers/session.mapper';\nimport { User } from '../../../../../users/domain/user';\n\n@Injectable()\nexport class SessionRelationalRepository implements SessionRepository {\n  constructor(\n    @InjectRepository(SessionEntity)\n    private readonly sessionRepository: Repository,\n  ) {}\n\n  async findById(id: Session['id']): Promise> {\n    const entity = await this.sessionRepository.findOne({\n      where: {\n        id: Number(id),\n      },\n    });\n\n    return entity ? SessionMapper.toDomain(entity) : null;\n  }\n\n  async create(data: Session): Promise {\n    const persistenceModel = SessionMapper.toPersistence(data);\n    return this.sessionRepository.save(\n      this.sessionRepository.create(persistenceModel),\n    );\n  }\n\n  async update(\n    id: Session['id'],\n    payload: Partial\n    >,\n  ): Promise {\n    const entity = await this.sessionRepository.findOne({\n      where: { id: Number(id) },\n    });\n\n    if (!entity) {\n      throw new Error('Session not found');\n    }\n\n    const updatedEntity = await this.sessionRepository.save(\n      this.sessionRepository.create(\n        SessionMapper.toPersistence({\n          ...SessionMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return SessionMapper.toDomain(updatedEntity);\n  }\n\n  async deleteById(id: Session['id']): Promise {\n    await this.sessionRepository.softDelete({\n      id: Number(id),\n    });\n  }\n\n  async deleteByUserId(conditions: { userId: User['id'] }): Promise {\n    await this.sessionRepository.softDelete({\n      user: {\n        id: Number(conditions.userId),\n      },\n    });\n  }\n\n  async deleteByUserIdWithExclude(conditions: {\n    userId: User['id'];\n    excludeSessionId: Session['id'];\n  }): Promise {\n    await this.sessionRepository.softDelete({\n      user: {\n        id: Number(conditions.userId),\n      },\n      id: Not(Number(conditions.excludeSessionId)),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionRepository.html":{"url":"classes/SessionRepository.html","title":"class - SessionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/infrastructure/persistence/session.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                deleteById\n                            \n                            \n                                    Abstract\n                                deleteByUserId\n                            \n                            \n                                    Abstract\n                                deleteByUserIdWithExclude\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/session.repository.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(id: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/session.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteByUserId(conditions: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/session.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                conditions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        deleteByUserIdWithExclude\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteByUserIdWithExclude(conditions: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/session.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                conditions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/session.repository.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Session, payload: Partial>)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/infrastructure/persistence/session.repository.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../users/domain/user';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { Session } from '../../domain/session';\n\nexport abstract class SessionRepository {\n  abstract findById(id: Session['id']): Promise>;\n\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract update(\n    id: Session['id'],\n    payload: Partial\n    >,\n  ): Promise;\n\n  abstract deleteById(id: Session['id']): Promise;\n\n  abstract deleteByUserId(conditions: { userId: User['id'] }): Promise;\n\n  abstract deleteByUserIdWithExclude(conditions: {\n    userId: User['id'];\n    excludeSessionId: Session['id'];\n  }): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionSchemaClass.html":{"url":"classes/SessionSchemaClass.html","title":"class - SessionSchemaClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionSchemaClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/infrastructure/persistence/document/entities/session.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: now})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/document/entities/session.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/document/entities/session.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/document/entities/session.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: now})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/document/entities/session.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSchemaClass\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'UserSchemaClass'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/session/infrastructure/persistence/document/entities/session.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { now, HydratedDocument } from 'mongoose';\nimport { UserSchemaClass } from '../../../../../users/infrastructure/persistence/document/entities/user.schema';\nimport { EntityDocumentHelper } from '../../../../../utils/document-entity-helper';\n\nexport type SessionSchemaDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    getters: true,\n  },\n})\nexport class SessionSchemaClass extends EntityDocumentHelper {\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'UserSchemaClass' })\n  user: UserSchemaClass;\n\n  @Prop()\n  hash: string;\n\n  @Prop({ default: now })\n  createdAt: Date;\n\n  @Prop({ default: now })\n  updatedAt: Date;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const SessionSchema = SchemaFactory.createForClass(SessionSchemaClass);\n\nSessionSchema.index({ user: 1 });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session/session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                deleteById\n                            \n                            \n                                deleteByUserId\n                            \n                            \n                                deleteByUserIdWithExclude\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionRepository: SessionRepository)\n                    \n                \n                        \n                            \n                                Defined in src/session/session.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionRepository\n                                                  \n                                                        \n                                                                        SessionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteById\n                        \n                    \n                \n            \n            \n                \ndeleteById(id: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteByUserId\n                        \n                    \n                \n            \n            \n                \ndeleteByUserId(conditions: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                conditions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteByUserIdWithExclude\n                        \n                    \n                \n            \n            \n                \ndeleteByUserIdWithExclude(conditions: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                conditions\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Session)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: Session, payload: Partial>)\n                \n            \n\n\n                    \n                        \n                            Defined in src/session/session.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Session\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { SessionRepository } from './infrastructure/persistence/session.repository';\nimport { Session } from './domain/session';\nimport { User } from '../users/domain/user';\nimport { NullableType } from '../utils/types/nullable.type';\n\n@Injectable()\nexport class SessionService {\n  constructor(private readonly sessionRepository: SessionRepository) {}\n\n  findById(id: Session['id']): Promise> {\n    return this.sessionRepository.findById(id);\n  }\n\n  create(\n    data: Omit,\n  ): Promise {\n    return this.sessionRepository.create(data);\n  }\n\n  update(\n    id: Session['id'],\n    payload: Partial\n    >,\n  ): Promise {\n    return this.sessionRepository.update(id, payload);\n  }\n\n  deleteById(id: Session['id']): Promise {\n    return this.sessionRepository.deleteById(id);\n  }\n\n  deleteByUserId(conditions: { userId: User['id'] }): Promise {\n    return this.sessionRepository.deleteByUserId(conditions);\n  }\n\n  deleteByUserIdWithExclude(conditions: {\n    userId: User['id'];\n    excludeSessionId: Session['id'];\n  }): Promise {\n    return this.sessionRepository.deleteByUserIdWithExclude(conditions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/domain/settings.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                config\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                settingsType\n                            \n                            \n                                    \n                                subjectType\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsConfig | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, description: 'Configuration settings', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/domain/settings.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/domain/settings.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/domain/settings.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        settingsType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: SettingsType, description: 'Type of settings category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/domain/settings.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subjectType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsSubjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: SettingsSubjectType, description: 'Subject type this settings applies to'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/domain/settings.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tenant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tenant, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/domain/settings.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/domain/settings.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => User, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/domain/settings.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Tenant } from '../../tenants/domain/tenant';\nimport { User } from '../../users/domain/user';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n  SettingsConfig,\n  SettingsSubjectType,\n  SettingsType,\n} from '../infrastructure/persistence/relational/entities/settings.entity';\n\nexport class Settings {\n  @ApiProperty({\n    type: Object,\n    description: 'Configuration settings',\n    example: {\n      currency: 'KES',\n      notificationPreferences: {\n        email: true,\n        sms: false,\n      },\n    },\n  })\n  config?: SettingsConfig | null;\n\n  @ApiProperty({\n    enum: SettingsType,\n    description: 'Type of settings category',\n  })\n  settingsType?: SettingsType;\n\n  @ApiProperty({\n    enum: SettingsSubjectType,\n    description: 'Subject type this settings applies to',\n  })\n  subjectType: SettingsSubjectType;\n\n  @ApiProperty({\n    type: () => Tenant,\n    nullable: false,\n  })\n  tenant: Tenant;\n\n  @ApiProperty({\n    type: () => User,\n    nullable: false,\n  })\n  user: User;\n\n  @ApiProperty({\n    type: String,\n  })\n  id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSettingsDto: CreateSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Settings})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/settings.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSettingsDto\n                                            \n                                                            CreateSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: FindAllSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/settings.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            FindAllSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Settings})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/settings.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/settings.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSettingsDto: UpdateSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Settings})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/settings.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSettingsDto\n                                            \n                                                            UpdateSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { SettingsService } from './settings.service';\nimport { CreateSettingsDto } from './dto/create-settings.dto';\nimport { UpdateSettingsDto } from './dto/update-settings.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Settings } from './domain/settings';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  InfinityPaginationResponse,\n  InfinityPaginationResponseDto,\n} from '../utils/dto/infinity-pagination-response.dto';\nimport { infinityPagination } from '../utils/infinity-pagination';\nimport { FindAllSettingsDto } from './dto/find-all-settings.dto';\n\n@ApiTags('Settings')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@Controller({\n  path: 'settings',\n  version: '1',\n})\nexport class SettingsController {\n  constructor(private readonly settingsService: SettingsService) {}\n\n  @Post()\n  @ApiCreatedResponse({\n    type: Settings,\n  })\n  create(@Body() createSettingsDto: CreateSettingsDto) {\n    return this.settingsService.create(createSettingsDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    type: InfinityPaginationResponse(Settings),\n  })\n  async findAll(\n    @Query() query: FindAllSettingsDto,\n  ): Promise> {\n    const page = query?.page ?? 1;\n    let limit = query?.limit ?? 10;\n    if (limit > 50) {\n      limit = 50;\n    }\n\n    return infinityPagination(\n      await this.settingsService.findAllWithPagination({\n        paginationOptions: {\n          page,\n          limit,\n        },\n      }),\n      { page, limit },\n    );\n  }\n\n  @Get(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Settings,\n  })\n  findById(@Param('id') id: string) {\n    return this.settingsService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Settings,\n  })\n  update(\n    @Param('id') id: string,\n    @Body() updateSettingsDto: UpdateSettingsDto,\n  ) {\n    return this.settingsService.update(id, updateSettingsDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  remove(@Param('id') id: string) {\n    return this.settingsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingsDto.html":{"url":"classes/SettingsDto.html","title":"class - SettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/dto/settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/dto/settings.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class SettingsDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SettingsEntity.html":{"url":"entities/SettingsEntity.html","title":"entity - SettingsEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SettingsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/infrastructure/persistence/relational/entities/settings.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                config\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                settingsType\n                            \n                            \n                                    \n                                subjectType\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsConfig\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:253\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:283\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:280\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        settingsType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: SettingsType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:259\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subjectType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsSubjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: SettingsSubjectType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:265\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, parentEntity => parentEntity.settings, {eager: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:271\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:286\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, parentEntity => parentEntity.settings, {eager: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/infrastructure/persistence/relational/entities/settings.entity.ts:277\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { TenantEntity } from '../../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\nimport { UserEntity } from '../../../../../users/infrastructure/persistence/relational/entities/user.entity';\n\nimport {\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  Column,\n} from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\n\nexport enum SettingsSubjectType {\n  TENANT = 'tenant',\n  USER = 'user',\n  SYSTEM = 'system', // For platform-wide settings\n  COLLECTOR = 'collector', // Special role-specific settings\n  FACILITY = 'facility', // Waste processing facilities\n}\n\nexport enum SettingsType {\n  // Financial\n  INVOICE = 'invoice',\n  BILLING = 'billing',\n  PAYMENT = 'payment',\n  TAX = 'tax',\n  COMMISSION = 'commission',\n\n  // Notifications\n  NOTIFICATION = 'notification',\n  REMINDER = 'reminder',\n  ALERT = 'alert',\n\n  // Waste Operations\n  WASTE = 'waste',\n  COLLECTION = 'collection',\n  PROCESSING = 'processing',\n  RECYCLING = 'recycling',\n  DISPOSAL = 'disposal',\n\n  // Marketplace\n  MARKETPLACE = 'marketplace',\n  LISTING = 'listing',\n  BIDDING = 'bidding',\n  TRANSACTION = 'transaction',\n\n  // User Preferences\n  PREFERENCES = 'preferences',\n  PRIVACY = 'privacy',\n  ACCESSIBILITY = 'accessibility',\n\n  // Compliance\n  COMPLIANCE = 'compliance',\n  CERTIFICATION = 'certification',\n  REPORTING = 'reporting',\n  AUDIT = 'audit',\n\n  // Technical\n  API = 'api',\n  INTEGRATION = 'integration',\n  SECURITY = 'security',\n  RATE_LIMITING = 'rate_limiting',\n\n  // Localization\n  LOCALIZATION = 'localization',\n  LANGUAGE = 'language',\n  CURRENCY = 'currency',\n  TIMEZONE = 'timezone',\n\n  // UI/UX\n  THEME = 'theme',\n  LAYOUT = 'layout',\n  DASHBOARD = 'dashboard',\n\n  // System Operations\n  SYSTEM = 'system',\n  MAINTENANCE = 'maintenance',\n  BACKUP = 'backup',\n  SCALING = 'scaling',\n\n  // Environmental\n  CARBON_ACCOUNTING = 'carbon_accounting',\n  SUSTAINABILITY = 'sustainability',\n\n  // Logistics\n  ROUTING = 'routing',\n  VEHICLE = 'vehicle',\n  DRIVER = 'driver',\n}\nexport interface SettingsConfig {\n  invoicePrefix?: string;\n  currency?: string;\n  timezone?: string;\n  locale?: string;\n  dateFormat?: string;\n  defaultLanguage?: string;\n\n  wasteCategories?: string[];\n  allowedWasteTypes?: string[];\n  collectionFrequencies?: string[];\n  serviceAreas?: string[];\n  pricingModel?: 'weight_based' | 'volume_based' | 'flat_rate';\n  minimumPickupAmount?: number;\n  specialServices?: string[];\n\n  roles?: {\n    [roleName: string]: {\n      permissions: string[];\n    };\n  };\n  defaultRole?: string;\n\n  paymentGateways?: {\n    mpesa?: {\n      enabled: boolean;\n      shortcode: string;\n      consumerKey: string;\n      consumerSecret: string;\n      passkey: string;\n      callbackUrl: string;\n    };\n    paypal?: {\n      enabled: boolean;\n      clientId: string;\n      secret: string;\n      mode: 'sandbox' | 'live';\n      webhookUrl?: string;\n    };\n    stripe?: {\n      enabled: boolean;\n      apiKey: string;\n      webhookSecret: string;\n    };\n    bankTransfer?: {\n      enabled: boolean;\n      accountName: string;\n      accountNumber: string;\n      bankName: string;\n      swiftCode?: string;\n      instructions?: string;\n    };\n    paystack?: {\n      enabled: boolean;\n      publicKey: string;\n      secretKey: string;\n    };\n  };\n\n  notificationPreferences?: {\n    email: boolean;\n    sms: boolean;\n    push: boolean;\n    whatsapp: boolean;\n  };\n\n  smsApi?: {\n    enabled: boolean;\n    provider: string;\n    apiKey: string;\n    senderId: string;\n    callbackUrl?: string;\n  };\n  whatsappApi?: {\n    enabled: boolean;\n    provider: string;\n    apiUrl: string;\n    token: string;\n    phoneNumberId: string;\n    callbackUrl?: string;\n  };\n  emailSettings?: {\n    fromAddress: string;\n    smtpHost: string;\n    smtpPort: number;\n    username: string;\n    password: string;\n    secure: boolean;\n  };\n\n  companyName?: string;\n  logoUrl?: string;\n  faviconUrl?: string;\n  theme?: {\n    primaryColor: string;\n    secondaryColor: string;\n    buttonStyle?: 'rounded' | 'square';\n    darkModeEnabled?: boolean;\n  };\n\n  marketplaceEnabled?: boolean;\n  marketplaceCommission?: number;\n  allowExternalVendors?: boolean;\n\n  workingHours?: {\n    start: string;\n    end: string;\n    days: string[];\n  };\n  driverSettings?: {\n    allowDriverAssignment: boolean;\n    maxPickupsPerDay: number;\n    routeOptimizationEnabled: boolean;\n  };\n  binTrackingEnabled?: boolean;\n  vehicleTrackingEnabled?: boolean;\n\n  subscriptionPlans?: {\n    [planName: string]: {\n      price: number;\n      features: string[];\n      limits: {\n        pickupsPerMonth?: number;\n        bins?: number;\n      };\n    };\n  };\n  trialPeriodDays?: number;\n  autoRenewal?: boolean;\n\n  termsOfServiceUrl?: string;\n  privacyPolicyUrl?: string;\n  requireIDVerification?: boolean;\n\n  webhooks?: {\n    pickupCompleted?: string;\n    invoiceGenerated?: string;\n    paymentReceived?: string;\n  };\n  apiAccess?: {\n    enabled: boolean;\n    apiKey: string;\n    rateLimit?: number;\n  };\n\n  aiOptimization?: {\n    enabled: boolean;\n    autoAssignDrivers: boolean;\n    predictPickupNeeds: boolean;\n  };\n  auditLogging?: boolean;\n  backupSettings?: {\n    frequency: 'daily' | 'weekly' | 'monthly';\n    backupEmail?: string;\n  };\n}\n@Entity({\n  name: 'settings',\n})\nexport class SettingsEntity extends EntityRelationalHelper {\n  @Column({ type: 'jsonb' })\n  config: SettingsConfig;\n\n  @Column({\n    type: 'enum',\n    enum: SettingsType,\n  })\n  settingsType: SettingsType;\n\n  @Column({\n    type: 'enum',\n    enum: SettingsSubjectType,\n  })\n  subjectType: SettingsSubjectType;\n\n  @ManyToOne(() => TenantEntity, (parentEntity) => parentEntity.settings, {\n    eager: false,\n    nullable: false,\n  })\n  tenant: TenantEntity;\n\n  @ManyToOne(() => UserEntity, (parentEntity) => parentEntity.settings, {\n    eager: false,\n    nullable: false,\n  })\n  user: UserEntity;\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingsMapper.html":{"url":"classes/SettingsMapper.html","title":"class - SettingsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/infrastructure/persistence/relational/mappers/settings.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: SettingsEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/relational/mappers/settings.mapper.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            SettingsEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Settings\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: Settings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/relational/mappers/settings.mapper.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SettingsEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Settings } from '../../../../domain/settings';\n\nimport { TenantMapper } from '../../../../../tenants/infrastructure/persistence/relational/mappers/tenant.mapper';\n\nimport { UserMapper } from '../../../../../users/infrastructure/persistence/relational/mappers/user.mapper';\n\nimport {\n  SettingsEntity,\n  SettingsSubjectType,\n  SettingsType,\n} from '../entities/settings.entity';\n\nexport class SettingsMapper {\n  static toDomain(raw: SettingsEntity): Settings {\n    const domainEntity = new Settings();\n    domainEntity.config = raw.config;\n\n    domainEntity.settingsType = raw.settingsType;\n\n    domainEntity.subjectType = raw.subjectType;\n\n    domainEntity.subjectType = raw.subjectType;\n\n    if (raw.tenant) {\n      domainEntity.tenant = TenantMapper.toDomain(raw.tenant);\n    }\n\n    if (raw.user) {\n      domainEntity.user = UserMapper.toDomain(raw.user);\n    }\n\n    domainEntity.id = raw.id;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: Settings): SettingsEntity {\n    const persistenceEntity = new SettingsEntity();\n    if (domainEntity.config) {\n      persistenceEntity.config = domainEntity.config;\n    }\n\n    persistenceEntity.settingsType = domainEntity.settingsType as SettingsType;\n\n    persistenceEntity.subjectType =\n      domainEntity.subjectType as SettingsSubjectType;\n\n    if (domainEntity.tenant) {\n      persistenceEntity.tenant = TenantMapper.toPersistence(\n        domainEntity.tenant,\n      );\n    }\n\n    if (domainEntity.user) {\n      persistenceEntity.user = UserMapper.toPersistence(domainEntity.user);\n    }\n\n    if (domainEntity.id) {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nRelationalSettingsPersistenceModule\n\nRelationalSettingsPersistenceModule\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nRelationalSettingsPersistenceModule->SettingsModule\n\n\n\n\n\nRelationalSettingsPersistenceModule \n\nRelationalSettingsPersistenceModule \n\nRelationalSettingsPersistenceModule  -->\n\nSettingsModule->RelationalSettingsPersistenceModule \n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RelationalSettingsPersistenceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RelationalSettingsPersistenceModule\n                        \n                        \n                            SettingsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TenantsModule } from '../tenants/tenants.module';\nimport { UsersModule } from '../users/users.module';\nimport {\n  // common\n  Module,\n  forwardRef,\n} from '@nestjs/common';\nimport { SettingsService } from './settings.service';\nimport { SettingsController } from './settings.controller';\nimport { RelationalSettingsPersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\n\n@Module({\n  imports: [\n    forwardRef(() => TenantsModule),\n\n    forwardRef(() => UsersModule),\n\n    // import modules, etc.\n    RelationalSettingsPersistenceModule,\n  ],\n  controllers: [SettingsController],\n  providers: [SettingsService],\n  exports: [SettingsService, RelationalSettingsPersistenceModule],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsRelationalRepository.html":{"url":"injectables/SettingsRelationalRepository.html","title":"injectable - SettingsRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settingsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settingsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Settings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Settings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Settings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Settings, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/relational/repositories/settings.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, In } from 'typeorm';\nimport { SettingsEntity } from '../entities/settings.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { Settings } from '../../../../domain/settings';\nimport { SettingsRepository } from '../../settings.repository';\nimport { SettingsMapper } from '../mappers/settings.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class SettingsRelationalRepository implements SettingsRepository {\n  constructor(\n    @InjectRepository(SettingsEntity)\n    private readonly settingsRepository: Repository,\n  ) {}\n\n  async create(data: Settings): Promise {\n    const persistenceModel = SettingsMapper.toPersistence(data);\n    const newEntity = await this.settingsRepository.save(\n      this.settingsRepository.create(persistenceModel),\n    );\n    return SettingsMapper.toDomain(newEntity);\n  }\n\n  async findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const entities = await this.settingsRepository.find({\n      skip: (paginationOptions.page - 1) * paginationOptions.limit,\n      take: paginationOptions.limit,\n    });\n\n    return entities.map((entity) => SettingsMapper.toDomain(entity));\n  }\n\n  async findById(id: Settings['id']): Promise> {\n    const entity = await this.settingsRepository.findOne({\n      where: { id },\n    });\n\n    return entity ? SettingsMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: Settings['id'][]): Promise {\n    const entities = await this.settingsRepository.find({\n      where: { id: In(ids) },\n    });\n\n    return entities.map((entity) => SettingsMapper.toDomain(entity));\n  }\n\n  async update(\n    id: Settings['id'],\n    payload: Partial,\n  ): Promise {\n    const entity = await this.settingsRepository.findOne({\n      where: { id },\n    });\n\n    if (!entity) {\n      throw new Error('Record not found');\n    }\n\n    const updatedEntity = await this.settingsRepository.save(\n      this.settingsRepository.create(\n        SettingsMapper.toPersistence({\n          ...SettingsMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return SettingsMapper.toDomain(updatedEntity);\n  }\n\n  async remove(id: Settings['id']): Promise {\n    await this.settingsRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingsRepository.html":{"url":"classes/SettingsRepository.html","title":"class - SettingsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/infrastructure/persistence/settings.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findAllWithPagination\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/settings.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/settings.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Settings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/settings.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/settings.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Settings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/settings.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Settings, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/infrastructure/persistence/settings.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from '../../../utils/types/deep-partial.type';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { IPaginationOptions } from '../../../utils/types/pagination-options';\nimport { Settings } from '../../domain/settings';\n\nexport abstract class SettingsRepository {\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise;\n\n  abstract findById(id: Settings['id']): Promise>;\n\n  abstract findByIds(ids: Settings['id'][]): Promise;\n\n  abstract update(\n    id: Settings['id'],\n    payload: DeepPartial,\n  ): Promise;\n\n  abstract remove(id: Settings['id']): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsSeedModule.html":{"url":"modules/SettingsSeedModule.html","title":"module - SettingsSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsSeedModule\n\n\n\ncluster_SettingsSeedModule_exports\n\n\n\ncluster_SettingsSeedModule_providers\n\n\n\n\nSettingsSeedService \n\nSettingsSeedService \n\n\n\nSettingsSeedModule\n\nSettingsSeedModule\n\nSettingsSeedService  -->\n\nSettingsSeedModule->SettingsSeedService \n\n\n\n\n\nSettingsSeedService\n\nSettingsSeedService\n\nSettingsSeedModule -->\n\nSettingsSeedService->SettingsSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/settings/settings-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingsSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SettingsSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { SettingsEntity } from '../../../../settings/infrastructure/persistence/relational/entities/settings.entity';\nimport { SettingsSeedService } from './settings-seed.service';\nimport { UserEntity } from 'src/users/infrastructure/persistence/relational/entities/user.entity';\nimport { TenantEntity } from 'src/tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([SettingsEntity, UserEntity, TenantEntity]),\n  ],\n  providers: [SettingsSeedService],\n  exports: [SettingsSeedService],\n})\nexport class SettingsSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsSeedService.html":{"url":"injectables/SettingsSeedService.html","title":"injectable - SettingsSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/settings/settings-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDefaultTenantConfig\n                            \n                            \n                                    Private\n                                getDefaultUserConfig\n                            \n                            \n                                    Async\n                                run\n                            \n                            \n                                    Private\n                                    Async\n                                seedTenantSettings\n                            \n                            \n                                    Private\n                                    Async\n                                seedUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository, tenantRepository: Repository, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/settings/settings-seed.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDefaultTenantConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDefaultTenantConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/settings/settings-seed.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         SettingsConfig\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDefaultUserConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDefaultUserConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/settings/settings-seed.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         SettingsConfig\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/settings/settings-seed.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        seedTenantSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedTenantSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/settings/settings-seed.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        seedUserSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    seedUserSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/settings/settings-seed.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { SettingsEntity } from '../../../../settings/infrastructure/persistence/relational/entities/settings.entity';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { UserEntity } from '../../../../users/infrastructure/persistence/relational/entities/user.entity';\nimport { SettingsSubjectType } from '../../../../settings/infrastructure/persistence/relational/entities/settings.entity';\nimport { SettingsType } from '../../../../settings/infrastructure/persistence/relational/entities/settings.entity';\nimport { RoleEnum } from '../../../../roles/roles.enum';\nimport { SettingsConfig } from '../../../../settings/infrastructure/persistence/relational/entities/settings.entity';\n\n@Injectable()\nexport class SettingsSeedService {\n  constructor(\n    @InjectRepository(SettingsEntity)\n    private repository: Repository,\n    @InjectRepository(TenantEntity)\n    private tenantRepository: Repository,\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n  ) {}\n\n  async run() {\n    await this.seedTenantSettings();\n    await this.seedUserSettings();\n  }\n\n  private async seedTenantSettings() {\n    const tenants = await this.tenantRepository.find();\n\n    for (const tenant of tenants) {\n      const adminUser = await this.userRepository.findOne({\n        where: {\n          tenant: { id: tenant.id },\n          role: { id: RoleEnum.admin },\n        },\n      });\n\n      if (adminUser) {\n        const existingSetting = await this.repository.findOne({\n          where: {\n            tenant: { id: tenant.id },\n            subjectType: SettingsSubjectType.TENANT,\n          },\n        });\n\n        if (!existingSetting) {\n          await this.repository.save(\n            this.repository.create({\n              config: this.getDefaultTenantConfig(),\n              settingsType: SettingsType.SYSTEM,\n              subjectType: SettingsSubjectType.TENANT,\n              tenant: tenant,\n              user: adminUser,\n            }),\n          );\n        }\n      }\n    }\n  }\n\n  private async seedUserSettings() {\n    const users = await this.userRepository.find();\n\n    for (const user of users) {\n      const existingSetting = await this.repository.findOne({\n        where: {\n          user: { id: user.id },\n          subjectType: SettingsSubjectType.USER,\n        },\n      });\n\n      if (!existingSetting) {\n        await this.repository.save(\n          this.repository.create({\n            config: this.getDefaultUserConfig(),\n            settingsType: SettingsType.PREFERENCES,\n            subjectType: SettingsSubjectType.USER,\n            tenant: user.tenant,\n            user: user,\n          }),\n        );\n      }\n    }\n  }\n\n  private getDefaultTenantConfig(): SettingsConfig {\n    return {\n      currency: 'USD',\n      timezone: 'UTC',\n      locale: 'en-US',\n      notificationPreferences: {\n        email: true,\n        sms: true,\n        push: true,\n        whatsapp: false,\n      },\n      paymentGateways: {\n        stripe: {\n          enabled: true,\n          apiKey: 'default_stripe_key',\n          webhookSecret: 'default_webhook_secret',\n        },\n      },\n    };\n  }\n\n  private getDefaultUserConfig(): SettingsConfig {\n    return {\n      notificationPreferences: {\n        email: true,\n        sms: false,\n        push: true,\n        whatsapp: false,\n      },\n      theme: {\n        primaryColor: '#3F83F8',\n        secondaryColor: '#1F2937',\n        darkModeEnabled: false,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAllWithPagination\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tenantService: TenantsService, userService: UsersService, settingsRepository: SettingsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/settings/settings.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tenantService\n                                                  \n                                                        \n                                                                        TenantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsRepository\n                                                  \n                                                        \n                                                                        SettingsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSettingsDto: CreateSettingsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSettingsDto\n                                            \n                                                            CreateSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \nfindAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Settings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: Settings)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Settings, updateSettingsDto: UpdateSettingsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Settings\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSettingsDto\n                                            \n                                                            UpdateSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TenantsService } from '../tenants/tenants.service';\nimport { Tenant } from '../tenants/domain/tenant';\n\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/domain/user';\n\nimport {\n  // common\n  Injectable,\n  HttpStatus,\n  UnprocessableEntityException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateSettingsDto } from './dto/create-settings.dto';\nimport { UpdateSettingsDto } from './dto/update-settings.dto';\nimport { SettingsRepository } from './infrastructure/persistence/settings.repository';\nimport { IPaginationOptions } from '../utils/types/pagination-options';\nimport { Settings } from './domain/settings';\nimport {\n  SettingsConfig,\n  SettingsSubjectType,\n  SettingsType,\n} from './infrastructure/persistence/relational/entities/settings.entity';\n\n@Injectable()\nexport class SettingsService {\n  constructor(\n    @Inject(forwardRef(() => TenantsService))\n    private readonly tenantService: TenantsService,\n\n    @Inject(forwardRef(() => UsersService))\n    private readonly userService: UsersService,\n\n    // Dependencies here\n    private readonly settingsRepository: SettingsRepository,\n  ) {}\n\n  async create(createSettingsDto: CreateSettingsDto) {\n    // Do not remove comment below.\n    // \n\n    const tenantObject = await this.tenantService.findById(\n      createSettingsDto.tenant.id,\n    );\n    if (!tenantObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          tenant: 'notExists',\n        },\n      });\n    }\n    const tenant = tenantObject;\n\n    const userObject = await this.userService.findById(\n      createSettingsDto.user.id,\n    );\n    if (!userObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          user: 'notExists',\n        },\n      });\n    }\n    const user = userObject;\n\n    return this.settingsRepository.create({\n      // Do not remove comment below.\n      // \n      config: createSettingsDto.config as SettingsConfig,\n\n      settingsType: createSettingsDto.settingsType as SettingsType,\n\n      subjectType: createSettingsDto.subjectType as SettingsSubjectType,\n\n      tenant,\n\n      user,\n    });\n  }\n\n  findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }) {\n    return this.settingsRepository.findAllWithPagination({\n      paginationOptions: {\n        page: paginationOptions.page,\n        limit: paginationOptions.limit,\n      },\n    });\n  }\n\n  findById(id: Settings['id']) {\n    return this.settingsRepository.findById(id);\n  }\n\n  findByIds(ids: Settings['id'][]) {\n    return this.settingsRepository.findByIds(ids);\n  }\n\n  async update(\n    id: Settings['id'],\n\n    updateSettingsDto: UpdateSettingsDto,\n  ) {\n    // Do not remove comment below.\n    // \n\n    let tenant: Tenant | undefined = undefined;\n\n    if (updateSettingsDto.tenant) {\n      const tenantObject = await this.tenantService.findById(\n        updateSettingsDto.tenant.id,\n      );\n      if (!tenantObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            tenant: 'notExists',\n          },\n        });\n      }\n      tenant = tenantObject;\n    }\n\n    let user: User | undefined = undefined;\n\n    if (updateSettingsDto.user) {\n      const userObject = await this.userService.findById(\n        updateSettingsDto.user.id,\n      );\n      if (!userObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            user: 'notExists',\n          },\n        });\n      }\n      user = userObject;\n    }\n\n    return this.settingsRepository.update(id, {\n      // Do not remove comment below.\n      // \n      config: updateSettingsDto.config as SettingsConfig,\n\n      settingsType: updateSettingsDto.settingsType as SettingsType,\n\n      subjectType: updateSettingsDto.subjectType as SettingsSubjectType,\n\n      tenant,\n\n      user,\n    });\n  }\n\n  remove(id: Settings['id']) {\n    return this.settingsRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialInterface.html":{"url":"interfaces/SocialInterface.html","title":"interface - SocialInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SocialInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social/interfaces/social.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SocialInterface {\n  id: string;\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortUserDto.html":{"url":"classes/SortUserDto.html","title":"class - SortUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/query-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                order\n                            \n                            \n                                    \n                                    \n                                    \n                                orderBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/query-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        orderBy\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Type(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/query-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Transform, Type, plainToInstance } from 'class-transformer';\nimport { User } from '../domain/user';\nimport { RoleDto } from '../../roles/dto/role.dto';\n\nexport class FilterUserDto {\n  @ApiPropertyOptional({ type: RoleDto })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => RoleDto)\n  roles?: RoleDto[] | null;\n}\n\nexport class SortUserDto {\n  @ApiProperty()\n  @Type(() => String)\n  @IsString()\n  orderBy: keyof User;\n\n  @ApiProperty()\n  @IsString()\n  order: string;\n}\n\nexport class QueryUserDto {\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 1))\n  @IsNumber()\n  @IsOptional()\n  page?: number;\n\n  @ApiPropertyOptional()\n  @Transform(({ value }) => (value ? Number(value) : 10))\n  @IsNumber()\n  @IsOptional()\n  limit?: number;\n\n  @ApiPropertyOptional({ type: String })\n  @IsOptional()\n  @Transform(({ value }) =>\n    value ? plainToInstance(FilterUserDto, JSON.parse(value)) : undefined,\n  )\n  @ValidateNested()\n  @Type(() => FilterUserDto)\n  filters?: FilterUserDto | null;\n\n  @ApiPropertyOptional({ type: String })\n  @IsOptional()\n  @Transform(({ value }) => {\n    return value ? plainToInstance(SortUserDto, JSON.parse(value)) : undefined;\n  })\n  @ValidateNested({ each: true })\n  @Type(() => SortUserDto)\n  sort?: SortUserDto[] | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Status.html":{"url":"classes/Status.html","title":"class - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statuses/domain/status.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Allow()@ApiProperty({type: idType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statuses/domain/status.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Allow()@ApiProperty({type: String, example: 'active'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statuses/domain/status.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Allow } from 'class-validator';\nimport databaseConfig from '../../database/config/database.config';\nimport { DatabaseConfig } from '../../database/config/database-config.type';\n\n// \nconst idType = (databaseConfig() as DatabaseConfig).isDocumentDatabase\n  ? String\n  : Number;\n// \n\nexport class Status {\n  @Allow()\n  @ApiProperty({\n    type: idType,\n  })\n  id: number | string;\n\n  @Allow()\n  @ApiProperty({\n    type: String,\n    example: 'active',\n  })\n  name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusDto.html":{"url":"classes/StatusDto.html","title":"class - StatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statuses/dto/status.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statuses/dto/status.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber } from 'class-validator';\n\nexport class StatusDto {\n  @ApiProperty()\n  @IsNumber()\n  id: number | string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StatusEntity.html":{"url":"entities/StatusEntity.html","title":"entity - StatusEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StatusEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statuses/infrastructure/persistence/relational/entities/status.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statuses/infrastructure/persistence/relational/entities/status.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statuses/infrastructure/persistence/relational/entities/status.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryColumn } from 'typeorm';\n\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\n\n@Entity({\n  name: 'status',\n})\nexport class StatusEntity extends EntityRelationalHelper {\n  @PrimaryColumn()\n  id: number;\n\n  @Column()\n  name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusSchema.html":{"url":"classes/StatusSchema.html","title":"class - StatusSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statuses/infrastructure/persistence/document/entities/status.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/statuses/infrastructure/persistence/document/entities/status.schema.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/statuses/infrastructure/persistence/document/entities/status.schema.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StatusSchema {\n  _id: string;\n\n  name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusSeedModule.html":{"url":"modules/StatusSeedModule.html","title":"module - StatusSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatusSeedModule\n\n\n\ncluster_StatusSeedModule_providers\n\n\n\ncluster_StatusSeedModule_exports\n\n\n\n\nStatusSeedService \n\nStatusSeedService \n\n\n\nStatusSeedModule\n\nStatusSeedModule\n\nStatusSeedService  -->\n\nStatusSeedModule->StatusSeedService \n\n\n\n\n\nStatusSeedService\n\nStatusSeedService\n\nStatusSeedModule -->\n\nStatusSeedService->StatusSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/status/status-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatusSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { StatusSeedService } from './status-seed.service';\nimport { StatusEntity } from '../../../../statuses/infrastructure/persistence/relational/entities/status.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([StatusEntity])],\n  providers: [StatusSeedService],\n  exports: [StatusSeedService],\n})\nexport class StatusSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusSeedService.html":{"url":"injectables/StatusSeedService.html","title":"injectable - StatusSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatusSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/status/status-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/status/status-seed.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/status/status-seed.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { StatusEntity } from '../../../../statuses/infrastructure/persistence/relational/entities/status.entity';\nimport { StatusEnum } from '../../../../statuses/statuses.enum';\n\n@Injectable()\nexport class StatusSeedService {\n  constructor(\n    @InjectRepository(StatusEntity)\n    private repository: Repository,\n  ) {}\n\n  async run() {\n    const count = await this.repository.count();\n\n    if (!count) {\n      await this.repository.save([\n        this.repository.create({\n          id: StatusEnum.active,\n          name: 'Active',\n        }),\n        this.repository.create({\n          id: StatusEnum.inactive,\n          name: 'Inactive',\n        }),\n      ]);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tenant.html":{"url":"classes/Tenant.html","title":"class - Tenant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tenant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/domain/tenant.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    Optional\n                                kycSubmissions\n                            \n                            \n                                    \n                                    Optional\n                                logo\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    Optional\n                                primaryEmail\n                            \n                            \n                                    \n                                    Optional\n                                primaryPhone\n                            \n                            \n                                    \n                                    Optional\n                                regions\n                            \n                            \n                                    \n                                    Optional\n                                schemaName\n                            \n                            \n                                    \n                                    Optional\n                                settings\n                            \n                            \n                                    \n                                    Optional\n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Boolean, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        kycSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycDetails[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileType | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => FileType, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        primaryEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        primaryPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        regions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Region[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        schemaName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Settings[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TenantType | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => TenantType, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/domain/tenant.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Region } from '../../regions/domain/region';\nimport { Settings } from '../../settings/domain/settings';\nimport { FileType } from '../../files/domain/file';\nimport { TenantType } from '../../tenant-types/domain/tenant-type';\nimport { KycDetails } from '../../kyc-details/domain/kyc-details';\nimport { User } from '../../users/domain/user';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class Tenant {\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  domain?: string | null;\n\n  @ApiProperty({\n    type: () => [Region],\n    nullable: true,\n  })\n  regions?: Region[] | null;\n\n  @ApiProperty({\n    type: () => [Settings],\n    nullable: true,\n  })\n  settings?: Settings[] | null;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  schemaName?: string | null;\n\n  @ApiProperty({\n    type: () => FileType,\n    nullable: true,\n  })\n  logo?: FileType | null;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  address?: string | null;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  primaryPhone?: string | null;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  primaryEmail?: string | null;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  name?: string | null;\n\n  @ApiProperty({\n    type: () => TenantType,\n    nullable: true,\n  })\n  type?: TenantType | null;\n\n  @ApiProperty({\n    type: () => [KycDetails],\n    nullable: true,\n  })\n  kycSubmissions?: KycDetails[] | null;\n\n  @ApiProperty({\n    type: () => [User],\n    nullable: true,\n  })\n  users?: User[] | null;\n\n  @ApiProperty({\n    type: () => Boolean,\n    nullable: false,\n  })\n  isActive?: boolean;\n\n  @ApiProperty({\n    type: String,\n  })\n  id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TenantDto.html":{"url":"classes/TenantDto.html","title":"class - TenantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TenantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/dto/tenant.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/dto/tenant.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class TenantDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TenantEntity.html":{"url":"entities/TenantEntity.html","title":"entity - TenantEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TenantEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                domain\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    Optional\n                                kycSubmissions\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                logo\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    Optional\n                                primaryEmail\n                            \n                            \n                                    \n                                    Optional\n                                primaryPhone\n                            \n                            \n                                    \n                                    Optional\n                                regions\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                    Optional\n                                schemaName\n                            \n                            \n                                    \n                                    Optional\n                                settings\n                            \n                            \n                                    \n                                    Optional\n                                type\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        domain\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: false, type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        kycSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycDetailsEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, childEntity => childEntity.tenant, {eager: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {eager: true, nullable: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        primaryEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        primaryPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        regions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegionEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, childEntity => childEntity.tenant, {eager: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, role => role.tenant)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        schemaName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, childEntity => childEntity.tenant, {eager: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantTypeEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, childEntity => childEntity.tenant, {eager: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenants/infrastructure/persistence/relational/entities/tenant.entity.ts:98\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { RegionEntity } from '../../../../../regions/infrastructure/persistence/relational/entities/region.entity';\n\nimport { SettingsEntity } from '../../../../../settings/infrastructure/persistence/relational/entities/settings.entity';\n\nimport { FileEntity } from '../../../../../files/infrastructure/persistence/relational/entities/file.entity';\n\nimport { TenantTypeEntity } from '../../../../../tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity';\n\nimport { KycDetailsEntity } from '../../../../../kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity';\n\nimport { UserEntity } from '../../../../../users/infrastructure/persistence/relational/entities/user.entity';\n\nimport {\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  Column,\n  OneToMany,\n  ManyToOne,\n  JoinColumn,\n  OneToOne,\n} from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\nimport { RoleEntity } from 'src/roles/infrastructure/persistence/relational/entities/role.entity';\n\n@Entity({\n  name: 'tenant',\n})\nexport class TenantEntity extends EntityRelationalHelper {\n  @OneToMany(() => RoleEntity, (role) => role.tenant)\n  roles: RoleEntity[];\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  domain?: string | null;\n\n  @OneToMany(() => RegionEntity, (childEntity) => childEntity.tenant, {\n    eager: true,\n    nullable: true,\n  })\n  regions?: RegionEntity[] | null;\n\n  @OneToMany(() => SettingsEntity, (childEntity) => childEntity.tenant, {\n    eager: true,\n    nullable: true,\n  })\n  settings?: SettingsEntity[] | null;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  schemaName?: string | null;\n\n  @OneToOne(() => FileEntity, { eager: true, nullable: true })\n  @JoinColumn()\n  logo?: FileEntity | null;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  address?: string | null;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  primaryPhone?: string | null;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  primaryEmail?: string | null;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  name?: string | null;\n\n  @ManyToOne(() => TenantTypeEntity, { eager: true, nullable: true })\n  type?: TenantTypeEntity | null;\n\n  @OneToMany(() => KycDetailsEntity, (childEntity) => childEntity.tenant, {\n    eager: true,\n    nullable: true,\n  })\n  kycSubmissions?: KycDetailsEntity[] | null;\n\n  @OneToMany(() => UserEntity, (childEntity) => childEntity.tenant, {\n    eager: true,\n    nullable: true,\n  })\n  users?: UserEntity[] | null;\n\n  @Column({\n    nullable: false,\n    type: Boolean,\n  })\n  isActive?: boolean;\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TenantMapper.html":{"url":"classes/TenantMapper.html","title":"class - TenantMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TenantMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/infrastructure/persistence/relational/mappers/tenant.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: TenantEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/relational/mappers/tenant.mapper.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            TenantEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Tenant\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: Tenant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/relational/mappers/tenant.mapper.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TenantEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Tenant } from '../../../../domain/tenant';\n\nimport { RegionMapper } from '../../../../../regions/infrastructure/persistence/relational/mappers/region.mapper';\n\nimport { SettingsMapper } from '../../../../../settings/infrastructure/persistence/relational/mappers/settings.mapper';\n\nimport { FileMapper } from '../../../../../files/infrastructure/persistence/relational/mappers/file.mapper';\n\nimport { TenantTypeMapper } from '../../../../../tenant-types/infrastructure/persistence/relational/mappers/tenant-type.mapper';\n\nimport { KycDetailsMapper } from '../../../../../kyc-details/infrastructure/persistence/relational/mappers/kyc-details.mapper';\n\nimport { UserMapper } from '../../../../../users/infrastructure/persistence/relational/mappers/user.mapper';\n\nimport { TenantEntity } from '../entities/tenant.entity';\n\nexport class TenantMapper {\n  static toDomain(raw: TenantEntity): Tenant {\n    const domainEntity = new Tenant();\n    domainEntity.domain = raw.domain;\n\n    if (raw.regions) {\n      domainEntity.regions = raw.regions.map((item) =>\n        RegionMapper.toDomain(item),\n      );\n    } else if (raw.regions === null) {\n      domainEntity.regions = null;\n    }\n\n    if (raw.settings) {\n      domainEntity.settings = raw.settings.map((item) =>\n        SettingsMapper.toDomain(item),\n      );\n    } else if (raw.settings === null) {\n      domainEntity.settings = null;\n    }\n\n    domainEntity.schemaName = raw.schemaName;\n\n    if (raw.logo) {\n      domainEntity.logo = FileMapper.toDomain(raw.logo);\n    } else if (raw.logo === null) {\n      domainEntity.logo = null;\n    }\n\n    domainEntity.address = raw.address;\n\n    domainEntity.primaryPhone = raw.primaryPhone;\n\n    domainEntity.primaryEmail = raw.primaryEmail;\n\n    domainEntity.name = raw.name;\n\n    if (raw.type) {\n      domainEntity.type = TenantTypeMapper.toDomain(raw.type);\n    } else if (raw.type === null) {\n      domainEntity.type = null;\n    }\n\n    if (raw.kycSubmissions) {\n      domainEntity.kycSubmissions = raw.kycSubmissions.map((item) =>\n        KycDetailsMapper.toDomain(item),\n      );\n    } else if (raw.kycSubmissions === null) {\n      domainEntity.kycSubmissions = null;\n    }\n\n    if (raw.users) {\n      domainEntity.users = raw.users.map((item) => UserMapper.toDomain(item));\n    } else if (raw.users === null) {\n      domainEntity.users = null;\n    }\n\n    domainEntity.isActive = raw.isActive;\n\n    domainEntity.id = raw.id;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: Tenant): TenantEntity {\n    const persistenceEntity = new TenantEntity();\n    persistenceEntity.domain = domainEntity.domain;\n\n    if (domainEntity.regions) {\n      persistenceEntity.regions = domainEntity.regions.map((item) =>\n        RegionMapper.toPersistence(item),\n      );\n    } else if (domainEntity.regions === null) {\n      persistenceEntity.regions = null;\n    }\n\n    if (domainEntity.settings) {\n      persistenceEntity.settings = domainEntity.settings.map((item) =>\n        SettingsMapper.toPersistence(item),\n      );\n    } else if (domainEntity.settings === null) {\n      persistenceEntity.settings = null;\n    }\n\n    persistenceEntity.schemaName = domainEntity.schemaName;\n\n    if (domainEntity.logo) {\n      persistenceEntity.logo = FileMapper.toPersistence(domainEntity.logo);\n    } else if (domainEntity.logo === null) {\n      persistenceEntity.logo = null;\n    }\n\n    persistenceEntity.address = domainEntity.address;\n\n    persistenceEntity.primaryPhone = domainEntity.primaryPhone;\n\n    persistenceEntity.primaryEmail = domainEntity.primaryEmail;\n\n    persistenceEntity.name = domainEntity.name;\n\n    if (domainEntity.type) {\n      persistenceEntity.type = TenantTypeMapper.toPersistence(\n        domainEntity.type,\n      );\n    } else if (domainEntity.type === null) {\n      persistenceEntity.type = null;\n    }\n\n    if (domainEntity.kycSubmissions) {\n      persistenceEntity.kycSubmissions = domainEntity.kycSubmissions.map(\n        (item) => KycDetailsMapper.toPersistence(item),\n      );\n    } else if (domainEntity.kycSubmissions === null) {\n      persistenceEntity.kycSubmissions = null;\n    }\n\n    if (domainEntity.users) {\n      persistenceEntity.users = domainEntity.users.map((item) =>\n        UserMapper.toPersistence(item),\n      );\n    } else if (domainEntity.users === null) {\n      persistenceEntity.users = null;\n    }\n\n    persistenceEntity.isActive = domainEntity.isActive;\n\n    if (domainEntity.id) {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantRelationalRepository.html":{"url":"injectables/TenantRelationalRepository.html","title":"injectable - TenantRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TenantRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tenantRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Tenant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Tenant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Tenant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Tenant, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/relational/repositories/tenant.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, In } from 'typeorm';\nimport { TenantEntity } from '../entities/tenant.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { Tenant } from '../../../../domain/tenant';\nimport { TenantRepository } from '../../tenant.repository';\nimport { TenantMapper } from '../mappers/tenant.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class TenantRelationalRepository implements TenantRepository {\n  constructor(\n    @InjectRepository(TenantEntity)\n    private readonly tenantRepository: Repository,\n  ) {}\n\n  async create(data: Tenant): Promise {\n    const persistenceModel = TenantMapper.toPersistence(data);\n    const newEntity = await this.tenantRepository.save(\n      this.tenantRepository.create(persistenceModel),\n    );\n    return TenantMapper.toDomain(newEntity);\n  }\n\n  async findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const entities = await this.tenantRepository.find({\n      skip: (paginationOptions.page - 1) * paginationOptions.limit,\n      take: paginationOptions.limit,\n    });\n\n    return entities.map((entity) => TenantMapper.toDomain(entity));\n  }\n\n  async findById(id: Tenant['id']): Promise> {\n    const entity = await this.tenantRepository.findOne({\n      where: { id },\n    });\n\n    return entity ? TenantMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: Tenant['id'][]): Promise {\n    const entities = await this.tenantRepository.find({\n      where: { id: In(ids) },\n    });\n\n    return entities.map((entity) => TenantMapper.toDomain(entity));\n  }\n\n  async update(id: Tenant['id'], payload: Partial): Promise {\n    const entity = await this.tenantRepository.findOne({\n      where: { id },\n    });\n\n    if (!entity) {\n      throw new Error('Record not found');\n    }\n\n    const updatedEntity = await this.tenantRepository.save(\n      this.tenantRepository.create(\n        TenantMapper.toPersistence({\n          ...TenantMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return TenantMapper.toDomain(updatedEntity);\n  }\n\n  async remove(id: Tenant['id']): Promise {\n    await this.tenantRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TenantRepository.html":{"url":"classes/TenantRepository.html","title":"class - TenantRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TenantRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/infrastructure/persistence/tenant.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findAllWithPagination\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/tenant.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/tenant.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: Tenant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/tenant.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/tenant.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: Tenant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/tenant.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Tenant, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/infrastructure/persistence/tenant.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from '../../../utils/types/deep-partial.type';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { IPaginationOptions } from '../../../utils/types/pagination-options';\nimport { Tenant } from '../../domain/tenant';\n\nexport abstract class TenantRepository {\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise;\n\n  abstract findById(id: Tenant['id']): Promise>;\n\n  abstract findByIds(ids: Tenant['id'][]): Promise;\n\n  abstract update(\n    id: Tenant['id'],\n    payload: DeepPartial,\n  ): Promise;\n\n  abstract remove(id: Tenant['id']): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TenantSeedModule.html":{"url":"modules/TenantSeedModule.html","title":"module - TenantSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    TenantSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TenantSeedModule\n\n\n\ncluster_TenantSeedModule_providers\n\n\n\ncluster_TenantSeedModule_exports\n\n\n\n\nTenantSeedService \n\nTenantSeedService \n\n\n\nTenantSeedModule\n\nTenantSeedModule\n\nTenantSeedService  -->\n\nTenantSeedModule->TenantSeedService \n\n\n\n\n\nTenantSeedService\n\nTenantSeedService\n\nTenantSeedModule -->\n\nTenantSeedService->TenantSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/tenant/tenant-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TenantSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TenantSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { TenantSeedService } from './tenant-seed.service';\nimport { TenantTypeEntity } from 'src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TenantEntity, TenantTypeEntity])],\n  providers: [TenantSeedService],\n  exports: [TenantSeedService],\n})\nexport class TenantSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantSeedService.html":{"url":"injectables/TenantSeedService.html","title":"injectable - TenantSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TenantSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/tenant/tenant-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tenantRepository: Repository, tenantTypeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/tenant/tenant-seed.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantTypeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/tenant/tenant-seed.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { Repository } from 'typeorm';\nimport { TenantTypeEntity } from 'src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity';\n\n@Injectable()\nexport class TenantSeedService {\n  constructor(\n    @InjectRepository(TenantEntity)\n    private readonly tenantRepository: Repository,\n    @InjectRepository(TenantTypeEntity)\n    private readonly tenantTypeRepository: Repository,\n  ) {}\n\n  async run() {\n    // Get all tenant types from database\n    const tenantTypes = await this.tenantTypeRepository.find();\n\n    for (const tenantType of tenantTypes) {\n      // Check if tenant already exists for this type\n      const existingTenant = await this.tenantRepository.findOne({\n        where: { type: { name: tenantType.id } },\n      });\n      if (!existingTenant) {\n        const tenantName = `${tenantType.name} Tenant`;\n        await this.tenantRepository.save(\n          this.tenantRepository.create({\n            name: tenantName,\n            type: tenantType,\n            domain: tenantName.toLowerCase().replace(/\\s+/g, '-'),\n            address: `${tenantName} Address`,\n            primaryEmail: `contact@${tenantName.toLowerCase().replace(/\\s+/g, '-')}.com`,\n            primaryPhone: '+1234567890',\n            isActive: true,\n            schemaName: `tenant_${tenantType.code.toLowerCase()}`,\n          }),\n        );\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TenantType.html":{"url":"classes/TenantType.html","title":"class - TenantType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TenantType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/domain/tenant-type.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantTypeCode\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TenantTypeCode, enumName: 'TenantTypeCode'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/domain/tenant-type.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/domain/tenant-type.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/domain/tenant-type.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/domain/tenant-type.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/domain/tenant-type.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/domain/tenant-type.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { TenantTypeCode } from '../infrastructure/persistence/relational/entities/tenant-type.entity';\n\nexport class TenantType {\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  description?: string | null;\n\n  @ApiProperty({\n    enum: TenantTypeCode,\n    enumName: 'TenantTypeCode',\n  })\n  code: TenantTypeCode;\n\n  @ApiProperty({\n    type: () => String,\n    nullable: true,\n  })\n  name?: string | null;\n\n  @ApiProperty({\n    type: String,\n  })\n  id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TenantTypeDto.html":{"url":"classes/TenantTypeDto.html","title":"class - TenantTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TenantTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/dto/tenant-type.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/dto/tenant-type.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class TenantTypeDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TenantTypeEntity.html":{"url":"entities/TenantTypeEntity.html","title":"entity - TenantTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TenantTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantTypeCode\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: TenantTypeCode, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  Column,\n} from 'typeorm';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\n\nexport enum TenantTypeCode {\n  PLATFORM_OWNER = 'platform_owner',\n  COMMUNITY_GROUP = 'community_group',\n  RECYCLING_COMPANY = 'recycling_company',\n  COLLECTION_AGENCY = 'collection_agency',\n  MUNICIPALITY = 'municipality',\n  ENTERPRISE = 'enterprise',\n  EDUCATIONAL_INSTITUTION = 'educational_institution',\n  HEALTHCARE_PROVIDER = 'healthcare_provider',\n  NON_PROFIT_ORGANIZATION = 'non_profit_organization',\n  GOVERNMENT_AGENCY = 'government_agency',\n  TECHNOLOGY_COMPANY = 'technology_company',\n  RETAIL_BUSINESS = 'retail_business',\n  MANUFACTURING_COMPANY = 'manufacturing_company',\n  TRANSPORTATION_SERVICE = 'transportation_service',\n  FINANCIAL_INSTITUTION = 'financial_institution',\n  AGRICULTURAL_BUSINESS = 'agricultural_business',\n  ENERGY_PROVIDER = 'energy_provider',\n  CONSTRUCTION_COMPANY = 'construction_company',\n  HOSPITALITY_BUSINESS = 'hospitality_business',\n  GENERIC = 'generic', // Default fallback\n}\n\n@Entity({\n  name: 'tenant_type',\n})\nexport class TenantTypeEntity extends EntityRelationalHelper {\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  description?: string | null;\n\n  @Column({\n    type: 'enum',\n    enum: TenantTypeCode,\n    unique: true,\n  })\n  code: TenantTypeCode;\n\n  @Column({\n    nullable: true,\n    type: String,\n  })\n  name?: string | null;\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TenantTypeMapper.html":{"url":"classes/TenantTypeMapper.html","title":"class - TenantTypeMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TenantTypeMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/infrastructure/persistence/relational/mappers/tenant-type.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: TenantTypeEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/relational/mappers/tenant-type.mapper.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            TenantTypeEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TenantType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: TenantType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/relational/mappers/tenant-type.mapper.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TenantTypeEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TenantType } from '../../../../domain/tenant-type';\nimport {\n  TenantTypeEntity,\n  TenantTypeCode,\n} from '../entities/tenant-type.entity';\n\nexport class TenantTypeMapper {\n  static toDomain(raw: TenantTypeEntity): TenantType {\n    const domainEntity = new TenantType();\n    domainEntity.description = raw.description;\n\n    // Ensure the code is assigned as TenantTypeCode\n    domainEntity.code = raw.code as TenantTypeCode;\n\n    domainEntity.name = raw.name;\n\n    domainEntity.id = raw.id;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: TenantType): TenantTypeEntity {\n    const persistenceEntity = new TenantTypeEntity();\n    persistenceEntity.description = domainEntity.description;\n\n    // Ensure the code is assigned as TenantTypeCode\n    persistenceEntity.code = domainEntity.code as TenantTypeCode;\n\n    persistenceEntity.name = domainEntity.name;\n\n    if (domainEntity.id) {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantTypeRelationalRepository.html":{"url":"injectables/TenantTypeRelationalRepository.html","title":"injectable - TenantTypeRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TenantTypeRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/infrastructure/persistence/relational/repositories/tenant-type.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllWithPagination\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tenantTypeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tenant-types/infrastructure/persistence/relational/repositories/tenant-type.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tenantTypeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: TenantType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/relational/repositories/tenant-type.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/relational/repositories/tenant-type.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: TenantType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/relational/repositories/tenant-type.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/relational/repositories/tenant-type.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: TenantType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/relational/repositories/tenant-type.repository.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: TenantType, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/relational/repositories/tenant-type.repository.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, In } from 'typeorm';\nimport { TenantTypeEntity } from '../entities/tenant-type.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { TenantType } from '../../../../domain/tenant-type';\nimport { TenantTypeRepository } from '../../tenant-type.repository';\nimport { TenantTypeMapper } from '../mappers/tenant-type.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class TenantTypeRelationalRepository implements TenantTypeRepository {\n  constructor(\n    @InjectRepository(TenantTypeEntity)\n    private readonly tenantTypeRepository: Repository,\n  ) {}\n\n  async create(data: TenantType): Promise {\n    const persistenceModel = TenantTypeMapper.toPersistence(data);\n    const newEntity = await this.tenantTypeRepository.save(\n      this.tenantTypeRepository.create(persistenceModel),\n    );\n    return TenantTypeMapper.toDomain(newEntity);\n  }\n\n  async findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const entities = await this.tenantTypeRepository.find({\n      skip: (paginationOptions.page - 1) * paginationOptions.limit,\n      take: paginationOptions.limit,\n    });\n\n    return entities.map((entity) => TenantTypeMapper.toDomain(entity));\n  }\n\n  async findById(id: TenantType['id']): Promise> {\n    const entity = await this.tenantTypeRepository.findOne({\n      where: { id },\n    });\n\n    return entity ? TenantTypeMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: TenantType['id'][]): Promise {\n    const entities = await this.tenantTypeRepository.find({\n      where: { id: In(ids) },\n    });\n\n    return entities.map((entity) => TenantTypeMapper.toDomain(entity));\n  }\n\n  async update(\n    id: TenantType['id'],\n    payload: Partial,\n  ): Promise {\n    const entity = await this.tenantTypeRepository.findOne({\n      where: { id },\n    });\n\n    if (!entity) {\n      throw new Error('Record not found');\n    }\n\n    const updatedEntity = await this.tenantTypeRepository.save(\n      this.tenantTypeRepository.create(\n        TenantTypeMapper.toPersistence({\n          ...TenantTypeMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return TenantTypeMapper.toDomain(updatedEntity);\n  }\n\n  async remove(id: TenantType['id']): Promise {\n    await this.tenantTypeRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TenantTypeRepository.html":{"url":"classes/TenantTypeRepository.html","title":"class - TenantTypeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TenantTypeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/infrastructure/persistence/tenant-type.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findAllWithPagination\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/tenant-type.repository.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/tenant-type.repository.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: TenantType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/tenant-type.repository.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/tenant-type.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: TenantType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/tenant-type.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: TenantType, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/infrastructure/persistence/tenant-type.repository.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from '../../../utils/types/deep-partial.type';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { IPaginationOptions } from '../../../utils/types/pagination-options';\nimport { TenantType } from '../../domain/tenant-type';\n\nexport abstract class TenantTypeRepository {\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }): Promise;\n\n  abstract findById(id: TenantType['id']): Promise>;\n\n  abstract findByIds(ids: TenantType['id'][]): Promise;\n\n  abstract update(\n    id: TenantType['id'],\n    payload: DeepPartial,\n  ): Promise;\n\n  abstract remove(id: TenantType['id']): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TenantTypesController.html":{"url":"controllers/TenantTypesController.html","title":"controller - TenantTypesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TenantTypesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/tenant-types.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTenantTypeDto: CreateTenantTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: TenantType})\n                \n            \n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTenantTypeDto\n                                            \n                                                            CreateTenantTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: FindAllTenantTypesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            FindAllTenantTypesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: TenantType})\n                \n            \n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTenantTypeDto: UpdateTenantTypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: TenantType})\n                \n            \n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTenantTypeDto\n                                            \n                                                            UpdateTenantTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { TenantTypesService } from './tenant-types.service';\nimport { CreateTenantTypeDto } from './dto/create-tenant-type.dto';\nimport { UpdateTenantTypeDto } from './dto/update-tenant-type.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { TenantType } from './domain/tenant-type';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  InfinityPaginationResponse,\n  InfinityPaginationResponseDto,\n} from '../utils/dto/infinity-pagination-response.dto';\nimport { infinityPagination } from '../utils/infinity-pagination';\nimport { FindAllTenantTypesDto } from './dto/find-all-tenant-types.dto';\n\n@ApiTags('Tenanttypes')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@Controller({\n  path: 'tenant-types',\n  version: '1',\n})\nexport class TenantTypesController {\n  constructor(private readonly tenantTypesService: TenantTypesService) {}\n\n  @Post()\n  @ApiCreatedResponse({\n    type: TenantType,\n  })\n  create(@Body() createTenantTypeDto: CreateTenantTypeDto) {\n    return this.tenantTypesService.create(createTenantTypeDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    type: InfinityPaginationResponse(TenantType),\n  })\n  async findAll(\n    @Query() query: FindAllTenantTypesDto,\n  ): Promise> {\n    const page = query?.page ?? 1;\n    let limit = query?.limit ?? 10;\n    if (limit > 50) {\n      limit = 50;\n    }\n\n    return infinityPagination(\n      await this.tenantTypesService.findAllWithPagination({\n        paginationOptions: {\n          page,\n          limit,\n        },\n      }),\n      { page, limit },\n    );\n  }\n\n  @Get(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: TenantType,\n  })\n  findById(@Param('id') id: string) {\n    return this.tenantTypesService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: TenantType,\n  })\n  update(\n    @Param('id') id: string,\n    @Body() updateTenantTypeDto: UpdateTenantTypeDto,\n  ) {\n    return this.tenantTypesService.update(id, updateTenantTypeDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  remove(@Param('id') id: string) {\n    return this.tenantTypesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TenantTypesModule.html":{"url":"modules/TenantTypesModule.html","title":"module - TenantTypesModule","body":"\n                   \n\n\n\n\n    Modules\n    TenantTypesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TenantTypesModule\n\n\n\ncluster_TenantTypesModule_providers\n\n\n\ncluster_TenantTypesModule_exports\n\n\n\ncluster_TenantTypesModule_imports\n\n\n\n\nRelationalTenantTypePersistenceModule\n\nRelationalTenantTypePersistenceModule\n\n\n\nTenantTypesModule\n\nTenantTypesModule\n\nTenantTypesModule -->\n\nRelationalTenantTypePersistenceModule->TenantTypesModule\n\n\n\n\n\nRelationalTenantTypePersistenceModule \n\nRelationalTenantTypePersistenceModule \n\nRelationalTenantTypePersistenceModule  -->\n\nTenantTypesModule->RelationalTenantTypePersistenceModule \n\n\n\n\n\nTenantTypesService \n\nTenantTypesService \n\nTenantTypesService  -->\n\nTenantTypesModule->TenantTypesService \n\n\n\n\n\nTenantTypesService\n\nTenantTypesService\n\nTenantTypesModule -->\n\nTenantTypesService->TenantTypesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tenant-types/tenant-types.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TenantTypesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TenantTypesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RelationalTenantTypePersistenceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RelationalTenantTypePersistenceModule\n                        \n                        \n                            TenantTypesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  // common\n  Module,\n} from '@nestjs/common';\nimport { TenantTypesService } from './tenant-types.service';\nimport { TenantTypesController } from './tenant-types.controller';\nimport { RelationalTenantTypePersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\n\n@Module({\n  imports: [\n    // import modules, etc.\n    RelationalTenantTypePersistenceModule,\n  ],\n  controllers: [TenantTypesController],\n  providers: [TenantTypesService],\n  exports: [TenantTypesService, RelationalTenantTypePersistenceModule],\n})\nexport class TenantTypesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TenantTypesSeedModule.html":{"url":"modules/TenantTypesSeedModule.html","title":"module - TenantTypesSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    TenantTypesSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TenantTypesSeedModule\n\n\n\ncluster_TenantTypesSeedModule_providers\n\n\n\ncluster_TenantTypesSeedModule_exports\n\n\n\n\nTenantTypesSeedService \n\nTenantTypesSeedService \n\n\n\nTenantTypesSeedModule\n\nTenantTypesSeedModule\n\nTenantTypesSeedService  -->\n\nTenantTypesSeedModule->TenantTypesSeedService \n\n\n\n\n\nTenantTypesSeedService\n\nTenantTypesSeedService\n\nTenantTypesSeedModule -->\n\nTenantTypesSeedService->TenantTypesSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/relational/tenant-types/tenant-types-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TenantTypesSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TenantTypesSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TenantTypesSeedService } from './tenant-types-seed.service';\nimport { TenantTypeEntity } from 'src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TenantTypeEntity])],\n  providers: [TenantTypesSeedService],\n  exports: [TenantTypesSeedService],\n})\nexport class TenantTypesSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantTypesSeedService.html":{"url":"injectables/TenantTypesSeedService.html","title":"injectable - TenantTypesSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TenantTypesSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/tenant-types/tenant-types-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/tenant-types/tenant-types-seed.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/tenant-types/tenant-types-seed.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport {\n  TenantTypeCode,\n  TenantTypeEntity,\n} from 'src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class TenantTypesSeedService {\n  constructor(\n    @InjectRepository(TenantTypeEntity)\n    private repository: Repository,\n  ) {}\n\n  async run() {\n    const tenantTypeDefinitions = [\n      {\n        code: TenantTypeCode.PLATFORM_OWNER,\n        name: 'Platform Owner',\n        description: 'Owner of the platfrorm',\n      },\n      {\n        code: TenantTypeCode.COMMUNITY_GROUP,\n        name: 'Community Group',\n        description: 'Local community organizations managing waste collection',\n      },\n      {\n        code: TenantTypeCode.RECYCLING_COMPANY,\n        name: 'Recycling Company',\n        description: 'Commercial recycling processing facilities',\n      },\n      {\n        code: TenantTypeCode.COLLECTION_AGENCY,\n        name: 'Collection Agency',\n        description: 'Waste collection and transportation services',\n      },\n      {\n        code: TenantTypeCode.MUNICIPALITY,\n        name: 'Municipality',\n        description: 'Local government waste management departments',\n      },\n    ];\n\n    for (const typeDef of tenantTypeDefinitions) {\n      const count = await this.repository.count({\n        where: { code: typeDef.code },\n      });\n\n      if (!count) {\n        await this.repository.save(\n          this.repository.create({\n            code: typeDef.code,\n            name: typeDef.name,\n            description: typeDef.description,\n          }),\n        );\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantTypesService.html":{"url":"injectables/TenantTypesService.html","title":"injectable - TenantTypesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TenantTypesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/tenant-types.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAllWithPagination\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tenantTypeRepository: TenantTypeRepository)\n                    \n                \n                        \n                            \n                                Defined in src/tenant-types/tenant-types.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tenantTypeRepository\n                                                  \n                                                        \n                                                                        TenantTypeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTenantTypeDto: CreateTenantTypeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTenantTypeDto\n                                            \n                                                            CreateTenantTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \nfindAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: TenantType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: TenantType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: TenantType, updateTenantTypeDto: UpdateTenantTypeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenant-types/tenant-types.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            TenantType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTenantTypeDto\n                                            \n                                                            UpdateTenantTypeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  // common\n  Injectable,\n} from '@nestjs/common';\nimport { CreateTenantTypeDto } from './dto/create-tenant-type.dto';\nimport { UpdateTenantTypeDto } from './dto/update-tenant-type.dto';\nimport { TenantTypeRepository } from './infrastructure/persistence/tenant-type.repository';\nimport { IPaginationOptions } from '../utils/types/pagination-options';\nimport { TenantType } from './domain/tenant-type';\nimport { TenantTypeCode } from './infrastructure/persistence/relational/entities/tenant-type.entity';\n\n@Injectable()\nexport class TenantTypesService {\n  constructor(\n    // Dependencies here\n    private readonly tenantTypeRepository: TenantTypeRepository,\n  ) {}\n\n  async create(createTenantTypeDto: CreateTenantTypeDto) {\n    // Do not remove comment below.\n    // \n\n    return this.tenantTypeRepository.create({\n      // Do not remove comment below.\n      // \n      description: createTenantTypeDto.description,\n\n      code: createTenantTypeDto.code ?? ('' as TenantTypeCode), // Replace '' with an appropriate default value of type TenantTypeCode\n\n      name: createTenantTypeDto.name,\n    });\n  }\n\n  findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }) {\n    return this.tenantTypeRepository.findAllWithPagination({\n      paginationOptions: {\n        page: paginationOptions.page,\n        limit: paginationOptions.limit,\n      },\n    });\n  }\n\n  findById(id: TenantType['id']) {\n    return this.tenantTypeRepository.findById(id);\n  }\n\n  findByIds(ids: TenantType['id'][]) {\n    return this.tenantTypeRepository.findByIds(ids);\n  }\n\n  async update(\n    id: TenantType['id'],\n\n    updateTenantTypeDto: UpdateTenantTypeDto,\n  ) {\n    // Do not remove comment below.\n    // \n\n    return this.tenantTypeRepository.update(id, {\n      // Do not remove comment below.\n      // \n      description: updateTenantTypeDto.description,\n\n      code: updateTenantTypeDto.code ?? undefined,\n\n      name: updateTenantTypeDto.name,\n    });\n  }\n\n  remove(id: TenantType['id']) {\n    return this.tenantTypeRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TenantsController.html":{"url":"controllers/TenantsController.html","title":"controller - TenantsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TenantsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/tenants.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTenantDto: CreateTenantDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({type: Tenant})\n                \n            \n\n                    \n                        \n                            Defined in src/tenants/tenants.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTenantDto\n                                            \n                                                            CreateTenantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: FindAllTenantsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/tenants/tenants.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            FindAllTenantsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Tenant})\n                \n            \n\n                    \n                        \n                            Defined in src/tenants/tenants.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/tenants/tenants.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTenantDto: UpdateTenantDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiParam({name: 'id', type: String, required: true})@ApiOkResponse({type: Tenant})\n                \n            \n\n                    \n                        \n                            Defined in src/tenants/tenants.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTenantDto\n                                            \n                                                            UpdateTenantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { TenantsService } from './tenants.service';\nimport { CreateTenantDto } from './dto/create-tenant.dto';\nimport { UpdateTenantDto } from './dto/update-tenant.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Tenant } from './domain/tenant';\nimport { AuthGuard } from '@nestjs/passport';\nimport {\n  InfinityPaginationResponse,\n  InfinityPaginationResponseDto,\n} from '../utils/dto/infinity-pagination-response.dto';\nimport { infinityPagination } from '../utils/infinity-pagination';\nimport { FindAllTenantsDto } from './dto/find-all-tenants.dto';\n\n@ApiTags('Tenants')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@Controller({\n  path: 'tenants',\n  version: '1',\n})\nexport class TenantsController {\n  constructor(private readonly tenantsService: TenantsService) {}\n\n  @Post()\n  @ApiCreatedResponse({\n    type: Tenant,\n  })\n  create(@Body() createTenantDto: CreateTenantDto) {\n    return this.tenantsService.create(createTenantDto);\n  }\n\n  @Get()\n  @ApiOkResponse({\n    type: InfinityPaginationResponse(Tenant),\n  })\n  async findAll(\n    @Query() query: FindAllTenantsDto,\n  ): Promise> {\n    const page = query?.page ?? 1;\n    let limit = query?.limit ?? 10;\n    if (limit > 50) {\n      limit = 50;\n    }\n\n    return infinityPagination(\n      await this.tenantsService.findAllWithPagination({\n        paginationOptions: {\n          page,\n          limit,\n        },\n      }),\n      { page, limit },\n    );\n  }\n\n  @Get(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Tenant,\n  })\n  findById(@Param('id') id: string) {\n    return this.tenantsService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @ApiOkResponse({\n    type: Tenant,\n  })\n  update(@Param('id') id: string, @Body() updateTenantDto: UpdateTenantDto) {\n    return this.tenantsService.update(id, updateTenantDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  remove(@Param('id') id: string) {\n    return this.tenantsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TenantsModule.html":{"url":"modules/TenantsModule.html","title":"module - TenantsModule","body":"\n                   \n\n\n\n\n    Modules\n    TenantsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TenantsModule\n\n\n\ncluster_TenantsModule_exports\n\n\n\ncluster_TenantsModule_imports\n\n\n\ncluster_TenantsModule_providers\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nTenantsModule\n\nTenantsModule\n\nTenantsModule -->\n\nFilesModule->TenantsModule\n\n\n\n\n\nRelationalTenantPersistenceModule\n\nRelationalTenantPersistenceModule\n\nTenantsModule -->\n\nRelationalTenantPersistenceModule->TenantsModule\n\n\n\n\n\nTenantTypesModule\n\nTenantTypesModule\n\nTenantsModule -->\n\nTenantTypesModule->TenantsModule\n\n\n\n\n\nRelationalTenantPersistenceModule \n\nRelationalTenantPersistenceModule \n\nRelationalTenantPersistenceModule  -->\n\nTenantsModule->RelationalTenantPersistenceModule \n\n\n\n\n\nTenantsService \n\nTenantsService \n\nTenantsService  -->\n\nTenantsModule->TenantsService \n\n\n\n\n\nTenantsService\n\nTenantsService\n\nTenantsModule -->\n\nTenantsService->TenantsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tenants/tenants.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TenantsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TenantsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                        \n                            RelationalTenantPersistenceModule\n                        \n                        \n                            TenantTypesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RelationalTenantPersistenceModule\n                        \n                        \n                            TenantsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RegionsModule } from '../regions/regions.module';\nimport { SettingsModule } from '../settings/settings.module';\nimport { FilesModule } from '../files/files.module';\nimport { TenantTypesModule } from '../tenant-types/tenant-types.module';\nimport { KycDetailsModule } from '../kyc-details/kyc-details.module';\nimport { UsersModule } from '../users/users.module';\nimport {\n  // common\n  Module,\n  forwardRef,\n} from '@nestjs/common';\nimport { TenantsService } from './tenants.service';\nimport { TenantsController } from './tenants.controller';\nimport { RelationalTenantPersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\n\n@Module({\n  imports: [\n    forwardRef(() => RegionsModule),\n\n    forwardRef(() => SettingsModule),\n\n    FilesModule,\n\n    TenantTypesModule,\n\n    forwardRef(() => KycDetailsModule),\n\n    forwardRef(() => UsersModule),\n\n    // import modules, etc.\n    RelationalTenantPersistenceModule,\n  ],\n  controllers: [TenantsController],\n  providers: [TenantsService],\n  exports: [TenantsService, RelationalTenantPersistenceModule],\n})\nexport class TenantsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantsService.html":{"url":"injectables/TenantsService.html","title":"injectable - TenantsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TenantsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/tenants.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAllWithPagination\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(regionService: RegionsService, settingsService: SettingsService, fileService: FilesService, tenantTypeService: TenantTypesService, kycDetailsService: KycDetailsService, userService: UsersService, tenantRepository: TenantRepository)\n                    \n                \n                        \n                            \n                                Defined in src/tenants/tenants.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regionService\n                                                  \n                                                        \n                                                                        RegionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantTypeService\n                                                  \n                                                        \n                                                                        TenantTypesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        kycDetailsService\n                                                  \n                                                        \n                                                                        KycDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        TenantRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTenantDto: CreateTenantDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/tenants.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTenantDto\n                                            \n                                                            CreateTenantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllWithPagination\n                        \n                    \n                \n            \n            \n                \nfindAllWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/tenants.service.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Tenant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/tenants.service.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/tenants.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: Tenant)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/tenants.service.ts:383\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: Tenant, updateTenantDto: UpdateTenantDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tenants/tenants.service.ts:228\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            Tenant\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTenantDto\n                                            \n                                                            UpdateTenantDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { RegionsService } from '../regions/regions.service';\nimport { Region } from '../regions/domain/region';\n\nimport { SettingsService } from '../settings/settings.service';\nimport { Settings } from '../settings/domain/settings';\n\nimport { FilesService } from '../files/files.service';\nimport { FileType } from '../files/domain/file';\n\nimport { TenantTypesService } from '../tenant-types/tenant-types.service';\nimport { TenantType } from '../tenant-types/domain/tenant-type';\n\nimport { KycDetailsService } from '../kyc-details/kyc-details.service';\nimport { KycDetails } from '../kyc-details/domain/kyc-details';\n\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/domain/user';\n\nimport {\n  // common\n  Injectable,\n  HttpStatus,\n  UnprocessableEntityException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateTenantDto } from './dto/create-tenant.dto';\nimport { UpdateTenantDto } from './dto/update-tenant.dto';\nimport { TenantRepository } from './infrastructure/persistence/tenant.repository';\nimport { IPaginationOptions } from '../utils/types/pagination-options';\nimport { Tenant } from './domain/tenant';\n\n@Injectable()\nexport class TenantsService {\n  constructor(\n    @Inject(forwardRef(() => RegionsService))\n    private readonly regionService: RegionsService,\n\n    @Inject(forwardRef(() => SettingsService))\n    private readonly settingsService: SettingsService,\n\n    private readonly fileService: FilesService,\n\n    private readonly tenantTypeService: TenantTypesService,\n\n    @Inject(forwardRef(() => KycDetailsService))\n    private readonly kycDetailsService: KycDetailsService,\n\n    @Inject(forwardRef(() => UsersService))\n    private readonly userService: UsersService,\n\n    // Dependencies here\n    private readonly tenantRepository: TenantRepository,\n  ) {}\n\n  async create(createTenantDto: CreateTenantDto) {\n    // Do not remove comment below.\n    // \n\n    let regions: Region[] | null | undefined = undefined;\n\n    if (createTenantDto.regions) {\n      const regionsObjects = await this.regionService.findByIds(\n        createTenantDto.regions.map((entity) => entity.id),\n      );\n      if (regionsObjects.length !== createTenantDto.regions.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            regions: 'notExists',\n          },\n        });\n      }\n      regions = regionsObjects;\n    } else if (createTenantDto.regions === null) {\n      regions = null;\n    }\n\n    let settings: Settings[] | null | undefined = undefined;\n\n    if (createTenantDto.settings) {\n      const settingsObjects = await this.settingsService.findByIds(\n        createTenantDto.settings.map((entity) => entity.id),\n      );\n      if (settingsObjects.length !== createTenantDto.settings.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            settings: 'notExists',\n          },\n        });\n      }\n      settings = settingsObjects;\n    } else if (createTenantDto.settings === null) {\n      settings = null;\n    }\n\n    let logo: FileType | null | undefined = undefined;\n\n    if (createTenantDto.logo) {\n      const logoObject = await this.fileService.findById(\n        createTenantDto.logo.id,\n      );\n      if (!logoObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            logo: 'notExists',\n          },\n        });\n      }\n      logo = logoObject;\n    } else if (createTenantDto.logo === null) {\n      logo = null;\n    }\n\n    let type: TenantType | null | undefined = undefined;\n\n    if (createTenantDto.type) {\n      const typeObject = await this.tenantTypeService.findById(\n        createTenantDto.type.id,\n      );\n      if (!typeObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            type: 'notExists',\n          },\n        });\n      }\n      type = typeObject;\n    } else if (createTenantDto.type === null) {\n      type = null;\n    }\n\n    let kycSubmissions: KycDetails[] | null | undefined = undefined;\n\n    if (createTenantDto.kycSubmissions) {\n      const kycSubmissionsObjects = await this.kycDetailsService.findByIds(\n        createTenantDto.kycSubmissions.map((entity) => entity.id),\n      );\n      if (\n        kycSubmissionsObjects.length !== createTenantDto.kycSubmissions.length\n      ) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            kycSubmissions: 'notExists',\n          },\n        });\n      }\n      kycSubmissions = kycSubmissionsObjects;\n    } else if (createTenantDto.kycSubmissions === null) {\n      kycSubmissions = null;\n    }\n\n    let users: User[] | null | undefined = undefined;\n\n    if (createTenantDto.users) {\n      const usersObjects = await this.userService.findByIds(\n        createTenantDto.users.map((entity) => entity.id),\n      );\n      if (usersObjects.length !== createTenantDto.users.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            users: 'notExists',\n          },\n        });\n      }\n      users = usersObjects;\n    } else if (createTenantDto.users === null) {\n      users = null;\n    }\n\n    return this.tenantRepository.create({\n      // Do not remove comment below.\n      // \n      domain: createTenantDto.domain,\n\n      regions,\n\n      settings,\n\n      schemaName: createTenantDto.schemaName,\n\n      logo,\n\n      address: createTenantDto.address,\n\n      primaryPhone: createTenantDto.primaryPhone,\n\n      primaryEmail: createTenantDto.primaryEmail,\n\n      name: createTenantDto.name,\n\n      type,\n\n      kycSubmissions,\n\n      users,\n\n      isActive: createTenantDto.isActive,\n    });\n  }\n\n  findAllWithPagination({\n    paginationOptions,\n  }: {\n    paginationOptions: IPaginationOptions;\n  }) {\n    return this.tenantRepository.findAllWithPagination({\n      paginationOptions: {\n        page: paginationOptions.page,\n        limit: paginationOptions.limit,\n      },\n    });\n  }\n\n  findById(id: Tenant['id']) {\n    return this.tenantRepository.findById(id);\n  }\n\n  findByIds(ids: Tenant['id'][]) {\n    return this.tenantRepository.findByIds(ids);\n  }\n\n  async update(\n    id: Tenant['id'],\n\n    updateTenantDto: UpdateTenantDto,\n  ) {\n    // Do not remove comment below.\n    // \n\n    let regions: Region[] | null | undefined = undefined;\n\n    if (updateTenantDto.regions) {\n      const regionsObjects = await this.regionService.findByIds(\n        updateTenantDto.regions.map((entity) => entity.id),\n      );\n      if (regionsObjects.length !== updateTenantDto.regions.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            regions: 'notExists',\n          },\n        });\n      }\n      regions = regionsObjects;\n    } else if (updateTenantDto.regions === null) {\n      regions = null;\n    }\n\n    let settings: Settings[] | null | undefined = undefined;\n\n    if (updateTenantDto.settings) {\n      const settingsObjects = await this.settingsService.findByIds(\n        updateTenantDto.settings.map((entity) => entity.id),\n      );\n      if (settingsObjects.length !== updateTenantDto.settings.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            settings: 'notExists',\n          },\n        });\n      }\n      settings = settingsObjects;\n    } else if (updateTenantDto.settings === null) {\n      settings = null;\n    }\n\n    let logo: FileType | null | undefined = undefined;\n\n    if (updateTenantDto.logo) {\n      const logoObject = await this.fileService.findById(\n        updateTenantDto.logo.id,\n      );\n      if (!logoObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            logo: 'notExists',\n          },\n        });\n      }\n      logo = logoObject;\n    } else if (updateTenantDto.logo === null) {\n      logo = null;\n    }\n\n    let type: TenantType | null | undefined = undefined;\n\n    if (updateTenantDto.type) {\n      const typeObject = await this.tenantTypeService.findById(\n        updateTenantDto.type.id,\n      );\n      if (!typeObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            type: 'notExists',\n          },\n        });\n      }\n      type = typeObject;\n    } else if (updateTenantDto.type === null) {\n      type = null;\n    }\n\n    let kycSubmissions: KycDetails[] | null | undefined = undefined;\n\n    if (updateTenantDto.kycSubmissions) {\n      const kycSubmissionsObjects = await this.kycDetailsService.findByIds(\n        updateTenantDto.kycSubmissions.map((entity) => entity.id),\n      );\n      if (\n        kycSubmissionsObjects.length !== updateTenantDto.kycSubmissions.length\n      ) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            kycSubmissions: 'notExists',\n          },\n        });\n      }\n      kycSubmissions = kycSubmissionsObjects;\n    } else if (updateTenantDto.kycSubmissions === null) {\n      kycSubmissions = null;\n    }\n\n    let users: User[] | null | undefined = undefined;\n\n    if (updateTenantDto.users) {\n      const usersObjects = await this.userService.findByIds(\n        updateTenantDto.users.map((entity) => entity.id),\n      );\n      if (usersObjects.length !== updateTenantDto.users.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            users: 'notExists',\n          },\n        });\n      }\n      users = usersObjects;\n    } else if (updateTenantDto.users === null) {\n      users = null;\n    }\n\n    return this.tenantRepository.update(id, {\n      // Do not remove comment below.\n      // \n      domain: updateTenantDto.domain,\n\n      regions,\n\n      settings,\n\n      schemaName: updateTenantDto.schemaName,\n\n      logo,\n\n      address: updateTenantDto.address,\n\n      primaryPhone: updateTenantDto.primaryPhone,\n\n      primaryEmail: updateTenantDto.primaryEmail,\n\n      name: updateTenantDto.name,\n\n      type,\n\n      kycSubmissions,\n\n      users,\n\n      isActive: updateTenantDto.isActive,\n    });\n  }\n\n  remove(id: Tenant['id']) {\n    return this.tenantRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tokens.html":{"url":"classes/Tokens.html","title":"class - Tokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social/tokens.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token1\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                token2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/social/tokens.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        token2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Allow()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/social/tokens.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Allow, IsNotEmpty } from 'class-validator';\n\nexport class Tokens {\n  @ApiProperty()\n  @IsNotEmpty()\n  token1: string;\n\n  @Allow()\n  @ApiProperty()\n  token2?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeOrmConfigService.html":{"url":"injectables/TypeOrmConfigService.html","title":"injectable - TypeOrmConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TypeOrmConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/typeorm-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/database/typeorm-config.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/typeorm-config.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     TypeOrmModuleOptions\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { AllConfigType } from '../config/config.type';\n\n@Injectable()\nexport class TypeOrmConfigService implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: this.configService.get('database.type', { infer: true }),\n      url: this.configService.get('database.url', { infer: true }),\n      host: this.configService.get('database.host', { infer: true }),\n      port: this.configService.get('database.port', { infer: true }),\n      username: this.configService.get('database.username', { infer: true }),\n      password: this.configService.get('database.password', { infer: true }),\n      database: this.configService.get('database.name', { infer: true }),\n      synchronize: this.configService.get('database.synchronize', {\n        infer: true,\n      }),\n      dropSchema: false,\n      keepConnectionAlive: true,\n      logging:\n        this.configService.get('app.nodeEnv', { infer: true }) !== 'production',\n      entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n      migrations: [__dirname + '/migrations/**/*{.ts,.js}'],\n      cli: {\n        entitiesDir: 'src',\n\n        subscribersDir: 'subscriber',\n      },\n      extra: {\n        // based on https://node-postgres.com/apis/pool\n        // max connection pool size\n        max: this.configService.get('database.maxConnections', { infer: true }),\n        ssl: this.configService.get('database.sslEnabled', { infer: true })\n          ? {\n              rejectUnauthorized: this.configService.get(\n                'database.rejectUnauthorized',\n                { infer: true },\n              ),\n              ca:\n                this.configService.get('database.ca', { infer: true }) ??\n                undefined,\n              key:\n                this.configService.get('database.key', { infer: true }) ??\n                undefined,\n              cert:\n                this.configService.get('database.cert', { infer: true }) ??\n                undefined,\n            }\n          : undefined,\n      },\n    } as TypeOrmModuleOptions;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAccountDto.html":{"url":"classes/UpdateAccountDto.html","title":"class - UpdateAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/accounts/dto/update-account.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAccountDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAccountDto } from './create-account.dto';\n\nexport class UpdateAccountDto extends PartialType(CreateAccountDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateKycDetailsDto.html":{"url":"classes/UpdateKycDetailsDto.html","title":"class - UpdateKycDetailsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateKycDetailsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/kyc-details/dto/update-kyc-details.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateKycDetailsDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateKycDetailsDto } from './create-kyc-details.dto';\n\nexport class UpdateKycDetailsDto extends PartialType(CreateKycDetailsDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRegionDto.html":{"url":"classes/UpdateRegionDto.html","title":"class - UpdateRegionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRegionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/regions/dto/update-region.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRegionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateRegionDto } from './create-region.dto';\n\nexport class UpdateRegionDto extends PartialType(CreateRegionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResidenceDto.html":{"url":"classes/UpdateResidenceDto.html","title":"class - UpdateResidenceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResidenceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/residences/dto/update-residence.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResidenceDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateResidenceDto } from './create-residence.dto';\n\nexport class UpdateResidenceDto extends PartialType(CreateResidenceDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSettingsDto.html":{"url":"classes/UpdateSettingsDto.html","title":"class - UpdateSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/dto/update-settings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSettingsDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSettingsDto } from './create-settings.dto';\n\nexport class UpdateSettingsDto extends PartialType(CreateSettingsDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTenantDto.html":{"url":"classes/UpdateTenantDto.html","title":"class - UpdateTenantDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTenantDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenants/dto/update-tenant.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTenantDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTenantDto } from './create-tenant.dto';\n\nexport class UpdateTenantDto extends PartialType(CreateTenantDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTenantTypeDto.html":{"url":"classes/UpdateTenantTypeDto.html","title":"class - UpdateTenantTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTenantTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tenant-types/dto/update-tenant-type.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTenantTypeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTenantTypeDto } from './create-tenant-type.dto';\n\nexport class UpdateTenantTypeDto extends PartialType(CreateTenantTypeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                photo\n                            \n                            \n                                    Optional\n                                provider\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                socialId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'test1@example.com', type: String})@Transform(lowerCaseTransformer)@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'John', type: String})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Doe', type: String})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileDto | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => FileDto})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RoleDto | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => RoleDto})@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        socialId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: () => StatusDto})@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType, ApiPropertyOptional } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nimport { Transform, Type } from 'class-transformer';\nimport { IsEmail, IsOptional, MinLength } from 'class-validator';\nimport { FileDto } from '../../files/dto/file.dto';\nimport { RoleDto } from '../../roles/dto/role.dto';\nimport { StatusDto } from '../../statuses/dto/status.dto';\nimport { lowerCaseTransformer } from '../../utils/transformers/lower-case.transformer';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @ApiPropertyOptional({ example: 'test1@example.com', type: String })\n  @Transform(lowerCaseTransformer)\n  @IsOptional()\n  @IsEmail()\n  email?: string | null;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @MinLength(6)\n  password?: string;\n\n  provider?: string;\n\n  socialId?: string | null;\n\n  @ApiPropertyOptional({ example: 'John', type: String })\n  @IsOptional()\n  firstName?: string | null;\n\n  @ApiPropertyOptional({ example: 'Doe', type: String })\n  @IsOptional()\n  lastName?: string | null;\n\n  @ApiPropertyOptional({ type: () => FileDto })\n  @IsOptional()\n  photo?: FileDto | null;\n\n  @ApiPropertyOptional({ type: () => RoleDto })\n  @IsOptional()\n  @Type(() => RoleDto)\n  role?: RoleDto | null;\n\n  @ApiPropertyOptional({ type: () => StatusDto })\n  @IsOptional()\n  @Type(() => StatusDto)\n  status?: StatusDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/domain/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                kycSubmissions\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    Optional\n                                photo\n                            \n                            \n                                    \n                                    \n                                provider\n                            \n                            \n                                    \n                                    Optional\n                                regions\n                            \n                            \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    \n                                    Optional\n                                settings\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socialId\n                            \n                            \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'john.doe@example.com'})@Expose({groups: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'John'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: idType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        kycSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycDetails[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'Doe'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude({toPlainOnly: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileType | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => FileType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'email'})@Expose({groups: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        regions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Region[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Role})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Settings[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => , nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socialId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: '1234567890'})@Expose({groups: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Status})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tenant\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tenant, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/domain/user.ts:104\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Region } from '../../regions/domain/region';\nimport { Settings } from '../../settings/domain/settings';\nimport { KycDetails } from '../../kyc-details/domain/kyc-details';\nimport { Tenant } from '../../tenants/domain/tenant';\nimport { Exclude, Expose } from 'class-transformer';\nimport { FileType } from '../../files/domain/file';\nimport { Role } from '../../roles/domain/role';\nimport { Status } from '../../statuses/domain/status';\nimport { ApiProperty } from '@nestjs/swagger';\nimport databaseConfig from '../../database/config/database.config';\nimport { DatabaseConfig } from '../../database/config/database-config.type';\n\n// \nconst idType = (databaseConfig() as DatabaseConfig).isDocumentDatabase\n  ? String\n  : Number;\n// \n\nexport class User {\n  @ApiProperty({\n    type: () => [Region],\n    nullable: true,\n  })\n  regions?: Region[] | null;\n\n  @ApiProperty({\n    type: () => [Settings],\n    nullable: true,\n  })\n  settings?: Settings[] | null;\n\n  @ApiProperty({\n    type: () => [KycDetails],\n    nullable: true,\n  })\n  kycSubmissions?: KycDetails[] | null;\n\n  @ApiProperty({\n    type: () => Tenant,\n    nullable: false,\n  })\n  tenant: Tenant;\n\n  @ApiProperty({\n    type: idType,\n  })\n  id: number | string;\n\n  @ApiProperty({\n    type: String,\n    example: 'john.doe@example.com',\n  })\n  @Expose({ groups: ['me', 'admin'] })\n  email: string | null;\n\n  @Exclude({ toPlainOnly: true })\n  password?: string;\n\n  @ApiProperty({\n    type: String,\n    example: 'email',\n  })\n  @Expose({ groups: ['me', 'admin'] })\n  provider: string;\n\n  @ApiProperty({\n    type: String,\n    example: '1234567890',\n  })\n  @Expose({ groups: ['me', 'admin'] })\n  socialId?: string | null;\n\n  @ApiProperty({\n    type: String,\n    example: 'John',\n  })\n  firstName: string | null;\n\n  @ApiProperty({\n    type: String,\n    example: 'Doe',\n  })\n  lastName: string | null;\n\n  @ApiProperty({\n    type: () => FileType,\n  })\n  photo?: FileType | null;\n\n  @ApiProperty({\n    type: () => Role,\n  })\n  role?: Role | null;\n\n  @ApiProperty({\n    type: () => Status,\n  })\n  status?: Status;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n\n  @ApiProperty()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, example: 'userId'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UserDto {\n  @ApiProperty({\n    type: String,\n    example: 'userId',\n  })\n  @IsNotEmpty()\n  id: string | number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/infrastructure/persistence/relational/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                kycSubmissions\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                photo\n                            \n                            \n                                    \n                                provider\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                regions\n                            \n                            \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    \n                                    Optional\n                                settings\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                socialId\n                            \n                            \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                tenant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: String, unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        kycSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KycDetailsEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, childEntity => childEntity.user, {eager: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {eager: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        regions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegionEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {eager: true, nullable: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleEntity | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SettingsEntity[] | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, childEntity => childEntity.user, {eager: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        socialId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: String, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tenant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TenantEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, parentEntity => parentEntity.users, {eager: false, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/relational/entities/user.entity.ts:103\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { RegionEntity } from '../../../../../regions/infrastructure/persistence/relational/entities/region.entity';\n\nimport { SettingsEntity } from '../../../../../settings/infrastructure/persistence/relational/entities/settings.entity';\n\nimport { KycDetailsEntity } from '../../../../../kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity';\n\nimport { TenantEntity } from '../../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\n\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  JoinColumn,\n  OneToOne,\n  OneToMany,\n  JoinTable,\n  ManyToMany,\n} from 'typeorm';\nimport { RoleEntity } from '../../../../../roles/infrastructure/persistence/relational/entities/role.entity';\nimport { StatusEntity } from '../../../../../statuses/infrastructure/persistence/relational/entities/status.entity';\nimport { FileEntity } from '../../../../../files/infrastructure/persistence/relational/entities/file.entity';\n\nimport { AuthProvidersEnum } from '../../../../../auth/auth-providers.enum';\nimport { EntityRelationalHelper } from '../../../../../utils/relational-entity-helper';\n\n@Entity({\n  name: 'user',\n})\nexport class UserEntity extends EntityRelationalHelper {\n  @ManyToMany(() => RegionEntity, { eager: true, nullable: true })\n  @JoinTable()\n  regions?: RegionEntity[] | null;\n\n  @OneToMany(() => SettingsEntity, (childEntity) => childEntity.user, {\n    eager: true,\n    nullable: true,\n  })\n  settings?: SettingsEntity[] | null;\n\n  @OneToMany(() => KycDetailsEntity, (childEntity) => childEntity.user, {\n    eager: true,\n    nullable: true,\n  })\n  kycSubmissions?: KycDetailsEntity[] | null;\n\n  @ManyToOne(() => TenantEntity, (parentEntity) => parentEntity.users, {\n    eager: false,\n    nullable: false,\n  })\n  tenant: TenantEntity;\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  // For \"string | null\" we need to use String type.\n  // More info: https://github.com/typeorm/typeorm/issues/2567\n  @Column({ type: String, unique: true, nullable: true })\n  email: string | null;\n\n  @Column({ nullable: true })\n  password?: string;\n\n  @Column({ default: AuthProvidersEnum.email })\n  provider: string;\n\n  @Index()\n  @Column({ type: String, nullable: true })\n  socialId?: string | null;\n\n  @Index()\n  @Column({ type: String, nullable: true })\n  firstName: string | null;\n\n  @Index()\n  @Column({ type: String, nullable: true })\n  lastName: string | null;\n\n  @OneToOne(() => FileEntity, {\n    eager: true,\n  })\n  @JoinColumn()\n  photo?: FileEntity | null;\n\n  @ManyToOne(() => RoleEntity, {\n    eager: true,\n  })\n  role?: RoleEntity | null;\n\n  @ManyToOne(() => StatusEntity, {\n    eager: true,\n  })\n  status?: StatusEntity;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMapper.html":{"url":"classes/UserMapper.html","title":"class - UserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/infrastructure/persistence/document/mappers/user.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: UserSchemaClass)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/mappers/user.mapper.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            UserSchemaClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/mappers/user.mapper.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserSchemaClass\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../../domain/user';\nimport { UserSchemaClass } from '../entities/user.schema';\nimport { FileSchemaClass } from '../../../../../files/infrastructure/persistence/document/entities/file.schema';\nimport { FileMapper } from '../../../../../files/infrastructure/persistence/document/mappers/file.mapper';\nimport { Role } from '../../../../../roles/domain/role';\nimport { Status } from '../../../../../statuses/domain/status';\nimport { RoleSchema } from '../../../../../roles/infrastructure/persistence/document/entities/role.schema';\nimport { StatusSchema } from '../../../../../statuses/infrastructure/persistence/document/entities/status.schema';\n\nexport class UserMapper {\n  static toDomain(raw: UserSchemaClass): User {\n    const domainEntity = new User();\n    domainEntity.id = raw._id.toString();\n    domainEntity.email = raw.email;\n    domainEntity.password = raw.password;\n    domainEntity.provider = raw.provider;\n    domainEntity.socialId = raw.socialId;\n    domainEntity.firstName = raw.firstName;\n    domainEntity.lastName = raw.lastName;\n    if (raw.photo) {\n      domainEntity.photo = FileMapper.toDomain(raw.photo);\n    } else if (raw.photo === null) {\n      domainEntity.photo = null;\n    }\n\n    if (raw.role) {\n      domainEntity.role = new Role();\n      domainEntity.role.id = raw.role._id;\n    }\n\n    if (raw.status) {\n      domainEntity.status = new Status();\n      domainEntity.status.id = raw.status._id;\n    }\n\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n    domainEntity.deletedAt = raw.deletedAt;\n\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: User): UserSchemaClass {\n    let role: RoleSchema | undefined = undefined;\n\n    if (domainEntity.role) {\n      role = new RoleSchema();\n      role._id = domainEntity.role.id.toString();\n    }\n\n    let photo: FileSchemaClass | undefined = undefined;\n\n    if (domainEntity.photo) {\n      photo = new FileSchemaClass();\n      photo._id = domainEntity.photo.id;\n      photo.path = domainEntity.photo.path;\n    }\n\n    let status: StatusSchema | undefined = undefined;\n\n    if (domainEntity.status) {\n      status = new StatusSchema();\n      status._id = domainEntity.status.id.toString();\n    }\n\n    const persistenceSchema = new UserSchemaClass();\n    if (domainEntity.id && typeof domainEntity.id === 'string') {\n      persistenceSchema._id = domainEntity.id;\n    }\n    persistenceSchema.email = domainEntity.email;\n    persistenceSchema.password = domainEntity.password;\n    persistenceSchema.provider = domainEntity.provider;\n    persistenceSchema.socialId = domainEntity.socialId;\n    persistenceSchema.firstName = domainEntity.firstName;\n    persistenceSchema.lastName = domainEntity.lastName;\n    persistenceSchema.photo = photo;\n    persistenceSchema.role = role;\n    persistenceSchema.status = status;\n    persistenceSchema.createdAt = domainEntity.createdAt;\n    persistenceSchema.updatedAt = domainEntity.updatedAt;\n    persistenceSchema.deletedAt = domainEntity.deletedAt;\n    return persistenceSchema;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMapper-1.html":{"url":"classes/UserMapper-1.html","title":"class - UserMapper-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/infrastructure/persistence/relational/mappers/user.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toDomain\n                            \n                            \n                                    Static\n                                toPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toDomain\n                        \n                    \n                \n            \n            \n                \n                        \n                    toDomain(raw: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/mappers/user.mapper.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                raw\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPersistence(domainEntity: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/mappers/user.mapper.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                domainEntity\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from '../../../../../files/infrastructure/persistence/relational/entities/file.entity';\nimport { RegionMapper } from '../../../../../regions/infrastructure/persistence/relational/mappers/region.mapper';\n\nimport { SettingsMapper } from '../../../../../settings/infrastructure/persistence/relational/mappers/settings.mapper';\n\nimport { KycDetailsMapper } from '../../../../../kyc-details/infrastructure/persistence/relational/mappers/kyc-details.mapper';\n\nimport { TenantMapper } from '../../../../../tenants/infrastructure/persistence/relational/mappers/tenant.mapper';\n\nimport { FileMapper } from '../../../../../files/infrastructure/persistence/relational/mappers/file.mapper';\nimport { RoleEntity } from '../../../../../roles/infrastructure/persistence/relational/entities/role.entity';\nimport { StatusEntity } from '../../../../../statuses/infrastructure/persistence/relational/entities/status.entity';\nimport { User } from '../../../../domain/user';\nimport { UserEntity } from '../entities/user.entity';\n\nexport class UserMapper {\n  static toDomain(raw: UserEntity): User {\n    const domainEntity = new User();\n    if (raw.regions) {\n      domainEntity.regions = raw.regions.map((item) =>\n        RegionMapper.toDomain(item),\n      );\n    } else if (raw.regions === null) {\n      domainEntity.regions = null;\n    }\n\n    if (raw.settings) {\n      domainEntity.settings = raw.settings.map((item) =>\n        SettingsMapper.toDomain(item),\n      );\n    } else if (raw.settings === null) {\n      domainEntity.settings = null;\n    }\n\n    if (raw.kycSubmissions) {\n      domainEntity.kycSubmissions = raw.kycSubmissions.map((item) =>\n        KycDetailsMapper.toDomain(item),\n      );\n    } else if (raw.kycSubmissions === null) {\n      domainEntity.kycSubmissions = null;\n    }\n\n    if (raw.tenant) {\n      domainEntity.tenant = TenantMapper.toDomain(raw.tenant);\n    }\n\n    domainEntity.id = raw.id;\n    domainEntity.email = raw.email;\n    domainEntity.password = raw.password;\n    domainEntity.provider = raw.provider;\n    domainEntity.socialId = raw.socialId;\n    domainEntity.firstName = raw.firstName;\n    domainEntity.lastName = raw.lastName;\n    if (raw.photo) {\n      domainEntity.photo = FileMapper.toDomain(raw.photo);\n    }\n    domainEntity.role = raw.role;\n    domainEntity.status = raw.status;\n    domainEntity.createdAt = raw.createdAt;\n    domainEntity.updatedAt = raw.updatedAt;\n    domainEntity.deletedAt = raw.deletedAt;\n    return domainEntity;\n  }\n\n  static toPersistence(domainEntity: User): UserEntity {\n    let role: RoleEntity | undefined = undefined;\n\n    if (domainEntity.role) {\n      role = new RoleEntity();\n      role.id = Number(domainEntity.role.id);\n    }\n\n    let photo: FileEntity | undefined | null = undefined;\n\n    if (domainEntity.photo) {\n      photo = new FileEntity();\n      photo.id = domainEntity.photo.id;\n      photo.path = domainEntity.photo.path;\n    } else if (domainEntity.photo === null) {\n      photo = null;\n    }\n\n    let status: StatusEntity | undefined = undefined;\n\n    if (domainEntity.status) {\n      status = new StatusEntity();\n      status.id = Number(domainEntity.status.id);\n    }\n\n    const persistenceEntity = new UserEntity();\n    if (domainEntity.regions) {\n      persistenceEntity.regions = domainEntity.regions.map((item) =>\n        RegionMapper.toPersistence(item),\n      );\n    } else if (domainEntity.regions === null) {\n      persistenceEntity.regions = null;\n    }\n\n    if (domainEntity.settings) {\n      persistenceEntity.settings = domainEntity.settings.map((item) =>\n        SettingsMapper.toPersistence(item),\n      );\n    } else if (domainEntity.settings === null) {\n      persistenceEntity.settings = null;\n    }\n\n    if (domainEntity.kycSubmissions) {\n      persistenceEntity.kycSubmissions = domainEntity.kycSubmissions.map(\n        (item) => KycDetailsMapper.toPersistence(item),\n      );\n    } else if (domainEntity.kycSubmissions === null) {\n      persistenceEntity.kycSubmissions = null;\n    }\n\n    if (domainEntity.tenant) {\n      persistenceEntity.tenant = TenantMapper.toPersistence(\n        domainEntity.tenant,\n      );\n    }\n\n    if (domainEntity.id && typeof domainEntity.id === 'number') {\n      persistenceEntity.id = domainEntity.id;\n    }\n    persistenceEntity.email = domainEntity.email;\n    persistenceEntity.password = domainEntity.password;\n    persistenceEntity.provider = domainEntity.provider;\n    persistenceEntity.socialId = domainEntity.socialId;\n    persistenceEntity.firstName = domainEntity.firstName;\n    persistenceEntity.lastName = domainEntity.lastName;\n    persistenceEntity.photo = photo;\n    persistenceEntity.role = role;\n    persistenceEntity.status = status;\n    persistenceEntity.createdAt = domainEntity.createdAt;\n    persistenceEntity.updatedAt = domainEntity.updatedAt;\n    persistenceEntity.deletedAt = domainEntity.deletedAt;\n    return persistenceEntity;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/infrastructure/persistence/user.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findByEmail\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByIds\n                            \n                            \n                                    Abstract\n                                findBySocialIdAndProvider\n                            \n                            \n                                    Abstract\n                                findManyWithPagination\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                            \n                                    Abstract\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/user.repository.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/user.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/user.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/user.repository.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findBySocialIdAndProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBySocialIdAndProvider(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/user.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findManyWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/user.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/user.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: User, payload: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/user.repository.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from '../../../utils/types/deep-partial.type';\nimport { NullableType } from '../../../utils/types/nullable.type';\nimport { IPaginationOptions } from '../../../utils/types/pagination-options';\nimport { User } from '../../domain/user';\n\nimport { FilterUserDto, SortUserDto } from '../../dto/query-user.dto';\n\nexport abstract class UserRepository {\n  abstract create(\n    data: Omit,\n  ): Promise;\n\n  abstract findManyWithPagination({\n    filterOptions,\n    sortOptions,\n    paginationOptions,\n  }: {\n    filterOptions?: FilterUserDto | null;\n    sortOptions?: SortUserDto[] | null;\n    paginationOptions: IPaginationOptions;\n  }): Promise;\n\n  abstract findById(id: User['id']): Promise>;\n  abstract findByIds(ids: User['id'][]): Promise;\n  abstract findByEmail(email: User['email']): Promise>;\n  abstract findBySocialIdAndProvider({\n    socialId,\n    provider,\n  }: {\n    socialId: User['socialId'];\n    provider: User['provider'];\n  }): Promise>;\n\n  abstract update(\n    id: User['id'],\n    payload: DeepPartial,\n  ): Promise;\n\n  abstract remove(id: User['id']): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSchemaClass.html":{"url":"classes/UserSchemaClass.html","title":"class - UserSchemaClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSchemaClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/infrastructure/persistence/document/entities/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    Optional\n                                photo\n                            \n                            \n                                    \n                                provider\n                            \n                            \n                                    \n                                    Optional\n                                role\n                            \n                            \n                                    \n                                    Optional\n                                socialId\n                            \n                            \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: now})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileSchemaClass | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: FileSchemaClass})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RoleSchema | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: RoleSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        socialId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusSchema\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StatusSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: now})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/infrastructure/persistence/document/entities/user.schema.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { now, HydratedDocument } from 'mongoose';\n\nimport { AuthProvidersEnum } from '../../../../../auth/auth-providers.enum';\nimport { FileSchemaClass } from '../../../../../files/infrastructure/persistence/document/entities/file.schema';\nimport { EntityDocumentHelper } from '../../../../../utils/document-entity-helper';\nimport { StatusSchema } from '../../../../../statuses/infrastructure/persistence/document/entities/status.schema';\nimport { RoleSchema } from '../../../../../roles/infrastructure/persistence/document/entities/role.schema';\n\nexport type UserSchemaDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    getters: true,\n  },\n})\nexport class UserSchemaClass extends EntityDocumentHelper {\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  email: string | null;\n\n  @Prop()\n  password?: string;\n\n  @Prop({\n    default: AuthProvidersEnum.email,\n  })\n  provider: string;\n\n  @Prop({\n    type: String,\n    default: null,\n  })\n  socialId?: string | null;\n\n  @Prop({\n    type: String,\n  })\n  firstName: string | null;\n\n  @Prop({\n    type: String,\n  })\n  lastName: string | null;\n\n  @Prop({\n    type: FileSchemaClass,\n  })\n  photo?: FileSchemaClass | null;\n\n  @Prop({\n    type: RoleSchema,\n  })\n  role?: RoleSchema | null;\n\n  @Prop({\n    type: StatusSchema,\n  })\n  status?: StatusSchema;\n\n  @Prop({ default: now })\n  createdAt: Date;\n\n  @Prop({ default: now })\n  updatedAt: Date;\n\n  @Prop()\n  deletedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(UserSchemaClass);\n\nUserSchema.index({ 'role._id': 1 });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserSeedModule.html":{"url":"modules/UserSeedModule.html","title":"module - UserSeedModule","body":"\n                   \n\n\n\n\n    Modules\n    UserSeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserSeedModule\n\n\n\ncluster_UserSeedModule_exports\n\n\n\ncluster_UserSeedModule_providers\n\n\n\n\nUserSeedService \n\nUserSeedService \n\n\n\nUserSeedModule\n\nUserSeedModule\n\nUserSeedService  -->\n\nUserSeedModule->UserSeedService \n\n\n\n\n\nUserSeedService\n\nUserSeedService\n\nUserSeedModule -->\n\nUserSeedService->UserSeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/seeds/document/user/user-seed.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserSeedService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserSeedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSeedService } from './user-seed.service';\nimport {\n  UserSchemaClass,\n  UserSchema,\n} from '../../../../users/infrastructure/persistence/document/entities/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: UserSchemaClass.name,\n        schema: UserSchema,\n      },\n    ]),\n  ],\n  providers: [UserSeedService],\n  exports: [UserSeedService],\n})\nexport class UserSeedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserSeedService.html":{"url":"injectables/UserSeedService.html","title":"injectable - UserSeedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/document/user/user-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/document/user/user-seed.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/document/user/user-seed.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport bcrypt from 'bcryptjs';\nimport { Model } from 'mongoose';\nimport { RoleEnum } from '../../../../roles/roles.enum';\nimport { StatusEnum } from '../../../../statuses/statuses.enum';\nimport { UserSchemaClass } from '../../../../users/infrastructure/persistence/document/entities/user.schema';\n\n@Injectable()\nexport class UserSeedService {\n  constructor(\n    @InjectModel(UserSchemaClass.name)\n    private readonly model: Model,\n  ) {}\n\n  async run() {\n    const admin = await this.model.findOne({\n      email: 'admin@example.com',\n    });\n\n    if (!admin) {\n      const salt = await bcrypt.genSalt();\n      const password = await bcrypt.hash('secret', salt);\n\n      const data = new this.model({\n        email: 'admin@example.com',\n        password: password,\n        firstName: 'Super',\n        lastName: 'Admin',\n        role: {\n          _id: RoleEnum.admin.toString(),\n        },\n        status: {\n          _id: StatusEnum.active.toString(),\n        },\n      });\n      await data.save();\n    }\n\n    const user = await this.model.findOne({\n      email: 'john.doe@example.com',\n    });\n\n    if (!user) {\n      const salt = await bcrypt.genSalt();\n      const password = await bcrypt.hash('secret', salt);\n\n      const data = new this.model({\n        email: 'john.doe@example.com',\n        password: password,\n        firstName: 'John',\n        lastName: 'Doe',\n        role: {\n          _id: RoleEnum.user.toString(),\n        },\n        status: {\n          _id: StatusEnum.active.toString(),\n        },\n      });\n\n      await data.save();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserSeedService-1.html":{"url":"injectables/UserSeedService-1.html","title":"injectable - UserSeedService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserSeedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/relational/user/user-seed.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildUserData\n                            \n                            \n                                    Private\n                                    Async\n                                createUserForRole\n                            \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, tenantRepository: Repository, regionRepository: Repository, roleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/seeds/relational/user/user-seed.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildUserData(tenant: TenantEntity, role: RoleEntity, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/user/user-seed.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tenant\n                                            \n                                                            TenantEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            RoleEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Partial\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createUserForRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserForRole(tenant: TenantEntity, role: RoleEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/user/user-seed.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tenant\n                                            \n                                                            TenantEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            RoleEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/seeds/relational/user/user-seed.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport bcrypt from 'bcryptjs';\nimport { RoleEnum } from '../../../../roles/roles.enum';\nimport { StatusEnum } from '../../../../statuses/statuses.enum';\nimport { UserEntity } from '../../../../users/infrastructure/persistence/relational/entities/user.entity';\nimport { TenantEntity } from '../../../../tenants/infrastructure/persistence/relational/entities/tenant.entity';\nimport { RegionEntity } from '../../../../regions/infrastructure/persistence/relational/entities/region.entity';\nimport { RoleEntity } from '../../../../roles/infrastructure/persistence/relational/entities/role.entity';\n\n@Injectable()\nexport class UserSeedService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(TenantEntity)\n    private readonly tenantRepository: Repository,\n    @InjectRepository(RegionEntity)\n    private readonly regionRepository: Repository,\n    @InjectRepository(RoleEntity)\n    private readonly roleRepository: Repository,\n  ) {}\n\n  async run() {\n    const tenants = await this.tenantRepository.find({\n      relations: ['roles'],\n    });\n\n    for (const tenant of tenants) {\n      const roles = await this.roleRepository.find({\n        where: { tenant: { id: tenant.id } },\n      });\n\n      for (const role of roles) {\n        await this.createUserForRole(tenant, role);\n      }\n    }\n  }\n\n  private async createUserForRole(tenant: TenantEntity, role: RoleEntity) {\n    const existingUser = await this.userRepository.findOne({\n      where: {\n        tenant: { id: tenant.id },\n        role: { id: role.id },\n      },\n    });\n\n    if (!existingUser) {\n      const salt = await bcrypt.genSalt();\n      const password = await bcrypt.hash('secret', salt);\n      const userData = this.buildUserData(tenant, role, password);\n\n      if (role.id === RoleEnum.agent) {\n        const regions = await this.regionRepository.find({\n          where: { tenant: { id: tenant.id } },\n          take: 2, // Assign first 2 regions\n        });\n        userData.regions = regions;\n      }\n\n      await this.userRepository.save(userData);\n    }\n  }\n\n  private buildUserData(\n    tenant: TenantEntity,\n    role: RoleEntity,\n    password: string,\n  ): Partial {\n    const roleName = role.name || '';\n    const baseUser = {\n      firstName: roleName,\n      lastName: 'User',\n      email: `${roleName.toLowerCase()}.${(tenant?.name || '').toLowerCase().replace(/\\s+/g, '')}@example.com`,\n      password,\n      tenant,\n      role,\n      status: { id: StatusEnum.active },\n    };\n\n    return this.userRepository.create(baseUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProfileDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({type: User})@SerializeOptions({groups: undefined})@Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProfileDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(query: QueryUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: undefined})@SerializeOptions({groups: undefined})@Get()@HttpCode(HttpStatus.OK)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            QueryUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: User})@SerializeOptions({groups: undefined})@Get(':id')@HttpCode(HttpStatus.OK)@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', type: String, required: true})@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: User, updateProfileDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: User})@SerializeOptions({groups: undefined})@Patch(':id')@HttpCode(HttpStatus.OK)@ApiParam({name: 'id', type: String, required: true})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProfileDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  HttpStatus,\n  HttpCode,\n  SerializeOptions,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiOkResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Roles } from '../roles/roles.decorator';\nimport { RoleEnum } from '../roles/roles.enum';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport {\n  InfinityPaginationResponse,\n  InfinityPaginationResponseDto,\n} from '../utils/dto/infinity-pagination-response.dto';\nimport { NullableType } from '../utils/types/nullable.type';\nimport { QueryUserDto } from './dto/query-user.dto';\nimport { User } from './domain/user';\nimport { UsersService } from './users.service';\nimport { RolesGuard } from '../roles/roles.guard';\nimport { infinityPagination } from '../utils/infinity-pagination';\n\n@ApiBearerAuth()\n@Roles(RoleEnum.admin)\n@UseGuards(AuthGuard('jwt'), RolesGuard)\n@ApiTags('Users')\n@Controller({\n  path: 'users',\n  version: '1',\n})\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @ApiCreatedResponse({\n    type: User,\n  })\n  @SerializeOptions({\n    groups: ['admin'],\n  })\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  create(@Body() createProfileDto: CreateUserDto): Promise {\n    return this.usersService.create(createProfileDto);\n  }\n\n  @ApiOkResponse({\n    type: InfinityPaginationResponse(User),\n  })\n  @SerializeOptions({\n    groups: ['admin'],\n  })\n  @Get()\n  @HttpCode(HttpStatus.OK)\n  async findAll(\n    @Query() query: QueryUserDto,\n  ): Promise> {\n    const page = query?.page ?? 1;\n    let limit = query?.limit ?? 10;\n    if (limit > 50) {\n      limit = 50;\n    }\n\n    return infinityPagination(\n      await this.usersService.findManyWithPagination({\n        filterOptions: query?.filters,\n        sortOptions: query?.sort,\n        paginationOptions: {\n          page,\n          limit,\n        },\n      }),\n      { page, limit },\n    );\n  }\n\n  @ApiOkResponse({\n    type: User,\n  })\n  @SerializeOptions({\n    groups: ['admin'],\n  })\n  @Get(':id')\n  @HttpCode(HttpStatus.OK)\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  findOne(@Param('id') id: User['id']): Promise> {\n    return this.usersService.findById(id);\n  }\n\n  @ApiOkResponse({\n    type: User,\n  })\n  @SerializeOptions({\n    groups: ['admin'],\n  })\n  @Patch(':id')\n  @HttpCode(HttpStatus.OK)\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  update(\n    @Param('id') id: User['id'],\n    @Body() updateProfileDto: UpdateUserDto,\n  ): Promise {\n    return this.usersService.update(id, updateProfileDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({\n    name: 'id',\n    type: String,\n    required: true,\n  })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  remove(@Param('id') id: User['id']): Promise {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersDocumentRepository.html":{"url":"injectables/UsersDocumentRepository.html","title":"injectable - UsersDocumentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersDocumentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/infrastructure/persistence/document/repositories/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                findBySocialIdAndProvider\n                            \n                            \n                                    Async\n                                findManyWithPagination\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findBySocialIdAndProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBySocialIdAndProvider(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: User, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/document/repositories/user.repository.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { FilterUserDto, SortUserDto } from '../../../../dto/query-user.dto';\nimport { User } from '../../../../domain/user';\nimport { UserRepository } from '../../user.repository';\nimport { UserSchemaClass } from '../entities/user.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FilterQuery, Model } from 'mongoose';\nimport { UserMapper } from '../mappers/user.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class UsersDocumentRepository implements UserRepository {\n  constructor(\n    @InjectModel(UserSchemaClass.name)\n    private readonly usersModel: Model,\n  ) {}\n\n  async create(data: User): Promise {\n    const persistenceModel = UserMapper.toPersistence(data);\n    const createdUser = new this.usersModel(persistenceModel);\n    const userObject = await createdUser.save();\n    return UserMapper.toDomain(userObject);\n  }\n\n  async findManyWithPagination({\n    filterOptions,\n    sortOptions,\n    paginationOptions,\n  }: {\n    filterOptions?: FilterUserDto | null;\n    sortOptions?: SortUserDto[] | null;\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const where: FilterQuery = {};\n    if (filterOptions?.roles?.length) {\n      where['role._id'] = {\n        $in: filterOptions.roles.map((role) => role.id.toString()),\n      };\n    }\n\n    const userObjects = await this.usersModel\n      .find(where)\n      .sort(\n        sortOptions?.reduce(\n          (accumulator, sort) => ({\n            ...accumulator,\n            [sort.orderBy === 'id' ? '_id' : sort.orderBy]:\n              sort.order.toUpperCase() === 'ASC' ? 1 : -1,\n          }),\n          {},\n        ),\n      )\n      .skip((paginationOptions.page - 1) * paginationOptions.limit)\n      .limit(paginationOptions.limit);\n\n    return userObjects.map((userObject) => UserMapper.toDomain(userObject));\n  }\n\n  async findById(id: User['id']): Promise> {\n    const userObject = await this.usersModel.findById(id);\n    return userObject ? UserMapper.toDomain(userObject) : null;\n  }\n\n  async findByIds(ids: User['id'][]): Promise {\n    const userObjects = await this.usersModel.find({ _id: { $in: ids } });\n    return userObjects.map((userObject) => UserMapper.toDomain(userObject));\n  }\n\n  async findByEmail(email: User['email']): Promise> {\n    if (!email) return null;\n\n    const userObject = await this.usersModel.findOne({ email });\n    return userObject ? UserMapper.toDomain(userObject) : null;\n  }\n\n  async findBySocialIdAndProvider({\n    socialId,\n    provider,\n  }: {\n    socialId: User['socialId'];\n    provider: User['provider'];\n  }): Promise> {\n    if (!socialId || !provider) return null;\n\n    const userObject = await this.usersModel.findOne({\n      socialId,\n      provider,\n    });\n\n    return userObject ? UserMapper.toDomain(userObject) : null;\n  }\n\n  async update(id: User['id'], payload: Partial): Promise {\n    const clonedPayload = { ...payload };\n    delete clonedPayload.id;\n\n    const filter = { _id: id.toString() };\n    const user = await this.usersModel.findOne(filter);\n\n    if (!user) {\n      return null;\n    }\n\n    const userObject = await this.usersModel.findOneAndUpdate(\n      filter,\n      UserMapper.toPersistence({\n        ...UserMapper.toDomain(user),\n        ...clonedPayload,\n      }),\n      { new: true },\n    );\n\n    return userObject ? UserMapper.toDomain(userObject) : null;\n  }\n\n  async remove(id: User['id']): Promise {\n    await this.usersModel.deleteOne({\n      _id: id.toString(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nFilesModule\n\nFilesModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\n\n\nRegionsModule\n\nRegionsModule\n\nUsersModule -->\n\nRegionsModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilesModule\n                        \n                        \n                            RegionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RegionsModule } from '../regions/regions.module';\nimport { SettingsModule } from '../settings/settings.module';\nimport { KycDetailsModule } from '../kyc-details/kyc-details.module';\nimport { TenantsModule } from '../tenants/tenants.module';\nimport {\n  // common\n  Module,\n  forwardRef,\n} from '@nestjs/common';\n\nimport { UsersController } from './users.controller';\n\nimport { UsersService } from './users.service';\nimport { DocumentUserPersistenceModule } from './infrastructure/persistence/document/document-persistence.module';\nimport { RelationalUserPersistenceModule } from './infrastructure/persistence/relational/relational-persistence.module';\nimport { DatabaseConfig } from '../database/config/database-config.type';\nimport databaseConfig from '../database/config/database.config';\nimport { FilesModule } from '../files/files.module';\n\n// \nconst infrastructurePersistenceModule = (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentUserPersistenceModule\n  : RelationalUserPersistenceModule;\n// \n\n@Module({\n  imports: [\n    RegionsModule,\n\n    forwardRef(() => SettingsModule),\n\n    forwardRef(() => KycDetailsModule),\n\n    forwardRef(() => TenantsModule),\n\n    // import modules, etc.\n    infrastructurePersistenceModule,\n    FilesModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService, infrastructurePersistenceModule],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersRelationalRepository.html":{"url":"injectables/UsersRelationalRepository.html","title":"injectable - UsersRelationalRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersRelationalRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/infrastructure/persistence/relational/repositories/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIds\n                            \n                            \n                                    Async\n                                findBySocialIdAndProvider\n                            \n                            \n                                    Async\n                                findManyWithPagination\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findBySocialIdAndProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    findBySocialIdAndProvider(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findManyWithPagination\n                        \n                    \n                \n            \n            \n                \n                        \n                    findManyWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: User, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/infrastructure/persistence/relational/repositories/user.repository.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { FindOptionsWhere, Repository, In } from 'typeorm';\nimport { UserEntity } from '../entities/user.entity';\nimport { NullableType } from '../../../../../utils/types/nullable.type';\nimport { FilterUserDto, SortUserDto } from '../../../../dto/query-user.dto';\nimport { User } from '../../../../domain/user';\nimport { UserRepository } from '../../user.repository';\nimport { UserMapper } from '../mappers/user.mapper';\nimport { IPaginationOptions } from '../../../../../utils/types/pagination-options';\n\n@Injectable()\nexport class UsersRelationalRepository implements UserRepository {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly usersRepository: Repository,\n  ) {}\n\n  async create(data: User): Promise {\n    const persistenceModel = UserMapper.toPersistence(data);\n    const newEntity = await this.usersRepository.save(\n      this.usersRepository.create(persistenceModel),\n    );\n    return UserMapper.toDomain(newEntity);\n  }\n\n  async findManyWithPagination({\n    filterOptions,\n    sortOptions,\n    paginationOptions,\n  }: {\n    filterOptions?: FilterUserDto | null;\n    sortOptions?: SortUserDto[] | null;\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    const where: FindOptionsWhere = {};\n    if (filterOptions?.roles?.length) {\n      where.role = filterOptions.roles.map((role) => ({\n        id: Number(role.id),\n      }));\n    }\n\n    const entities = await this.usersRepository.find({\n      skip: (paginationOptions.page - 1) * paginationOptions.limit,\n      take: paginationOptions.limit,\n      where: where,\n      order: sortOptions?.reduce(\n        (accumulator, sort) => ({\n          ...accumulator,\n          [sort.orderBy]: sort.order,\n        }),\n        {},\n      ),\n    });\n\n    return entities.map((user) => UserMapper.toDomain(user));\n  }\n\n  async findById(id: User['id']): Promise> {\n    const entity = await this.usersRepository.findOne({\n      where: { id: Number(id) },\n    });\n\n    return entity ? UserMapper.toDomain(entity) : null;\n  }\n\n  async findByIds(ids: User['id'][]): Promise {\n    const entities = await this.usersRepository.find({\n      where: { id: In(ids) },\n    });\n\n    return entities.map((user) => UserMapper.toDomain(user));\n  }\n\n  async findByEmail(email: User['email']): Promise> {\n    if (!email) return null;\n\n    const entity = await this.usersRepository.findOne({\n      where: { email },\n    });\n\n    return entity ? UserMapper.toDomain(entity) : null;\n  }\n\n  async findBySocialIdAndProvider({\n    socialId,\n    provider,\n  }: {\n    socialId: User['socialId'];\n    provider: User['provider'];\n  }): Promise> {\n    if (!socialId || !provider) return null;\n\n    const entity = await this.usersRepository.findOne({\n      where: { socialId, provider },\n    });\n\n    return entity ? UserMapper.toDomain(entity) : null;\n  }\n\n  async update(id: User['id'], payload: Partial): Promise {\n    const entity = await this.usersRepository.findOne({\n      where: { id: Number(id) },\n    });\n\n    if (!entity) {\n      throw new Error('User not found');\n    }\n\n    const updatedEntity = await this.usersRepository.save(\n      this.usersRepository.create(\n        UserMapper.toPersistence({\n          ...UserMapper.toDomain(entity),\n          ...payload,\n        }),\n      ),\n    );\n\n    return UserMapper.toDomain(updatedEntity);\n  }\n\n  async remove(id: User['id']): Promise {\n    await this.usersRepository.softDelete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                findByIds\n                            \n                            \n                                findBySocialIdAndProvider\n                            \n                            \n                                findManyWithPagination\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(regionService: RegionsService, settingsService: SettingsService, kycDetailsService: KycDetailsService, tenantService: TenantsService, usersRepository: UserRepository, filesService: FilesService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regionService\n                                                  \n                                                        \n                                                                        RegionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        kycDetailsService\n                                                  \n                                                        \n                                                                        KycDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tenantService\n                                                  \n                                                        \n                                                                        TenantsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filesService\n                                                  \n                                                        \n                                                                        FilesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:259\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:251\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByIds\n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:255\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findBySocialIdAndProvider\n                        \n                    \n                \n            \n            \n                \nfindBySocialIdAndProvider(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findManyWithPagination\n                        \n                    \n                \n            \n            \n                \nfindManyWithPagination(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:235\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:472\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: User, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:276\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { RegionsService } from '../regions/regions.service';\nimport { Region } from '../regions/domain/region';\n\nimport { SettingsService } from '../settings/settings.service';\nimport { Settings } from '../settings/domain/settings';\n\nimport { KycDetailsService } from '../kyc-details/kyc-details.service';\nimport { KycDetails } from '../kyc-details/domain/kyc-details';\n\nimport { TenantsService } from '../tenants/tenants.service';\nimport { Tenant } from '../tenants/domain/tenant';\n\nimport {\n  HttpStatus,\n  Injectable,\n  UnprocessableEntityException,\n  Inject,\n  forwardRef,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { NullableType } from '../utils/types/nullable.type';\nimport { FilterUserDto, SortUserDto } from './dto/query-user.dto';\nimport { UserRepository } from './infrastructure/persistence/user.repository';\nimport { User } from './domain/user';\nimport bcrypt from 'bcryptjs';\nimport { AuthProvidersEnum } from '../auth/auth-providers.enum';\nimport { FilesService } from '../files/files.service';\nimport { RoleEnum } from '../roles/roles.enum';\nimport { StatusEnum } from '../statuses/statuses.enum';\nimport { IPaginationOptions } from '../utils/types/pagination-options';\nimport { FileType } from '../files/domain/file';\nimport { Role } from '../roles/domain/role';\nimport { Status } from '../statuses/domain/status';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    private readonly regionService: RegionsService,\n\n    @Inject(forwardRef(() => SettingsService))\n    private readonly settingsService: SettingsService,\n\n    @Inject(forwardRef(() => KycDetailsService))\n    private readonly kycDetailsService: KycDetailsService,\n\n    @Inject(forwardRef(() => TenantsService))\n    private readonly tenantService: TenantsService,\n\n    private readonly usersRepository: UserRepository,\n    private readonly filesService: FilesService,\n  ) {}\n\n  async create(createUserDto: CreateUserDto): Promise {\n    // Do not remove comment below.\n    // \n    let regions: Region[] | null | undefined = undefined;\n\n    if (createUserDto.regions) {\n      const regionsObjects = await this.regionService.findByIds(\n        createUserDto.regions.map((entity) => entity.id),\n      );\n      if (regionsObjects.length !== createUserDto.regions.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            regions: 'notExists',\n          },\n        });\n      }\n      regions = regionsObjects;\n    } else if (createUserDto.regions === null) {\n      regions = null;\n    }\n\n    let settings: Settings[] | null | undefined = undefined;\n\n    if (createUserDto.settings) {\n      const settingsObjects = await this.settingsService.findByIds(\n        createUserDto.settings.map((entity) => entity.id),\n      );\n      if (settingsObjects.length !== createUserDto.settings.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            settings: 'notExists',\n          },\n        });\n      }\n      settings = settingsObjects;\n    } else if (createUserDto.settings === null) {\n      settings = null;\n    }\n\n    let kycSubmissions: KycDetails[] | null | undefined = undefined;\n\n    if (createUserDto.kycSubmissions) {\n      const kycSubmissionsObjects = await this.kycDetailsService.findByIds(\n        createUserDto.kycSubmissions.map((entity) => entity.id),\n      );\n      if (\n        kycSubmissionsObjects.length !== createUserDto.kycSubmissions.length\n      ) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            kycSubmissions: 'notExists',\n          },\n        });\n      }\n      kycSubmissions = kycSubmissionsObjects;\n    } else if (createUserDto.kycSubmissions === null) {\n      kycSubmissions = null;\n    }\n\n    const tenantObject = await this.tenantService.findById(\n      createUserDto.tenant.id,\n    );\n    if (!tenantObject) {\n      throw new UnprocessableEntityException({\n        status: HttpStatus.UNPROCESSABLE_ENTITY,\n        errors: {\n          tenant: 'notExists',\n        },\n      });\n    }\n    const tenant = tenantObject;\n\n    let password: string | undefined = undefined;\n\n    if (createUserDto.password) {\n      const salt = await bcrypt.genSalt();\n      password = await bcrypt.hash(createUserDto.password, salt);\n    }\n\n    let email: string | null = null;\n\n    if (createUserDto.email) {\n      const userObject = await this.usersRepository.findByEmail(\n        createUserDto.email,\n      );\n      if (userObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            email: 'emailAlreadyExists',\n          },\n        });\n      }\n      email = createUserDto.email;\n    }\n\n    let photo: FileType | null | undefined = undefined;\n\n    if (createUserDto.photo?.id) {\n      const fileObject = await this.filesService.findById(\n        createUserDto.photo.id,\n      );\n      if (!fileObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            photo: 'imageNotExists',\n          },\n        });\n      }\n      photo = fileObject;\n    } else if (createUserDto.photo === null) {\n      photo = null;\n    }\n\n    let role: Role | undefined = undefined;\n\n    if (createUserDto.role?.id) {\n      const roleObject = Object.values(RoleEnum)\n        .map(String)\n        .includes(String(createUserDto.role.id));\n      if (!roleObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            role: 'roleNotExists',\n          },\n        });\n      }\n\n      role = {\n        id: createUserDto.role.id,\n      };\n    }\n\n    let status: Status | undefined = undefined;\n\n    if (createUserDto.status?.id) {\n      const statusObject = Object.values(StatusEnum)\n        .map(String)\n        .includes(String(createUserDto.status.id));\n      if (!statusObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            status: 'statusNotExists',\n          },\n        });\n      }\n\n      status = {\n        id: createUserDto.status.id,\n      };\n    }\n\n    return this.usersRepository.create({\n      // Do not remove comment below.\n      // \n      regions,\n\n      settings,\n\n      kycSubmissions,\n\n      tenant,\n\n      firstName: createUserDto.firstName,\n      lastName: createUserDto.lastName,\n      email: email,\n      password: password,\n      photo: photo,\n      role: role,\n      status: status,\n      provider: createUserDto.provider ?? AuthProvidersEnum.email,\n      socialId: createUserDto.socialId,\n    });\n  }\n\n  findManyWithPagination({\n    filterOptions,\n    sortOptions,\n    paginationOptions,\n  }: {\n    filterOptions?: FilterUserDto | null;\n    sortOptions?: SortUserDto[] | null;\n    paginationOptions: IPaginationOptions;\n  }): Promise {\n    return this.usersRepository.findManyWithPagination({\n      filterOptions,\n      sortOptions,\n      paginationOptions,\n    });\n  }\n\n  findById(id: User['id']): Promise> {\n    return this.usersRepository.findById(id);\n  }\n\n  findByIds(ids: User['id'][]): Promise {\n    return this.usersRepository.findByIds(ids);\n  }\n\n  findByEmail(email: User['email']): Promise> {\n    return this.usersRepository.findByEmail(email);\n  }\n\n  findBySocialIdAndProvider({\n    socialId,\n    provider,\n  }: {\n    socialId: User['socialId'];\n    provider: User['provider'];\n  }): Promise> {\n    return this.usersRepository.findBySocialIdAndProvider({\n      socialId,\n      provider,\n    });\n  }\n\n  async update(\n    id: User['id'],\n    updateUserDto: UpdateUserDto,\n  ): Promise {\n    // Do not remove comment below.\n    // \n    let regions: Region[] | null | undefined = undefined;\n\n    if (updateUserDto.regions) {\n      const regionsObjects = await this.regionService.findByIds(\n        updateUserDto.regions.map((entity) => entity.id),\n      );\n      if (regionsObjects.length !== updateUserDto.regions.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            regions: 'notExists',\n          },\n        });\n      }\n      regions = regionsObjects;\n    } else if (updateUserDto.regions === null) {\n      regions = null;\n    }\n\n    let settings: Settings[] | null | undefined = undefined;\n\n    if (updateUserDto.settings) {\n      const settingsObjects = await this.settingsService.findByIds(\n        updateUserDto.settings.map((entity) => entity.id),\n      );\n      if (settingsObjects.length !== updateUserDto.settings.length) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            settings: 'notExists',\n          },\n        });\n      }\n      settings = settingsObjects;\n    } else if (updateUserDto.settings === null) {\n      settings = null;\n    }\n\n    let kycSubmissions: KycDetails[] | null | undefined = undefined;\n\n    if (updateUserDto.kycSubmissions) {\n      const kycSubmissionsObjects = await this.kycDetailsService.findByIds(\n        updateUserDto.kycSubmissions.map((entity) => entity.id),\n      );\n      if (\n        kycSubmissionsObjects.length !== updateUserDto.kycSubmissions.length\n      ) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            kycSubmissions: 'notExists',\n          },\n        });\n      }\n      kycSubmissions = kycSubmissionsObjects;\n    } else if (updateUserDto.kycSubmissions === null) {\n      kycSubmissions = null;\n    }\n\n    let tenant: Tenant | undefined = undefined;\n\n    if (updateUserDto.tenant) {\n      const tenantObject = await this.tenantService.findById(\n        updateUserDto.tenant.id,\n      );\n      if (!tenantObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            tenant: 'notExists',\n          },\n        });\n      }\n      tenant = tenantObject;\n    }\n\n    let password: string | undefined = undefined;\n\n    if (updateUserDto.password) {\n      const userObject = await this.usersRepository.findById(id);\n\n      if (userObject && userObject?.password !== updateUserDto.password) {\n        const salt = await bcrypt.genSalt();\n        password = await bcrypt.hash(updateUserDto.password, salt);\n      }\n    }\n\n    let email: string | null | undefined = undefined;\n\n    if (updateUserDto.email) {\n      const userObject = await this.usersRepository.findByEmail(\n        updateUserDto.email,\n      );\n\n      if (userObject && userObject.id !== id) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            email: 'emailAlreadyExists',\n          },\n        });\n      }\n\n      email = updateUserDto.email;\n    } else if (updateUserDto.email === null) {\n      email = null;\n    }\n\n    let photo: FileType | null | undefined = undefined;\n\n    if (updateUserDto.photo?.id) {\n      const fileObject = await this.filesService.findById(\n        updateUserDto.photo.id,\n      );\n      if (!fileObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            photo: 'imageNotExists',\n          },\n        });\n      }\n      photo = fileObject;\n    } else if (updateUserDto.photo === null) {\n      photo = null;\n    }\n\n    let role: Role | undefined = undefined;\n\n    if (updateUserDto.role?.id) {\n      const roleObject = Object.values(RoleEnum)\n        .map(String)\n        .includes(String(updateUserDto.role.id));\n      if (!roleObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            role: 'roleNotExists',\n          },\n        });\n      }\n\n      role = {\n        id: updateUserDto.role.id,\n      };\n    }\n\n    let status: Status | undefined = undefined;\n\n    if (updateUserDto.status?.id) {\n      const statusObject = Object.values(StatusEnum)\n        .map(String)\n        .includes(String(updateUserDto.status.id));\n      if (!statusObject) {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          errors: {\n            status: 'statusNotExists',\n          },\n        });\n      }\n\n      status = {\n        id: updateUserDto.status.id,\n      };\n    }\n\n    return this.usersRepository.update(id, {\n      // Do not remove comment below.\n      // \n      regions,\n\n      settings,\n\n      kycSubmissions,\n\n      tenant,\n\n      firstName: updateUserDto.firstName,\n      lastName: updateUserDto.lastName,\n      email,\n      password,\n      photo,\n      role,\n      status,\n      provider: updateUserDto.provider,\n      socialId: updateUserDto.socialId,\n    });\n  }\n\n  async remove(id: User['id']): Promise {\n    await this.usersRepository.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n1.2.0 (2024-06-05)\nFeatures\n\nauth: update email (9e180c9)\ndocument: add domain condition to document (becb3c3)\ninstall-scripts: add option to select database (2c204a6)\nresource: generate for hexagonal architecture (81b54b1)\nswagger: add DTOs to responses #1504 (0071202)\ntests: add separated container (16c9f0b)\n\nBug Fixes\n\nauth: missing role after refresh token flow #1442 (493742c)\nauth: refresh token only one time use (0e58e08)\ndeps: update aws-sdk-js-v3 monorepo to v3.525.0 (71fbeb3)\ndeps: update aws-sdk-js-v3 monorepo to v3.529.1 (9cc6a60)\ndeps: update aws-sdk-js-v3 monorepo to v3.535.0 (0245df7)\ndeps: update aws-sdk-js-v3 monorepo to v3.540.0 (4e79414)\ndeps: update aws-sdk-js-v3 monorepo to v3.554.0 (33a0fe1)\ndeps: update aws-sdk-js-v3 monorepo to v3.556.0 (ba66854)\ndeps: update aws-sdk-js-v3 monorepo to v3.564.0 (d8cea5f)\ndeps: update aws-sdk-js-v3 monorepo to v3.565.0 (87ba95d)\ndeps: update aws-sdk-js-v3 monorepo to v3.567.0 (2ad8c32)\ndeps: update aws-sdk-js-v3 monorepo to v3.569.0 (dafecc7)\ndeps: update aws-sdk-js-v3 monorepo to v3.582.0 (6e8cee0)\ndeps: update aws-sdk-js-v3 monorepo to v3.583.0 (05556dd)\ndeps: update dependency @nestjs/config to v3.2.1 (a0ca2d0)\ndeps: update dependency @nestjs/config to v3.2.2 (85e6888)\ndeps: update dependency @nestjs/mongoose to v10.0.5 (5f0912c)\ndeps: update dependency @nestjs/mongoose to v10.0.6 (48e484a)\ndeps: update dependency @nestjs/swagger to v7.3.1 (4f28a24)\ndeps: update dependency google-auth-library to v9.10.0 (a26b138)\ndeps: update dependency google-auth-library to v9.7.0 (1e22eea)\ndeps: update dependency google-auth-library to v9.8.0 (60924ae)\ndeps: update dependency google-auth-library to v9.9.0 (6bbd949)\ndeps: update dependency mongoose to v8.2.1 (b16f037)\ndeps: update dependency mongoose to v8.2.2 (8fb2d23)\ndeps: update dependency mongoose to v8.3.1 (67b5b01)\ndeps: update dependency mongoose to v8.3.2 (802ff5a)\ndeps: update dependency mongoose to v8.3.3 (ee7a2b6)\ndeps: update dependency mongoose to v8.3.4 (dd76916)\ndeps: update dependency mongoose to v8.4.0 (85c97e1)\ndeps: update dependency mongoose to v8.4.1 (adb7713)\ndeps: update dependency nodemailer to v6.9.11 (f7dafaa)\ndeps: update dependency nodemailer to v6.9.12 (0c26e2a)\ndeps: update dependency nodemailer to v6.9.13 (bf42e74)\ndeps: update dependency pg to v8.11.4 (a343c03)\ndeps: update dependency pg to v8.11.5 (bd69be5)\ndeps: update dependency reflect-metadata to v0.2.2 (33009b3)\ndeps: update dependency rimraf to v5.0.6 (45ef8e0)\ndeps: update dependency rimraf to v5.0.7 (b9220a0)\ndeps: update dependency swagger-ui-express to v5.0.1 (0da3df0)\ndeps: update nest monorepo to v10.3.4 (cfe1f18)\ndeps: update nest monorepo to v10.3.5 (210df19)\ndeps: update nest monorepo to v10.3.6 (50e2d4b)\ndeps: update nest monorepo to v10.3.7 (b7e8a9b)\ndeps: update nest monorepo to v10.3.8 (766ab6e)\ndeps: upgrade mongoose (acc79ac)\ndocument: find one and update (9e2b0c5)\nfiles: remove endpoint for download file from swagger #1533 (2e9f73e)\nfiles: swagger (11ae998)\ninstall-scripts: correct removing twitter deps (7fc7d8f)\nswc: change path to relative (0e80661)\ntests: add --passWithNoTests to pre-commit #1498 (c5c4c2b)\ntests: overriding .env file (d9a7fd9)\nusers: emailAlreadyExists error in update function (ab530c4)\n\nDocumentation\n\narchitecture: add new page #1512 (726d978)\narchitecture: add Q&A (afbc519)\nauth: add info about JWT strategy (4ab0da9)\ncli: add new page (d3a1b59)\ndatabase: add section about databases (11b58ea)\ndatabase: typos (b60d4ec)\nupdate .all-contributorsrc (d523e26)\nupdate README.md (37af8e8)\n\nCode Refactoring\n\ncorrect optional properties (c108a30)\ndatabase: change relation (8c1df7a)\nreplace http exception (9b38243)\nrepositories: simplify (2896589)\n\nTests\n\nuser: add test for updating email (3110e44)\n\nContinuous Integration\n\nadd database selection (e0a4f32)\n\n1.1.0 (2024-02-25)\nFeatures\n\nadd expires to url (8e17307)\nadd factory for seed (d826030)\nadd install script (1bddd8e)\nadd LICENSE (dee24cf)\nadd refresh token (c1cd15f)\nadd validation for config (7f8b2bc)\napp: improved boilerplate with new features from NestJS v8 (a59a18e)\napp: remove deprecated libs (654f4e6)\napp: remove deprecated libs (6a1111d)\napp: remove deprecated libs (f4a320e)\nCI: added lint check (ab933c3)\ndatabase: added SSL connection config (186e239)\ndatabase: support MongoDB (cf7e53f)\ndependabot: added updates for docker (ca0fc31)\ndocker: upgrade docker-compose to docker compose (0dcf84d)\nfile: add presigned s3 driver (6d4463d)\nreadme: added database utils (d28710e)\nremove @nestjs-modules/mailer (ab493c3)\nremove admin login endpoint (59e6476)\nseed: added code generator (ef1af99)\nupdate config rule (e82b684)\nupdate issue templates (825cd50)\nuse confirmation with JWT tokens (48c9694)\nusers: added filtration and sorting (7d14369)\nvalidation: new logic (fb9c6a6)\n\nBug Fixes\n\napple: audience as array (171d745)\nauth-twitter: Safeguard against undefined ID in Twitter auth response (dea6a2c)\nauth: :bug: fixed 500 error on login (8627644)\nauth: :bug: fixed 500 error on login (33edb5c)\nauth: FB instance (19c8b5e)\nauth: update password (d2793ca)\nauth: validateSocialLogin creates empty users without validation (b235daa)\nCI: change branch (f6275a1)\nconfig: support Windows (04d2d18)\ndeps: node mailer (49cf4f1)\ndeps: pin dependencies (2482f83)\ndeps: pin dependency source-map-support to 0.5.21 (8c811ad)\ndeps: update aws-sdk-js-v3 monorepo to v3.504.0 (8fe3cec)\ndeps: update aws-sdk-js-v3 monorepo to v3.515.0 (665feb3)\ndeps: update aws-sdk-js-v3 monorepo to v3.521.0 (aefd4c2)\ndeps: update dependency @aws-sdk/client-s3 to v3.290.0 (ca9a0f1)\ndeps: update dependency @aws-sdk/client-s3 to v3.309.0 (df1ce34)\ndeps: update dependency @aws-sdk/client-s3 to v3.312.0 (7e34d25)\ndeps: update dependency @aws-sdk/client-s3 to v3.317.0 (85ebfab)\ndeps: update dependency @aws-sdk/client-s3 to v3.319.0 (eb185f7)\ndeps: update dependency @aws-sdk/client-s3 to v3.321.1 (1399d6f)\ndeps: update dependency @aws-sdk/client-s3 to v3.332.0 (8a4030f)\ndeps: update dependency @aws-sdk/client-s3 to v3.335.0 (1b66422)\ndeps: update dependency @aws-sdk/client-s3 to v3.338.0 (c89aa15)\ndeps: update dependency @aws-sdk/client-s3 to v3.341.0 (17c05f9)\ndeps: update dependency @aws-sdk/client-s3 to v3.344.0 (7db3a48)\ndeps: update dependency @aws-sdk/client-s3 to v3.345.0 (effcd5d)\ndeps: update dependency @aws-sdk/client-s3 to v3.350.0 (26e30a9)\ndeps: update dependency @aws-sdk/client-s3 to v3.354.0 (cbc3acc)\ndeps: update dependency @aws-sdk/client-s3 to v3.360.0 (4b0e77c)\ndeps: update dependency @aws-sdk/client-s3 to v3.374.0 (f9d9222)\ndeps: update dependency @aws-sdk/client-s3 to v3.388.0 (5ca6aaf)\ndeps: update dependency @aws-sdk/client-s3 to v3.391.0 (59bc9aa)\ndeps: update dependency @aws-sdk/client-s3 to v3.395.0 (c9aff23)\ndeps: update dependency @aws-sdk/client-s3 to v3.400.0 (c334ef6)\ndeps: update dependency @aws-sdk/client-s3 to v3.405.0 (6e39a2a)\ndeps: update dependency @aws-sdk/client-s3 to v3.412.0 (2b0cae9)\ndeps: update dependency @aws-sdk/client-s3 to v3.414.0 (19b4219)\ndeps: update dependency @aws-sdk/client-s3 to v3.417.0 (83817d1)\ndeps: update dependency @aws-sdk/client-s3 to v3.418.0 (03e6235)\ndeps: update dependency @aws-sdk/client-s3 to v3.420.0 (24c6040)\ndeps: update dependency @aws-sdk/client-s3 to v3.421.0 (7d2fe3c)\ndeps: update dependency @aws-sdk/client-s3 to v3.428.0 (94f8509)\ndeps: update dependency @aws-sdk/client-s3 to v3.435.0 (cfbabe0)\ndeps: update dependency @aws-sdk/client-s3 to v3.438.0 (ed2d5c4)\ndeps: update dependency @aws-sdk/client-s3 to v3.441.0 (754e538)\ndeps: update dependency @aws-sdk/client-s3 to v3.449.0 (ca64faa)\ndeps: update dependency @aws-sdk/client-s3 to v3.462.0 (ba8ca64)\ndeps: update dependency @aws-sdk/client-s3 to v3.481.0 (bca9c68)\ndeps: update dependency @aws-sdk/client-s3 to v3.484.0 (0794e5b)\ndeps: update dependency @aws-sdk/client-s3 to v3.485.0 (d9ba5e1)\ndeps: update dependency @aws-sdk/client-s3 to v3.490.0 (9b26ab1)\ndeps: update dependency @aws-sdk/client-s3 to v3.501.0 (96e6854)\ndeps: update dependency @nestjs/config to v1 (624254a)\ndeps: update dependency @nestjs/config to v1.0.1 (895511e)\ndeps: update dependency @nestjs/config to v1.0.2 (7059f69)\ndeps: update dependency @nestjs/config to v1.0.3 (4da9121)\ndeps: update dependency @nestjs/config to v1.1.0 (2515a36)\ndeps: update dependency @nestjs/config to v1.1.1 (548e8ee)\ndeps: update dependency @nestjs/config to v1.1.3 (8520e88)\ndeps: update dependency @nestjs/config to v1.1.5 (03a9d52)\ndeps: update dependency @nestjs/config to v1.1.6 (3982959)\ndeps: update dependency @nestjs/config to v1.1.7 (39abb6a)\ndeps: update dependency @nestjs/config to v1.2.0 (d5dabe7)\ndeps: update dependency @nestjs/config to v2.1.0 (9dacc98)\ndeps: update dependency @nestjs/config to v2.2.0 (6cbebf3)\ndeps: update dependency @nestjs/config to v2.3.1 (c855fa5)\ndeps: update dependency @nestjs/config to v2.3.2 (e28bf58)\ndeps: update dependency @nestjs/config to v2.3.4 (9add502)\ndeps: update dependency @nestjs/config to v3 (0a957e3)\ndeps: update dependency @nestjs/config to v3.0.1 (4c14361)\ndeps: update dependency @nestjs/config to v3.1.1 (8e6734e)\ndeps: update dependency @nestjs/config to v3.2.0 (ea6b77d)\ndeps: update dependency @nestjs/jwt to v10.0.1 (65db423)\ndeps: update dependency @nestjs/jwt to v10.0.2 (95a7a76)\ndeps: update dependency @nestjs/jwt to v10.0.3 (dd8248c)\ndeps: update dependency @nestjs/jwt to v10.1.0 (a1e3d34)\ndeps: update dependency @nestjs/jwt to v10.1.1 (02ab3c8)\ndeps: update dependency @nestjs/jwt to v10.2.0 (3af99b4)\ndeps: update dependency @nestjs/jwt to v8 (ab15045)\ndeps: update dependency @nestjs/jwt to v8.0.1 (260b3e4)\ndeps: update dependency @nestjs/jwt to v9 (bcb7099)\ndeps: update dependency @nestjs/mongoose to v10.0.4 (375a643)\ndeps: update dependency @nestjs/passport to v10.0.3 (db6fe90)\ndeps: update dependency @nestjs/passport to v7.1.6 (f79afd3)\ndeps: update dependency @nestjs/passport to v8 (cb1082c)\ndeps: update dependency @nestjs/passport to v8.0.1 (adf2404)\ndeps: update dependency @nestjs/passport to v8.1.0 (c55e852)\ndeps: update dependency @nestjs/passport to v8.2.0 (d8f915a)\ndeps: update dependency @nestjs/swagger to v4.8.1 (fd57ef9)\ndeps: update dependency @nestjs/swagger to v4.8.2 (596ecaa)\ndeps: update dependency @nestjs/swagger to v5 (14b072c)\ndeps: update dependency @nestjs/swagger to v5.0.3 (4767498)\ndeps: update dependency @nestjs/swagger to v5.0.4 (ed8c6bd)\ndeps: update dependency @nestjs/swagger to v5.0.8 (0622c0c)\ndeps: update dependency @nestjs/swagger to v5.0.9 (deabdcb)\ndeps: update dependency @nestjs/swagger to v5.1.0 (555abc5)\ndeps: update dependency @nestjs/swagger to v5.1.1 (41ddbfc)\ndeps: update dependency @nestjs/swagger to v5.1.4 (f42b3b0)\ndeps: update dependency @nestjs/swagger to v5.1.5 (0939b32)\ndeps: update dependency @nestjs/swagger to v5.2.0 (000ad94)\ndeps: update dependency @nestjs/swagger to v6 (3d9c8a0)\ndeps: update dependency @nestjs/swagger to v6.1.0 (2fe8423)\ndeps: update dependency @nestjs/swagger to v6.1.2 (c081b5d)\ndeps: update dependency @nestjs/swagger to v6.1.3 (5885937)\ndeps: update dependency @nestjs/swagger to v6.1.4 (6b41f72)\ndeps: update dependency @nestjs/swagger to v6.2.1 (9e6a0c4)\ndeps: update dependency @nestjs/swagger to v6.3.0 (3473707)\ndeps: update dependency @nestjs/swagger to v7 (6d50d94)\ndeps: update dependency @nestjs/swagger to v7.0.12 (964d4ed)\ndeps: update dependency @nestjs/swagger to v7.0.4 (9b06ddc)\ndeps: update dependency @nestjs/swagger to v7.0.6 (b3b91d2)\ndeps: update dependency @nestjs/swagger to v7.1.0 (965b7b2)\ndeps: update dependency @nestjs/swagger to v7.1.1 (fe22ed5)\ndeps: update dependency @nestjs/swagger to v7.1.10 (7433ca0)\ndeps: update dependency @nestjs/swagger to v7.1.11 (e71ea55)\ndeps: update dependency @nestjs/swagger to v7.1.12 (086237e)\ndeps: update dependency @nestjs/swagger to v7.1.13 (c14029c)\ndeps: update dependency @nestjs/swagger to v7.1.14 (69c810f)\ndeps: update dependency @nestjs/swagger to v7.1.15 (6d30436)\ndeps: update dependency @nestjs/swagger to v7.1.16 (66c9ac7)\ndeps: update dependency @nestjs/swagger to v7.1.17 (b18021f)\ndeps: update dependency @nestjs/swagger to v7.1.2 (7b741f4)\ndeps: update dependency @nestjs/swagger to v7.1.4 (d7fdf6d)\ndeps: update dependency @nestjs/swagger to v7.1.6 (49b2a37)\ndeps: update dependency @nestjs/swagger to v7.1.7 (cbb2c72)\ndeps: update dependency @nestjs/swagger to v7.1.8 (973cb74)\ndeps: update dependency @nestjs/swagger to v7.2.0 (7dbad57)\ndeps: update dependency @nestjs/swagger to v7.3.0 (f6d8d1e)\ndeps: update dependency @nestjs/typeorm to v10 (00cb348)\ndeps: update dependency @nestjs/typeorm to v10.0.1 (95e1091)\ndeps: update dependency @nestjs/typeorm to v10.0.2 (12e2329)\ndeps: update dependency @nestjs/typeorm to v8 (e00070a)\ndeps: update dependency @nestjs/typeorm to v8.0.1 (4c0a580)\ndeps: update dependency @nestjs/typeorm to v8.0.2 (fa71397)\ndeps: update dependency @nestjs/typeorm to v8.0.3 (3f3c437)\ndeps: update dependency @nestjs/typeorm to v9.0.1 (a43f741)\ndeps: update dependency @types/multer-s3 to v3.0.1 (8f89f49)\ndeps: update dependency @types/multer-s3 to v3.0.2 (98c2b76)\ndeps: update dependency @types/multer-s3 to v3.0.3 (49e3a33)\ndeps: update dependency apple-signin-auth to v1.7.4 (641e009)\ndeps: update dependency apple-signin-auth to v1.7.6 (590f45c)\ndeps: update dependency class-validator to v0.13.2 (087280b)\ndeps: update dependency class-validator to v0.14.0 (0f18353)\ndeps: update dependency class-validator to v0.14.1 (e07ec45)\ndeps: update dependency dotenv to v16.4.0 (a27af0b)\ndeps: update dependency dotenv to v16.4.1 (215fb8c)\ndeps: update dependency dotenv to v16.4.4 (6903c1a)\ndeps: update dependency dotenv to v16.4.5 (8326022)\ndeps: update dependency google-auth-library to v7.10.0 (b1cfdd6)\ndeps: update dependency google-auth-library to v7.10.1 (98e49da)\ndeps: update dependency google-auth-library to v7.10.2 (e067d90)\ndeps: update dependency google-auth-library to v7.10.3 (b5e1b54)\ndeps: update dependency google-auth-library to v7.10.4 (8ea2e76)\ndeps: update dependency google-auth-library to v7.11.0 (0af09f2)\ndeps: update dependency google-auth-library to v7.12.0 (b2d3962)\ndeps: update dependency google-auth-library to v7.2.0 (876a4bf)\ndeps: update dependency google-auth-library to v7.3.0 (3f6b0db)\ndeps: update dependency google-auth-library to v7.4.1 (81b9f4f)\ndeps: update dependency google-auth-library to v7.5.0 (32e6636)\ndeps: update dependency google-auth-library to v7.6.1 (32d0eb1)\ndeps: update dependency google-auth-library to v7.6.2 (3fd879d)\ndeps: update dependency google-auth-library to v7.8.0 (8994479)\ndeps: update dependency google-auth-library to v7.9.1 (88bfbb2)\ndeps: update dependency google-auth-library to v7.9.2 (32170b1)\ndeps: update dependency google-auth-library to v8 (492d4ae)\ndeps: update dependency google-auth-library to v8.1.1 (eb79e58)\ndeps: update dependency google-auth-library to v8.4.0 (93ac4ce)\ndeps: update dependency google-auth-library to v8.5.2 (ec5d3fa)\ndeps: update dependency google-auth-library to v8.6.0 (fa3d653)\ndeps: update dependency google-auth-library to v8.7.0 (212a6c2)\ndeps: update dependency google-auth-library to v8.8.0 (8fc1a25)\ndeps: update dependency google-auth-library to v8.9.0 (b6c5b84)\ndeps: update dependency google-auth-library to v9 (f6aeb4e)\ndeps: update dependency google-auth-library to v9.1.0 (681bb29)\ndeps: update dependency google-auth-library to v9.2.0 (ae5b58a)\ndeps: update dependency google-auth-library to v9.4.1 (7b1f178)\ndeps: update dependency google-auth-library to v9.4.2 (c0335a0)\ndeps: update dependency google-auth-library to v9.6.2 (8ba7031)\ndeps: update dependency google-auth-library to v9.6.3 (ea7e03d)\ndeps: update dependency handlebars to v4.7.8 (767f62d)\ndeps: update dependency mongoose to v8.0.3 (e34f79d)\ndeps: update dependency mongoose to v8.0.4 (02c557d)\ndeps: update dependency mongoose to v8.1.0 (36b8d3d)\ndeps: update dependency mongoose to v8.1.1 (b4baeac)\ndeps: update dependency mongoose to v8.1.2 (e5780f1)\ndeps: update dependency mongoose to v8.1.3 (831d432)\ndeps: update dependency mongoose to v8.2.0 (8f56cd8)\ndeps: update dependency multer to v1.4.3 (a96ec15)\ndeps: update dependency multer to v1.4.4 (0f10b2d)\ndeps: update dependency multer-s3 to v2.10.0 (00895cc)\ndeps: update dependency multer-s3 to v2.9.1 (8b9d2c3)\ndeps: update dependency nestjs-i18n to v10.3.0 (b935b46)\ndeps: update dependency nestjs-i18n to v10.3.1 (9697f5e)\ndeps: update dependency nestjs-i18n to v10.3.2 (12f8404)\ndeps: update dependency nestjs-i18n to v10.3.4 (66ed494)\ndeps: update dependency nestjs-i18n to v10.3.5 (2d90600)\ndeps: update dependency nestjs-i18n to v10.3.6 (b25961e)\ndeps: update dependency nestjs-i18n to v10.3.7 (a6f650d)\ndeps: update dependency nestjs-i18n to v10.4.0 (b8b583e)\ndeps: update dependency nestjs-i18n to v10.4.5 (cbb4d1f)\ndeps: update dependency nestjs-i18n to v8.1.2 (d691f8c)\ndeps: update dependency nestjs-i18n to v8.1.3 (f403271)\ndeps: update dependency nestjs-i18n to v8.1.4 (e1b1469)\ndeps: update dependency nestjs-i18n to v8.1.5 (0e33c9e)\ndeps: update dependency nestjs-i18n to v8.1.6 (ed7cdae)\ndeps: update dependency nestjs-i18n to v8.1.9 (2019d29)\ndeps: update dependency nestjs-i18n to v8.2.1 (a724d04)\ndeps: update dependency nestjs-i18n to v8.2.2 (2bda887)\ndeps: update dependency nestjs-i18n to v9.1.10 (3d26e7f)\ndeps: update dependency nestjs-i18n to v9.1.6 (47a5798)\ndeps: update dependency nestjs-i18n to v9.1.7 (195f298)\ndeps: update dependency nestjs-i18n to v9.1.8 (5cc3838)\ndeps: update dependency nestjs-i18n to v9.2.0 (4e7d3af)\ndeps: update dependency nestjs-i18n to v9.2.1 (6dfc9cc)\ndeps: update dependency nestjs-i18n to v9.2.2 (ccd74f9)\ndeps: update dependency nestjs-i18n to v9.2.3 (530783a)\ndeps: update dependency nodemailer to v6.6.2 (17390e1)\ndeps: update dependency nodemailer to v6.6.3 (c2ba11e)\ndeps: update dependency nodemailer to v6.6.5 (69236df)\ndeps: update dependency nodemailer to v6.7.0 (10c7577)\ndeps: update dependency nodemailer to v6.7.1 (00beb9e)\ndeps: update dependency nodemailer to v6.7.2 (22585a5)\ndeps: update dependency nodemailer to v6.7.4 (47eb62b)\ndeps: update dependency nodemailer to v6.7.5 (38895d5)\ndeps: update dependency nodemailer to v6.7.6 (06897c5)\ndeps: update dependency nodemailer to v6.7.7 (9aad4c5)\ndeps: update dependency nodemailer to v6.7.8 (a2ce0c8)\ndeps: update dependency nodemailer to v6.8.0 (ecd521d)\ndeps: update dependency nodemailer to v6.9.0 (555c673)\ndeps: update dependency nodemailer to v6.9.1 (300cc30)\ndeps: update dependency nodemailer to v6.9.10 (a192af8)\ndeps: update dependency nodemailer to v6.9.2 (d4cb6eb)\ndeps: update dependency nodemailer to v6.9.3 (03279f7)\ndeps: update dependency nodemailer to v6.9.4 (91bf30f)\ndeps: update dependency nodemailer to v6.9.5 (9682d2c)\ndeps: update dependency nodemailer to v6.9.6 (c0af790)\ndeps: update dependency nodemailer to v6.9.7 (ce46c16)\ndeps: update dependency nodemailer to v6.9.8 (3d2e089)\ndeps: update dependency nodemailer to v6.9.9 [security] (36f6128)\ndeps: update dependency passport to v0.5.0 (694ff52)\ndeps: update dependency passport to v0.5.2 (8ce9af4)\ndeps: update dependency passport to v0.7.0 (5384b6a)\ndeps: update dependency passport-jwt to v4.0.1 (7b8fb15)\ndeps: update dependency pg to v8.10.0 (2ac05cb)\ndeps: update dependency pg to v8.11.0 (8a5304d)\ndeps: update dependency pg to v8.11.1 (0600fba)\ndeps: update dependency pg to v8.11.2 (33c617a)\ndeps: update dependency pg to v8.11.3 (185c03f)\ndeps: update dependency pg to v8.7.1 (ab4ef07)\ndeps: update dependency pg to v8.7.3 (108c714)\ndeps: update dependency pg to v8.8.0 (491304c)\ndeps: update dependency pg to v8.9.0 (81ccb1a)\ndeps: update dependency rimraf to v4 (03ff73d)\ndeps: update dependency rimraf to v4.1.1 (1577ffb)\ndeps: update dependency rimraf to v4.1.2 (b111ef3)\ndeps: update dependency rimraf to v4.3.0 (615c7f4)\ndeps: update dependency rimraf to v4.3.1 (a20c093)\ndeps: update dependency rimraf to v4.4.0 (227f9d9)\ndeps: update dependency rimraf to v4.4.1 (a460e22)\ndeps: update dependency rimraf to v5 (66c5df6)\ndeps: update dependency rimraf to v5.0.1 (8376216)\ndeps: update dependency rimraf to v5.0.2 (3d5d9f4)\ndeps: update dependency rimraf to v5.0.5 (9635790)\ndeps: update dependency rxjs to v7 (66df83d)\ndeps: update dependency rxjs to v7.2.0 (08b372f)\ndeps: update dependency rxjs to v7.3.0 (79fe840)\ndeps: update dependency rxjs to v7.3.1 (234a6ce)\ndeps: update dependency rxjs to v7.4.0 (6df13f1)\ndeps: update dependency rxjs to v7.5.1 (79a5dd8)\ndeps: update dependency rxjs to v7.5.2 (44b3477)\ndeps: update dependency rxjs to v7.5.3 (551daa2)\ndeps: update dependency rxjs to v7.5.4 (b8dc049)\ndeps: update dependency rxjs to v7.5.6 (b7b12e3)\ndeps: update dependency rxjs to v7.5.7 (cbe4aed)\ndeps: update dependency rxjs to v7.6.0 (44995a4)\ndeps: update dependency rxjs to v7.8.0 (404dc26)\ndeps: update dependency rxjs to v7.8.1 (8f39c86)\ndeps: update dependency swagger-ui-express to v4.2.0 (9fb0492)\ndeps: update dependency swagger-ui-express to v4.3.0 (aa8753f)\ndeps: update dependency swagger-ui-express to v4.5.0 (c17cccd)\ndeps: update dependency swagger-ui-express to v4.6.0 (40340b7)\ndeps: update dependency swagger-ui-express to v4.6.1 (95b99fa)\ndeps: update dependency swagger-ui-express to v4.6.2 (e463642)\ndeps: update dependency swagger-ui-express to v4.6.3 (385eceb)\ndeps: update dependency swagger-ui-express to v5 (a4e35a6)\ndeps: update dependency typeorm to v0.2.36 (482a081)\ndeps: update dependency typeorm to v0.2.37 (23f4fc3)\ndeps: update dependency typeorm to v0.2.38 (c280fd7)\ndeps: update dependency typeorm to v0.2.39 (4ad3643)\ndeps: update dependency typeorm to v0.2.40 (18629f2)\ndeps: update dependency typeorm to v0.2.41 (69f6131)\ndeps: update dependency typeorm to v0.3.10 (1266ae9)\ndeps: update dependency typeorm to v0.3.11 (d1dd140)\ndeps: update dependency typeorm to v0.3.12 (e61a5b1)\ndeps: update dependency typeorm to v0.3.13 (113f59a)\ndeps: update dependency typeorm to v0.3.14 (229ca19)\ndeps: update dependency typeorm to v0.3.15 (c52a02a)\ndeps: update dependency typeorm to v0.3.16 (aaa3c3f)\ndeps: update dependency typeorm to v0.3.17 (471b61f)\ndeps: update dependency typeorm to v0.3.19 (7bac23c)\ndeps: update dependency typeorm to v0.3.9 (84283a0)\ndeps: update nest monorepo (44cbd8e)\ndeps: update nest monorepo (8adaedb)\ndeps: update nest monorepo (ef70faa)\ndeps: update nest monorepo (4913164)\ndeps: update nest monorepo (5de0e87)\ndeps: update nest monorepo to v10 (e8da94c)\ndeps: update nest monorepo to v10.0.5 (70fde88)\ndeps: update nest monorepo to v10.1.0 (b33345f)\ndeps: update nest monorepo to v10.1.1 (a636bb7)\ndeps: update nest monorepo to v10.1.2 (c7cfa91)\ndeps: update nest monorepo to v10.1.3 (5ed56aa)\ndeps: update nest monorepo to v10.2.0 (4cd8f15)\ndeps: update nest monorepo to v10.2.10 (b93c9f9)\ndeps: update nest monorepo to v10.2.4 (e9e8d1a)\ndeps: update nest monorepo to v10.2.6 (a283e98)\ndeps: update nest monorepo to v10.2.7 (affc863)\ndeps: update nest monorepo to v10.2.8 (d74dd84)\ndeps: update nest monorepo to v10.3.0 (19683a4)\ndeps: update nest monorepo to v10.3.1 (e688b2e)\ndeps: update nest monorepo to v10.3.3 (e75ada7)\ndeps: update nest monorepo to v7.6.18 (83a8d0a)\ndeps: update nest monorepo to v8 (aa7dbed)\ndeps: update nest monorepo to v8.0.1 (f787ca6)\ndeps: update nest monorepo to v8.0.10 (af2625a)\ndeps: update nest monorepo to v8.0.11 (f4efa13)\ndeps: update nest monorepo to v8.0.2 (bcda7e5)\ndeps: update nest monorepo to v8.0.4 (7d8dba2)\ndeps: update nest monorepo to v8.0.6 (1e075c9)\ndeps: update nest monorepo to v8.0.7 (3312f2d)\ndeps: update nest monorepo to v8.0.8 (c81a10b)\ndeps: update nest monorepo to v8.0.9 (7b373e3)\ndeps: update nest monorepo to v8.1.1 (1313bcf)\ndeps: update nest monorepo to v8.1.2 (b4a885d)\ndeps: update nest monorepo to v8.2.0 (226ed7e)\ndeps: update nest monorepo to v8.2.1 (fb7ccd1)\ndeps: update nest monorepo to v8.2.3 (44a317c)\ndeps: update nest monorepo to v8.2.4 (b1a001b)\ndeps: update nest monorepo to v8.2.6 (da39aa3)\ndeps: update nest monorepo to v8.3.0 (054a9b4)\ndeps: update nest monorepo to v9.0.11 (e18e8fa)\ndeps: update nest monorepo to v9.0.9 (6cc958d)\ndeps: update nest monorepo to v9.1.2 (d0a9d99)\ndeps: update nest monorepo to v9.1.4 (e6f32dd)\ndeps: update nest monorepo to v9.1.5 (5d017ba)\ndeps: update nest monorepo to v9.1.6 (3bc56aa)\ndeps: update nest monorepo to v9.2.1 (8254de7)\ndeps: update nest monorepo to v9.3.10 (4109cd2)\ndeps: update nest monorepo to v9.3.11 (d81dfbc)\ndeps: update nest monorepo to v9.3.12 (d341e2c)\ndeps: update nest monorepo to v9.3.9 (7c66721)\ndeps: update nest monorepo to v9.4.0 (d7a799d)\ndeps: update nest monorepo to v9.4.1 (1da7bd4)\ndeps: update nest monorepo to v9.4.2 (4a8bd56)\ndeps: update nest monorepo to v9.4.3 (bfeb525)\ndocker-postgres: add config db volumes to docker CI file (0fa6bdc)\ndocker-postgres: configure the db volumes (5e16486)\ndocker: remove .env from .dockerignore (eca25cf)\ndocker: running in Windows (672ae95)\ndocs: change link to docs (8068449)\ne2e: run test on local machine (47b4e79)\nemail links (e3ae365)\nerror: change messages (f8e5e99)\neslint: do not apply --fix automatically (ad08bff)\neslint: errors (4b9f841)\neslist: package.json (7d01345)\nfile upload (062758c)\nfile: remove avatar (c825524)\nfiles: :bug: remove case sensitive filename (3865f35)\nfiles: added prefix v1 for local file path (c29c44a)\ni18n: header resolver #750 (a8f6ca2)\nlogin: login with extra space in email (58ba399)\nnpm version (b3dbf23)\nprettier (c520300)\nreadme: command for testing (c888ff3)\nreadme: typo (6bb9e2f)\nsh file in docker (1bf7b33)\nsocial auth data (22bf773)\nsocial auth logic (790f8d0)\nsocial-login: remove redundant check (f12ac82)\ntypescript: Column type (39af8ea)\ntypescript: enable strictNullChecks (c4a8451)\nuser: added checking old password (e09d28d)\nuser: prevent null password (db8bdd5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : 3.758.0\n        \n            @aws-sdk/s3-request-presigner : 3.758.0\n        \n            @nestjs/common : 11.0.20\n        \n            @nestjs/config : 4.0.2\n        \n            @nestjs/core : 11.0.20\n        \n            @nestjs/jwt : 11.0.0\n        \n            @nestjs/mongoose : 11.0.3\n        \n            @nestjs/passport : 11.0.5\n        \n            @nestjs/platform-express : 11.0.20\n        \n            @nestjs/swagger : 11.1.3\n        \n            @nestjs/typeorm : 11.0.0\n        \n            @types/multer-s3 : 3.0.3\n        \n            @types/prompts : 2.4.9\n        \n            apple-signin-auth : 1.7.9\n        \n            bcryptjs : 3.0.2\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.1\n        \n            dotenv : 16.5.0\n        \n            fb : 2.0.0\n        \n            geojson : ^0.5.0\n        \n            google-auth-library : 9.15.1\n        \n            handlebars : 4.7.8\n        \n            mongoose : 8.13.2\n        \n            mongoose-autopopulate : ^1.1.0\n        \n            ms : 2.1.3\n        \n            multer : 1.4.5-lts.2\n        \n            multer-s3 : 3.0.1\n        \n            nestjs-boilerplate : file:\n        \n            nestjs-i18n : 10.5.1\n        \n            nodemailer : 6.10.1\n        \n            passport : 0.7.0\n        \n            passport-anonymous : 1.0.1\n        \n            passport-jwt : 4.0.1\n        \n            pg : 8.14.1\n        \n            reflect-metadata : 0.2.2\n        \n            rimraf : 6.0.1\n        \n            rxjs : 7.8.2\n        \n            source-map-support : 0.5.21\n        \n            swagger-ui-express : 5.0.1\n        \n            typeorm : 0.3.22\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountTypeEnum   (src/.../account-type.enum.ts)\n                        \n                        \n                            AuthProvidersEnum   (src/.../auth-providers.enum.ts)\n                        \n                        \n                            Environment   (src/.../app.config.ts)\n                        \n                        \n                            FileDriver   (src/.../file-config.type.ts)\n                        \n                        \n                            KycStatus   (src/.../kyc-details.entity.ts)\n                        \n                        \n                            KycSubjectType   (src/.../kyc-details.entity.ts)\n                        \n                        \n                            NotificationChannelEnum   (src/.../account-type.enum.ts)\n                        \n                        \n                            NotificationTypeEnum   (src/.../account-type.enum.ts)\n                        \n                        \n                            ResidenceTypeEnum   (src/.../residence-type.enum.ts)\n                        \n                        \n                            RoleEnum   (src/.../roles.enum.ts)\n                        \n                        \n                            SettingsSubjectType   (src/.../settings.entity.ts)\n                        \n                        \n                            SettingsType   (src/.../settings.entity.ts)\n                        \n                        \n                            StatusEnum   (src/.../statuses.enum.ts)\n                        \n                        \n                            TenantTypeCode   (src/.../tenant-type.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/enum/account-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountTypeEnum\n                    \n                \n                        \n                            \n                                 asset\n                            \n                        \n                        \n                            \n                                Value : asset\n                            \n                        \n                        \n                            \n                                 liability\n                            \n                        \n                        \n                            \n                                Value : liability\n                            \n                        \n                        \n                            \n                                 equity\n                            \n                        \n                        \n                            \n                                Value : equity\n                            \n                        \n                        \n                            \n                                 revenue\n                            \n                        \n                        \n                            \n                                Value : revenue\n                            \n                        \n                        \n                            \n                                 expense\n                            \n                        \n                        \n                            \n                                Value : expense\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NotificationChannelEnum\n                    \n                \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL\n                            \n                        \n                        \n                            \n                                 SMS\n                            \n                        \n                        \n                            \n                                Value : SMS\n                            \n                        \n                        \n                            \n                                 WEBHOOK\n                            \n                        \n                        \n                            \n                                Value : WEBHOOK\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NotificationTypeEnum\n                    \n                \n                        \n                            \n                                 ALERT\n                            \n                        \n                        \n                            \n                                Value : ALERT\n                            \n                        \n                        \n                            \n                                 REMINDER\n                            \n                        \n                        \n                            \n                                Value : REMINDER\n                            \n                        \n                        \n                            \n                                 REPORT\n                            \n                        \n                        \n                            \n                                Value : REPORT\n                            \n                        \n            \n        \n\n    src/auth/auth-providers.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthProvidersEnum\n                    \n                \n                        \n                            \n                                 email\n                            \n                        \n                        \n                            \n                                Value : email\n                            \n                        \n                        \n                            \n                                 facebook\n                            \n                        \n                        \n                            \n                                Value : facebook\n                            \n                        \n                        \n                            \n                                 google\n                            \n                        \n                        \n                            \n                                Value : google\n                            \n                        \n                        \n                            \n                                 apple\n                            \n                        \n                        \n                            \n                                Value : apple\n                            \n                        \n            \n        \n\n    src/config/app.config.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 Development\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 Production\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 Test\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n            \n        \n\n    src/files/config/file-config.type.ts\n    \n        \n            \n                \n                    \n                        \n                        FileDriver\n                    \n                \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 S3\n                            \n                        \n                        \n                            \n                                Value : s3\n                            \n                        \n                        \n                            \n                                 S3_PRESIGNED\n                            \n                        \n                        \n                            \n                                Value : s3-presigned\n                            \n                        \n            \n        \n\n    src/kyc-details/infrastructure/persistence/relational/entities/kyc-details.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        KycStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 VERIFIED\n                            \n                        \n                        \n                            \n                                Value : verified\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : rejected\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        KycSubjectType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 TENANT\n                            \n                        \n                        \n                            \n                                Value : tenant\n                            \n                        \n            \n        \n\n    src/utils/enum/residence-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResidenceTypeEnum\n                    \n                \n                        \n                            \n                                 APARTMENT\n                            \n                        \n                        \n                            \n                                Value : APARTMENT\n                            \n                        \n                        \n                            \n                                 HOUSE\n                            \n                        \n                        \n                            \n                                Value : HOUSE\n                            \n                        \n                        \n                            \n                                 DUPLEX\n                            \n                        \n                        \n                            \n                                Value : DUPLEX\n                            \n                        \n                        \n                            \n                                 CONDO\n                            \n                        \n                        \n                            \n                                Value : CONDO\n                            \n                        \n                        \n                            \n                                 TOWNHOUSE\n                            \n                        \n                        \n                            \n                                Value : TOWNHOUSE\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/roles/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleEnum\n                    \n                \n                        \n                            \n                                 platform_owner\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 super_admin\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 agent\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 customer\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 manager\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 finance\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 guest\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n            \n        \n\n    src/settings/infrastructure/persistence/relational/entities/settings.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsSubjectType\n                    \n                \n                        \n                            \n                                 TENANT\n                            \n                        \n                        \n                            \n                                Value : tenant\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 SYSTEM\n                            \n                        \n                        \n                            \n                                Value : system\n                            \n                        \n                        \n                            \n                                 COLLECTOR\n                            \n                        \n                        \n                            \n                                Value : collector\n                            \n                        \n                        \n                            \n                                 FACILITY\n                            \n                        \n                        \n                            \n                                Value : facility\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SettingsType\n                    \n                \n                        \n                            \n                                 INVOICE\n                            \n                        \n                        \n                            \n                                Value : invoice\n                            \n                        \n                        \n                            \n                                 BILLING\n                            \n                        \n                        \n                            \n                                Value : billing\n                            \n                        \n                        \n                            \n                                 PAYMENT\n                            \n                        \n                        \n                            \n                                Value : payment\n                            \n                        \n                        \n                            \n                                 TAX\n                            \n                        \n                        \n                            \n                                Value : tax\n                            \n                        \n                        \n                            \n                                 COMMISSION\n                            \n                        \n                        \n                            \n                                Value : commission\n                            \n                        \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : notification\n                            \n                        \n                        \n                            \n                                 REMINDER\n                            \n                        \n                        \n                            \n                                Value : reminder\n                            \n                        \n                        \n                            \n                                 ALERT\n                            \n                        \n                        \n                            \n                                Value : alert\n                            \n                        \n                        \n                            \n                                 WASTE\n                            \n                        \n                        \n                            \n                                Value : waste\n                            \n                        \n                        \n                            \n                                 COLLECTION\n                            \n                        \n                        \n                            \n                                Value : collection\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : processing\n                            \n                        \n                        \n                            \n                                 RECYCLING\n                            \n                        \n                        \n                            \n                                Value : recycling\n                            \n                        \n                        \n                            \n                                 DISPOSAL\n                            \n                        \n                        \n                            \n                                Value : disposal\n                            \n                        \n                        \n                            \n                                 MARKETPLACE\n                            \n                        \n                        \n                            \n                                Value : marketplace\n                            \n                        \n                        \n                            \n                                 LISTING\n                            \n                        \n                        \n                            \n                                Value : listing\n                            \n                        \n                        \n                            \n                                 BIDDING\n                            \n                        \n                        \n                            \n                                Value : bidding\n                            \n                        \n                        \n                            \n                                 TRANSACTION\n                            \n                        \n                        \n                            \n                                Value : transaction\n                            \n                        \n                        \n                            \n                                 PREFERENCES\n                            \n                        \n                        \n                            \n                                Value : preferences\n                            \n                        \n                        \n                            \n                                 PRIVACY\n                            \n                        \n                        \n                            \n                                Value : privacy\n                            \n                        \n                        \n                            \n                                 ACCESSIBILITY\n                            \n                        \n                        \n                            \n                                Value : accessibility\n                            \n                        \n                        \n                            \n                                 COMPLIANCE\n                            \n                        \n                        \n                            \n                                Value : compliance\n                            \n                        \n                        \n                            \n                                 CERTIFICATION\n                            \n                        \n                        \n                            \n                                Value : certification\n                            \n                        \n                        \n                            \n                                 REPORTING\n                            \n                        \n                        \n                            \n                                Value : reporting\n                            \n                        \n                        \n                            \n                                 AUDIT\n                            \n                        \n                        \n                            \n                                Value : audit\n                            \n                        \n                        \n                            \n                                 API\n                            \n                        \n                        \n                            \n                                Value : api\n                            \n                        \n                        \n                            \n                                 INTEGRATION\n                            \n                        \n                        \n                            \n                                Value : integration\n                            \n                        \n                        \n                            \n                                 SECURITY\n                            \n                        \n                        \n                            \n                                Value : security\n                            \n                        \n                        \n                            \n                                 RATE_LIMITING\n                            \n                        \n                        \n                            \n                                Value : rate_limiting\n                            \n                        \n                        \n                            \n                                 LOCALIZATION\n                            \n                        \n                        \n                            \n                                Value : localization\n                            \n                        \n                        \n                            \n                                 LANGUAGE\n                            \n                        \n                        \n                            \n                                Value : language\n                            \n                        \n                        \n                            \n                                 CURRENCY\n                            \n                        \n                        \n                            \n                                Value : currency\n                            \n                        \n                        \n                            \n                                 TIMEZONE\n                            \n                        \n                        \n                            \n                                Value : timezone\n                            \n                        \n                        \n                            \n                                 THEME\n                            \n                        \n                        \n                            \n                                Value : theme\n                            \n                        \n                        \n                            \n                                 LAYOUT\n                            \n                        \n                        \n                            \n                                Value : layout\n                            \n                        \n                        \n                            \n                                 DASHBOARD\n                            \n                        \n                        \n                            \n                                Value : dashboard\n                            \n                        \n                        \n                            \n                                 SYSTEM\n                            \n                        \n                        \n                            \n                                Value : system\n                            \n                        \n                        \n                            \n                                 MAINTENANCE\n                            \n                        \n                        \n                            \n                                Value : maintenance\n                            \n                        \n                        \n                            \n                                 BACKUP\n                            \n                        \n                        \n                            \n                                Value : backup\n                            \n                        \n                        \n                            \n                                 SCALING\n                            \n                        \n                        \n                            \n                                Value : scaling\n                            \n                        \n                        \n                            \n                                 CARBON_ACCOUNTING\n                            \n                        \n                        \n                            \n                                Value : carbon_accounting\n                            \n                        \n                        \n                            \n                                 SUSTAINABILITY\n                            \n                        \n                        \n                            \n                                Value : sustainability\n                            \n                        \n                        \n                            \n                                 ROUTING\n                            \n                        \n                        \n                            \n                                Value : routing\n                            \n                        \n                        \n                            \n                                 VEHICLE\n                            \n                        \n                        \n                            \n                                Value : vehicle\n                            \n                        \n                        \n                            \n                                 DRIVER\n                            \n                        \n                        \n                            \n                                Value : driver\n                            \n                        \n            \n        \n\n    src/statuses/statuses.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusEnum\n                    \n                \n                        \n                            \n                                 active\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 inactive\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/tenant-types/infrastructure/persistence/relational/entities/tenant-type.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TenantTypeCode\n                    \n                \n                        \n                            \n                                 PLATFORM_OWNER\n                            \n                        \n                        \n                            \n                                Value : platform_owner\n                            \n                        \n                        \n                            \n                                 COMMUNITY_GROUP\n                            \n                        \n                        \n                            \n                                Value : community_group\n                            \n                        \n                        \n                            \n                                 RECYCLING_COMPANY\n                            \n                        \n                        \n                            \n                                Value : recycling_company\n                            \n                        \n                        \n                            \n                                 COLLECTION_AGENCY\n                            \n                        \n                        \n                            \n                                Value : collection_agency\n                            \n                        \n                        \n                            \n                                 MUNICIPALITY\n                            \n                        \n                        \n                            \n                                Value : municipality\n                            \n                        \n                        \n                            \n                                 ENTERPRISE\n                            \n                        \n                        \n                            \n                                Value : enterprise\n                            \n                        \n                        \n                            \n                                 EDUCATIONAL_INSTITUTION\n                            \n                        \n                        \n                            \n                                Value : educational_institution\n                            \n                        \n                        \n                            \n                                 HEALTHCARE_PROVIDER\n                            \n                        \n                        \n                            \n                                Value : healthcare_provider\n                            \n                        \n                        \n                            \n                                 NON_PROFIT_ORGANIZATION\n                            \n                        \n                        \n                            \n                                Value : non_profit_organization\n                            \n                        \n                        \n                            \n                                 GOVERNMENT_AGENCY\n                            \n                        \n                        \n                            \n                                Value : government_agency\n                            \n                        \n                        \n                            \n                                 TECHNOLOGY_COMPANY\n                            \n                        \n                        \n                            \n                                Value : technology_company\n                            \n                        \n                        \n                            \n                                 RETAIL_BUSINESS\n                            \n                        \n                        \n                            \n                                Value : retail_business\n                            \n                        \n                        \n                            \n                                 MANUFACTURING_COMPANY\n                            \n                        \n                        \n                            \n                                Value : manufacturing_company\n                            \n                        \n                        \n                            \n                                 TRANSPORTATION_SERVICE\n                            \n                        \n                        \n                            \n                                Value : transportation_service\n                            \n                        \n                        \n                            \n                                 FINANCIAL_INSTITUTION\n                            \n                        \n                        \n                            \n                                Value : financial_institution\n                            \n                        \n                        \n                            \n                                 AGRICULTURAL_BUSINESS\n                            \n                        \n                        \n                            \n                                Value : agricultural_business\n                            \n                        \n                        \n                            \n                                 ENERGY_PROVIDER\n                            \n                        \n                        \n                            \n                                Value : energy_provider\n                            \n                        \n                        \n                            \n                                 CONSTRUCTION_COMPANY\n                            \n                        \n                        \n                            \n                                Value : construction_company\n                            \n                        \n                        \n                            \n                                 HOSPITALITY_BUSINESS\n                            \n                        \n                        \n                            \n                                Value : hospitality_business\n                            \n                        \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : generic\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            deepResolvePromises   (src/.../deep-resolver.ts)\n                        \n                        \n                            generateErrors   (src/.../validation-options.ts)\n                        \n                        \n                            InfinityPaginationResponse   (src/.../infinity-pagination-response.dto.ts)\n                        \n                        \n                            validateConfig   (src/.../validate-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/deep-resolver.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepResolvePromises\n                        \n                    \n                \n            \n            \n                \ndeepResolvePromises(input)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/validation-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateErrors\n                        \n                    \n                \n            \n            \n                \ngenerateErrors(errors)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errors\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/dto/infinity-pagination-response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InfinityPaginationResponse\n                        \n                    \n                \n            \n            \n                \nInfinityPaginationResponse(classReference: Type)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classReference\n                                            \n                                                        Type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/validate-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateConfig\n                        \n                    \n                \n            \n            \n                \nvalidateConfig(config: Record, envVariablesClass: ClassConstructor)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                envVariablesClass\n                                            \n                                                        ClassConstructor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS REST API boilerplate 🇺🇦\n\n\n\n\n\n\n\n\n\nDescription \nNestJS REST API boilerplate for a typical project\nFull documentation here\nDemo: https://nestjs-boilerplate-test.herokuapp.com/docs\nA fully compatible frontend boilerplate: https://github.com/brocoders/extensive-react-boilerplate\nBelongs to the bc boilerplates ecosystem\nhttps://github.com/user-attachments/assets/a66f114a-c714-4036-8eeb-20cbf04ae985\nTable of Contents \n\nFeatures\nContributors\nSupport\n\nFeatures\n\n Database. Support TypeORM and Mongoose.\n Seeding.\n Config Service (@nestjs/config).\n Mailing (nodemailer).\n Sign in and sign up via email.\n Social sign in (Apple, Facebook, Google).\n Admin and User roles.\n Internationalization/Translations (I18N) (nestjs-i18n).\n File uploads. Support local and Amazon S3 drivers.\n Swagger.\n E2E and units tests.\n Docker.\n CI (Github Actions).\n\nContributors\n\n\n\n\n  \n    \n      Vladyslav Shchepotin🚧 📖 💻\n      SergeiLomako💻\n      Elena Vlasenko📖\n      Rodion💼\n    \n  \n\n\n\n\n\n\n\nSupport\nIf you seek consulting, support, or wish to collaborate, please contact us via boilerplates@brocoders.com. For any inquiries regarding boilerplates, feel free to ask on GitHub Discussions or Discord.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Brocoders\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthAppleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthFacebookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthGoogleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentFilePersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentKycDetailsPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentSessionPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentUserPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesLocalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesS3Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesS3PresignedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KycDetailSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KycDetailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegionSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalAccountPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalFilePersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalKycDetailsPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalRegionPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalResidencePersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalSessionPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalSettingsPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalTenantPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalTenantTypePersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelationalUserPersistenceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResidenceSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResidencesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TenantSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TenantsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TenantTypesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TenantTypesSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserSeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountSeedModule\n\n\n\ncluster_AccountSeedModule_exports\n\n\n\ncluster_AccountSeedModule_providers\n\n\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_imports\n\n\n\ncluster_AccountsModule_exports\n\n\n\ncluster_AccountsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthAppleModule\n\n\n\ncluster_AuthAppleModule_exports\n\n\n\ncluster_AuthAppleModule_providers\n\n\n\ncluster_AuthFacebookModule\n\n\n\ncluster_AuthFacebookModule_exports\n\n\n\ncluster_AuthFacebookModule_providers\n\n\n\ncluster_AuthGoogleModule\n\n\n\ncluster_AuthGoogleModule_exports\n\n\n\ncluster_AuthGoogleModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DocumentFilePersistenceModule\n\n\n\ncluster_DocumentFilePersistenceModule_exports\n\n\n\ncluster_DocumentKycDetailsPersistenceModule\n\n\n\ncluster_DocumentKycDetailsPersistenceModule_exports\n\n\n\ncluster_DocumentSessionPersistenceModule\n\n\n\ncluster_DocumentSessionPersistenceModule_exports\n\n\n\ncluster_DocumentUserPersistenceModule\n\n\n\ncluster_DocumentUserPersistenceModule_exports\n\n\n\ncluster_FilesLocalModule\n\n\n\ncluster_FilesLocalModule_exports\n\n\n\ncluster_FilesLocalModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FilesS3Module\n\n\n\ncluster_FilesS3Module_exports\n\n\n\ncluster_FilesS3Module_providers\n\n\n\ncluster_FilesS3PresignedModule\n\n\n\ncluster_FilesS3PresignedModule_exports\n\n\n\ncluster_FilesS3PresignedModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_KycDetailSeedModule\n\n\n\ncluster_KycDetailSeedModule_exports\n\n\n\ncluster_KycDetailSeedModule_providers\n\n\n\ncluster_KycDetailsModule\n\n\n\ncluster_KycDetailsModule_exports\n\n\n\ncluster_KycDetailsModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_RegionSeedModule\n\n\n\ncluster_RegionSeedModule_exports\n\n\n\ncluster_RegionSeedModule_providers\n\n\n\ncluster_RegionsModule\n\n\n\ncluster_RegionsModule_imports\n\n\n\ncluster_RegionsModule_exports\n\n\n\ncluster_RegionsModule_providers\n\n\n\ncluster_RelationalAccountPersistenceModule\n\n\n\ncluster_RelationalAccountPersistenceModule_exports\n\n\n\ncluster_RelationalFilePersistenceModule\n\n\n\ncluster_RelationalKycDetailsPersistenceModule\n\n\n\ncluster_RelationalRegionPersistenceModule\n\n\n\ncluster_RelationalRegionPersistenceModule_exports\n\n\n\ncluster_RelationalResidencePersistenceModule\n\n\n\ncluster_RelationalResidencePersistenceModule_exports\n\n\n\ncluster_RelationalSessionPersistenceModule\n\n\n\ncluster_RelationalSettingsPersistenceModule\n\n\n\ncluster_RelationalSettingsPersistenceModule_exports\n\n\n\ncluster_RelationalTenantPersistenceModule\n\n\n\ncluster_RelationalTenantPersistenceModule_exports\n\n\n\ncluster_RelationalTenantTypePersistenceModule\n\n\n\ncluster_RelationalTenantTypePersistenceModule_exports\n\n\n\ncluster_RelationalUserPersistenceModule\n\n\n\ncluster_ResidenceSeedModule\n\n\n\ncluster_ResidenceSeedModule_exports\n\n\n\ncluster_ResidenceSeedModule_providers\n\n\n\ncluster_ResidencesModule\n\n\n\ncluster_ResidencesModule_exports\n\n\n\ncluster_ResidencesModule_providers\n\n\n\ncluster_RoleSeedModule\n\n\n\ncluster_RoleSeedModule_exports\n\n\n\ncluster_RoleSeedModule_providers\n\n\n\ncluster_SeedModule\n\n\n\ncluster_SeedModule_imports\n\n\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_exports\n\n\n\ncluster_SessionModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_SettingsSeedModule\n\n\n\ncluster_SettingsSeedModule_exports\n\n\n\ncluster_SettingsSeedModule_providers\n\n\n\ncluster_StatusSeedModule\n\n\n\ncluster_StatusSeedModule_exports\n\n\n\ncluster_StatusSeedModule_providers\n\n\n\ncluster_TenantSeedModule\n\n\n\ncluster_TenantSeedModule_exports\n\n\n\ncluster_TenantSeedModule_providers\n\n\n\ncluster_TenantsModule\n\n\n\ncluster_TenantsModule_exports\n\n\n\ncluster_TenantsModule_providers\n\n\n\ncluster_TenantTypesModule\n\n\n\ncluster_TenantTypesModule_exports\n\n\n\ncluster_TenantTypesModule_providers\n\n\n\ncluster_TenantTypesSeedModule\n\n\n\ncluster_TenantTypesSeedModule_exports\n\n\n\ncluster_TenantTypesSeedModule_providers\n\n\n\ncluster_UserSeedModule\n\n\n\ncluster_UserSeedModule_exports\n\n\n\ncluster_UserSeedModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAccountSeedService \n\nAccountSeedService \n\n\n\nAccountSeedModule\n\nAccountSeedModule\n\nAccountSeedService  -->\n\nAccountSeedModule->AccountSeedService \n\n\n\n\n\nSeedModule\n\nSeedModule\n\nSeedModule -->\n\nAccountSeedModule->SeedModule\n\n\n\n\n\nAccountSeedService\n\nAccountSeedService\n\nAccountSeedModule -->\n\nAccountSeedService->AccountSeedModule\n\n\n\n\n\nRelationalAccountPersistenceModule\n\nRelationalAccountPersistenceModule\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nRelationalAccountPersistenceModule->AccountsModule\n\n\n\n\n\nAccountRepository \n\nAccountRepository \n\nAccountRepository  -->\n\nRelationalAccountPersistenceModule->AccountRepository \n\n\n\n\n\nTenantsModule\n\nTenantsModule\n\nAccountsModule -->\n\nTenantsModule->AccountsModule\n\n\n\n\n\nResidencesModule\n\nResidencesModule\n\nResidencesModule -->\n\nTenantsModule->ResidencesModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTenantsModule->AppModule\n\n\n\n\n\nRelationalTenantPersistenceModule \n\nRelationalTenantPersistenceModule \n\nRelationalTenantPersistenceModule  -->\n\nTenantsModule->RelationalTenantPersistenceModule \n\n\n\n\n\nTenantsService \n\nTenantsService \n\nTenantsService  -->\n\nTenantsModule->TenantsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAccountsModule -->\n\nUsersModule->AccountsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nResidencesModule -->\n\nUsersModule->ResidencesModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAccountsService \n\nAccountsService \n\nAccountsService  -->\n\nAccountsModule->AccountsService \n\n\n\n\n\nRelationalAccountPersistenceModule \n\nRelationalAccountPersistenceModule \n\nRelationalAccountPersistenceModule  -->\n\nAccountsModule->RelationalAccountPersistenceModule \n\n\n\nAppModule -->\n\nAccountsModule->AppModule\n\n\n\n\n\nAccountsService\n\nAccountsService\n\nAccountsModule -->\n\nAccountsService->AccountsModule\n\n\n\n\n\nAuthAppleModule\n\nAuthAppleModule\n\nAppModule -->\n\nAuthAppleModule->AppModule\n\n\n\n\n\nAuthAppleService \n\nAuthAppleService \n\nAuthAppleService  -->\n\nAuthAppleModule->AuthAppleService \n\n\n\n\n\nAuthFacebookModule\n\nAuthFacebookModule\n\nAppModule -->\n\nAuthFacebookModule->AppModule\n\n\n\n\n\nAuthFacebookService \n\nAuthFacebookService \n\nAuthFacebookService  -->\n\nAuthFacebookModule->AuthFacebookService \n\n\n\n\n\nAuthGoogleModule\n\nAuthGoogleModule\n\nAppModule -->\n\nAuthGoogleModule->AppModule\n\n\n\n\n\nAuthGoogleService \n\nAuthGoogleService \n\nAuthGoogleService  -->\n\nAuthGoogleModule->AuthGoogleService \n\n\n\nAuthAppleModule -->\n\nAuthModule->AuthAppleModule\n\n\n\nAuthFacebookModule -->\n\nAuthModule->AuthFacebookModule\n\n\n\nAuthGoogleModule -->\n\nAuthModule->AuthGoogleModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFilesModule\n\nFilesModule\n\nTenantsModule -->\n\nFilesModule->TenantsModule\n\n\n\nUsersModule -->\n\nFilesModule->UsersModule\n\n\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nFilesService \n\nFilesService \n\nFilesService  -->\n\nFilesModule->FilesService \n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nKycDetailsModule\n\nKycDetailsModule\n\nAppModule -->\n\nKycDetailsModule->AppModule\n\n\n\n\n\nKycDetailsService \n\nKycDetailsService \n\nKycDetailsService  -->\n\nKycDetailsModule->KycDetailsService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAuthModule -->\n\nMailModule->AuthModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailerModule\n\nMailerModule\n\nMailModule -->\n\nMailerModule->MailModule\n\n\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nRegionsModule\n\nRegionsModule\n\nUsersModule -->\n\nRegionsModule->UsersModule\n\n\n\nResidencesModule -->\n\nRegionsModule->ResidencesModule\n\n\n\nAppModule -->\n\nRegionsModule->AppModule\n\n\n\n\n\nRegionsService \n\nRegionsService \n\nRegionsService  -->\n\nRegionsModule->RegionsService \n\n\n\n\n\nRelationalRegionPersistenceModule \n\nRelationalRegionPersistenceModule \n\nRelationalRegionPersistenceModule  -->\n\nRegionsModule->RelationalRegionPersistenceModule \n\n\n\nAppModule -->\n\nResidencesModule->AppModule\n\n\n\nAppModule -->\n\nResidencesModule->AppModule\n\n\n\n\n\nRelationalResidencePersistenceModule \n\nRelationalResidencePersistenceModule \n\nRelationalResidencePersistenceModule  -->\n\nResidencesModule->RelationalResidencePersistenceModule \n\n\n\n\n\nResidencesService \n\nResidencesService \n\nResidencesService  -->\n\nResidencesModule->ResidencesService \n\n\n\n\n\nSessionModule\n\nSessionModule\n\nAuthModule -->\n\nSessionModule->AuthModule\n\n\n\nAppModule -->\n\nSessionModule->AppModule\n\n\n\n\n\nSessionService \n\nSessionService \n\nSessionService  -->\n\nSessionModule->SessionService \n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nRelationalSettingsPersistenceModule \n\nRelationalSettingsPersistenceModule \n\nRelationalSettingsPersistenceModule  -->\n\nSettingsModule->RelationalSettingsPersistenceModule \n\n\n\n\n\nSettingsService \n\nSettingsService \n\nSettingsService  -->\n\nSettingsModule->SettingsService \n\n\n\n\n\nTenantTypesModule\n\nTenantTypesModule\n\nTenantsModule -->\n\nTenantTypesModule->TenantsModule\n\n\n\nAppModule -->\n\nTenantTypesModule->AppModule\n\n\n\n\n\nRelationalTenantTypePersistenceModule \n\nRelationalTenantTypePersistenceModule \n\nRelationalTenantTypePersistenceModule  -->\n\nTenantTypesModule->RelationalTenantTypePersistenceModule \n\n\n\n\n\nTenantTypesService \n\nTenantTypesService \n\nTenantTypesService  -->\n\nTenantTypesModule->TenantTypesService \n\n\n\n\n\nAuthAppleService\n\nAuthAppleService\n\nAuthAppleModule -->\n\nAuthAppleService->AuthAppleModule\n\n\n\n\n\nAuthFacebookService\n\nAuthFacebookService\n\nAuthFacebookModule -->\n\nAuthFacebookService->AuthFacebookModule\n\n\n\n\n\nAuthGoogleService\n\nAuthGoogleService\n\nAuthGoogleModule -->\n\nAuthGoogleService->AuthGoogleModule\n\n\n\n\n\nAnonymousStrategy\n\nAnonymousStrategy\n\nAuthModule -->\n\nAnonymousStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFileRepository \n\nFileRepository \n\n\n\nDocumentFilePersistenceModule\n\nDocumentFilePersistenceModule\n\nFileRepository  -->\n\nDocumentFilePersistenceModule->FileRepository \n\n\n\n\n\nKycDetailsRepository \n\nKycDetailsRepository \n\n\n\nDocumentKycDetailsPersistenceModule\n\nDocumentKycDetailsPersistenceModule\n\nKycDetailsRepository  -->\n\nDocumentKycDetailsPersistenceModule->KycDetailsRepository \n\n\n\n\n\nSessionRepository \n\nSessionRepository \n\n\n\nDocumentSessionPersistenceModule\n\nDocumentSessionPersistenceModule\n\nSessionRepository  -->\n\nDocumentSessionPersistenceModule->SessionRepository \n\n\n\n\n\nUserRepository \n\nUserRepository \n\n\n\nDocumentUserPersistenceModule\n\nDocumentUserPersistenceModule\n\nUserRepository  -->\n\nDocumentUserPersistenceModule->UserRepository \n\n\n\n\n\nFilesLocalService \n\nFilesLocalService \n\n\n\nFilesLocalModule\n\nFilesLocalModule\n\nFilesLocalService  -->\n\nFilesLocalModule->FilesLocalService \n\n\n\n\n\nFilesLocalService\n\nFilesLocalService\n\nFilesLocalModule -->\n\nFilesLocalService->FilesLocalModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nFilesS3Service \n\nFilesS3Service \n\n\n\nFilesS3Module\n\nFilesS3Module\n\nFilesS3Service  -->\n\nFilesS3Module->FilesS3Service \n\n\n\n\n\nFilesS3Service\n\nFilesS3Service\n\nFilesS3Module -->\n\nFilesS3Service->FilesS3Module\n\n\n\n\n\nFilesS3PresignedService \n\nFilesS3PresignedService \n\n\n\nFilesS3PresignedModule\n\nFilesS3PresignedModule\n\nFilesS3PresignedService  -->\n\nFilesS3PresignedModule->FilesS3PresignedService \n\n\n\n\n\nFilesS3PresignedService\n\nFilesS3PresignedService\n\nFilesS3PresignedModule -->\n\nFilesS3PresignedService->FilesS3PresignedModule\n\n\n\n\n\nHomeService\n\nHomeService\n\nHomeModule -->\n\nHomeService->HomeModule\n\n\n\n\n\nKycDetailSeedService \n\nKycDetailSeedService \n\n\n\nKycDetailSeedModule\n\nKycDetailSeedModule\n\nKycDetailSeedService  -->\n\nKycDetailSeedModule->KycDetailSeedService \n\n\n\nSeedModule -->\n\nKycDetailSeedModule->SeedModule\n\n\n\n\n\nKycDetailSeedService\n\nKycDetailSeedService\n\nKycDetailSeedModule -->\n\nKycDetailSeedService->KycDetailSeedModule\n\n\n\n\n\nKycDetailsService\n\nKycDetailsService\n\nKycDetailsModule -->\n\nKycDetailsService->KycDetailsModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nRegionSeedService \n\nRegionSeedService \n\n\n\nRegionSeedModule\n\nRegionSeedModule\n\nRegionSeedService  -->\n\nRegionSeedModule->RegionSeedService \n\n\n\nSeedModule -->\n\nRegionSeedModule->SeedModule\n\n\n\n\n\nRegionSeedService\n\nRegionSeedService\n\nRegionSeedModule -->\n\nRegionSeedService->RegionSeedModule\n\n\n\n\n\nRelationalRegionPersistenceModule\n\nRelationalRegionPersistenceModule\n\nRegionsModule -->\n\nRelationalRegionPersistenceModule->RegionsModule\n\n\n\n\n\nRegionRepository \n\nRegionRepository \n\nRegionRepository  -->\n\nRelationalRegionPersistenceModule->RegionRepository \n\n\n\n\n\nRegionsService\n\nRegionsService\n\nRegionsModule -->\n\nRegionsService->RegionsModule\n\n\n\n\n\nRelationalFilePersistenceModule\n\nRelationalFilePersistenceModule\n\nFileRepository  -->\n\nRelationalFilePersistenceModule->FileRepository \n\n\n\n\n\nRelationalKycDetailsPersistenceModule\n\nRelationalKycDetailsPersistenceModule\n\nKycDetailsRepository  -->\n\nRelationalKycDetailsPersistenceModule->KycDetailsRepository \n\n\n\n\n\nResidenceRepository \n\nResidenceRepository \n\n\n\nRelationalResidencePersistenceModule\n\nRelationalResidencePersistenceModule\n\nResidencesModule -->\n\nRelationalResidencePersistenceModule->ResidencesModule\n\n\n\nResidenceRepository  -->\n\nRelationalResidencePersistenceModule->ResidenceRepository \n\n\n\n\n\nRelationalSessionPersistenceModule\n\nRelationalSessionPersistenceModule\n\nSessionRepository  -->\n\nRelationalSessionPersistenceModule->SessionRepository \n\n\n\n\n\nSettingsRepository \n\nSettingsRepository \n\n\n\nRelationalSettingsPersistenceModule\n\nRelationalSettingsPersistenceModule\n\nSettingsModule -->\n\nRelationalSettingsPersistenceModule->SettingsModule\n\n\n\nSettingsRepository  -->\n\nRelationalSettingsPersistenceModule->SettingsRepository \n\n\n\n\n\nTenantRepository \n\nTenantRepository \n\n\n\nRelationalTenantPersistenceModule\n\nRelationalTenantPersistenceModule\n\nTenantsModule -->\n\nRelationalTenantPersistenceModule->TenantsModule\n\n\n\nTenantRepository  -->\n\nRelationalTenantPersistenceModule->TenantRepository \n\n\n\n\n\nTenantTypeRepository \n\nTenantTypeRepository \n\n\n\nRelationalTenantTypePersistenceModule\n\nRelationalTenantTypePersistenceModule\n\nTenantTypesModule -->\n\nRelationalTenantTypePersistenceModule->TenantTypesModule\n\n\n\nTenantTypeRepository  -->\n\nRelationalTenantTypePersistenceModule->TenantTypeRepository \n\n\n\n\n\nRelationalUserPersistenceModule\n\nRelationalUserPersistenceModule\n\nUserRepository  -->\n\nRelationalUserPersistenceModule->UserRepository \n\n\n\n\n\nResidenceSeedService \n\nResidenceSeedService \n\n\n\nResidenceSeedModule\n\nResidenceSeedModule\n\nResidenceSeedService  -->\n\nResidenceSeedModule->ResidenceSeedService \n\n\n\nSeedModule -->\n\nResidenceSeedModule->SeedModule\n\n\n\n\n\nResidenceSeedService\n\nResidenceSeedService\n\nResidenceSeedModule -->\n\nResidenceSeedService->ResidenceSeedModule\n\n\n\n\n\nResidencesService\n\nResidencesService\n\nResidencesModule -->\n\nResidencesService->ResidencesModule\n\n\n\n\n\nRoleSeedService \n\nRoleSeedService \n\n\n\nRoleSeedModule\n\nRoleSeedModule\n\nRoleSeedService  -->\n\nRoleSeedModule->RoleSeedService \n\n\n\nSeedModule -->\n\nRoleSeedModule->SeedModule\n\n\n\n\n\nRoleSeedService\n\nRoleSeedService\n\nRoleSeedModule -->\n\nRoleSeedService->RoleSeedModule\n\n\n\n\n\nUserSeedModule\n\nUserSeedModule\n\nSeedModule -->\n\nUserSeedModule->SeedModule\n\n\n\nSeedModule -->\n\nUserSeedModule->SeedModule\n\n\n\n\n\nUserSeedService \n\nUserSeedService \n\nUserSeedService  -->\n\nUserSeedModule->UserSeedService \n\n\n\nUserSeedService  -->\n\nUserSeedModule->UserSeedService \n\n\n\n\n\nSettingsSeedModule\n\nSettingsSeedModule\n\nSeedModule -->\n\nSettingsSeedModule->SeedModule\n\n\n\n\n\nSettingsSeedService \n\nSettingsSeedService \n\nSettingsSeedService  -->\n\nSettingsSeedModule->SettingsSeedService \n\n\n\n\n\nStatusSeedModule\n\nStatusSeedModule\n\nSeedModule -->\n\nStatusSeedModule->SeedModule\n\n\n\n\n\nStatusSeedService \n\nStatusSeedService \n\nStatusSeedService  -->\n\nStatusSeedModule->StatusSeedService \n\n\n\n\n\nTenantSeedModule\n\nTenantSeedModule\n\nSeedModule -->\n\nTenantSeedModule->SeedModule\n\n\n\n\n\nTenantSeedService \n\nTenantSeedService \n\nTenantSeedService  -->\n\nTenantSeedModule->TenantSeedService \n\n\n\n\n\nTenantTypesSeedModule\n\nTenantTypesSeedModule\n\nSeedModule -->\n\nTenantTypesSeedModule->SeedModule\n\n\n\n\n\nTenantTypesSeedService \n\nTenantTypesSeedService \n\nTenantTypesSeedService  -->\n\nTenantTypesSeedModule->TenantTypesSeedService \n\n\n\n\n\nSessionService\n\nSessionService\n\nSessionModule -->\n\nSessionService->SessionModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSettingsSeedService\n\nSettingsSeedService\n\nSettingsSeedModule -->\n\nSettingsSeedService->SettingsSeedModule\n\n\n\n\n\nStatusSeedService\n\nStatusSeedService\n\nStatusSeedModule -->\n\nStatusSeedService->StatusSeedModule\n\n\n\n\n\nTenantSeedService\n\nTenantSeedService\n\nTenantSeedModule -->\n\nTenantSeedService->TenantSeedModule\n\n\n\n\n\nTenantsService\n\nTenantsService\n\nTenantsModule -->\n\nTenantsService->TenantsModule\n\n\n\n\n\nTenantTypesService\n\nTenantTypesService\n\nTenantTypesModule -->\n\nTenantTypesService->TenantTypesModule\n\n\n\n\n\nTenantTypesSeedService\n\nTenantTypesSeedService\n\nTenantTypesSeedModule -->\n\nTenantTypesSeedService->TenantTypesSeedModule\n\n\n\n\n\nUserSeedService\n\nUserSeedService\n\nUserSeedModule -->\n\nUserSeedService->UserSeedModule\n\n\n\nUserSeedModule -->\n\nUserSeedService->UserSeedModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        48 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    51 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    117 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.2.0\n        \n            Description : \n        \n            License : MIT\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllConfigType   (src/.../config.type.ts)\n                        \n                        \n                            AppConfig   (src/.../app-config.type.ts)\n                        \n                        \n                            AppleConfig   (src/.../apple-config.type.ts)\n                        \n                        \n                            AuthConfig   (src/.../auth-config.type.ts)\n                        \n                        \n                            DatabaseConfig   (src/.../database-config.type.ts)\n                        \n                        \n                            DeepPartial   (src/.../deep-partial.type.ts)\n                        \n                        \n                            FacebookConfig   (src/.../facebook-config.type.ts)\n                        \n                        \n                            FileConfig   (src/.../file-config.type.ts)\n                        \n                        \n                            FileSchemaDocument   (src/.../file.schema.ts)\n                        \n                        \n                            GoogleConfig   (src/.../google-config.type.ts)\n                        \n                        \n                            JwtPayloadType   (src/.../jwt-payload.type.ts)\n                        \n                        \n                            JwtRefreshPayloadType   (src/.../jwt-refresh-payload.type.ts)\n                        \n                        \n                            KycDetailsSchemaDocument   (src/.../kyc-details.schema.ts)\n                        \n                        \n                            MailConfig   (src/.../mail-config.type.ts)\n                        \n                        \n                            MaybeType   (src/.../maybe.type.ts)\n                        \n                        \n                            NullableType   (src/.../nullable.type.ts)\n                        \n                        \n                            OrNeverType   (src/.../or-never.type.ts)\n                        \n                        \n                            SessionSchemaDocument   (src/.../session.schema.ts)\n                        \n                        \n                            UserSchemaDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config.type.ts\n    \n    \n        \n            \n                \n                    \n                    AllConfigType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/config/app-config.type.ts\n    \n    \n        \n            \n                \n                    \n                    AppConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth-apple/config/apple-config.type.ts\n    \n    \n        \n            \n                \n                    \n                    AppleConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth/config/auth-config.type.ts\n    \n    \n        \n            \n                \n                    \n                    AuthConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/database/config/database-config.type.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/utils/types/deep-partial.type.ts\n    \n    \n        \n            \n                \n                    \n                    DeepPartial\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth-facebook/config/facebook-config.type.ts\n    \n    \n        \n            \n                \n                    \n                    FacebookConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/files/config/file-config.type.ts\n    \n    \n        \n            \n                \n                    \n                    FileConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/files/infrastructure/persistence/document/entities/file.schema.ts\n    \n    \n        \n            \n                \n                    \n                    FileSchemaDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/auth-google/config/google-config.type.ts\n    \n    \n        \n            \n                \n                    \n                    GoogleConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth/strategies/types/jwt-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    JwtPayloadType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/strategies/types/jwt-refresh-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    JwtRefreshPayloadType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/kyc-details/infrastructure/persistence/document/entities/kyc-details.schema.ts\n    \n    \n        \n            \n                \n                    \n                    KycDetailsSchemaDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/mail/config/mail-config.type.ts\n    \n    \n        \n            \n                \n                    \n                    MailConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/utils/types/maybe.type.ts\n    \n    \n        \n            \n                \n                    \n                    MaybeType\n                \n            \n            \n                \n                        T | undefined\n\n                \n            \n        \n    \n    src/utils/types/nullable.type.ts\n    \n    \n        \n            \n                \n                    \n                    NullableType\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    src/utils/types/or-never.type.ts\n    \n    \n        \n            \n                \n                    \n                    OrNeverType\n                \n            \n            \n                \n                        T | never\n\n                \n            \n        \n    \n    src/session/infrastructure/persistence/document/entities/session.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SessionSchemaDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/infrastructure/persistence/document/entities/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserSchemaDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_EMAIL   (test/.../constants.ts)\n                        \n                        \n                            ADMIN_PASSWORD   (test/.../constants.ts)\n                        \n                        \n                            APP_URL   (test/.../constants.ts)\n                        \n                        \n                            AppDataSource   (src/.../data-source.ts)\n                        \n                        \n                            FileSchema   (src/.../file.schema.ts)\n                        \n                        \n                            idType   (src/.../role.ts)\n                        \n                        \n                            idType   (src/.../status.ts)\n                        \n                        \n                            idType   (src/.../user.ts)\n                        \n                        \n                            infinityPagination   (src/.../infinity-pagination.ts)\n                        \n                        \n                            infrastructureDatabaseModule   (src/.../app.module.ts)\n                        \n                        \n                            infrastructurePersistenceModule   (src/.../files.module.ts)\n                        \n                        \n                            infrastructurePersistenceModule   (src/.../kyc-details.module.ts)\n                        \n                        \n                            infrastructurePersistenceModule   (src/.../session.module.ts)\n                        \n                        \n                            infrastructurePersistenceModule   (src/.../users.module.ts)\n                        \n                        \n                            infrastructurePersistenceModule   (src/.../files.module.ts)\n                        \n                        \n                            infrastructurePersistenceModule   (src/.../files.module.ts)\n                        \n                        \n                            infrastructurePersistenceModule   (src/.../files.module.ts)\n                        \n                        \n                            infrastructureUploaderModule   (src/.../files.module.ts)\n                        \n                        \n                            KycDetailsSchema   (src/.../kyc-details.schema.ts)\n                        \n                        \n                            lowerCaseTransformer   (src/.../lower-case.transformer.ts)\n                        \n                        \n                            MAIL_HOST   (test/.../constants.ts)\n                        \n                        \n                            MAIL_PORT   (test/.../constants.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            runSeed   (src/.../run-seed.ts)\n                        \n                        \n                            runSeed   (src/.../run-seed.ts)\n                        \n                        \n                            SessionSchema   (src/.../session.schema.ts)\n                        \n                        \n                            TESTER_EMAIL   (test/.../constants.ts)\n                        \n                        \n                            TESTER_PASSWORD   (test/.../constants.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            validationOptions   (src/.../validation-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/utils/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_EMAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'admin@example.com'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ADMIN_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'secret'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        APP_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `http://localhost:${process.env.APP_PORT}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MAIL_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MAIL_HOST\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MAIL_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.MAIL_CLIENT_PORT\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TESTER_EMAIL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'john.doe@example.com'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TESTER_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'secret'\n                    \n                \n\n\n        \n    \n\n    src/database/data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: process.env.DATABASE_TYPE,\n  url: process.env.DATABASE_URL,\n  host: process.env.DATABASE_HOST,\n  port: process.env.DATABASE_PORT\n    ? parseInt(process.env.DATABASE_PORT, 10)\n    : 5432,\n  username: process.env.DATABASE_USERNAME,\n  password: process.env.DATABASE_PASSWORD,\n  database: process.env.DATABASE_NAME,\n  synchronize: process.env.DATABASE_SYNCHRONIZE === 'true',\n  dropSchema: false,\n  keepConnectionAlive: true,\n  logging: process.env.NODE_ENV !== 'production',\n  entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n  migrations: [__dirname + '/migrations/**/*{.ts,.js}'],\n  cli: {\n    entitiesDir: 'src',\n\n    subscribersDir: 'subscriber',\n  },\n  extra: {\n    // based on https://node-postgres.com/api/pool\n    // max connection pool size\n    max: process.env.DATABASE_MAX_CONNECTIONS\n      ? parseInt(process.env.DATABASE_MAX_CONNECTIONS, 10)\n      : 100,\n    ssl:\n      process.env.DATABASE_SSL_ENABLED === 'true'\n        ? {\n            rejectUnauthorized:\n              process.env.DATABASE_REJECT_UNAUTHORIZED === 'true',\n            ca: process.env.DATABASE_CA ?? undefined,\n            key: process.env.DATABASE_KEY ?? undefined,\n            cert: process.env.DATABASE_CERT ?? undefined,\n          }\n        : undefined,\n  },\n} as DataSourceOptions)\n                    \n                \n\n\n        \n    \n\n    src/files/infrastructure/persistence/document/entities/file.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FileSchemaClass)\n                    \n                \n\n\n        \n    \n\n    src/roles/domain/role.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        idType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig).isDocumentDatabase\n  ? String\n  : Number\n                    \n                \n\n\n        \n    \n\n    src/statuses/domain/status.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        idType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig).isDocumentDatabase\n  ? String\n  : Number\n                    \n                \n\n\n        \n    \n\n    src/users/domain/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        idType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig).isDocumentDatabase\n  ? String\n  : Number\n                    \n                \n\n\n        \n    \n\n    src/utils/infinity-pagination.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infinityPagination\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  data: T[],\n  options: IPaginationOptions,\n): InfinityPaginationResponseDto => {\n  return {\n    data,\n    hasNextPage: data.length === options.limit,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infrastructureDatabaseModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? MongooseModule.forRootAsync({\n      useClass: MongooseConfigService,\n    })\n  : TypeOrmModule.forRootAsync({\n      useClass: TypeOrmConfigService,\n      dataSourceFactory: async (options: DataSourceOptions) => {\n        return new DataSource(options).initialize();\n      },\n    })\n                    \n                \n\n\n        \n    \n\n    src/files/files.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infrastructurePersistenceModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentFilePersistenceModule\n  : RelationalFilePersistenceModule\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infrastructureUploaderModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fileConfig() as FileConfig).driver === FileDriver.LOCAL\n    ? FilesLocalModule\n    : (fileConfig() as FileConfig).driver === FileDriver.S3\n      ? FilesS3Module\n      : FilesS3PresignedModule\n                    \n                \n\n\n        \n    \n\n    src/kyc-details/kyc-details.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infrastructurePersistenceModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentKycDetailsPersistenceModule\n  : RelationalKycDetailsPersistenceModule\n                    \n                \n\n\n        \n    \n\n    src/session/session.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infrastructurePersistenceModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentSessionPersistenceModule\n  : RelationalSessionPersistenceModule\n                    \n                \n\n\n        \n    \n\n    src/users/users.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infrastructurePersistenceModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentUserPersistenceModule\n  : RelationalUserPersistenceModule\n                    \n                \n\n\n        \n    \n\n    src/files/infrastructure/uploader/local/files.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infrastructurePersistenceModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentFilePersistenceModule\n  : RelationalFilePersistenceModule\n                    \n                \n\n\n        \n    \n\n    src/files/infrastructure/uploader/s3/files.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infrastructurePersistenceModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentFilePersistenceModule\n  : RelationalFilePersistenceModule\n                    \n                \n\n\n        \n    \n\n    src/files/infrastructure/uploader/s3-presigned/files.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        infrastructurePersistenceModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (databaseConfig() as DatabaseConfig)\n  .isDocumentDatabase\n  ? DocumentFilePersistenceModule\n  : RelationalFilePersistenceModule\n                    \n                \n\n\n        \n    \n\n    src/kyc-details/infrastructure/persistence/document/entities/kyc-details.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        KycDetailsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(\n  KycDetailsSchemaClass,\n)\n                    \n                \n\n\n        \n    \n\n    src/utils/transformers/lower-case.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lowerCaseTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  params: TransformFnParams,\n): MaybeType => params.value?.toLowerCase().trim()\n                    \n                \n\n\n        \n    \n\n    src/roles/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: number[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n    src/database/seeds/document/run-seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        runSeed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(SeedModule);\n\n  // run\n  await app.get(UserSeedService).run();\n\n  await app.close();\n}\n                    \n                \n\n\n        \n    \n\n    src/database/seeds/relational/run-seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        runSeed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(SeedModule);\n\n  // run\n  await app.get(TenantTypesSeedService).run();\n  await app.get(TenantSeedService).run();\n  await app.get(RoleSeedService).run();\n  await app.get(StatusSeedService).run();\n  await app.get(RegionSeedService).run();\n  await app.get(UserSeedService).run();\n  // await app.get(KycDetailSeedService).run();\n\n  // await app.get(SettingsSeedService).run();\n\n  await app.get(ResidenceSeedService).run();\n\n  await app.get(AccountSeedService).run();\n\n  await app.close();\n}\n                    \n                \n\n\n        \n    \n\n    src/session/infrastructure/persistence/document/entities/session.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SessionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SessionSchemaClass)\n                    \n                \n\n\n        \n    \n\n    src/users/infrastructure/persistence/document/entities/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(UserSchemaClass)\n                    \n                \n\n\n        \n    \n\n    src/utils/validation-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationPipeOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  transform: true,\n  whitelist: true,\n  errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n  exceptionFactory: (errors: ValidationError[]) => {\n    return new UnprocessableEntityException({\n      status: HttpStatus.UNPROCESSABLE_ENTITY,\n      errors: generateErrors(errors),\n    });\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
