{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/reports/income-statement": {
      "get": {
        "operationId": "ReportsController_getIncomeStatement_v1",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Income Statement (Profit & Loss)"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/balance-sheet": {
      "get": {
        "operationId": "ReportsController_getBalanceSheet_v1",
        "parameters": [
          {
            "name": "asOfDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Balance Sheet"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/cash-flow": {
      "get": {
        "operationId": "ReportsController_getCashFlowStatement_v1",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cash Flow Statement"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/trial-balance": {
      "get": {
        "operationId": "ReportsController_getTrialBalance_v1",
        "parameters": [
          {
            "name": "asOfDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trial Balance"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/general-ledger": {
      "get": {
        "operationId": "ReportsController_getGeneralLedger_v1",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "General Ledger Entries"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/ar-aging": {
      "get": {
        "operationId": "ReportsController_getAccountsReceivableAging_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts Receivable Aging Report"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/ap-aging": {
      "get": {
        "operationId": "ReportsController_getAccountsPayableAging_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts Payable Aging Report"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/inventory-valuation": {
      "get": {
        "operationId": "ReportsController_getInventoryValuation_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory Valuation Report"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/unapplied-payments": {
      "get": {
        "operationId": "ReportsController_getUnappliedPayments_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unapplied Payments Report"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/overpayments": {
      "get": {
        "operationId": "ReportsController_getOverpayments_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer Overpayments Report"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/revenue-by-customer": {
      "get": {
        "operationId": "ReportsController_getRevenueByCustomer_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Revenue by Customer Report"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/revenue-by-plan": {
      "get": {
        "operationId": "ReportsController_getRevenueByPlan_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Revenue by Payment Plan Report"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/payment-method-summary": {
      "get": {
        "operationId": "ReportsController_getPaymentMethodSummary_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary of Payments by Method (Cash, Bank, Mpesa, etc.)"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/discounts-summary": {
      "get": {
        "operationId": "ReportsController_getDiscountsSummary_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary of Discounts Applied"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/exemptions-summary": {
      "get": {
        "operationId": "ReportsController_getExemptionsSummary_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary of Exemptions Granted"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/reminders-performance": {
      "get": {
        "operationId": "ReportsController_getRemindersPerformance_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder Notification Delivery Performance"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/collection-compliance": {
      "get": {
        "operationId": "ReportsController_getCollectionCompliance_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Waste Collection Compliance vs. Schedule"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/bin-usage-stats": {
      "get": {
        "operationId": "ReportsController_getBinUsageStats_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bin Usage and Rotation Statistics"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/credit-balance-summary": {
      "get": {
        "operationId": "ReportsController_getCreditBalanceSummary_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary of Credit Balances"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/active-vs-inactive-customers": {
      "get": {
        "operationId": "ReportsController_getActiveVsInactiveCustomers_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Active vs Inactive Customers Overview"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/failed-payments": {
      "get": {
        "operationId": "ReportsController_getFailedPayments_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Failed Payment Attempts Report"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/revenue-growth": {
      "get": {
        "operationId": "ReportsController_getRevenueGrowth_v1",
        "parameters": [
          {
            "name": "period",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Revenue Growth Over Time"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/region-performance": {
      "get": {
        "operationId": "ReportsController_getRegionPerformance_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Revenue and Collection by Region"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/dashboard/platform-owner": {
      "get": {
        "operationId": "ReportsController_getPlatformOwnerStats_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stats for Platform Owner Dashboard"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/dashboard/admin": {
      "get": {
        "operationId": "ReportsController_getAdminDashboardStats_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stats for Admin Dashboard"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/dashboard/agent": {
      "get": {
        "operationId": "ReportsController_getAgentDashboardStats_v1",
        "parameters": [
          {
            "name": "agentId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stats for Agent Dashboard"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/dashboard/customer": {
      "get": {
        "operationId": "ReportsController_getCustomerDashboardStats_v1",
        "parameters": [
          {
            "name": "customerId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stats for Customer Dashboard"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/dashboard/manager": {
      "get": {
        "operationId": "ReportsController_getManagerDashboardStats_v1",
        "parameters": [
          {
            "name": "regionId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stats for Manager Dashboard"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/dashboard/finance": {
      "get": {
        "operationId": "ReportsController_getFinanceDashboardStats_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stats for Finance Dashboard"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/reports/dashboard/guest": {
      "get": {
        "operationId": "ReportsController_getGuestDashboardStats_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stats for Guest or Basic User Dashboard"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/v1/system-modules": {
      "post": {
        "operationId": "SystemModulesController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSystemModuleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemModule"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Systemmodules"
        ]
      },
      "get": {
        "operationId": "SystemModulesController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationSystemModuleResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Systemmodules"
        ]
      }
    },
    "/api/v1/system-modules/{id}": {
      "get": {
        "operationId": "SystemModulesController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemModule"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Systemmodules"
        ]
      },
      "patch": {
        "operationId": "SystemModulesController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystemModuleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemModule"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Systemmodules"
        ]
      },
      "delete": {
        "operationId": "SystemModulesController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Systemmodules"
        ]
      }
    },
    "/api/v1/audit-logs": {
      "post": {
        "operationId": "AuditLogsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAuditLogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auditlogs"
        ]
      },
      "get": {
        "operationId": "AuditLogsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationAuditLogResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auditlogs"
        ]
      }
    },
    "/api/v1/audit-logs/{id}": {
      "get": {
        "operationId": "AuditLogsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auditlogs"
        ]
      },
      "patch": {
        "operationId": "AuditLogsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAuditLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auditlogs"
        ]
      },
      "delete": {
        "operationId": "AuditLogsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auditlogs"
        ]
      }
    },
    "/api/v1/users": {
      "post": {
        "operationId": "UsersController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationUserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/onboardings": {
      "post": {
        "operationId": "OnboardingsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOnboardingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Onboarding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      },
      "get": {
        "operationId": "OnboardingsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationOnboardingResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      }
    },
    "/api/v1/onboardings/{id}": {
      "get": {
        "operationId": "OnboardingsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Onboarding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      },
      "patch": {
        "operationId": "OnboardingsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOnboardingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Onboarding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      },
      "delete": {
        "operationId": "OnboardingsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      }
    },
    "/api/v1/onboardings/{entityType}/{entityId}/status": {
      "get": {
        "operationId": "OnboardingsController_getOnboardingStatus_v1",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "user",
                "tenant"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      }
    },
    "/api/v1/onboardings/initialize/{entityType}/{entityId}": {
      "post": {
        "operationId": "OnboardingsController_initialize_v1",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "user",
                "tenant"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      }
    },
    "/api/v1/onboardings/{entityType}/{entityId}/complete/{stepKey}": {
      "post": {
        "operationId": "OnboardingsController_completeStep_v1",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "user",
                "tenant"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      }
    },
    "/api/v1/onboardings/{entityType}/{entityId}/skip/{stepKey}": {
      "post": {
        "operationId": "OnboardingsController_skipStep_v1",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "user",
                "tenant"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      }
    },
    "/api/v1/onboardings/{entityType}/{entityId}/reset/{stepKey}": {
      "post": {
        "operationId": "OnboardingsController_resetStep_v1",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "user",
                "tenant"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      }
    },
    "/api/v1/onboardings/{entityType}/{entityId}/step/{stepKey}": {
      "get": {
        "operationId": "OnboardingsController_getStepStatus_v1",
        "parameters": [
          {
            "name": "entityType",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "user",
                "tenant"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Onboardings"
        ]
      }
    },
    "/api/v1/tenants": {
      "post": {
        "operationId": "TenantsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenants"
        ]
      },
      "get": {
        "operationId": "TenantsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationTenantResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenants"
        ]
      }
    },
    "/api/v1/tenants/{id}": {
      "get": {
        "operationId": "TenantsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenants"
        ]
      },
      "patch": {
        "operationId": "TenantsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenants"
        ]
      },
      "delete": {
        "operationId": "TenantsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenants"
        ]
      }
    },
    "/api/v1/regions": {
      "post": {
        "operationId": "RegionsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Regions"
        ]
      },
      "get": {
        "operationId": "RegionsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationRegionResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Regions"
        ]
      }
    },
    "/api/v1/regions/{id}": {
      "get": {
        "operationId": "RegionsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Regions"
        ]
      },
      "patch": {
        "operationId": "RegionsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRegionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Regions"
        ]
      },
      "delete": {
        "operationId": "RegionsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Regions"
        ]
      }
    },
    "/api/v1/settings": {
      "post": {
        "operationId": "SettingsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettingsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "get": {
        "operationId": "SettingsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationSettingsResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/api/v1/settings/{id}": {
      "get": {
        "operationId": "SettingsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "patch": {
        "operationId": "SettingsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      },
      "delete": {
        "operationId": "SettingsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/api/v1/kyc-details": {
      "post": {
        "operationId": "KycDetailsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKycDetailsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KycDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Kycdetails"
        ]
      },
      "get": {
        "operationId": "KycDetailsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationKycDetailsResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Kycdetails"
        ]
      }
    },
    "/api/v1/kyc-details/{id}": {
      "get": {
        "operationId": "KycDetailsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KycDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Kycdetails"
        ]
      },
      "patch": {
        "operationId": "KycDetailsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateKycDetailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KycDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Kycdetails"
        ]
      },
      "delete": {
        "operationId": "KycDetailsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Kycdetails"
        ]
      }
    },
    "/api/v1/files/upload": {
      "post": {
        "operationId": "FilesLocalController_uploadFile_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v1/tenant-types": {
      "get": {
        "operationId": "TenantTypesController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationTenantTypeResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Tenanttypes"
        ]
      },
      "post": {
        "operationId": "TenantTypesController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantType"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenanttypes"
        ]
      }
    },
    "/api/v1/tenant-types/{id}": {
      "get": {
        "operationId": "TenantTypesController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantType"
                }
              }
            }
          }
        },
        "tags": [
          "Tenanttypes"
        ]
      },
      "patch": {
        "operationId": "TenantTypesController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantType"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenanttypes"
        ]
      },
      "delete": {
        "operationId": "TenantTypesController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenanttypes"
        ]
      }
    },
    "/api/v1/payment-notifications": {
      "post": {
        "operationId": "PaymentNotificationsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentNotification"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentnotifications"
        ]
      },
      "get": {
        "operationId": "PaymentNotificationsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationPaymentNotificationResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentnotifications"
        ]
      }
    },
    "/api/v1/payment-notifications/{id}": {
      "get": {
        "operationId": "PaymentNotificationsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentNotification"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentnotifications"
        ]
      },
      "patch": {
        "operationId": "PaymentNotificationsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentNotification"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentnotifications"
        ]
      },
      "delete": {
        "operationId": "PaymentNotificationsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentnotifications"
        ]
      }
    },
    "/api/v1/payment-aggregators": {
      "post": {
        "operationId": "PaymentAggregatorsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentAggregatorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAggregator"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentaggregators"
        ]
      },
      "get": {
        "operationId": "PaymentAggregatorsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationPaymentAggregatorResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentaggregators"
        ]
      }
    },
    "/api/v1/payment-aggregators/{id}": {
      "get": {
        "operationId": "PaymentAggregatorsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAggregator"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentaggregators"
        ]
      },
      "patch": {
        "operationId": "PaymentAggregatorsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentAggregatorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAggregator"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentaggregators"
        ]
      },
      "delete": {
        "operationId": "PaymentAggregatorsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentaggregators"
        ]
      }
    },
    "/api/v1/credit-balances": {
      "post": {
        "operationId": "CreditBalancesController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditBalanceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditBalance"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Creditbalances"
        ]
      },
      "get": {
        "operationId": "CreditBalancesController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationCreditBalanceResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Creditbalances"
        ]
      }
    },
    "/api/v1/credit-balances/{id}": {
      "get": {
        "operationId": "CreditBalancesController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditBalance"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Creditbalances"
        ]
      },
      "patch": {
        "operationId": "CreditBalancesController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditBalanceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditBalance"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Creditbalances"
        ]
      },
      "delete": {
        "operationId": "CreditBalancesController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Creditbalances"
        ]
      }
    },
    "/api/v1/payment-methods": {
      "post": {
        "operationId": "PaymentMethodsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentmethods"
        ]
      },
      "get": {
        "operationId": "PaymentMethodsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationPaymentMethodResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentmethods"
        ]
      }
    },
    "/api/v1/payment-methods/{id}": {
      "get": {
        "operationId": "PaymentMethodsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentmethods"
        ]
      },
      "patch": {
        "operationId": "PaymentMethodsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentMethodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentmethods"
        ]
      },
      "delete": {
        "operationId": "PaymentMethodsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentmethods"
        ]
      }
    },
    "/api/v1/reminders": {
      "post": {
        "operationId": "RemindersController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReminderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reminders"
        ]
      },
      "get": {
        "operationId": "RemindersController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationReminderResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reminders"
        ]
      }
    },
    "/api/v1/reminders/{id}": {
      "get": {
        "operationId": "RemindersController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reminders"
        ]
      },
      "patch": {
        "operationId": "RemindersController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReminderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reminder"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reminders"
        ]
      },
      "delete": {
        "operationId": "RemindersController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Reminders"
        ]
      }
    },
    "/api/v1/invoices": {
      "post": {
        "operationId": "InvoicesController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "get": {
        "operationId": "InvoicesController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationInvoiceResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/api/v1/invoices/{id}": {
      "get": {
        "operationId": "InvoicesController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "patch": {
        "operationId": "InvoicesController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "delete": {
        "operationId": "InvoicesController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/api/v1/exemptions": {
      "post": {
        "operationId": "ExemptionsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExemptionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exemption"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Exemptions"
        ]
      },
      "get": {
        "operationId": "ExemptionsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationExemptionResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Exemptions"
        ]
      }
    },
    "/api/v1/exemptions/{id}": {
      "get": {
        "operationId": "ExemptionsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exemption"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Exemptions"
        ]
      },
      "patch": {
        "operationId": "ExemptionsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExemptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exemption"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Exemptions"
        ]
      },
      "delete": {
        "operationId": "ExemptionsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Exemptions"
        ]
      }
    },
    "/api/v1/discounts": {
      "post": {
        "operationId": "DiscountsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiscountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Discounts"
        ]
      },
      "get": {
        "operationId": "DiscountsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationDiscountResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/api/v1/discounts/{id}": {
      "get": {
        "operationId": "DiscountsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Discounts"
        ]
      },
      "patch": {
        "operationId": "DiscountsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Discounts"
        ]
      },
      "delete": {
        "operationId": "DiscountsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Discounts"
        ]
      }
    },
    "/api/v1/payment-plans": {
      "post": {
        "operationId": "PaymentPlansController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentPlanDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlan"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentplans"
        ]
      },
      "get": {
        "operationId": "PaymentPlansController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationPaymentPlanResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentplans"
        ]
      }
    },
    "/api/v1/payment-plans/{id}": {
      "get": {
        "operationId": "PaymentPlansController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlan"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentplans"
        ]
      },
      "patch": {
        "operationId": "PaymentPlansController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentPlanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentPlan"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentplans"
        ]
      },
      "delete": {
        "operationId": "PaymentPlansController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Paymentplans"
        ]
      }
    },
    "/api/v1/accounts-receivables": {
      "post": {
        "operationId": "AccountsReceivablesController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountsReceivableDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsReceivable"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountsreceivables"
        ]
      },
      "get": {
        "operationId": "AccountsReceivablesController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationAccountsReceivableResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountsreceivables"
        ]
      }
    },
    "/api/v1/accounts-receivables/{id}": {
      "get": {
        "operationId": "AccountsReceivablesController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsReceivable"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountsreceivables"
        ]
      },
      "patch": {
        "operationId": "AccountsReceivablesController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountsReceivableDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsReceivable"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountsreceivables"
        ]
      },
      "delete": {
        "operationId": "AccountsReceivablesController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountsreceivables"
        ]
      }
    },
    "/api/v1/accounts": {
      "post": {
        "operationId": "AccountsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      },
      "get": {
        "operationId": "AccountsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationAccountResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/v1/accounts/{id}": {
      "get": {
        "operationId": "AccountsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      },
      "patch": {
        "operationId": "AccountsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      },
      "delete": {
        "operationId": "AccountsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/v1/residences": {
      "post": {
        "operationId": "ResidencesController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResidenceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Residence"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Residences"
        ]
      },
      "get": {
        "operationId": "ResidencesController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationResidenceResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Residences"
        ]
      }
    },
    "/api/v1/residences/{id}": {
      "get": {
        "operationId": "ResidencesController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Residence"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Residences"
        ]
      },
      "patch": {
        "operationId": "ResidencesController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResidenceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Residence"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Residences"
        ]
      },
      "delete": {
        "operationId": "ResidencesController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Residences"
        ]
      }
    },
    "/api/v1/inventories": {
      "post": {
        "operationId": "InventoriesController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Inventories"
        ]
      },
      "get": {
        "operationId": "InventoriesController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationInventoryResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Inventories"
        ]
      }
    },
    "/api/v1/inventories/{id}": {
      "get": {
        "operationId": "InventoriesController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Inventories"
        ]
      },
      "patch": {
        "operationId": "InventoriesController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInventoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Inventories"
        ]
      },
      "delete": {
        "operationId": "InventoriesController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Inventories"
        ]
      }
    },
    "/api/v1/payments": {
      "post": {
        "operationId": "PaymentsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "get": {
        "operationId": "PaymentsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationPaymentResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/payments/{id}": {
      "get": {
        "operationId": "PaymentsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "patch": {
        "operationId": "PaymentsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "delete": {
        "operationId": "PaymentsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/v1/transactions": {
      "post": {
        "operationId": "TransactionsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      },
      "get": {
        "operationId": "TransactionsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationTransactionResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/v1/transactions/{id}": {
      "get": {
        "operationId": "TransactionsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      },
      "patch": {
        "operationId": "TransactionsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      },
      "delete": {
        "operationId": "TransactionsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/v1/vendor-bills": {
      "post": {
        "operationId": "VendorBillsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorBillDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorBill"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendorbills"
        ]
      },
      "get": {
        "operationId": "VendorBillsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationVendorBillResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendorbills"
        ]
      }
    },
    "/api/v1/vendor-bills/{id}": {
      "get": {
        "operationId": "VendorBillsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorBill"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendorbills"
        ]
      },
      "patch": {
        "operationId": "VendorBillsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorBillDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorBill"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendorbills"
        ]
      },
      "delete": {
        "operationId": "VendorBillsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendorbills"
        ]
      }
    },
    "/api/v1/accounts-payables": {
      "post": {
        "operationId": "AccountsPayablesController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountsPayableDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsPayable"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountspayables"
        ]
      },
      "get": {
        "operationId": "AccountsPayablesController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationAccountsPayableResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountspayables"
        ]
      }
    },
    "/api/v1/accounts-payables/{id}": {
      "get": {
        "operationId": "AccountsPayablesController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsPayable"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountspayables"
        ]
      },
      "patch": {
        "operationId": "AccountsPayablesController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountsPayableDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsPayable"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountspayables"
        ]
      },
      "delete": {
        "operationId": "AccountsPayablesController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Accountspayables"
        ]
      }
    },
    "/api/v1/vendors": {
      "post": {
        "operationId": "VendorsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "get": {
        "operationId": "VendorsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationVendorResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/api/v1/vendors/{id}": {
      "get": {
        "operationId": "VendorsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "patch": {
        "operationId": "VendorsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "delete": {
        "operationId": "VendorsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/api/v1/subscriptions": {
      "post": {
        "operationId": "SubscriptionsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Customerplans"
        ]
      },
      "get": {
        "operationId": "SubscriptionsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationSubscriptionResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Customerplans"
        ]
      }
    },
    "/api/v1/subscriptions/{id}": {
      "get": {
        "operationId": "SubscriptionsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Customerplans"
        ]
      },
      "patch": {
        "operationId": "SubscriptionsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Customerplans"
        ]
      },
      "delete": {
        "operationId": "SubscriptionsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Customerplans"
        ]
      }
    },
    "/api/v1/tenant-configs": {
      "post": {
        "operationId": "TenantConfigsController_create_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantConfigDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenantconfigs"
        ]
      },
      "get": {
        "operationId": "TenantConfigsController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationTenantConfigResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenantconfigs"
        ]
      }
    },
    "/api/v1/tenant-configs/{id}": {
      "get": {
        "operationId": "TenantConfigsController_findById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenantconfigs"
        ]
      },
      "patch": {
        "operationId": "TenantConfigsController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenantconfigs"
        ]
      },
      "delete": {
        "operationId": "TenantConfigsController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Tenantconfigs"
        ]
      }
    },
    "/api/v1/auth/email/login": {
      "post": {
        "operationId": "AuthController_login_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthEmailLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/phone/login": {
      "post": {
        "operationId": "AuthController_loginPhone_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthPhoneLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/email/register": {
      "post": {
        "operationId": "AuthController_register_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegisterLoginDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/tenant/register": {
      "post": {
        "operationId": "AuthController_registerTenant_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegisterTenantDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/email/confirm": {
      "post": {
        "operationId": "AuthController_confirmEmail_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthConfirmDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/phone/confirm": {
      "post": {
        "operationId": "AuthController_confirmPhone_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthConfirmDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/phone/confirm/new": {
      "post": {
        "operationId": "AuthController_confirmNewPhone_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthConfirmDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/email/confirm/new": {
      "post": {
        "operationId": "AuthController_confirmNewEmail_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthConfirmDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/forgot/password": {
      "post": {
        "operationId": "AuthController_forgotPassword_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/reset/password": {
      "post": {
        "operationId": "AuthController_resetPassword_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "operationId": "AuthController_me_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      },
      "patch": {
        "operationId": "AuthController_update_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      },
      "delete": {
        "operationId": "AuthController_delete_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "operationId": "AuthController_logout_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/facebook/login": {
      "post": {
        "operationId": "AuthFacebookController_login_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthFacebookLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/google/login": {
      "post": {
        "operationId": "AuthGoogleController_login_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGoogleLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/apple/login": {
      "post": {
        "operationId": "AuthAppleController_login_v1",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthAppleLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/": {
      "get": {
        "operationId": "HomeController_appInfo",
        "parameters": [
          {
            "in": "header",
            "name": "x-tenant-id",
            "description": "Tenant ID for database context",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "required": false,
            "name": "x-custom-lang",
            "schema": {
              "example": "en"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Home"
        ]
      }
    }
  },
  "info": {
    "title": "API",
    "description": "API docs",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateSystemModuleDto": {
        "type": "object",
        "properties": {
          "submodules": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "SystemModule": {
        "type": "object",
        "properties": {
          "submodules": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "submodules",
          "description",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationSystemModuleResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SystemModule"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateSystemModuleDto": {
        "type": "object",
        "properties": {
          "submodules": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateAuditLogDto": {
        "type": "object",
        "properties": {
          "performedByUserId": {
            "type": "string",
            "description": "ID of user who performed the action",
            "example": "a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8"
          },
          "performedByTenantId": {
            "type": "string",
            "description": "ID of tenant who performed the action",
            "example": "t1e2n3a4n5t6-7890-id"
          },
          "status": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "beforeState": {
            "type": "object",
            "description": "State before the action",
            "example": {
              "email": "old@example.com"
            }
          },
          "afterState": {
            "type": "object",
            "description": "State after the action",
            "example": {
              "email": "new@example.com"
            }
          },
          "entityId": {
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "action": {
            "type": "string",
            "enum": [
              "create",
              "read",
              "update",
              "delete",
              "complete_step",
              "skip_step",
              "restart_step",
              "login",
              "logout",
              "password_change",
              "password_reset_request",
              "password_reset_complete",
              "assign_role",
              "remove_role",
              "update_permissions",
              "invite_user",
              "activate_user",
              "deactivate_user",
              "create_tenant",
              "update_tenant",
              "delete_tenant",
              "switch_tenant",
              "upload",
              "download",
              "export",
              "import",
              "update_settings",
              "reset_settings",
              "view_audit_log",
              "export_audit_log",
              "system_start",
              "system_shutdown",
              "system_error",
              "send_notification",
              "read_notification",
              "archive",
              "restore",
              "tag",
              "untag"
            ],
            "description": "Action performed",
            "example": "update"
          }
        },
        "required": [
          "entityType",
          "action"
        ]
      },
      "DatabaseConfigDto": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "port": {
            "type": "number"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "database": {
            "type": "string"
          },
          "schema": {
            "type": "string"
          }
        },
        "required": [
          "host",
          "port",
          "username",
          "password",
          "database",
          "schema"
        ]
      },
      "Region": {
        "type": "object",
        "properties": {
          "zipCodes": {
            "example": [
              "00100",
              "00101"
            ],
            "description": "ZIP codes covered by this region",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingHours": {
            "type": "object",
            "example": {
              "days": [
                "mon",
                "wed",
                "fri"
              ],
              "startTime": "08:00",
              "endTime": "17:00"
            },
            "description": "Operating hours for waste collection"
          },
          "serviceTypes": {
            "example": [
              "residential",
              "commercial"
            ],
            "description": "Supported service types in this region",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "centroidLon": {
            "type": "number",
            "nullable": true
          },
          "centroidLat": {
            "type": "number",
            "nullable": true
          },
          "boundary": {
            "type": "object",
            "example": {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    36.8219,
                    -1.2921
                  ],
                  [
                    36.895,
                    -1.2921
                  ],
                  [
                    36.895,
                    -1.2335
                  ],
                  [
                    36.8219,
                    -1.2335
                  ],
                  [
                    36.8219,
                    -1.2921
                  ]
                ]
              ]
            },
            "description": "GeoJSON polygon defining region boundaries"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "zipCodes",
          "operatingHours",
          "serviceTypes",
          "centroidLon",
          "centroidLat",
          "boundary",
          "name",
          "tenant",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Settings": {
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "description": "Configuration settings",
            "example": {
              "currency": "KES",
              "notificationPreferences": {
                "email": true,
                "sms": false
              }
            }
          },
          "settingsType": {
            "type": "string",
            "enum": [
              "invoice",
              "billing",
              "payment",
              "tax",
              "commission",
              "notification",
              "reminder",
              "alert",
              "waste",
              "collection",
              "processing",
              "recycling",
              "disposal",
              "marketplace",
              "listing",
              "bidding",
              "transaction",
              "preferences",
              "privacy",
              "accessibility",
              "compliance",
              "certification",
              "reporting",
              "audit",
              "api",
              "integration",
              "security",
              "rate_limiting",
              "localization",
              "language",
              "currency",
              "timezone",
              "theme",
              "layout",
              "dashboard",
              "system",
              "maintenance",
              "backup",
              "scaling",
              "carbon_accounting",
              "sustainability",
              "routing",
              "vehicle",
              "driver"
            ],
            "description": "Type of settings category"
          },
          "subjectType": {
            "type": "string",
            "enum": [
              "tenant",
              "user",
              "system",
              "collector",
              "facility"
            ],
            "description": "Subject type this settings applies to"
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "user": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "config",
          "settingsType",
          "subjectType",
          "tenant",
          "user",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "FileType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "cbcfa8b8-3a25-4adb-a9c6-e325f0d0f3ae"
          },
          "path": {
            "type": "string",
            "example": "https://example.com/path/to/file.jpg"
          }
        },
        "required": [
          "id",
          "path"
        ]
      },
      "TenantTypeCode": {
        "type": "string",
        "enum": [
          "platform_owner",
          "community_group",
          "recycling_company",
          "collection_agency",
          "municipality",
          "enterprise",
          "educational_institution",
          "healthcare_provider",
          "non_profit_organization",
          "government_agency",
          "technology_company",
          "retail_business",
          "manufacturing_company",
          "transportation_service",
          "financial_institution",
          "agricultural_business",
          "energy_provider",
          "construction_company",
          "hospitality_business",
          "generic"
        ]
      },
      "TenantType": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TenantTypeCode"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "description",
          "code",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "KycDetails": {
        "type": "object",
        "properties": {
          "verifiedBy": {
            "type": "number",
            "nullable": true
          },
          "verifiedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "submittedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "verified",
              "rejected"
            ],
            "default": "pending"
          },
          "documentData": {
            "type": "object",
            "nullable": true,
            "example": {
              "frontUrl": "https://example.com/front.jpg",
              "backUrl": "https://example.com/back.jpg",
              "expiryDate": "2023-12-31"
            }
          },
          "documentNumber": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "type": "string",
            "nullable": true
          },
          "subjectType": {
            "type": "string",
            "enum": [
              "user",
              "tenant"
            ]
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "user": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "verifiedBy",
          "verifiedAt",
          "submittedAt",
          "status",
          "documentData",
          "documentNumber",
          "documentType",
          "subjectType",
          "tenant",
          "user",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Tenant": {
        "type": "object",
        "properties": {
          "onboardingSteps": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Onboarding"
            }
          },
          "fullyOnboarded": {
            "type": "boolean",
            "nullable": false
          },
          "databaseConfig": {
            "$ref": "#/components/schemas/DatabaseConfigDto"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "regions": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Region"
            }
          },
          "settings": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Settings"
            }
          },
          "schemaName": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FileType"
              }
            ]
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "primaryPhone": {
            "type": "string",
            "nullable": true
          },
          "primaryEmail": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TenantType"
              }
            ]
          },
          "kycSubmissions": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDetails"
            }
          },
          "users": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "isActive": {
            "type": "boolean",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "onboardingSteps",
          "fullyOnboarded",
          "databaseConfig",
          "domain",
          "regions",
          "settings",
          "schemaName",
          "logo",
          "address",
          "primaryPhone",
          "primaryEmail",
          "name",
          "type",
          "kycSubmissions",
          "users",
          "isActive",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Onboarding": {
        "type": "object",
        "properties": {
          "performedByTenant": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "performedByUser": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "completedAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Additional metadata related to the step",
            "example": {
              "verificationMethod": "email",
              "attempts": 3
            }
          },
          "isSkippable": {
            "type": "boolean",
            "nullable": false
          },
          "isRequired": {
            "type": "boolean",
            "nullable": false
          },
          "order": {
            "type": "number",
            "nullable": false
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "skipped",
              "failed",
              "not_applicable"
            ],
            "description": "Current status of the onboarding step",
            "example": "pending"
          },
          "description": {
            "type": "string",
            "nullable": false
          },
          "name": {
            "type": "string",
            "nullable": false
          },
          "stepKey": {
            "type": "string",
            "nullable": false
          },
          "entityType": {
            "type": "string",
            "enum": [
              "user",
              "tenant"
            ],
            "description": "Type of entity being onboarded (user or tenant)",
            "example": "user"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "performedByTenant",
          "performedByUser",
          "completedAt",
          "metadata",
          "isSkippable",
          "isRequired",
          "order",
          "status",
          "description",
          "name",
          "stepKey",
          "entityType",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "example": "admin"
          }
        },
        "required": [
          "tenant",
          "id",
          "name"
        ]
      },
      "Status": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "example": "active"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "onboardingSteps": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Onboarding"
            }
          },
          "fullyOnboarded": {
            "type": "boolean",
            "nullable": false
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "regions": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Region"
            }
          },
          "settings": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Settings"
            }
          },
          "kycSubmissions": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDetails"
            }
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "provider": {
            "type": "string",
            "example": "email"
          },
          "socialId": {
            "type": "string",
            "example": "1234567890"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "photo": {
            "$ref": "#/components/schemas/FileType"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "onboardingSteps",
          "fullyOnboarded",
          "phoneNumber",
          "countryCode",
          "regions",
          "settings",
          "kycSubmissions",
          "tenant",
          "id",
          "email",
          "provider",
          "socialId",
          "firstName",
          "lastName",
          "photo",
          "role",
          "status",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "AuditLog": {
        "type": "object",
        "properties": {
          "performedByUser": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "performedByTenant": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "beforeState": {
            "type": "object",
            "nullable": true,
            "description": "State before the action",
            "example": {
              "email": "old@example.com",
              "status": "pending"
            }
          },
          "afterState": {
            "type": "object",
            "nullable": true,
            "description": "State after the action",
            "example": {
              "email": "new@example.com",
              "status": "active"
            }
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "nullable": false
          },
          "action": {
            "type": "string",
            "enum": [
              "create",
              "read",
              "update",
              "delete",
              "complete_step",
              "skip_step",
              "restart_step",
              "login",
              "logout",
              "password_change",
              "password_reset_request",
              "password_reset_complete",
              "assign_role",
              "remove_role",
              "update_permissions",
              "invite_user",
              "activate_user",
              "deactivate_user",
              "create_tenant",
              "update_tenant",
              "delete_tenant",
              "switch_tenant",
              "upload",
              "download",
              "export",
              "import",
              "update_settings",
              "reset_settings",
              "view_audit_log",
              "export_audit_log",
              "system_start",
              "system_shutdown",
              "system_error",
              "send_notification",
              "read_notification",
              "archive",
              "restore",
              "tag",
              "untag"
            ],
            "description": "Action performed",
            "example": "create"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "performedByUser",
          "performedByTenant",
          "status",
          "description",
          "beforeState",
          "afterState",
          "entityId",
          "entityType",
          "action",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationAuditLogResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLog"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateAuditLogDto": {
        "type": "object",
        "properties": {
          "performedByUserId": {
            "type": "string",
            "description": "ID of user who performed the action",
            "example": "a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8"
          },
          "performedByTenantId": {
            "type": "string",
            "description": "ID of tenant who performed the action",
            "example": "t1e2n3a4n5t6-7890-id"
          },
          "status": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "beforeState": {
            "type": "object",
            "description": "State before the action",
            "example": {
              "email": "old@example.com"
            }
          },
          "afterState": {
            "type": "object",
            "description": "State after the action",
            "example": {
              "email": "new@example.com"
            }
          },
          "entityId": {
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "action": {
            "type": "string",
            "enum": [
              "create",
              "read",
              "update",
              "delete",
              "complete_step",
              "skip_step",
              "restart_step",
              "login",
              "logout",
              "password_change",
              "password_reset_request",
              "password_reset_complete",
              "assign_role",
              "remove_role",
              "update_permissions",
              "invite_user",
              "activate_user",
              "deactivate_user",
              "create_tenant",
              "update_tenant",
              "delete_tenant",
              "switch_tenant",
              "upload",
              "download",
              "export",
              "import",
              "update_settings",
              "reset_settings",
              "view_audit_log",
              "export_audit_log",
              "system_start",
              "system_shutdown",
              "system_error",
              "send_notification",
              "read_notification",
              "archive",
              "restore",
              "tag",
              "untag"
            ],
            "description": "Action performed",
            "example": "update"
          }
        }
      },
      "OnboardingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "RegionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "SettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "KycDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "TenantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "FileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          }
        },
        "required": [
          "id"
        ]
      },
      "StatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "fullyOnboarded": {
            "type": "boolean"
          },
          "onboardingSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardingDto"
            }
          },
          "phoneNumber": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionDto"
            }
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingsDto"
            }
          },
          "kycSubmissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDetailsDto"
            }
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "photo": {
            "$ref": "#/components/schemas/FileDto"
          },
          "role": {
            "$ref": "#/components/schemas/RoleDto"
          },
          "status": {
            "$ref": "#/components/schemas/StatusDto"
          }
        },
        "required": [
          "fullyOnboarded",
          "tenant",
          "email",
          "password",
          "firstName",
          "lastName"
        ]
      },
      "InfinityPaginationUserResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "fullyOnboarded": {
            "type": "boolean"
          },
          "onboardingSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardingDto"
            }
          },
          "phoneNumber": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionDto"
            }
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingsDto"
            }
          },
          "kycSubmissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDetailsDto"
            }
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "photo": {
            "$ref": "#/components/schemas/FileDto"
          },
          "role": {
            "$ref": "#/components/schemas/RoleDto"
          },
          "status": {
            "$ref": "#/components/schemas/StatusDto"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "userId"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateOnboardingDto": {
        "type": "object",
        "properties": {
          "performedByTenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "performedByUser": {
            "$ref": "#/components/schemas/UserDto"
          },
          "completedAt": {
            "format": "date-time",
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Additional metadata related to the step",
            "example": {
              "verificationMethod": "email",
              "attempts": 3
            }
          },
          "isSkippable": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "order": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "skipped",
              "failed",
              "not_applicable"
            ],
            "description": "Current status of the onboarding step",
            "example": "pending"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "stepKey": {
            "type": "string"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "user",
              "tenant"
            ],
            "description": "Type of entity being onboarded (user or tenant)",
            "example": "user"
          }
        },
        "required": [
          "metadata",
          "isSkippable",
          "isRequired",
          "order",
          "status",
          "description",
          "name",
          "stepKey",
          "entityType"
        ]
      },
      "InfinityPaginationOnboardingResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Onboarding"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateOnboardingDto": {
        "type": "object",
        "properties": {
          "performedByTenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "performedByUser": {
            "$ref": "#/components/schemas/UserDto"
          },
          "completedAt": {
            "format": "date-time",
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "nullable": true,
            "description": "Additional metadata related to the step",
            "example": {
              "verificationMethod": "email",
              "attempts": 3
            }
          },
          "isSkippable": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "order": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "skipped",
              "failed",
              "not_applicable"
            ],
            "description": "Current status of the onboarding step",
            "example": "pending"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "stepKey": {
            "type": "string"
          },
          "entityType": {
            "type": "string",
            "enum": [
              "user",
              "tenant"
            ],
            "description": "Type of entity being onboarded (user or tenant)",
            "example": "user"
          }
        }
      },
      "TenantTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateTenantDto": {
        "type": "object",
        "properties": {
          "onboardingSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardingDto"
            }
          },
          "fullyOnboarded": {
            "type": "boolean"
          },
          "databaseConfig": {
            "$ref": "#/components/schemas/DatabaseConfigDto"
          },
          "domain": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionDto"
            }
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingsDto"
            }
          },
          "schemaName": {
            "type": "string"
          },
          "logo": {
            "$ref": "#/components/schemas/FileDto"
          },
          "address": {
            "type": "string"
          },
          "primaryPhone": {
            "type": "string"
          },
          "primaryEmail": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TenantTypeDto"
          },
          "kycSubmissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDetailsDto"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "fullyOnboarded",
          "databaseConfig"
        ]
      },
      "InfinityPaginationTenantResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tenant"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateTenantDto": {
        "type": "object",
        "properties": {
          "onboardingSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnboardingDto"
            }
          },
          "fullyOnboarded": {
            "type": "boolean"
          },
          "databaseConfig": {
            "$ref": "#/components/schemas/DatabaseConfigDto"
          },
          "domain": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionDto"
            }
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettingsDto"
            }
          },
          "schemaName": {
            "type": "string"
          },
          "logo": {
            "$ref": "#/components/schemas/FileDto"
          },
          "address": {
            "type": "string"
          },
          "primaryPhone": {
            "type": "string"
          },
          "primaryEmail": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TenantTypeDto"
          },
          "kycSubmissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDetailsDto"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "CreateRegionDto": {
        "type": "object",
        "properties": {
          "zipCodes": {
            "example": [
              "00100",
              "00101"
            ],
            "description": "ZIP codes covered by this region",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingHours": {
            "type": "object",
            "example": {
              "days": [
                "mon",
                "wed",
                "fri"
              ],
              "startTime": "08:00",
              "endTime": "17:00"
            },
            "description": "Operating hours configuration"
          },
          "serviceTypes": {
            "example": [
              "residential",
              "commercial"
            ],
            "description": "Service types available in this region",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "centroidLon": {
            "type": "number",
            "example": 36.8219,
            "description": "Longitude of region centroid"
          },
          "centroidLat": {
            "type": "number",
            "example": -1.2921,
            "description": "Latitude of region centroid"
          },
          "boundary": {
            "type": "object",
            "example": {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    36.8219,
                    -1.2921
                  ],
                  [
                    36.895,
                    -1.2921
                  ],
                  [
                    36.895,
                    -1.2335
                  ],
                  [
                    36.8219,
                    -1.2335
                  ],
                  [
                    36.8219,
                    -1.2921
                  ]
                ]
              ]
            },
            "description": "GeoJSON polygon boundary"
          },
          "name": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          }
        },
        "required": [
          "boundary",
          "tenant"
        ]
      },
      "InfinityPaginationRegionResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Region"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateRegionDto": {
        "type": "object",
        "properties": {
          "zipCodes": {
            "example": [
              "00100",
              "00101"
            ],
            "description": "ZIP codes covered by this region",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "operatingHours": {
            "type": "object",
            "example": {
              "days": [
                "mon",
                "wed",
                "fri"
              ],
              "startTime": "08:00",
              "endTime": "17:00"
            },
            "description": "Operating hours configuration"
          },
          "serviceTypes": {
            "example": [
              "residential",
              "commercial"
            ],
            "description": "Service types available in this region",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "centroidLon": {
            "type": "number",
            "example": 36.8219,
            "description": "Longitude of region centroid"
          },
          "centroidLat": {
            "type": "number",
            "example": -1.2921,
            "description": "Latitude of region centroid"
          },
          "boundary": {
            "type": "object",
            "example": {
              "type": "Polygon",
              "coordinates": [
                [
                  [
                    36.8219,
                    -1.2921
                  ],
                  [
                    36.895,
                    -1.2921
                  ],
                  [
                    36.895,
                    -1.2335
                  ],
                  [
                    36.8219,
                    -1.2335
                  ],
                  [
                    36.8219,
                    -1.2921
                  ]
                ]
              ]
            },
            "description": "GeoJSON polygon boundary"
          },
          "name": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          }
        }
      },
      "CreateSettingsDto": {
        "type": "object",
        "properties": {
          "config": {
            "type": "string"
          },
          "settingsType": {
            "type": "string"
          },
          "subjectType": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "tenant",
          "user"
        ]
      },
      "InfinityPaginationSettingsResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Settings"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateSettingsDto": {
        "type": "object",
        "properties": {
          "config": {
            "type": "string"
          },
          "settingsType": {
            "type": "string"
          },
          "subjectType": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        }
      },
      "CreateKycDetailsDto": {
        "type": "object",
        "properties": {
          "verifiedBy": {
            "type": "number"
          },
          "verifiedAt": {
            "format": "date-time",
            "type": "string"
          },
          "submittedAt": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "verified",
              "rejected"
            ],
            "default": "pending"
          },
          "documentData": {
            "type": "object"
          },
          "documentNumber": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "subjectType": {
            "type": "string",
            "enum": [
              "user",
              "tenant"
            ]
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "subjectType",
          "tenant",
          "user"
        ]
      },
      "InfinityPaginationKycDetailsResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDetails"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateKycDetailsDto": {
        "type": "object",
        "properties": {
          "verifiedBy": {
            "type": "number"
          },
          "verifiedAt": {
            "format": "date-time",
            "type": "string"
          },
          "submittedAt": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "verified",
              "rejected"
            ],
            "default": "pending"
          },
          "documentData": {
            "type": "object"
          },
          "documentNumber": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "subjectType": {
            "type": "string",
            "enum": [
              "user",
              "tenant"
            ]
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        }
      },
      "FileResponseDto": {
        "type": "object",
        "properties": {
          "file": {
            "$ref": "#/components/schemas/FileType"
          }
        },
        "required": [
          "file"
        ]
      },
      "InfinityPaginationTenantTypeResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantType"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "CreateTenantTypeDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "platform_owner",
              "community_group",
              "recycling_company",
              "collection_agency",
              "municipality",
              "enterprise",
              "educational_institution",
              "healthcare_provider",
              "non_profit_organization",
              "government_agency",
              "technology_company",
              "retail_business",
              "manufacturing_company",
              "transportation_service",
              "financial_institution",
              "agricultural_business",
              "energy_provider",
              "construction_company",
              "hospitality_business",
              "generic"
            ]
          },
          "name": {
            "type": "string"
          }
        }
      },
      "UpdateTenantTypeDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "platform_owner",
              "community_group",
              "recycling_company",
              "collection_agency",
              "municipality",
              "enterprise",
              "educational_institution",
              "healthcare_provider",
              "non_profit_organization",
              "government_agency",
              "technology_company",
              "retail_business",
              "manufacturing_company",
              "transportation_service",
              "financial_institution",
              "agricultural_business",
              "energy_provider",
              "construction_company",
              "hospitality_business",
              "generic"
            ]
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PaymentAggregatorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreatePaymentNotificationDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "aggregator": {
            "$ref": "#/components/schemas/PaymentAggregatorDto"
          },
          "processed_at": {
            "format": "date-time",
            "type": "string"
          },
          "processed": {
            "type": "boolean"
          },
          "raw_payload": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "partial",
              "pending",
              "completed",
              "failed",
              "cancelled",
              "reversed",
              "refunded",
              "processing",
              "declined",
              "on_hold",
              "expired",
              "partially_refunded",
              "authorized",
              "declined_by_bank",
              "declined_by_user",
              "declined_by_provider",
              "declined_by_fraud_check",
              "declined_by_limit",
              "declined_by_risk_check",
              "declined_by_insufficient_funds",
              "declined_by_currency_not_supported",
              "declined_by_payment_method_not_supported",
              "declined_by_payment_gateway",
              "declined_by_bank_issuer",
              "declined_by_bank_network",
              "declined_by_bank_fraud_check",
              "declined_by_bank_limit",
              "declined_by_bank_risk_check",
              "declined_by_bank_insufficient_funds",
              "declined_by_bank_currency_not_supported",
              "declined_by_bank_payment_method_not_supported",
              "declined_by_bank_payment_gateway",
              "declined_by_bank_bank_issuer",
              "declined_by_bank_bank_network",
              "declined_by_bank_bank_fraud_check"
            ]
          },
          "received_at": {
            "format": "date-time",
            "type": "string"
          },
          "payment_method": {
            "type": "string",
            "enum": [
              "mobile_money",
              "credit_card",
              "debit_card",
              "paypal",
              "bank_transfer",
              "crypto",
              "ussd",
              "agency_banking"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "USD",
              "EUR",
              "GBP",
              "NGN",
              "ZAR",
              "UGX",
              "TZS",
              "RWF"
            ]
          },
          "amount": {
            "type": "number"
          },
          "external_txn_id": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "enum": [
              "mpesa",
              "airtel_money",
              "equity_bank",
              "kcb_bank",
              "cooperative_bank",
              "absa",
              "ncba",
              "safaricom",
              "paypal",
              "flutterwave",
              "paystack",
              "stripe",
              "coinbase"
            ]
          }
        },
        "required": [
          "tenant",
          "aggregator",
          "processed",
          "raw_payload",
          "status",
          "received_at",
          "payment_method",
          "currency",
          "amount",
          "external_txn_id",
          "provider"
        ]
      },
      "PaymentNotification": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "aggregator": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentAggregator"
              }
            ]
          },
          "processed_at": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "processed": {
            "type": "boolean"
          },
          "raw_payload": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "partial",
              "pending",
              "completed",
              "failed",
              "cancelled",
              "reversed",
              "refunded",
              "processing",
              "declined",
              "on_hold",
              "expired",
              "partially_refunded",
              "authorized",
              "declined_by_bank",
              "declined_by_user",
              "declined_by_provider",
              "declined_by_fraud_check",
              "declined_by_limit",
              "declined_by_risk_check",
              "declined_by_insufficient_funds",
              "declined_by_currency_not_supported",
              "declined_by_payment_method_not_supported",
              "declined_by_payment_gateway",
              "declined_by_bank_issuer",
              "declined_by_bank_network",
              "declined_by_bank_fraud_check",
              "declined_by_bank_limit",
              "declined_by_bank_risk_check",
              "declined_by_bank_insufficient_funds",
              "declined_by_bank_currency_not_supported",
              "declined_by_bank_payment_method_not_supported",
              "declined_by_bank_payment_gateway",
              "declined_by_bank_bank_issuer",
              "declined_by_bank_bank_network",
              "declined_by_bank_bank_fraud_check"
            ]
          },
          "received_at": {
            "format": "date-time",
            "type": "string"
          },
          "payment_method": {
            "type": "string",
            "enum": [
              "mobile_money",
              "credit_card",
              "debit_card",
              "paypal",
              "bank_transfer",
              "crypto",
              "ussd",
              "agency_banking"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "USD",
              "EUR",
              "GBP",
              "NGN",
              "ZAR",
              "UGX",
              "TZS",
              "RWF"
            ]
          },
          "amount": {
            "type": "number"
          },
          "external_txn_id": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "enum": [
              "mpesa",
              "airtel_money",
              "equity_bank",
              "kcb_bank",
              "cooperative_bank",
              "absa",
              "ncba",
              "safaricom",
              "paypal",
              "flutterwave",
              "paystack",
              "stripe",
              "coinbase"
            ]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "aggregator",
          "processed_at",
          "processed",
          "raw_payload",
          "status",
          "received_at",
          "payment_method",
          "currency",
          "amount",
          "external_txn_id",
          "provider",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "PaymentAggregator": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": false
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "config": {
            "type": "object",
            "description": "Payment configuration object",
            "example": {
              "webhookUrl": "https://api.example.com/webhook",
              "authToken": "secure_token_123",
              "reconciliationWindow": 30
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notifications": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentNotification"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "logo",
          "isActive",
          "tenant",
          "name",
          "notifications",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationPaymentNotificationResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentNotification"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdatePaymentNotificationDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "aggregator": {
            "$ref": "#/components/schemas/PaymentAggregatorDto"
          },
          "processed_at": {
            "format": "date-time",
            "type": "string"
          },
          "processed": {
            "type": "boolean"
          },
          "raw_payload": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": [
              "partial",
              "pending",
              "completed",
              "failed",
              "cancelled",
              "reversed",
              "refunded",
              "processing",
              "declined",
              "on_hold",
              "expired",
              "partially_refunded",
              "authorized",
              "declined_by_bank",
              "declined_by_user",
              "declined_by_provider",
              "declined_by_fraud_check",
              "declined_by_limit",
              "declined_by_risk_check",
              "declined_by_insufficient_funds",
              "declined_by_currency_not_supported",
              "declined_by_payment_method_not_supported",
              "declined_by_payment_gateway",
              "declined_by_bank_issuer",
              "declined_by_bank_network",
              "declined_by_bank_fraud_check",
              "declined_by_bank_limit",
              "declined_by_bank_risk_check",
              "declined_by_bank_insufficient_funds",
              "declined_by_bank_currency_not_supported",
              "declined_by_bank_payment_method_not_supported",
              "declined_by_bank_payment_gateway",
              "declined_by_bank_bank_issuer",
              "declined_by_bank_bank_network",
              "declined_by_bank_bank_fraud_check"
            ]
          },
          "received_at": {
            "format": "date-time",
            "type": "string"
          },
          "payment_method": {
            "type": "string",
            "enum": [
              "mobile_money",
              "credit_card",
              "debit_card",
              "paypal",
              "bank_transfer",
              "crypto",
              "ussd",
              "agency_banking"
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "KES",
              "USD",
              "EUR",
              "GBP",
              "NGN",
              "ZAR",
              "UGX",
              "TZS",
              "RWF"
            ]
          },
          "amount": {
            "type": "number"
          },
          "external_txn_id": {
            "type": "string"
          },
          "provider": {
            "type": "string",
            "enum": [
              "mpesa",
              "airtel_money",
              "equity_bank",
              "kcb_bank",
              "cooperative_bank",
              "absa",
              "ncba",
              "safaricom",
              "paypal",
              "flutterwave",
              "paystack",
              "stripe",
              "coinbase"
            ]
          }
        }
      },
      "PaymentNotificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreatePaymentAggregatorDto": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "config": {
            "type": "object",
            "description": "Payment configuration object",
            "example": {
              "webhookUrl": "https://api.example.com/webhook",
              "authToken": "secure_token_123",
              "reconciliationWindow": 30
            }
          },
          "name": {
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentNotificationDto"
            }
          }
        },
        "required": [
          "isActive",
          "tenant"
        ]
      },
      "InfinityPaginationPaymentAggregatorResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentAggregator"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdatePaymentAggregatorDto": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "config": {
            "type": "object",
            "description": "Payment configuration object",
            "example": {
              "webhookUrl": "https://api.example.com/webhook",
              "authToken": "secure_token_123",
              "reconciliationWindow": 30
            }
          },
          "name": {
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentNotificationDto"
            }
          }
        }
      },
      "AuditLogEntry": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2025-05-28T12:34:56.789Z"
          },
          "amount": {
            "type": "number",
            "example": 100.5
          },
          "type": {
            "type": "string",
            "enum": [
              "ADD",
              "DEDUCT"
            ],
            "example": "ADD"
          },
          "reference": {
            "type": "string",
            "example": "REF1234"
          }
        },
        "required": [
          "date",
          "amount",
          "type",
          "reference"
        ]
      },
      "CreateCreditBalanceDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "auditLog": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogEntry"
            }
          },
          "amount": {
            "type": "number"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "tenant",
          "amount",
          "customer"
        ]
      },
      "CreditBalance": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "auditLog": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogEntry"
            }
          },
          "amount": {
            "type": "number",
            "nullable": false
          },
          "customer": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "amount",
          "customer",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationCreditBalanceResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditBalance"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateCreditBalanceDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "auditLog": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogEntry"
            }
          },
          "amount": {
            "type": "number"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          }
        }
      },
      "CreatePaymentMethodDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "config": {
            "type": "object",
            "nullable": true
          },
          "processorType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "processorType",
          "name"
        ]
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "config": {
            "type": "object",
            "nullable": true
          },
          "processorType": {
            "type": "string",
            "nullable": false
          },
          "name": {
            "type": "string",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "processorType",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationPaymentMethodResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdatePaymentMethodDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "config": {
            "type": "object",
            "nullable": true
          },
          "processorType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "InvoiceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateReminderDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDto"
          },
          "channel": {
            "type": "string",
            "enum": [
              "EMAIL",
              "SMS",
              "PUSH"
            ],
            "nullable": false
          },
          "status": {
            "type": "string",
            "enum": [
              "SCHEDULED",
              "SENT",
              "FAILED"
            ],
            "nullable": false
          },
          "scheduledAt": {
            "format": "date-time",
            "type": "string"
          },
          "sentAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "channel",
          "status",
          "scheduledAt"
        ]
      },
      "ResidenceType": {
        "type": "string",
        "enum": [
          "APARTMENT",
          "HOUSE",
          "DUPLEX",
          "CONDO",
          "TOWNHOUSE",
          "OTHER"
        ]
      },
      "Residence": {
        "type": "object",
        "properties": {
          "type": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/ResidenceType"
              }
            ]
          },
          "occupants": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "region": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Region"
              }
            ]
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "isActive": {
            "type": "boolean",
            "nullable": false
          },
          "charge": {
            "type": "number",
            "nullable": false
          },
          "name": {
            "type": "string",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "type",
          "occupants",
          "region",
          "tenant",
          "isActive",
          "charge",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Exemption": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "invoice": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Invoice"
              }
            ]
          },
          "residence": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Residence"
              }
            ]
          },
          "region": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Region"
              }
            ]
          },
          "customer": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "nullable": false
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "nullable": false
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "description",
          "tenant",
          "invoice",
          "residence",
          "region",
          "customer",
          "endDate",
          "startDate",
          "reason",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "PaymentPlan": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": false
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "isActive": {
            "type": "boolean",
            "nullable": false
          },
          "unit": {
            "type": "string",
            "nullable": false
          },
          "minimumCharge": {
            "type": "number",
            "nullable": false
          },
          "rateStructure": {
            "oneOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "FLAT"
                    ]
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "PER_UNIT"
                    ]
                  },
                  "rate": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "CREDIT_RATE"
                    ]
                  },
                  "rate": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "TIERED"
                    ]
                  },
                  "tiers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "rate": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "from",
                        "to",
                        "rate"
                      ]
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "PREPAID"
                    ]
                  },
                  "creditRate": {
                    "type": "number"
                  }
                }
              }
            ],
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "FLAT_MONTHLY",
              "PER_WEIGHT",
              "TIERED",
              "PREPAID",
              "CREDIT"
            ],
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name",
          "tenant",
          "isActive",
          "unit",
          "minimumCharge",
          "rateStructure",
          "type",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "DiscountType": {
        "type": "string",
        "enum": [
          "FIXED",
          "PERCENTAGE"
        ]
      },
      "Discount": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "minVolume": {
            "type": "number",
            "nullable": true
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "region": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Region"
              }
            ]
          },
          "customer": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "plan": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentPlan"
              }
            ]
          },
          "isActive": {
            "type": "boolean",
            "nullable": false
          },
          "validTo": {
            "format": "date-time",
            "type": "string",
            "nullable": false
          },
          "validFrom": {
            "format": "date-time",
            "type": "string",
            "nullable": false
          },
          "value": {
            "type": "number",
            "nullable": false
          },
          "type": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountType"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "description",
          "minVolume",
          "tenant",
          "region",
          "customer",
          "plan",
          "isActive",
          "validTo",
          "validFrom",
          "value",
          "type",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccountType": {
        "type": "string",
        "enum": [
          "asset",
          "liability",
          "equity",
          "revenue",
          "expense"
        ]
      },
      "NotificationChannel": {
        "type": "string",
        "enum": [
          "EMAIL",
          "SMS",
          "WEBHOOK"
        ]
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "ALERT",
          "REMINDER",
          "REPORT"
        ]
      },
      "Account": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "owner": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ]
          },
          "active": {
            "type": "boolean",
            "nullable": false
          },
          "callbackUrl": {
            "type": "string",
            "nullable": true
          },
          "notificationChannel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationChannel"
              }
            ]
          },
          "notificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationType"
              }
            ]
          },
          "receiveNotification": {
            "type": "boolean",
            "nullable": false
          },
          "balance": {
            "type": "number",
            "nullable": false
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": false
          },
          "name": {
            "type": "string",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "owner",
          "type",
          "active",
          "callbackUrl",
          "receiveNotification",
          "balance",
          "number",
          "description",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccountsReceivable": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "account": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "owner": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "accountType": {
            "type": "string",
            "enum": [
              "asset",
              "liability",
              "equity",
              "revenue",
              "expense"
            ],
            "description": "The type of account. Can be SAVINGS, CHECKING, or CURRENT.",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "nullable": false
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "CREDIT",
              "DEBIT",
              "TRANSFER",
              "REFUND",
              "WRITE_OFF",
              "LATE_FEE",
              "ADJUSTMENT",
              "CREDIT_MEMO",
              "INVOICE_PAYMENT",
              "CHARGEBACK",
              "PAYMENT",
              "DISCOUNT",
              "FEE",
              "TAX",
              "INTEREST",
              "REVERSAL",
              "PREPAYMENT",
              "OVERPAYMENT",
              "UNDERPAYMENT",
              "ESCALATION_CHARGE",
              "SERVICE_CHARGE",
              "PENALTY",
              "CASH_RECEIPT",
              "ALLOCATION",
              "MANUAL_ENTRY",
              "SERVICE_FEE",
              "ASSET_PURCHASE",
              "FUEL_PURCHASE",
              "MAINTENANCE",
              "WASTE_COLLECTION",
              "OFFICE_SUPPLIES",
              "VENDOR_PAYMENT"
            ],
            "description": "The type of transaction: CREDIT, DEBIT, TRANSFER, or REFUND."
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "account",
          "owner",
          "amount",
          "transactionType",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "nullable": false
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "exemption": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Exemption"
              }
            ]
          },
          "discount": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Discount"
              }
            ]
          },
          "accountsReceivable": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountsReceivable"
              }
            ]
          },
          "amountDue": {
            "type": "number",
            "nullable": true
          },
          "amountPaid": {
            "type": "number",
            "nullable": true
          },
          "plan": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "breakdown": {
            "type": "object",
            "description": "Payment breakdown structure",
            "example": {
              "baseAmount": {
                "type": "number",
                "example": 100
              },
              "discounts": {
                "type": "number",
                "example": 10
              },
              "tax": {
                "type": "number",
                "example": 18
              },
              "adjustments": {
                "type": "number",
                "example": 5
              }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PAID",
              "CANCELLED",
              "OVERDUE",
              "FAILED"
            ]
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "nullable": false
          },
          "customer": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "invoiceNumber",
          "tenant",
          "exemption",
          "discount",
          "accountsReceivable",
          "amountDue",
          "amountPaid",
          "plan",
          "status",
          "dueDate",
          "amount",
          "customer",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Reminder": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "user": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "invoice": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Invoice"
              }
            ]
          },
          "channel": {
            "type": "string",
            "enum": [
              "EMAIL",
              "SMS",
              "PUSH"
            ],
            "nullable": false
          },
          "status": {
            "type": "string",
            "enum": [
              "SCHEDULED",
              "SENT",
              "FAILED"
            ],
            "nullable": false
          },
          "scheduledAt": {
            "format": "date-time",
            "type": "string",
            "nullable": false
          },
          "sentAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "message",
          "tenant",
          "user",
          "invoice",
          "channel",
          "status",
          "scheduledAt",
          "sentAt",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationReminderResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reminder"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateReminderDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDto"
          },
          "channel": {
            "type": "string",
            "enum": [
              "EMAIL",
              "SMS",
              "PUSH"
            ],
            "nullable": false
          },
          "status": {
            "type": "string",
            "enum": [
              "SCHEDULED",
              "SENT",
              "FAILED"
            ],
            "nullable": false
          },
          "scheduledAt": {
            "format": "date-time",
            "type": "string"
          },
          "sentAt": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "ExemptionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "DiscountDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "AccountsReceivableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "PaymentPlanDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "exemption": {
            "$ref": "#/components/schemas/ExemptionDto"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "accountsReceivable": {
            "$ref": "#/components/schemas/AccountsReceivableDto"
          },
          "amountDue": {
            "type": "number"
          },
          "amountPaid": {
            "type": "number"
          },
          "plan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlanDto"
            }
          },
          "breakdown": {
            "type": "object",
            "description": "Payment breakdown structure",
            "example": {
              "baseAmount": {
                "type": "number",
                "example": 100
              },
              "discounts": {
                "type": "number",
                "example": 10
              },
              "tax": {
                "type": "number",
                "example": 18
              },
              "adjustments": {
                "type": "number",
                "example": 5
              }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PAID",
              "CANCELLED",
              "OVERDUE",
              "FAILED"
            ]
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "invoiceNumber",
          "tenant",
          "status",
          "amount"
        ]
      },
      "InfinityPaginationInvoiceResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateInvoiceDto": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "exemption": {
            "$ref": "#/components/schemas/ExemptionDto"
          },
          "discount": {
            "$ref": "#/components/schemas/DiscountDto"
          },
          "accountsReceivable": {
            "$ref": "#/components/schemas/AccountsReceivableDto"
          },
          "amountDue": {
            "type": "number"
          },
          "amountPaid": {
            "type": "number"
          },
          "plan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlanDto"
            }
          },
          "breakdown": {
            "type": "object",
            "description": "Payment breakdown structure",
            "example": {
              "baseAmount": {
                "type": "number",
                "example": 100
              },
              "discounts": {
                "type": "number",
                "example": 10
              },
              "tax": {
                "type": "number",
                "example": 18
              },
              "adjustments": {
                "type": "number",
                "example": 5
              }
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PAID",
              "CANCELLED",
              "OVERDUE",
              "FAILED"
            ]
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          }
        }
      },
      "ResidenceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateExemptionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDto"
          },
          "residence": {
            "$ref": "#/components/schemas/ResidenceDto"
          },
          "region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "endDate",
          "startDate"
        ]
      },
      "InfinityPaginationExemptionResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Exemption"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateExemptionDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDto"
          },
          "residence": {
            "$ref": "#/components/schemas/ResidenceDto"
          },
          "region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "CreateDiscountDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "minVolume": {
            "type": "number"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          },
          "plan": {
            "$ref": "#/components/schemas/PaymentPlanDto"
          },
          "isActive": {
            "type": "boolean"
          },
          "validTo": {
            "format": "date-time",
            "type": "string"
          },
          "validFrom": {
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "type": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountType"
              }
            ]
          }
        },
        "required": [
          "tenant",
          "isActive",
          "validTo",
          "validFrom",
          "value",
          "type"
        ]
      },
      "InfinityPaginationDiscountResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateDiscountDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "minVolume": {
            "type": "number"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          },
          "plan": {
            "$ref": "#/components/schemas/PaymentPlanDto"
          },
          "isActive": {
            "type": "boolean"
          },
          "validTo": {
            "format": "date-time",
            "type": "string"
          },
          "validFrom": {
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "type": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscountType"
              }
            ]
          }
        }
      },
      "CreatePaymentPlanDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "isActive": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "unit": {
            "type": "string"
          },
          "minimumCharge": {
            "type": "number"
          },
          "rateStructure": {
            "oneOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "FLAT"
                    ]
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "PER_UNIT"
                    ]
                  },
                  "rate": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "CREDIT_RATE"
                    ]
                  },
                  "rate": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "TIERED"
                    ]
                  },
                  "tiers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "rate": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "from",
                        "to",
                        "rate"
                      ]
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "PREPAID"
                    ]
                  },
                  "creditRate": {
                    "type": "number"
                  }
                }
              }
            ],
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "FLAT_MONTHLY",
              "PER_WEIGHT",
              "TIERED",
              "PREPAID",
              "CREDIT"
            ],
            "nullable": false
          }
        },
        "required": [
          "name",
          "tenant",
          "isActive",
          "unit",
          "minimumCharge",
          "rateStructure",
          "type"
        ]
      },
      "InfinityPaginationPaymentPlanResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdatePaymentPlanDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "isActive": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "unit": {
            "type": "string"
          },
          "minimumCharge": {
            "type": "number"
          },
          "rateStructure": {
            "oneOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "FLAT"
                    ]
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "PER_UNIT"
                    ]
                  },
                  "rate": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "CREDIT_RATE"
                    ]
                  },
                  "rate": {
                    "type": "number"
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "TIERED"
                    ]
                  },
                  "tiers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "number"
                        },
                        "to": {
                          "type": "number"
                        },
                        "rate": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "from",
                        "to",
                        "rate"
                      ]
                    }
                  }
                }
              },
              {
                "properties": {
                  "type": {
                    "enum": [
                      "PREPAID"
                    ]
                  },
                  "creditRate": {
                    "type": "number"
                  }
                }
              }
            ],
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "FLAT_MONTHLY",
              "PER_WEIGHT",
              "TIERED",
              "PREPAID",
              "CREDIT"
            ],
            "nullable": false
          }
        }
      },
      "AccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateAccountsReceivableDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "accountType": {
            "type": "string",
            "enum": [
              "asset",
              "liability",
              "equity",
              "revenue",
              "expense"
            ],
            "description": "The type of account. Can be SAVINGS, CHECKING, or CURRENT.",
            "nullable": true
          },
          "amount": {
            "type": "number"
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "CREDIT",
              "DEBIT",
              "TRANSFER",
              "REFUND",
              "WRITE_OFF",
              "LATE_FEE",
              "ADJUSTMENT",
              "CREDIT_MEMO",
              "INVOICE_PAYMENT",
              "CHARGEBACK",
              "PAYMENT",
              "DISCOUNT",
              "FEE",
              "TAX",
              "INTEREST",
              "REVERSAL",
              "PREPAYMENT",
              "OVERPAYMENT",
              "UNDERPAYMENT",
              "ESCALATION_CHARGE",
              "SERVICE_CHARGE",
              "PENALTY",
              "CASH_RECEIPT",
              "ALLOCATION",
              "MANUAL_ENTRY",
              "SERVICE_FEE",
              "ASSET_PURCHASE",
              "FUEL_PURCHASE",
              "MAINTENANCE",
              "WASTE_COLLECTION",
              "OFFICE_SUPPLIES",
              "VENDOR_PAYMENT"
            ],
            "description": "The type of transaction: CREDIT, DEBIT, TRANSFER, or REFUND."
          }
        },
        "required": [
          "tenant",
          "amount",
          "transactionType"
        ]
      },
      "InfinityPaginationAccountsReceivableResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountsReceivable"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateAccountsReceivableDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "accountType": {
            "type": "string",
            "enum": [
              "asset",
              "liability",
              "equity",
              "revenue",
              "expense"
            ],
            "description": "The type of account. Can be SAVINGS, CHECKING, or CURRENT.",
            "nullable": true
          },
          "amount": {
            "type": "number"
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "CREDIT",
              "DEBIT",
              "TRANSFER",
              "REFUND",
              "WRITE_OFF",
              "LATE_FEE",
              "ADJUSTMENT",
              "CREDIT_MEMO",
              "INVOICE_PAYMENT",
              "CHARGEBACK",
              "PAYMENT",
              "DISCOUNT",
              "FEE",
              "TAX",
              "INTEREST",
              "REVERSAL",
              "PREPAYMENT",
              "OVERPAYMENT",
              "UNDERPAYMENT",
              "ESCALATION_CHARGE",
              "SERVICE_CHARGE",
              "PENALTY",
              "CASH_RECEIPT",
              "ALLOCATION",
              "MANUAL_ENTRY",
              "SERVICE_FEE",
              "ASSET_PURCHASE",
              "FUEL_PURCHASE",
              "MAINTENANCE",
              "WASTE_COLLECTION",
              "OFFICE_SUPPLIES",
              "VENDOR_PAYMENT"
            ],
            "description": "The type of transaction: CREDIT, DEBIT, TRANSFER, or REFUND."
          }
        }
      },
      "CreateAccountDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ]
          },
          "active": {
            "type": "boolean"
          },
          "callbackUrl": {
            "type": "string"
          },
          "notificationChannel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationChannel"
              }
            ]
          },
          "notificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationType"
              }
            ]
          },
          "receiveNotification": {
            "type": "boolean"
          },
          "balance": {
            "type": "number"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "type",
          "active",
          "receiveNotification",
          "balance",
          "description",
          "name"
        ]
      },
      "InfinityPaginationAccountResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateAccountDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountType"
              }
            ]
          },
          "active": {
            "type": "boolean"
          },
          "callbackUrl": {
            "type": "string"
          },
          "notificationChannel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationChannel"
              }
            ]
          },
          "notificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationType"
              }
            ]
          },
          "receiveNotification": {
            "type": "boolean"
          },
          "balance": {
            "type": "number"
          },
          "number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateResidenceDto": {
        "type": "object",
        "properties": {
          "type": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/ResidenceType"
              }
            ]
          },
          "occupants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "isActive": {
            "type": "boolean"
          },
          "charge": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "region",
          "tenant",
          "isActive",
          "charge",
          "name"
        ]
      },
      "InfinityPaginationResidenceResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Residence"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateResidenceDto": {
        "type": "object",
        "properties": {
          "type": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/ResidenceType"
              }
            ]
          },
          "occupants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "region": {
            "$ref": "#/components/schemas/RegionDto"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "isActive": {
            "type": "boolean"
          },
          "charge": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CreateInventoryDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "materialType": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "salePrice": {
            "type": "number"
          },
          "purchasePrice": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "itemDescription": {
            "type": "string"
          },
          "itemName": {
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "accountType",
          "purchasePrice",
          "quantity"
        ]
      },
      "Inventory": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "unitOfMeasure": {
            "type": "string",
            "nullable": true
          },
          "materialType": {
            "type": "string",
            "nullable": true
          },
          "accountType": {
            "type": "string",
            "nullable": false
          },
          "salePrice": {
            "type": "number",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "nullable": false
          },
          "quantity": {
            "type": "number",
            "nullable": false
          },
          "itemDescription": {
            "type": "string",
            "nullable": true
          },
          "itemName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "unitOfMeasure",
          "materialType",
          "accountType",
          "salePrice",
          "purchasePrice",
          "quantity",
          "itemDescription",
          "itemName",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationInventoryResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Inventory"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateInventoryDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "materialType": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "salePrice": {
            "type": "number"
          },
          "purchasePrice": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "itemDescription": {
            "type": "string"
          },
          "itemName": {
            "type": "string"
          }
        }
      },
      "PaymentMethodDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "TransactionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDto"
          },
          "notification": {
            "$ref": "#/components/schemas/PaymentNotificationDto"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodDto"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          },
          "transactionId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDto"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "partial",
              "pending",
              "completed",
              "failed",
              "cancelled",
              "reversed",
              "refunded",
              "processing",
              "declined",
              "on_hold",
              "expired",
              "partially_refunded",
              "authorized",
              "declined_by_bank",
              "declined_by_user",
              "declined_by_provider",
              "declined_by_fraud_check",
              "declined_by_limit",
              "declined_by_risk_check",
              "declined_by_insufficient_funds",
              "declined_by_currency_not_supported",
              "declined_by_payment_method_not_supported",
              "declined_by_payment_gateway",
              "declined_by_bank_issuer",
              "declined_by_bank_network",
              "declined_by_bank_fraud_check",
              "declined_by_bank_limit",
              "declined_by_bank_risk_check",
              "declined_by_bank_insufficient_funds",
              "declined_by_bank_currency_not_supported",
              "declined_by_bank_payment_method_not_supported",
              "declined_by_bank_payment_gateway",
              "declined_by_bank_bank_issuer",
              "declined_by_bank_bank_network",
              "declined_by_bank_bank_fraud_check"
            ],
            "nullable": false
          },
          "method": {
            "type": "string"
          },
          "paymentDate": {
            "format": "date-time",
            "type": "string"
          },
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "tenant",
          "status",
          "method",
          "paymentDate",
          "amount"
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "invoice": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Invoice"
              }
            ]
          },
          "notification": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentNotification"
              }
            ]
          },
          "paymentMethod": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            ]
          },
          "customer": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "transactionId": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "partial",
              "pending",
              "completed",
              "failed",
              "cancelled",
              "reversed",
              "refunded",
              "processing",
              "declined",
              "on_hold",
              "expired",
              "partially_refunded",
              "authorized",
              "declined_by_bank",
              "declined_by_user",
              "declined_by_provider",
              "declined_by_fraud_check",
              "declined_by_limit",
              "declined_by_risk_check",
              "declined_by_insufficient_funds",
              "declined_by_currency_not_supported",
              "declined_by_payment_method_not_supported",
              "declined_by_payment_gateway",
              "declined_by_bank_issuer",
              "declined_by_bank_network",
              "declined_by_bank_fraud_check",
              "declined_by_bank_limit",
              "declined_by_bank_risk_check",
              "declined_by_bank_insufficient_funds",
              "declined_by_bank_currency_not_supported",
              "declined_by_bank_payment_method_not_supported",
              "declined_by_bank_payment_gateway",
              "declined_by_bank_bank_issuer",
              "declined_by_bank_bank_network",
              "declined_by_bank_bank_fraud_check"
            ],
            "nullable": false
          },
          "paymentDate": {
            "format": "date-time",
            "type": "string",
            "nullable": false
          },
          "amount": {
            "type": "number",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "invoice",
          "notification",
          "paymentMethod",
          "customer",
          "transactionId",
          "status",
          "paymentDate",
          "amount",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "payment": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Payment"
              }
            ]
          },
          "creditAccountName": {
            "type": "string",
            "nullable": true
          },
          "debitAccountName": {
            "type": "string",
            "nullable": true
          },
          "creditAmount": {
            "type": "number",
            "nullable": false
          },
          "debitAmount": {
            "type": "number",
            "nullable": false
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "creditAccount": {
            "nullable": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "debitAccount": {
            "nullable": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "amount": {
            "type": "number",
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "payment",
          "creditAccountName",
          "debitAccountName",
          "creditAmount",
          "debitAmount",
          "owner",
          "creditAccount",
          "debitAccount",
          "amount",
          "description",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationPaymentResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdatePaymentDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceDto"
          },
          "notification": {
            "$ref": "#/components/schemas/PaymentNotificationDto"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodDto"
          },
          "customer": {
            "$ref": "#/components/schemas/UserDto"
          },
          "transactionId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionDto"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "partial",
              "pending",
              "completed",
              "failed",
              "cancelled",
              "reversed",
              "refunded",
              "processing",
              "declined",
              "on_hold",
              "expired",
              "partially_refunded",
              "authorized",
              "declined_by_bank",
              "declined_by_user",
              "declined_by_provider",
              "declined_by_fraud_check",
              "declined_by_limit",
              "declined_by_risk_check",
              "declined_by_insufficient_funds",
              "declined_by_currency_not_supported",
              "declined_by_payment_method_not_supported",
              "declined_by_payment_gateway",
              "declined_by_bank_issuer",
              "declined_by_bank_network",
              "declined_by_bank_fraud_check",
              "declined_by_bank_limit",
              "declined_by_bank_risk_check",
              "declined_by_bank_insufficient_funds",
              "declined_by_bank_currency_not_supported",
              "declined_by_bank_payment_method_not_supported",
              "declined_by_bank_payment_gateway",
              "declined_by_bank_bank_issuer",
              "declined_by_bank_bank_network",
              "declined_by_bank_bank_fraud_check"
            ],
            "nullable": false
          },
          "method": {
            "type": "string"
          },
          "paymentDate": {
            "format": "date-time",
            "type": "string"
          },
          "amount": {
            "type": "number"
          }
        }
      },
      "PaymentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateTransactionDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentDto"
          },
          "creditAccountName": {
            "type": "string"
          },
          "debitAccountName": {
            "type": "string"
          },
          "creditAmount": {
            "type": "number"
          },
          "debitAmount": {
            "type": "number"
          },
          "owner": {
            "type": "string"
          },
          "creditAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "debitAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "amount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "payment",
          "creditAmount",
          "debitAmount",
          "creditAccount",
          "debitAccount",
          "amount"
        ]
      },
      "InfinityPaginationTransactionResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateTransactionDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentDto"
          },
          "creditAccountName": {
            "type": "string"
          },
          "debitAccountName": {
            "type": "string"
          },
          "creditAmount": {
            "type": "number"
          },
          "debitAmount": {
            "type": "number"
          },
          "owner": {
            "type": "string"
          },
          "creditAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "debitAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "amount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "AccountsPayableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "VendorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateVendorBillDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "accountsPayable": {
            "$ref": "#/components/schemas/AccountsPayableDto"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorDto"
          }
        },
        "required": [
          "tenant",
          "vendor"
        ]
      },
      "AccountsPayable": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "account": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "owner": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "accountType": {
            "type": "string",
            "enum": [
              "asset",
              "liability",
              "equity",
              "revenue",
              "expense"
            ],
            "description": "The type of account. Can be SAVINGS, CHECKING, or CURRENT.",
            "nullable": true
          },
          "salePrice": {
            "type": "number",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "nullable": false
          },
          "itemDescription": {
            "type": "string",
            "nullable": true
          },
          "itemName": {
            "type": "string",
            "nullable": false
          },
          "amount": {
            "type": "number",
            "nullable": false
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "CREDIT",
              "DEBIT",
              "TRANSFER",
              "REFUND",
              "WRITE_OFF",
              "LATE_FEE",
              "ADJUSTMENT",
              "CREDIT_MEMO",
              "INVOICE_PAYMENT",
              "CHARGEBACK",
              "PAYMENT",
              "DISCOUNT",
              "FEE",
              "TAX",
              "INTEREST",
              "REVERSAL",
              "PREPAYMENT",
              "OVERPAYMENT",
              "UNDERPAYMENT",
              "ESCALATION_CHARGE",
              "SERVICE_CHARGE",
              "PENALTY",
              "CASH_RECEIPT",
              "ALLOCATION",
              "MANUAL_ENTRY",
              "SERVICE_FEE",
              "ASSET_PURCHASE",
              "FUEL_PURCHASE",
              "MAINTENANCE",
              "WASTE_COLLECTION",
              "OFFICE_SUPPLIES",
              "VENDOR_PAYMENT"
            ],
            "description": "The type of transaction: CREDIT, DEBIT, TRANSFER, or REFUND."
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "account",
          "owner",
          "salePrice",
          "purchasePrice",
          "quantity",
          "itemDescription",
          "itemName",
          "amount",
          "transactionType",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "VendorBill": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "accountsPayable": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountsPayable"
              }
            ]
          },
          "vendor": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Vendor"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "accountsPayable",
          "vendor",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "Vendor": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "bills": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorBill"
            }
          },
          "paymentTerms": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "bills",
          "paymentTerms",
          "contactEmail",
          "name",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationVendorBillResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorBill"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateVendorBillDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "accountsPayable": {
            "$ref": "#/components/schemas/AccountsPayableDto"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorDto"
          }
        }
      },
      "CreateAccountsPayableDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "accountType": {
            "type": "string",
            "enum": [
              "asset",
              "liability",
              "equity",
              "revenue",
              "expense"
            ],
            "description": "The type of account. Can be SAVINGS, CHECKING, or CURRENT.",
            "nullable": true
          },
          "salePrice": {
            "type": "number"
          },
          "purchasePrice": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "itemDescription": {
            "type": "string"
          },
          "itemName": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "CREDIT",
              "DEBIT",
              "TRANSFER",
              "REFUND",
              "WRITE_OFF",
              "LATE_FEE",
              "ADJUSTMENT",
              "CREDIT_MEMO",
              "INVOICE_PAYMENT",
              "CHARGEBACK",
              "PAYMENT",
              "DISCOUNT",
              "FEE",
              "TAX",
              "INTEREST",
              "REVERSAL",
              "PREPAYMENT",
              "OVERPAYMENT",
              "UNDERPAYMENT",
              "ESCALATION_CHARGE",
              "SERVICE_CHARGE",
              "PENALTY",
              "CASH_RECEIPT",
              "ALLOCATION",
              "MANUAL_ENTRY",
              "SERVICE_FEE",
              "ASSET_PURCHASE",
              "FUEL_PURCHASE",
              "MAINTENANCE",
              "WASTE_COLLECTION",
              "OFFICE_SUPPLIES",
              "VENDOR_PAYMENT"
            ],
            "description": "The type of transaction: CREDIT, DEBIT, TRANSFER, or REFUND."
          }
        },
        "required": [
          "tenant",
          "quantity",
          "itemName",
          "amount",
          "transactionType"
        ]
      },
      "InfinityPaginationAccountsPayableResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountsPayable"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateAccountsPayableDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          },
          "owner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "accountType": {
            "type": "string",
            "enum": [
              "asset",
              "liability",
              "equity",
              "revenue",
              "expense"
            ],
            "description": "The type of account. Can be SAVINGS, CHECKING, or CURRENT.",
            "nullable": true
          },
          "salePrice": {
            "type": "number"
          },
          "purchasePrice": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "itemDescription": {
            "type": "string"
          },
          "itemName": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "transactionType": {
            "type": "string",
            "enum": [
              "CREDIT",
              "DEBIT",
              "TRANSFER",
              "REFUND",
              "WRITE_OFF",
              "LATE_FEE",
              "ADJUSTMENT",
              "CREDIT_MEMO",
              "INVOICE_PAYMENT",
              "CHARGEBACK",
              "PAYMENT",
              "DISCOUNT",
              "FEE",
              "TAX",
              "INTEREST",
              "REVERSAL",
              "PREPAYMENT",
              "OVERPAYMENT",
              "UNDERPAYMENT",
              "ESCALATION_CHARGE",
              "SERVICE_CHARGE",
              "PENALTY",
              "CASH_RECEIPT",
              "ALLOCATION",
              "MANUAL_ENTRY",
              "SERVICE_FEE",
              "ASSET_PURCHASE",
              "FUEL_PURCHASE",
              "MAINTENANCE",
              "WASTE_COLLECTION",
              "OFFICE_SUPPLIES",
              "VENDOR_PAYMENT"
            ],
            "description": "The type of transaction: CREDIT, DEBIT, TRANSFER, or REFUND."
          }
        }
      },
      "VendorBillDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateVendorDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "bills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorBillDto"
            }
          },
          "paymentTerms": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "name"
        ]
      },
      "InfinityPaginationVendorResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vendor"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateVendorDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "bills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorBillDto"
            }
          },
          "paymentTerms": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CustomScheduleDto": {
        "type": "object",
        "properties": {
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentCount": {
            "type": "number"
          }
        },
        "required": [
          "lastPaymentDate",
          "paymentCount"
        ]
      },
      "PlanStatusEnum": {
        "type": "string",
        "enum": [
          "trial",
          "active",
          "suspended",
          "inactive",
          "cancelled",
          "pending",
          "expired",
          "completed",
          "archived",
          "deleted",
          "unknown"
        ]
      },
      "CreateSubscriptionDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "customSchedule": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomScheduleDto"
              }
            ]
          },
          "nextPaymentDate": {
            "format": "date-time",
            "type": "string"
          },
          "assignedBy": {
            "$ref": "#/components/schemas/UserDto"
          },
          "status": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanStatusEnum"
              }
            ]
          },
          "customRates": {
            "type": "object",
            "nullable": true,
            "description": "Custom rates map (key-value pairs)",
            "example": {
              "rateA": 100,
              "rateB": 150
            },
            "additionalProperties": {
              "type": "number"
            }
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "plan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlanDto"
            }
          },
          "customer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        },
        "required": [
          "tenant",
          "status",
          "customRates",
          "startDate",
          "plan",
          "customer"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "tenant": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/Tenant"
              }
            ]
          },
          "customSchedule": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomScheduleDto"
              }
            ]
          },
          "nextPaymentDate": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "assignedBy": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "status": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanStatusEnum"
              }
            ]
          },
          "customRates": {
            "type": "object",
            "nullable": true,
            "description": "Custom rates map (key-value pairs)",
            "example": {
              "rateA": 100,
              "rateB": 150
            },
            "additionalProperties": {
              "type": "number"
            }
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "nullable": false
          },
          "plan": {
            "nullable": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "customer": {
            "nullable": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "tenant",
          "nextPaymentDate",
          "assignedBy",
          "status",
          "customRates",
          "endDate",
          "startDate",
          "plan",
          "customer",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationSubscriptionResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateSubscriptionDto": {
        "type": "object",
        "properties": {
          "tenant": {
            "$ref": "#/components/schemas/TenantDto"
          },
          "customSchedule": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomScheduleDto"
              }
            ]
          },
          "nextPaymentDate": {
            "format": "date-time",
            "type": "string"
          },
          "assignedBy": {
            "$ref": "#/components/schemas/UserDto"
          },
          "status": {
            "nullable": false,
            "allOf": [
              {
                "$ref": "#/components/schemas/PlanStatusEnum"
              }
            ]
          },
          "customRates": {
            "type": "object",
            "nullable": true,
            "description": "Custom rates map (key-value pairs)",
            "example": {
              "rateA": 100,
              "rateB": 150
            },
            "additionalProperties": {
              "type": "number"
            }
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "plan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlanDto"
            }
          },
          "customer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        }
      },
      "CreateTenantConfigDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "required": [
          "value",
          "key",
          "tenantId"
        ]
      },
      "TenantConfig": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": false
          },
          "key": {
            "type": "string",
            "nullable": false
          },
          "tenantId": {
            "type": "string",
            "nullable": false
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "value",
          "key",
          "tenantId",
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "InfinityPaginationTenantConfigResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantConfig"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateTenantConfigDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          }
        }
      },
      "AuthEmailLoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenExpires": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "token",
          "refreshToken",
          "tokenExpires",
          "user"
        ]
      },
      "AuthPhoneLoginDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "example": "0743411403"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "phone",
          "password"
        ]
      },
      "AuthRegisterLoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          }
        },
        "required": [
          "email",
          "password",
          "firstName",
          "lastName"
        ]
      },
      "AuthRegisterTenantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John"
          },
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "phone": {
            "type": "string",
            "example": "0700000000"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "phone",
          "firstName",
          "lastName",
          "password"
        ]
      },
      "AuthConfirmDto": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          }
        },
        "required": [
          "hash"
        ]
      },
      "AuthForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test1@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "AuthResetPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "hash"
        ]
      },
      "RefreshResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenExpires": {
            "type": "number"
          }
        },
        "required": [
          "token",
          "refreshToken",
          "tokenExpires"
        ]
      },
      "AuthUpdateDto": {
        "type": "object",
        "properties": {
          "photo": {
            "$ref": "#/components/schemas/FileDto"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "new.email@example.com"
          },
          "password": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          }
        }
      },
      "AuthFacebookLoginDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "abc"
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "AuthGoogleLoginDto": {
        "type": "object",
        "properties": {
          "idToken": {
            "type": "string",
            "example": "abc"
          }
        },
        "required": [
          "idToken"
        ]
      },
      "AuthAppleLoginDto": {
        "type": "object",
        "properties": {
          "idToken": {
            "type": "string",
            "example": "abc"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "required": [
          "idToken"
        ]
      }
    }
  }
}